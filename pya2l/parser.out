Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TYPEDEF_CHARACTERISTIC
    STATIC_RECORD_LAYOUT
    TYPEDEF_AXIS
    AXIS_PTS_4
    AXIS_PTS_5
    SRC_ADDR_4
    DIST_OP_5
    C_COMMENT
    NO_AXIS_PTS_5
    INSTANCE
    STATUS_STRING_REF
    NO_AXIS_PTS_4
    SHIFT_OP_5
    DIST_OP_4
    PHYS_UNIT
    TRANSFORMER
    TYPEDEF_BLOB
    SHIFT_OP_4
    FIX_NO_AXIS_PTS_5
    FIX_NO_AXIS_PTS_4
    BLOB
    TYPEDEF_MEASUREMENT
    TYPEDEF_STRUCTURE
    CALIBRATION_HANDLE
    STEP_SIZE
    VAR_SEPERATOR
    DISCRETE
    CALIBRATION_HANDLE_TEXT
    RIP_ADDR_4
    RIP_ADDR_5
    CPP_COMMENT
    OFFSET_5
    SYMBOL_LINK
    LAYOUT
    ALIGNMENT_INT64
    OFFSET_4
    SRC_ADDR_5

Grammar

Rule 0     S' -> a2l
Rule 1     a2l -> version_list project
Rule 2     a2ml_declaration -> a2ml_type_definition SEMICOLON
Rule 3     a2ml_declaration -> a2ml_block_definition SEMICOLON
Rule 4     a2ml_declaration_list -> a2ml_declaration
Rule 5     a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list
Rule 6     a2ml_type_definition -> a2ml_type_name
Rule 7     a2ml_type_name -> a2ml_predefined_type_name
Rule 8     a2ml_type_name -> a2ml_struct_type_name
Rule 9     a2ml_type_name -> a2ml_enum_type_name
Rule 10    a2ml_type_name -> a2ml_taggedstruct_type_name
Rule 11    a2ml_type_name -> a2ml_taggedunion_type_name
Rule 12    a2ml_predefined_type_name -> char
Rule 13    a2ml_predefined_type_name -> int
Rule 14    a2ml_predefined_type_name -> long
Rule 15    a2ml_predefined_type_name -> uchar
Rule 16    a2ml_predefined_type_name -> uint
Rule 17    a2ml_predefined_type_name -> ulong
Rule 18    a2ml_predefined_type_name -> double
Rule 19    a2ml_predefined_type_name -> float
Rule 20    a2ml_block_definition -> block a2ml_tag a2ml_type_name
Rule 21    a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
Rule 22    a2ml_enum_type_name -> enum a2ml_identifier
Rule 23    a2ml_enumerator_list -> a2ml_enumerator
Rule 24    a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list
Rule 25    a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant
Rule 26    a2ml_enumerator -> a2ml_keyword
Rule 27    a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
Rule 28    a2ml_struct_type_name -> struct a2ml_identifier
Rule 29    a2ml_struct_member_list_optional -> empty
Rule 30    a2ml_struct_member_list_optional -> a2ml_struct_member_list
Rule 31    a2ml_struct_member_list -> a2ml_struct_member
Rule 32    a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list
Rule 33    a2ml_struct_member -> a2ml_member SEMICOLON
Rule 34    a2ml_member -> a2ml_type_name a2ml_array_specifier_optional
Rule 35    a2ml_member_optional -> empty
Rule 36    a2ml_member_optional -> a2ml_member
Rule 37    a2ml_array_specifier_optional -> empty
Rule 38    a2ml_array_specifier_optional -> a2ml_array_specifier
Rule 39    a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE
Rule 40    a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier
Rule 41    a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
Rule 42    a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier
Rule 43    a2ml_taggedstruct_member_list_optional -> empty
Rule 44    a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list
Rule 45    a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member
Rule 46    a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list
Rule 47    a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON
Rule 48    a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
Rule 49    a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON
Rule 50    a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
Rule 51    a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional
Rule 52    a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK
Rule 53    a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
Rule 54    a2ml_taggedunion_type_name -> taggedunion a2ml_identifier
Rule 55    a2ml_taggedunion_member_list -> a2ml_taggedunion_member
Rule 56    a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list
Rule 57    a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON
Rule 58    a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON
Rule 59    a2ml_tag -> STRING
Rule 60    a2ml_identifier -> IDENT
Rule 61    a2ml_identifier_optional -> empty
Rule 62    a2ml_identifier_optional -> a2ml_identifier
Rule 63    a2ml_keyword -> STRING
Rule 64    a2ml_constant -> NUMERIC
Rule 65    datatype -> UBYTE
Rule 66    datatype -> SBYTE
Rule 67    datatype -> UWORD
Rule 68    datatype -> SWORD
Rule 69    datatype -> ULONG
Rule 70    datatype -> SLONG
Rule 71    datatype -> A_UINT64
Rule 72    datatype -> A_INT64
Rule 73    datatype -> FLOAT32_IEEE
Rule 74    datatype -> FLOAT64_IEEE
Rule 75    datasize -> BYTE
Rule 76    datasize -> WORD
Rule 77    datasize -> LONG
Rule 78    addrtype -> PBYTE
Rule 79    addrtype -> PWORD
Rule 80    addrtype -> PLONG
Rule 81    addrtype -> DIRECT
Rule 82    indexorder -> INDEX_INCR
Rule 83    indexorder -> INDEX_DECR
Rule 84    version_list -> version
Rule 85    version_list -> version version_list
Rule 86    version -> version_asap2_a2ml number_list
Rule 87    version_asap2_a2ml -> ASAP2_VERSION
Rule 88    version_asap2_a2ml -> A2ML_VERSION
Rule 89    generic_parameter -> IDENT
Rule 90    generic_parameter -> STRING
Rule 91    generic_parameter -> NUMERIC
Rule 92    generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT
Rule 93    generic_parameter_list -> generic_parameter
Rule 94    generic_parameter_list -> generic_parameter generic_parameter_list
Rule 95    generic_parameter_list_optional -> empty
Rule 96    generic_parameter_list_optional -> generic_parameter_list
Rule 97    number_list -> NUMERIC
Rule 98    number_list -> NUMERIC number_list
Rule 99    ident_list -> IDENT
Rule 100   ident_list -> IDENT ident_list
Rule 101   string_list -> STRING
Rule 102   string_list -> STRING string_list
Rule 103   project -> begin PROJECT IDENT STRING header module_list end PROJECT
Rule 104   project -> begin PROJECT IDENT STRING module_list end PROJECT
Rule 105   header -> begin HEADER STRING header_version header_project_no end HEADER
Rule 106   header_version -> empty
Rule 107   header_version -> VERSION STRING
Rule 108   header_project_no -> empty
Rule 109   header_project_no -> PROJECT_NO IDENT
Rule 110   module -> begin MODULE IDENT STRING optional_module_parameter_list end MODULE
Rule 111   module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE
Rule 112   module_list -> module
Rule 113   module_list -> module module_list
Rule 114   a2ml -> begin A2ML a2ml_declaration_list end A2ML
Rule 115   module_parameter -> mod_par
Rule 116   module_parameter -> mod_common
Rule 117   module_parameter -> if_data_module
Rule 118   module_parameter -> characteristic
Rule 119   module_parameter -> axis_pts
Rule 120   module_parameter -> measurement
Rule 121   module_parameter -> compu_method
Rule 122   module_parameter -> compu_tab
Rule 123   module_parameter -> compu_vtab
Rule 124   module_parameter -> compu_vtab_range
Rule 125   module_parameter -> function
Rule 126   module_parameter -> group
Rule 127   module_parameter -> record_layout
Rule 128   module_parameter -> variant_coding
Rule 129   module_parameter -> frame
Rule 130   module_parameter -> user_rights
Rule 131   module_parameter -> unit
Rule 132   if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
Rule 133   if_data_module_optional_parameter -> source
Rule 134   if_data_module_optional_parameter -> raster
Rule 135   if_data_module_optional_parameter -> event_group
Rule 136   if_data_module_optional_parameter -> seed_key
Rule 137   if_data_module_optional_parameter -> checksum
Rule 138   if_data_module_optional_parameter -> tp_blob tp_data
Rule 139   if_data_module_optional_parameter -> if_data_module_unsupported_element
Rule 140   if_data_module_unsupported_element -> generic_parameter_list
Rule 141   if_data_module_optional_parameter_list -> if_data_module_optional_parameter
Rule 142   if_data_module_optional_parameter_list -> if_data_module_optional_parameter if_data_module_optional_parameter_list
Rule 143   if_data_module_optional_parameter_list_optional -> empty
Rule 144   if_data_module_optional_parameter_list_optional -> if_data_module_optional_parameter_list
Rule 145   raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER
Rule 146   event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP
Rule 147   seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY
Rule 148   checksum -> begin CHECKSUM STRING end CHECKSUM
Rule 149   checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM
Rule 150   tp_blob -> TP_BLOB
Rule 151   tp_data -> generic_parameter_list
Rule 152   source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE
Rule 153   source_optional_parameter -> display_identifier
Rule 154   source_optional_parameter -> qp_blob
Rule 155   source_optional_parameter_list -> source_optional_parameter
Rule 156   source_optional_parameter_list -> source_optional_parameter source_optional_parameter_list
Rule 157   source_optional_parameter_list_optional -> empty
Rule 158   source_optional_parameter_list_optional -> source_optional_parameter_list
Rule 159   qp_blob -> QP_BLOB IDENT
Rule 160   module_parameter_list -> module_parameter
Rule 161   module_parameter_list -> module_parameter module_parameter_list
Rule 162   optional_module_parameter_list -> empty
Rule 163   optional_module_parameter_list -> module_parameter_list
Rule 164   mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
Rule 165   mod_par_optional -> version
Rule 166   mod_par_optional -> addr_epk
Rule 167   mod_par_optional -> epk
Rule 168   mod_par_optional -> supplier
Rule 169   mod_par_optional -> customer
Rule 170   mod_par_optional -> customer_no
Rule 171   mod_par_optional -> user
Rule 172   mod_par_optional -> phone_no
Rule 173   mod_par_optional -> ecu
Rule 174   mod_par_optional -> cpu_type
Rule 175   mod_par_optional -> no_of_interfaces
Rule 176   mod_par_optional -> ecu_calibration_offset
Rule 177   mod_par_optional -> calibration_method
Rule 178   mod_par_optional -> memory_layout
Rule 179   mod_par_optional -> memory_segment
Rule 180   mod_par_optional -> system_constant
Rule 181   mod_par_optional_list -> mod_par_optional
Rule 182   mod_par_optional_list -> mod_par_optional mod_par_optional_list
Rule 183   mod_par_optional_list_optional -> empty
Rule 184   mod_par_optional_list_optional -> mod_par_optional_list
Rule 185   addr_epk -> ADDR_EPK NUMERIC
Rule 186   epk -> EPK STRING
Rule 187   supplier -> SUPPLIER STRING
Rule 188   customer -> CUSTOMER STRING
Rule 189   customer_no -> CUSTOMER_NO STRING
Rule 190   user -> USER STRING
Rule 191   phone_no -> PHONE_NO STRING
Rule 192   mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
Rule 193   mod_common_optional_parameter -> s_rec_layout
Rule 194   mod_common_optional_parameter -> deposit
Rule 195   mod_common_optional_parameter -> byte_order
Rule 196   mod_common_optional_parameter -> data_size
Rule 197   mod_common_optional_parameter -> alignment_byte
Rule 198   mod_common_optional_parameter -> alignment_word
Rule 199   mod_common_optional_parameter -> alignment_long
Rule 200   mod_common_optional_parameter -> alignment_float32_ieee
Rule 201   mod_common_optional_parameter -> alignment_float64_ieee
Rule 202   mod_common_optional_parameter_list -> mod_common_optional_parameter
Rule 203   mod_common_optional_parameter_list -> mod_common_optional_parameter mod_common_optional_parameter_list
Rule 204   mod_common_optional_parameter_list_optional -> empty
Rule 205   mod_common_optional_parameter_list_optional -> mod_common_optional_parameter_list
Rule 206   s_rec_layout -> S_REC_LAYOUT IDENT
Rule 207   data_size -> DATA_SIZE NUMERIC
Rule 208   ecu -> ECU STRING
Rule 209   cpu_type -> CPU_TYPE STRING
Rule 210   no_of_interfaces -> NO_OF_INTERFACES NUMERIC
Rule 211   ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC
Rule 212   calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD
Rule 213   memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT
Rule 214   memory_layout_prg_type -> PRG_CODE
Rule 215   memory_layout_prg_type -> PRG_DATA
Rule 216   memory_layout_prg_type -> PRG_RESERVED
Rule 217   memory_layout_parameter_optional -> empty
Rule 218   memory_layout_parameter_optional -> if_data_memory_layout
Rule 219   if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA
Rule 220   if_data_memory_layout_optional_parameter -> dp_blob dp_data
Rule 221   if_data_memory_layout_optional_parameter -> ba_blob pa_data
Rule 222   if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter
Rule 223   if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter if_data_memory_layout_optional_parameter_list
Rule 224   if_data_memory_layout_optional_parameter_list_optional -> empty
Rule 225   if_data_memory_layout_optional_parameter_list_optional -> if_data_memory_layout_optional_parameter_list
Rule 226   dp_blob -> DP_BLOB
Rule 227   ba_blob -> BA_BLOB
Rule 228   dp_data -> generic_parameter_list
Rule 229   pa_data -> generic_parameter_list
Rule 230   memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
Rule 231   memory_segment_prg_type -> CODE
Rule 232   memory_segment_prg_type -> DATA
Rule 233   memory_segment_prg_type -> OFFLINE_DATA
Rule 234   memory_segment_prg_type -> VARIABLES
Rule 235   memory_segment_prg_type -> SERAM
Rule 236   memory_segment_prg_type -> RESERVED
Rule 237   memory_segment_prg_type -> CALIBRATION_VARIABLES
Rule 238   memory_segment_prg_type -> EXCLUDE_FROM_FLASH
Rule 239   memory_segment_memory_type -> RAM
Rule 240   memory_segment_memory_type -> EEPROM
Rule 241   memory_segment_memory_type -> EPROM
Rule 242   memory_segment_memory_type -> ROM
Rule 243   memory_segment_memory_type -> REGISTER
Rule 244   memory_segment_memory_type -> FLASH
Rule 245   memory_segment_attributes -> INTERN
Rule 246   memory_segment_attributes -> EXTERN
Rule 247   memory_segment_optional_parameter_list_optional -> empty
Rule 248   memory_segment_optional_parameter_list_optional -> memory_segment_optional_parameter_list
Rule 249   memory_segment_optional_parameter_list -> memory_segment_optional_parameter
Rule 250   memory_segment_optional_parameter_list -> memory_segment_optional_parameter memory_segment_optional_parameter_list
Rule 251   memory_segment_optional_parameter -> if_data_memory_segment
Rule 252   system_constant -> SYSTEM_CONSTANT STRING STRING
Rule 253   if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA
Rule 254   if_data_memory_segment_optional_parameter_list_optional -> empty
Rule 255   if_data_memory_segment_optional_parameter_list_optional -> if_data_memory_segment_optional_parameter_list
Rule 256   if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter
Rule 257   if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter if_data_memory_segment_optional_parameter_list
Rule 258   if_data_memory_segment_optional_parameter -> address_mapping
Rule 259   if_data_memory_segment_optional_parameter -> segment
Rule 260   segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT
Rule 261   segment_optional_parameter -> page
Rule 262   segment_optional_parameter -> checksum
Rule 263   segment_optional_parameter_list -> segment_optional_parameter
Rule 264   segment_optional_parameter_list -> segment_optional_parameter segment_optional_parameter_list
Rule 265   segment_optional_parameter_list_optional -> empty
Rule 266   segment_optional_parameter_list_optional -> segment_optional_parameter_list
Rule 267   page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE
Rule 268   page_optional_parameter -> init_segment
Rule 269   page_optional_parameter_list -> page_optional_parameter
Rule 270   page_optional_parameter_list -> page_optional_parameter page_optional_parameter_list
Rule 271   page_optional_parameter_list_optional -> empty
Rule 272   page_optional_parameter_list_optional -> page_optional_parameter_list
Rule 273   init_segment -> INIT_SEGMENT NUMERIC
Rule 274   address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC
Rule 275   characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
Rule 276   characteristic_type -> VALUE
Rule 277   characteristic_type -> CURVE
Rule 278   characteristic_type -> MAP
Rule 279   characteristic_type -> CUBOID
Rule 280   characteristic_type -> VAL_BLK
Rule 281   characteristic_type -> ASCII
Rule 282   display_identifier -> DISPLAY_IDENTIFIER IDENT
Rule 283   format -> FORMAT STRING
Rule 284   byte_order -> BYTE_ORDER byte_order_type
Rule 285   byte_order_type -> MSB_FIRST
Rule 286   byte_order_type -> MSB_LAST
Rule 287   bit_mask -> BIT_MASK NUMERIC
Rule 288   function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST
Rule 289   number -> NUMBER NUMERIC
Rule 290   extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC
Rule 291   map_list -> begin MAP_LIST ident_list end MAP_LIST
Rule 292   max_refresh -> MAX_REFRESH NUMERIC NUMERIC
Rule 293   dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
Rule 294   virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC
Rule 295   virtual_characteristic_optional -> IDENT
Rule 296   virtual_characteristic_optional_list -> virtual_characteristic_optional
Rule 297   virtual_characteristic_optional_list -> virtual_characteristic_optional virtual_characteristic_optional_list
Rule 298   virtual_characteristic_optional_list_optional -> empty
Rule 299   virtual_characteristic_optional_list_optional -> virtual_characteristic_optional_list
Rule 300   ref_memory_segment -> REF_MEMORY_SEGMENT IDENT
Rule 301   annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION
Rule 302   annotation_optional -> annotation_label
Rule 303   annotation_optional -> annotation_origin
Rule 304   annotation_optional -> annotation_text
Rule 305   annotation_label -> ANNOTATION_LABEL STRING
Rule 306   annotation_origin -> ANNOTATION_ORIGIN STRING
Rule 307   annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT
Rule 308   annotation_optional_list -> annotation_optional
Rule 309   annotation_optional_list -> annotation_optional annotation_optional_list
Rule 310   annotation_optional_list_optional -> empty
Rule 311   annotation_optional_list_optional -> annotation_optional_list
Rule 312   comparison_quantity -> COMPARISON_QUANTITY IDENT
Rule 313   axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR
Rule 314   axis_descr_optional -> READ_ONLY
Rule 315   axis_descr_optional -> format
Rule 316   axis_descr_optional -> annotation
Rule 317   axis_descr_optional -> axis_pts_ref
Rule 318   axis_descr_optional -> max_grad
Rule 319   axis_descr_optional -> monotony
Rule 320   axis_descr_optional -> byte_order
Rule 321   axis_descr_optional -> extended_limits
Rule 322   axis_descr_optional -> fix_axis_par
Rule 323   axis_descr_optional -> fix_axis_par_dist
Rule 324   axis_descr_optional -> fix_axis_par_list
Rule 325   axis_descr_optional -> deposit
Rule 326   axis_descr_optional -> curve_axis_ref
Rule 327   axis_pts_ref -> AXIS_PTS_REF IDENT
Rule 328   max_grad -> MAX_GRAD NUMERIC
Rule 329   monotony -> MONOTONY monotony_type
Rule 330   monotony_type -> MON_INCREASE
Rule 331   monotony_type -> MON_DECREASE
Rule 332   monotony_type -> STRICT_INCREASE
Rule 333   monotony_type -> STRICT_DECREASE
Rule 334   fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC
Rule 335   fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC
Rule 336   fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST
Rule 337   curve_axis_ref -> CURVE_AXIS_REF IDENT
Rule 338   axis_descr_optional_list -> axis_descr_optional
Rule 339   axis_descr_optional_list -> axis_descr_optional axis_descr_optional_list
Rule 340   axis_descr_optional_list_optional -> empty
Rule 341   axis_descr_optional_list_optional -> axis_descr_optional_list
Rule 342   axis_descr_attribute -> STD_AXIS
Rule 343   axis_descr_attribute -> FIX_AXIS
Rule 344   axis_descr_attribute -> COM_AXIS
Rule 345   axis_descr_attribute -> RES_AXIS
Rule 346   axis_descr_attribute -> CURVE_AXIS
Rule 347   calibration_access -> CALIBRATION_ACCESS calibration_access_type
Rule 348   calibration_access_type -> CALIBRATION
Rule 349   calibration_access_type -> NO_CALIBRATION
Rule 350   calibration_access_type -> NOT_IN_MCD_SYSTEM
Rule 351   calibration_access_type -> OFFLINE_CALIBRATION
Rule 352   matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC
Rule 353   ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC
Rule 354   characteristic_optional -> display_identifier
Rule 355   characteristic_optional -> format
Rule 356   characteristic_optional -> byte_order
Rule 357   characteristic_optional -> bit_mask
Rule 358   characteristic_optional -> function_list
Rule 359   characteristic_optional -> number
Rule 360   characteristic_optional -> extended_limits
Rule 361   characteristic_optional -> READ_ONLY
Rule 362   characteristic_optional -> GUARD_RAILS
Rule 363   characteristic_optional -> map_list
Rule 364   characteristic_optional -> max_refresh
Rule 365   characteristic_optional -> dependent_characteristic
Rule 366   characteristic_optional -> virtual_characteristic
Rule 367   characteristic_optional -> ref_memory_segment
Rule 368   characteristic_optional -> annotation
Rule 369   characteristic_optional -> comparison_quantity
Rule 370   characteristic_optional -> if_data_characteristic
Rule 371   characteristic_optional -> axis_descr
Rule 372   characteristic_optional -> calibration_access
Rule 373   characteristic_optional -> matrix_dim
Rule 374   characteristic_optional -> ecu_address_extension
Rule 375   if_data_characteristic -> if_data_memory_layout
Rule 376   characteristic_optional_list -> characteristic_optional
Rule 377   characteristic_optional_list -> characteristic_optional characteristic_optional_list
Rule 378   characteristic_optional_list_optional -> empty
Rule 379   characteristic_optional_list_optional -> characteristic_optional_list
Rule 380   axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
Rule 381   axis_pts_optional -> display_identifier
Rule 382   axis_pts_optional -> READ_ONLY
Rule 383   axis_pts_optional -> format
Rule 384   axis_pts_optional -> deposit
Rule 385   axis_pts_optional -> byte_order
Rule 386   axis_pts_optional -> function_list
Rule 387   axis_pts_optional -> ref_memory_segment
Rule 388   axis_pts_optional -> GUARD_RAILS
Rule 389   axis_pts_optional -> extended_limits
Rule 390   axis_pts_optional -> annotation
Rule 391   axis_pts_optional -> if_data_axis_pts
Rule 392   axis_pts_optional -> calibration_access
Rule 393   axis_pts_optional -> ecu_address_extension
Rule 394   if_data_axis_pts -> if_data_memory_layout
Rule 395   axis_pts_optional_list -> axis_pts_optional
Rule 396   axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list
Rule 397   axis_pts_optional_list_optional -> empty
Rule 398   axis_pts_optional_list_optional -> axis_pts_optional_list
Rule 399   deposit -> DEPOSIT deposit_mode
Rule 400   deposit_mode -> ABSOLUTE
Rule 401   deposit_mode -> DIFFERENCE
Rule 402   measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
Rule 403   measurement_optional -> display_identifier
Rule 404   measurement_optional -> READ_WRITE
Rule 405   measurement_optional -> format
Rule 406   measurement_optional -> array_size
Rule 407   measurement_optional -> bit_mask
Rule 408   measurement_optional -> bit_operation
Rule 409   measurement_optional -> byte_order
Rule 410   measurement_optional -> max_refresh
Rule 411   measurement_optional -> virtual
Rule 412   measurement_optional -> function_list
Rule 413   measurement_optional -> ecu_address
Rule 414   measurement_optional -> error_mask
Rule 415   measurement_optional -> ref_memory_segment
Rule 416   measurement_optional -> annotation
Rule 417   measurement_optional -> if_data_measurement
Rule 418   measurement_optional -> matrix_dim
Rule 419   measurement_optional -> ecu_address_extension
Rule 420   if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA
Rule 421   if_data_measurement_optional_parameter -> kp_blob kp_data
Rule 422   if_data_measurement_optional_parameter -> dp_blob dp_data
Rule 423   if_data_measurement_optional_parameter -> pa_blob pa_data
Rule 424   if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element
Rule 425   if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT
Rule 426   if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter
Rule 427   if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter if_data_measurement_optional_parameter_list
Rule 428   if_data_measurement_optional_parameter_list_optional -> empty
Rule 429   if_data_measurement_optional_parameter_list_optional -> if_data_measurement_optional_parameter_list
Rule 430   kp_blob -> KP_BLOB
Rule 431   pa_blob -> PA_BLOB
Rule 432   kp_data -> kp_data_parameter_optional_list
Rule 433   kp_data_parameter_optional -> NUMERIC
Rule 434   kp_data_parameter_optional -> STRING
Rule 435   kp_data_parameter_optional -> IDENT
Rule 436   kp_data_parameter_optional_list -> kp_data_parameter_optional
Rule 437   kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list
Rule 438   measurement_optional_list -> measurement_optional
Rule 439   measurement_optional_list -> measurement_optional measurement_optional_list
Rule 440   measurement_optional_list_optional -> empty
Rule 441   measurement_optional_list_optional -> measurement_optional_list
Rule 442   array_size -> ARRAY_SIZE NUMERIC
Rule 443   bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
Rule 444   bit_operation_optional -> left_shift
Rule 445   bit_operation_optional -> right_shift
Rule 446   bit_operation_optional -> SIGN_EXTEND
Rule 447   left_shift -> LEFT_SHIFT NUMERIC
Rule 448   right_shift -> RIGHT_SHIFT NUMERIC
Rule 449   bit_operation_optional_list -> bit_operation_optional
Rule 450   bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list
Rule 451   bit_operation_optional_list_optional -> empty
Rule 452   bit_operation_optional_list_optional -> bit_operation_optional_list
Rule 453   compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
Rule 454   compu_method_conversion_type -> TAB_INTP
Rule 455   compu_method_conversion_type -> TAB_NOINTP
Rule 456   compu_method_conversion_type -> TAB_VERB
Rule 457   compu_method_conversion_type -> RAT_FUNC
Rule 458   compu_method_conversion_type -> FORM
Rule 459   compu_method_conversion_type -> IDENTICAL
Rule 460   compu_method_conversion_type -> LINEAR
Rule 461   compu_method_optional -> formula
Rule 462   compu_method_optional -> coeffs
Rule 463   compu_method_optional -> coeffs_linear
Rule 464   compu_method_optional -> compu_tab_ref
Rule 465   compu_method_optional -> ref_unit
Rule 466   formula -> begin FORMULA STRING formula_optional end FORMULA
Rule 467   formula_inv -> FORMULA_INV STRING
Rule 468   formula_optional -> empty
Rule 469   formula_optional -> formula_inv
Rule 470   coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 471   coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC
Rule 472   compu_tab_ref -> COMPU_TAB_REF IDENT
Rule 473   ref_unit -> REF_UNIT IDENT
Rule 474   compu_method_optional_list -> compu_method_optional
Rule 475   compu_method_optional_list -> compu_method_optional compu_method_optional_list
Rule 476   compu_method_optional_list_optional -> empty
Rule 477   compu_method_optional_list_optional -> compu_method_optional_list
Rule 478   virtual -> begin VIRTUAL ident_list end VIRTUAL
Rule 479   ecu_address -> ECU_ADDRESS NUMERIC
Rule 480   error_mask -> ERROR_MASK NUMERIC
Rule 481   compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
Rule 482   compu_tab_conversion_type -> TAB_INTP
Rule 483   compu_tab_conversion_type -> TAB_NOINTP
Rule 484   compu_tab_optional -> empty
Rule 485   compu_tab_optional -> default_value
Rule 486   compu_tab_optional -> default_value_numeric
Rule 487   default_value -> DEFAULT_VALUE STRING
Rule 488   default_value_numeric -> DEFAULT_VALUE_NUMERIC NUMERIC
Rule 489   compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
Rule 490   compu_vtab_conversion_type -> TAB_VERB
Rule 491   number_string_value_list -> number_string_value
Rule 492   number_string_value_list -> number_string_value number_string_value_list
Rule 493   number_string_value -> NUMERIC STRING
Rule 494   compu_vtab_optional -> empty
Rule 495   compu_vtab_optional -> default_value
Rule 496   compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
Rule 497   number_number_string_value_list -> number_number_string_value
Rule 498   number_number_string_value_list -> number_number_string_value number_number_string_value_list
Rule 499   number_number_string_value -> NUMERIC NUMERIC STRING
Rule 500   compu_vtab_range_optional -> empty
Rule 501   compu_vtab_range_optional -> default_value
Rule 502   function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
Rule 503   function_optional -> annotation
Rule 504   function_optional -> def_characteristic
Rule 505   function_optional -> ref_characteristic
Rule 506   function_optional -> in_measurement
Rule 507   function_optional -> out_measurement
Rule 508   function_optional -> loc_measurement
Rule 509   function_optional -> sub_function
Rule 510   function_optional -> function_version
Rule 511   function_optional_list -> function_optional
Rule 512   function_optional_list -> function_optional function_optional_list
Rule 513   function_optional_list_optional -> empty
Rule 514   function_optional_list_optional -> function_optional_list
Rule 515   def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
Rule 516   ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
Rule 517   ref_characteristic_optional -> IDENT
Rule 518   ref_characteristic_optional_list -> ref_characteristic_optional
Rule 519   ref_characteristic_optional_list -> ref_characteristic_optional ref_characteristic_optional_list
Rule 520   ref_characteristic_optional_list_optional -> empty
Rule 521   ref_characteristic_optional_list_optional -> ref_characteristic_optional_list
Rule 522   in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
Rule 523   out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
Rule 524   loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
Rule 525   sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION
Rule 526   function_version -> FUNCTION_VERSION STRING
Rule 527   group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP
Rule 528   group_optional -> annotation
Rule 529   group_optional -> ROOT
Rule 530   group_optional -> ref_characteristic
Rule 531   group_optional -> ref_measurement
Rule 532   group_optional -> function_list
Rule 533   group_optional -> sub_group
Rule 534   group_optional_list -> group_optional
Rule 535   group_optional_list -> group_optional group_optional_list
Rule 536   group_optional_list_optional -> empty
Rule 537   group_optional_list_optional -> group_optional_list
Rule 538   ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT
Rule 539   ref_measurement_optional -> IDENT
Rule 540   ref_measurement_optional_list -> ref_measurement_optional
Rule 541   ref_measurement_optional_list -> ref_measurement_optional ref_measurement_optional_list
Rule 542   ref_measurement_optional_list_optional -> empty
Rule 543   ref_measurement_optional_list_optional -> ref_measurement_optional_list
Rule 544   sub_group -> begin SUB_GROUP ident_list end SUB_GROUP
Rule 545   record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
Rule 546   record_layout_optional -> fnc_values
Rule 547   record_layout_optional -> identification
Rule 548   record_layout_optional -> axis_pts_x
Rule 549   record_layout_optional -> axis_pts_y
Rule 550   record_layout_optional -> axis_pts_z
Rule 551   record_layout_optional -> axis_rescale_x
Rule 552   record_layout_optional -> axis_rescale_y
Rule 553   record_layout_optional -> axis_rescale_z
Rule 554   record_layout_optional -> no_axis_pts_x
Rule 555   record_layout_optional -> no_axis_pts_y
Rule 556   record_layout_optional -> no_axis_pts_z
Rule 557   record_layout_optional -> no_rescale_x
Rule 558   record_layout_optional -> no_rescale_y
Rule 559   record_layout_optional -> no_rescale_z
Rule 560   record_layout_optional -> fix_no_axis_pts_x
Rule 561   record_layout_optional -> fix_no_axis_pts_y
Rule 562   record_layout_optional -> fix_no_axis_pts_z
Rule 563   record_layout_optional -> src_addr_x
Rule 564   record_layout_optional -> src_addr_y
Rule 565   record_layout_optional -> src_addr_z
Rule 566   record_layout_optional -> rip_addr_x
Rule 567   record_layout_optional -> rip_addr_y
Rule 568   record_layout_optional -> rip_addr_z
Rule 569   record_layout_optional -> rip_addr_w
Rule 570   record_layout_optional -> shift_op_x
Rule 571   record_layout_optional -> shift_op_y
Rule 572   record_layout_optional -> shift_op_z
Rule 573   record_layout_optional -> offset_x
Rule 574   record_layout_optional -> offset_y
Rule 575   record_layout_optional -> offset_z
Rule 576   record_layout_optional -> dist_op_x
Rule 577   record_layout_optional -> dist_op_y
Rule 578   record_layout_optional -> dist_op_z
Rule 579   record_layout_optional -> alignment_byte
Rule 580   record_layout_optional -> alignment_word
Rule 581   record_layout_optional -> alignment_long
Rule 582   record_layout_optional -> alignment_float32_ieee
Rule 583   record_layout_optional -> alignment_float64_ieee
Rule 584   record_layout_optional -> reserved
Rule 585   record_layout_optional_list -> record_layout_optional
Rule 586   record_layout_optional_list -> record_layout_optional record_layout_optional_list
Rule 587   record_layout_optional_list_optional -> empty
Rule 588   record_layout_optional_list_optional -> record_layout_optional_list
Rule 589   fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
Rule 590   fnc_values_index_mode -> COLUMN_DIR
Rule 591   fnc_values_index_mode -> ROW_DIR
Rule 592   fnc_values_index_mode -> ALTERNATE_WITH_X
Rule 593   fnc_values_index_mode -> ALTERNATE_WITH_Y
Rule 594   fnc_values_index_mode -> ALTERNATE_CURVES
Rule 595   identification -> IDENTIFICATION NUMERIC datatype
Rule 596   axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype
Rule 597   axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype
Rule 598   axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype
Rule 599   axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
Rule 600   axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
Rule 601   axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
Rule 602   no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype
Rule 603   no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype
Rule 604   no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype
Rule 605   no_rescale_x -> NO_RESCALE_X NUMERIC datatype
Rule 606   no_rescale_y -> NO_RESCALE_Y NUMERIC datatype
Rule 607   no_rescale_z -> NO_RESCALE_Z NUMERIC datatype
Rule 608   fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC
Rule 609   fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC
Rule 610   fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC
Rule 611   src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional
Rule 612   src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional
Rule 613   src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional
Rule 614   src_addr_optional -> empty
Rule 615   src_addr_optional -> datatype
Rule 616   rip_addr_x -> RIP_ADDR_X NUMERIC datatype
Rule 617   rip_addr_y -> RIP_ADDR_Y NUMERIC datatype
Rule 618   rip_addr_z -> RIP_ADDR_Z NUMERIC datatype
Rule 619   rip_addr_w -> RIP_ADDR_W NUMERIC datatype
Rule 620   shift_op_x -> SHIFT_OP_X NUMERIC datatype
Rule 621   shift_op_y -> SHIFT_OP_Y NUMERIC datatype
Rule 622   shift_op_z -> SHIFT_OP_Z NUMERIC datatype
Rule 623   offset_x -> OFFSET_X NUMERIC datatype
Rule 624   offset_y -> OFFSET_Y NUMERIC datatype
Rule 625   offset_z -> OFFSET_Z NUMERIC datatype
Rule 626   dist_op_x -> DIST_OP_X NUMERIC datatype
Rule 627   dist_op_y -> DIST_OP_Y NUMERIC datatype
Rule 628   dist_op_z -> DIST_OP_Z NUMERIC datatype
Rule 629   alignment_byte -> ALIGNMENT_BYTE NUMERIC
Rule 630   alignment_word -> ALIGNMENT_WORD NUMERIC
Rule 631   alignment_long -> ALIGNMENT_LONG NUMERIC
Rule 632   alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC
Rule 633   alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC
Rule 634   variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
Rule 635   variant_coding_optional -> var_separator
Rule 636   variant_coding_optional -> var_naming
Rule 637   variant_coding_optional -> var_criterion
Rule 638   variant_coding_optional -> var_forbidden_comb
Rule 639   variant_coding_optional -> var_characteristic
Rule 640   var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC
Rule 641   var_characteristic_optional -> var_address
Rule 642   var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS
Rule 643   var_separator -> VAR_SEPARATOR STRING
Rule 644   var_naming -> VAR_NAMING IDENT
Rule 645   var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
Rule 646   ident_ident_value_list -> ident_ident_value
Rule 647   ident_ident_value_list -> ident_ident_value ident_ident_value_list
Rule 648   ident_ident_value -> IDENT IDENT
Rule 649   var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
Rule 650   var_criterion_optional -> var_measurement
Rule 651   var_criterion_optional -> var_selection_characteristic
Rule 652   var_criterion_optional_list -> var_criterion_optional
Rule 653   var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list
Rule 654   var_criterion_optional_list_optional -> empty
Rule 655   var_criterion_optional_list_optional -> var_criterion_optional_list
Rule 656   var_measurement -> VAR_MEASUREMENT IDENT
Rule 657   var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT
Rule 658   variant_coding_optional_list -> variant_coding_optional
Rule 659   variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list
Rule 660   variant_coding_optional_list_optional -> empty
Rule 661   variant_coding_optional_list_optional -> variant_coding_optional_list
Rule 662   reserved -> RESERVED NUMERIC datasize
Rule 663   frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
Rule 664   frame_optional -> frame_measurement
Rule 665   frame_optional -> if_data_frame
Rule 666   if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA
Rule 667   if_data_frame_parameter_optional -> QP_BLOB qp_data
Rule 668   if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional
Rule 669   if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional if_data_frame_parameter_optional_list
Rule 670   if_data_frame_parameter_optional_list_optional -> empty
Rule 671   if_data_frame_parameter_optional_list_optional -> if_data_frame_parameter_optional_list
Rule 672   qp_data -> generic_parameter
Rule 673   frame_optional_list -> frame_optional
Rule 674   frame_optional_list -> frame_optional frame_optional_list
Rule 675   frame_optional_list_optional -> empty
Rule 676   frame_optional_list_optional -> frame_optional_list
Rule 677   frame_measurement -> FRAME_MEASUREMENT ident_list
Rule 678   user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
Rule 679   user_rights_optional -> ref_group
Rule 680   user_rights_optional -> READ_ONLY
Rule 681   user_rights_optional_list -> user_rights_optional
Rule 682   user_rights_optional_list -> user_rights_optional user_rights_optional_list
Rule 683   user_rights_optional_list_optional -> empty
Rule 684   user_rights_optional_list_optional -> user_rights_optional_list
Rule 685   ref_group -> begin REF_GROUP ident_list end REF_GROUP
Rule 686   unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT
Rule 687   unit_type -> EXTENDED_SI
Rule 688   unit_type -> DERIVED
Rule 689   unit_optional -> si_exponents
Rule 690   unit_optional -> ref_unit
Rule 691   unit_optional -> unit_conversion
Rule 692   unit_optional_list -> unit_optional
Rule 693   unit_optional_list -> unit_optional unit_optional_list
Rule 694   unit_optional_list_optional -> empty
Rule 695   unit_optional_list_optional -> unit_optional_list
Rule 696   si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 697   unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC
Rule 698   empty -> <empty>

Terminals, with rules where they appear

A2ML                 : 114 114
A2ML_VERSION         : 88
ABSOLUTE             : 400
ADDRESS_MAPPING      : 274
ADDR_EPK             : 185
ALIGNMENT_BYTE       : 629
ALIGNMENT_FLOAT32_IEEE : 632
ALIGNMENT_FLOAT64_IEEE : 633
ALIGNMENT_INT64      : 
ALIGNMENT_LONG       : 631
ALIGNMENT_WORD       : 630
ALTERNATE_CURVES     : 594
ALTERNATE_WITH_X     : 592
ALTERNATE_WITH_Y     : 593
ANNOTATION           : 301 301
ANNOTATION_LABEL     : 305
ANNOTATION_ORIGIN    : 306
ANNOTATION_TEXT      : 307 307
ARRAY_SIZE           : 442
ASAP2_VERSION        : 87
ASCII                : 281
ASTERISK             : 48 50 52
AXIS_DESCR           : 313 313
AXIS_PTS             : 380 380
AXIS_PTS_4           : 
AXIS_PTS_5           : 
AXIS_PTS_REF         : 327
AXIS_PTS_X           : 596
AXIS_PTS_Y           : 597
AXIS_PTS_Z           : 598
AXIS_RESCALE_X       : 599
AXIS_RESCALE_Y       : 600
AXIS_RESCALE_Z       : 601
A_INT64              : 72
A_UINT64             : 71
BA_BLOB              : 227
BIT_MASK             : 287
BIT_OPERATION        : 443 443
BLOB                 : 
BRACE_CLOSE          : 39 40
BRACE_OPEN           : 39 40
BYTE                 : 75
BYTE_ORDER           : 284
CALIBRATION          : 348
CALIBRATION_ACCESS   : 347
CALIBRATION_HANDLE   : 
CALIBRATION_HANDLE_TEXT : 
CALIBRATION_METHOD   : 212 212
CALIBRATION_VARIABLES : 237
CHARACTERISTIC       : 275 275
CHECKSUM             : 148 148 149 149
CODE                 : 231
COEFFS               : 470
COEFFS_LINEAR        : 471
COLUMN_DIR           : 590
COMMA                : 24
COMPARISON_QUANTITY  : 312
COMPU_METHOD         : 453 453
COMPU_TAB            : 481 481
COMPU_TAB_REF        : 472
COMPU_VTAB           : 489 489
COMPU_VTAB_RANGE     : 496 496
COM_AXIS             : 344
CPP_COMMENT          : 
CPU_TYPE             : 209
CUBOID               : 279
CURLY_CLOSE          : 21 27 41 53
CURLY_OPEN           : 21 27 41 53
CURVE                : 277
CURVE_AXIS           : 346
CURVE_AXIS_REF       : 337
CUSTOMER             : 188
CUSTOMER_NO          : 189
C_COMMENT            : 
DATA                 : 232
DATA_SIZE            : 207
DEFAULT_VALUE        : 487
DEFAULT_VALUE_NUMERIC : 488
DEF_CHARACTERISTIC   : 515 515
DEPENDENT_CHARACTERISTIC : 293 293
DEPOSIT              : 399
DERIVED              : 688
DIFFERENCE           : 401
DIRECT               : 81
DISCRETE             : 
DISPLAY_IDENTIFIER   : 282
DIST_OP_4            : 
DIST_OP_5            : 
DIST_OP_X            : 626
DIST_OP_Y            : 627
DIST_OP_Z            : 628
DP_BLOB              : 226
ECU                  : 208
ECU_ADDRESS          : 479
ECU_ADDRESS_EXTENSION : 353
ECU_CALIBRATION_OFFSET : 211
EEPROM               : 240
EPK                  : 186
EPROM                : 241
EQUAL                : 25
ERROR_MASK           : 480
EVENT_GROUP          : 146 146
EXCLUDE_FROM_FLASH   : 238
EXTENDED_LIMITS      : 290
EXTENDED_SI          : 687
EXTERN               : 246
FIX_AXIS             : 343
FIX_AXIS_PAR         : 334
FIX_AXIS_PAR_DIST    : 335
FIX_AXIS_PAR_LIST    : 336 336
FIX_NO_AXIS_PTS_4    : 
FIX_NO_AXIS_PTS_5    : 
FIX_NO_AXIS_PTS_X    : 608
FIX_NO_AXIS_PTS_Y    : 609
FIX_NO_AXIS_PTS_Z    : 610
FLASH                : 244
FLOAT32_IEEE         : 73
FLOAT64_IEEE         : 74
FNC_VALUES           : 589
FORM                 : 458
FORMAT               : 283
FORMULA              : 466 466
FORMULA_INV          : 467
FRAME                : 663 663
FRAME_MEASUREMENT    : 677
FUNCTION             : 502 502
FUNCTION_LIST        : 288 288
FUNCTION_VERSION     : 526
GROUP                : 527 527
GUARD_RAILS          : 362 388
HEADER               : 105 105
IDENT                : 60 89 92 92 99 100 103 104 109 110 111 132 149 149 152 159 206 219 230 253 267 267 267 275 275 275 282 295 300 312 313 313 327 337 380 380 380 380 402 402 420 425 425 435 453 472 473 481 489 496 502 517 527 539 545 640 644 648 648 649 656 657 663 666 678 686
IDENTICAL            : 459
IDENTIFICATION       : 595
IF_DATA              : 132 132 219 219 253 253 420 420 666 666
INDEX_DECR           : 83
INDEX_INCR           : 82
INIT_SEGMENT         : 273
INSTANCE             : 
INTERN               : 245
IN_MEASUREMENT       : 522 522
KP_BLOB              : 430
LAYOUT               : 
LEFT_SHIFT           : 447
LINEAR               : 460
LOC_MEASUREMENT      : 524 524
LONG                 : 77
MAP                  : 278
MAP_LIST             : 291 291
MATRIX_DIM           : 352
MAX_GRAD             : 328
MAX_REFRESH          : 292
MEASUREMENT          : 402 402
MEMORY_LAYOUT        : 213 213
MEMORY_SEGMENT       : 230 230
MODULE               : 110 110 111 111
MOD_COMMON           : 192 192
MOD_PAR              : 164 164
MONOTONY             : 329
MON_DECREASE         : 331
MON_INCREASE         : 330
MSB_FIRST            : 285
MSB_LAST             : 286
NOT_IN_MCD_SYSTEM    : 350
NO_AXIS_PTS_4        : 
NO_AXIS_PTS_5        : 
NO_AXIS_PTS_X        : 602
NO_AXIS_PTS_Y        : 603
NO_AXIS_PTS_Z        : 604
NO_CALIBRATION       : 349
NO_OF_INTERFACES     : 210
NO_RESCALE_X         : 605
NO_RESCALE_Y         : 606
NO_RESCALE_Z         : 607
NUMBER               : 289
NUMERIC              : 64 91 97 98 145 145 145 146 149 152 152 185 207 210 211 213 213 230 230 230 230 230 230 230 260 260 260 260 260 267 273 274 274 274 275 275 275 275 287 289 290 290 292 292 313 313 313 328 334 334 334 335 335 335 352 352 352 353 380 380 380 380 380 402 402 402 402 433 442 447 448 470 470 470 470 470 470 471 471 479 480 481 488 489 493 496 499 499 589 595 596 597 598 599 599 600 600 601 601 602 603 604 605 606 607 608 609 610 611 612 613 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 662 663 663 696 696 696 696 696 696 696 697 697
OFFLINE_CALIBRATION  : 351
OFFLINE_DATA         : 233
OFFSET_4             : 
OFFSET_5             : 
OFFSET_X             : 623
OFFSET_Y             : 624
OFFSET_Z             : 625
OUT_MEASUREMENT      : 523 523
PAGE                 : 267 267
PARENTHESE_CLOSE     : 48 50 52
PARENTHESE_OPEN      : 48 50 52
PA_BLOB              : 431
PBYTE                : 78
PHONE_NO             : 191
PHYS_UNIT            : 
PLONG                : 80
PRG_CODE             : 214
PRG_DATA             : 215
PRG_RESERVED         : 216
PROJECT              : 103 103 104 104
PROJECT_NO           : 109
PWORD                : 79
QP_BLOB              : 159 667
RAM                  : 239
RASTER               : 145 145
RAT_FUNC             : 457
READ_ONLY            : 314 361 382 680
READ_WRITE           : 404
RECORD_LAYOUT        : 545 545
REF_CHARACTERISTIC   : 516 516
REF_GROUP            : 685 685
REF_MEASUREMENT      : 538 538
REF_MEMORY_SEGMENT   : 300
REF_UNIT             : 473
REGISTER             : 243
RESERVED             : 236 662
RES_AXIS             : 345
RIGHT_SHIFT          : 448
RIP_ADDR_4           : 
RIP_ADDR_5           : 
RIP_ADDR_W           : 619
RIP_ADDR_X           : 616
RIP_ADDR_Y           : 617
RIP_ADDR_Z           : 618
ROM                  : 242
ROOT                 : 529
ROW_DIR              : 591
SBYTE                : 66
SEED_KEY             : 147 147
SEGMENT              : 260 260
SEMICOLON            : 2 3 33 47 48 49 50 57 58
SERAM                : 235
SHIFT_OP_4           : 
SHIFT_OP_5           : 
SHIFT_OP_X           : 620
SHIFT_OP_Y           : 621
SHIFT_OP_Z           : 622
SIGN_EXTEND          : 446
SI_EXPONENTS         : 696
SLONG                : 70
SOURCE               : 152 152
SRC_ADDR_4           : 
SRC_ADDR_5           : 
SRC_ADDR_X           : 611
SRC_ADDR_Y           : 612
SRC_ADDR_Z           : 613
STATIC_RECORD_LAYOUT : 
STATUS_STRING_REF    : 
STD_AXIS             : 342
STEP_SIZE            : 
STRICT_DECREASE      : 333
STRICT_INCREASE      : 332
STRING               : 59 63 90 101 102 103 104 105 107 110 111 145 145 146 146 147 147 147 148 164 186 187 188 189 190 191 192 208 209 230 252 252 275 283 293 294 305 306 380 402 434 453 453 453 466 467 481 487 489 493 496 499 502 526 527 643 649 663 686 686
SUB_FUNCTION         : 525 525
SUB_GROUP            : 544 544
SUPPLIER             : 187
SWORD                : 68
SYMBOL_LINK          : 
SYSTEM_CONSTANT      : 252
S_REC_LAYOUT         : 206
TAB_INTP             : 454 482
TAB_NOINTP           : 455 483
TAB_VERB             : 456 490
TP_BLOB              : 150
TRANSFORMER          : 
TYPEDEF_AXIS         : 
TYPEDEF_BLOB         : 
TYPEDEF_CHARACTERISTIC : 
TYPEDEF_MEASUREMENT  : 
TYPEDEF_STRUCTURE    : 
UBYTE                : 65
ULONG                : 69
UNIT                 : 686 686
UNIT_CONVERSION      : 697
USER                 : 190
USER_RIGHTS          : 678 678
UWORD                : 67
VALUE                : 276
VAL_BLK              : 280
VARIABLES            : 234
VARIANT_CODING       : 634 634
VAR_ADDRESS          : 642 642
VAR_CHARACTERISTIC   : 640 640
VAR_CRITERION        : 649 649
VAR_FORBIDDEN_COMB   : 645 645
VAR_MEASUREMENT      : 656
VAR_NAMING           : 644
VAR_SELECTION_CHARACTERISTIC : 657
VAR_SEPARATOR        : 643
VAR_SEPERATOR        : 
VERSION              : 107
VIRTUAL              : 478 478
VIRTUAL_CHARACTERISTIC : 294 294
WORD                 : 76
begin                : 92 103 104 105 110 111 114 132 145 146 147 148 149 152 164 192 212 213 219 230 253 260 267 275 288 291 293 294 301 307 313 336 380 402 420 425 443 453 466 478 481 489 496 502 515 516 522 523 524 525 527 538 544 545 634 640 642 645 649 663 666 678 685 686
block                : 20
char                 : 12
double               : 18
end                  : 92 103 104 105 110 111 114 132 145 146 147 148 149 152 164 192 212 213 219 230 253 260 267 275 288 291 293 294 301 307 313 336 380 402 420 425 443 453 466 478 481 489 496 502 515 516 522 523 524 525 527 538 544 545 634 640 642 645 649 663 666 678 685 686
enum                 : 21 22
error                : 
float                : 19
int                  : 13
long                 : 14
struct               : 27 28
taggedstruct         : 41 42
taggedunion          : 53 54
uchar                : 15
uint                 : 16
ulong                : 17

Nonterminals, with rules where they appear

a2l                  : 0
a2ml                 : 111
a2ml_array_specifier : 38 40
a2ml_array_specifier_optional : 34
a2ml_block_definition : 3 49 50 58
a2ml_constant        : 25 39 40
a2ml_declaration     : 4 5
a2ml_declaration_list : 5 114
a2ml_enum_type_name  : 9
a2ml_enumerator      : 23 24
a2ml_enumerator_list : 21 24
a2ml_identifier      : 22 28 42 54 62
a2ml_identifier_optional : 21 27 41 53
a2ml_keyword         : 25 26
a2ml_member          : 33 36 52 57
a2ml_member_optional : 51
a2ml_predefined_type_name : 7
a2ml_struct_member   : 31 32
a2ml_struct_member_list : 30 32
a2ml_struct_member_list_optional : 27
a2ml_struct_type_name : 8
a2ml_tag             : 20 51 52 57
a2ml_taggedstruct_definition : 47 48
a2ml_taggedstruct_member : 45 46
a2ml_taggedstruct_member_list : 44 46
a2ml_taggedstruct_member_list_optional : 41
a2ml_taggedstruct_type_name : 10
a2ml_taggedunion_member : 55 56
a2ml_taggedunion_member_list : 53 56
a2ml_taggedunion_type_name : 11
a2ml_type_definition : 2
a2ml_type_name       : 6 20 34
addr_epk             : 166
address_mapping      : 258
addrtype             : 589 596 597 598 599 600 601
alignment_byte       : 197 579
alignment_float32_ieee : 200 582
alignment_float64_ieee : 201 583
alignment_long       : 199 581
alignment_word       : 198 580
annotation           : 316 368 390 416 503 528
annotation_label     : 302
annotation_optional  : 308 309
annotation_optional_list : 309 311
annotation_optional_list_optional : 301
annotation_origin    : 303
annotation_text      : 304
array_size           : 406
axis_descr           : 371
axis_descr_attribute : 313
axis_descr_optional  : 338 339
axis_descr_optional_list : 339 341
axis_descr_optional_list_optional : 313
axis_pts             : 119
axis_pts_optional    : 395 396
axis_pts_optional_list : 396 398
axis_pts_optional_list_optional : 380
axis_pts_ref         : 317
axis_pts_x           : 548
axis_pts_y           : 549
axis_pts_z           : 550
axis_rescale_x       : 551
axis_rescale_y       : 552
axis_rescale_z       : 553
ba_blob              : 221
bit_mask             : 357 407
bit_operation        : 408
bit_operation_optional : 449 450
bit_operation_optional_list : 450 452
bit_operation_optional_list_optional : 443
byte_order           : 195 320 356 385 409
byte_order_type      : 284
calibration_access   : 372 392
calibration_access_type : 347
calibration_method   : 177
characteristic       : 118
characteristic_optional : 376 377
characteristic_optional_list : 377 379
characteristic_optional_list_optional : 275
characteristic_type  : 275
checksum             : 137 262
coeffs               : 462
coeffs_linear        : 463
comparison_quantity  : 369
compu_method         : 121
compu_method_conversion_type : 453
compu_method_optional : 474 475
compu_method_optional_list : 475 477
compu_method_optional_list_optional : 453
compu_tab            : 122
compu_tab_conversion_type : 481
compu_tab_optional   : 481
compu_tab_ref        : 464
compu_vtab           : 123
compu_vtab_conversion_type : 489
compu_vtab_optional  : 489
compu_vtab_range     : 124
compu_vtab_range_optional : 496
cpu_type             : 174
curve_axis_ref       : 326
customer             : 169
customer_no          : 170
data_size            : 196
datasize             : 662
datatype             : 402 589 595 596 597 598 599 600 601 602 603 604 605 606 607 615 616 617 618 619 620 621 622 623 624 625 626 627 628
def_characteristic   : 504
default_value        : 485 495 501
default_value_numeric : 486
dependent_characteristic : 365
deposit              : 194 325 384
deposit_mode         : 399
display_identifier   : 153 354 381 403
dist_op_x            : 576
dist_op_y            : 577
dist_op_z            : 578
dp_blob              : 220 422
dp_data              : 220 422
ecu                  : 173
ecu_address          : 413
ecu_address_extension : 374 393 419
ecu_calibration_offset : 176
empty                : 29 35 37 43 61 95 106 108 143 157 162 183 204 217 224 247 254 265 271 298 310 340 378 397 428 440 451 468 476 484 494 500 513 520 536 542 587 614 654 660 670 675 683 694
epk                  : 167
error_mask           : 414
event_group          : 135
extended_limits      : 321 360 389
fix_axis_par         : 322
fix_axis_par_dist    : 323
fix_axis_par_list    : 324
fix_no_axis_pts_x    : 560
fix_no_axis_pts_y    : 561
fix_no_axis_pts_z    : 562
fnc_values           : 546
fnc_values_index_mode : 589
format               : 315 355 383 405
formula              : 461
formula_inv          : 469
formula_optional     : 466
frame                : 129
frame_measurement    : 664
frame_optional       : 673 674
frame_optional_list  : 674 676
frame_optional_list_optional : 663
function             : 125
function_list        : 358 386 412 532
function_optional    : 511 512
function_optional_list : 512 514
function_optional_list_optional : 502
function_version     : 510
generic_parameter    : 93 94 672
generic_parameter_list : 94 96 140 151 228 229 425
generic_parameter_list_optional : 92
group                : 126
group_optional       : 534 535
group_optional_list  : 535 537
group_optional_list_optional : 527
header               : 103
header_project_no    : 105
header_version       : 105
ident_ident_value    : 646 647
ident_ident_value_list : 645 647
ident_list           : 100 288 291 293 478 515 522 523 524 525 544 640 649 677 685
identification       : 547
if_data_axis_pts     : 391
if_data_characteristic : 370
if_data_frame        : 665
if_data_frame_parameter_optional : 668 669
if_data_frame_parameter_optional_list : 669 671
if_data_frame_parameter_optional_list_optional : 666
if_data_measurement  : 417
if_data_measurement_optional_parameter : 426 427
if_data_measurement_optional_parameter_list : 427 429
if_data_measurement_optional_parameter_list_optional : 420
if_data_measurement_unsupported_element : 424
if_data_memory_layout : 218 375 394
if_data_memory_layout_optional_parameter : 222 223
if_data_memory_layout_optional_parameter_list : 223 225
if_data_memory_layout_optional_parameter_list_optional : 219
if_data_memory_segment : 251
if_data_memory_segment_optional_parameter : 256 257
if_data_memory_segment_optional_parameter_list : 255 257
if_data_memory_segment_optional_parameter_list_optional : 253
if_data_module       : 117
if_data_module_optional_parameter : 141 142
if_data_module_optional_parameter_list : 142 144
if_data_module_optional_parameter_list_optional : 132
if_data_module_unsupported_element : 139
in_measurement       : 506
indexorder           : 596 597 598 599 600 601
init_segment         : 268
kp_blob              : 421
kp_data              : 421
kp_data_parameter_optional : 436 437
kp_data_parameter_optional_list : 432 437
left_shift           : 444
loc_measurement      : 508
map_list             : 363
matrix_dim           : 373 418
max_grad             : 318
max_refresh          : 364 410
measurement          : 120
measurement_optional : 438 439
measurement_optional_list : 439 441
measurement_optional_list_optional : 402
memory_layout        : 178
memory_layout_parameter_optional : 213
memory_layout_prg_type : 213
memory_segment       : 179
memory_segment_attributes : 230
memory_segment_memory_type : 230
memory_segment_optional_parameter : 249 250
memory_segment_optional_parameter_list : 248 250
memory_segment_optional_parameter_list_optional : 230
memory_segment_prg_type : 230
mod_common           : 116
mod_common_optional_parameter : 202 203
mod_common_optional_parameter_list : 203 205
mod_common_optional_parameter_list_optional : 192
mod_par              : 115
mod_par_optional     : 181 182
mod_par_optional_list : 182 184
mod_par_optional_list_optional : 164
module               : 112 113
module_list          : 103 104 113
module_parameter     : 160 161
module_parameter_list : 161 163
monotony             : 319
monotony_type        : 329
no_axis_pts_x        : 554
no_axis_pts_y        : 555
no_axis_pts_z        : 556
no_of_interfaces     : 175
no_rescale_x         : 557
no_rescale_y         : 558
no_rescale_z         : 559
number               : 359
number_list          : 86 98 212 213 336 481 642
number_number_string_value : 497 498
number_number_string_value_list : 496 498
number_string_value  : 491 492
number_string_value_list : 489 492
offset_x             : 573
offset_y             : 574
offset_z             : 575
optional_module_parameter_list : 110 111
out_measurement      : 507
pa_blob              : 423
pa_data              : 221 423
page                 : 261
page_optional_parameter : 269 270
page_optional_parameter_list : 270 272
page_optional_parameter_list_optional : 267
phone_no             : 172
project              : 1
qp_blob              : 154
qp_data              : 667
raster               : 134
record_layout        : 127
record_layout_optional : 585 586
record_layout_optional_list : 586 588
record_layout_optional_list_optional : 545
ref_characteristic   : 505 530
ref_characteristic_optional : 518 519
ref_characteristic_optional_list : 519 521
ref_characteristic_optional_list_optional : 516
ref_group            : 679
ref_measurement      : 531
ref_measurement_optional : 540 541
ref_measurement_optional_list : 541 543
ref_measurement_optional_list_optional : 538
ref_memory_segment   : 367 387 415
ref_unit             : 465 690
reserved             : 584
right_shift          : 445
rip_addr_w           : 569
rip_addr_x           : 566
rip_addr_y           : 567
rip_addr_z           : 568
s_rec_layout         : 193
seed_key             : 136
segment              : 259
segment_optional_parameter : 263 264
segment_optional_parameter_list : 264 266
segment_optional_parameter_list_optional : 260
shift_op_x           : 570
shift_op_y           : 571
shift_op_z           : 572
si_exponents         : 689
source               : 133
source_optional_parameter : 155 156
source_optional_parameter_list : 156 158
source_optional_parameter_list_optional : 152
src_addr_optional    : 611 612 613
src_addr_x           : 563
src_addr_y           : 564
src_addr_z           : 565
string_list          : 102 307
sub_function         : 509
sub_group            : 533
supplier             : 168
system_constant      : 180
tp_blob              : 138
tp_data              : 138
unit                 : 131
unit_conversion      : 691
unit_optional        : 692 693
unit_optional_list   : 693 695
unit_optional_list_optional : 686
unit_type            : 686
user                 : 171
user_rights          : 130
user_rights_optional : 681 682
user_rights_optional_list : 682 684
user_rights_optional_list_optional : 678
var_address          : 641
var_characteristic   : 639
var_characteristic_optional : 640
var_criterion        : 637
var_criterion_optional : 652 653
var_criterion_optional_list : 653 655
var_criterion_optional_list_optional : 649
var_forbidden_comb   : 638
var_measurement      : 650
var_naming           : 636
var_selection_characteristic : 651
var_separator        : 635
variant_coding       : 128
variant_coding_optional : 658 659
variant_coding_optional_list : 659 661
variant_coding_optional_list_optional : 634
version              : 84 85 165
version_asap2_a2ml   : 86
version_list         : 1 85
virtual              : 411
virtual_characteristic : 366
virtual_characteristic_optional : 296 297
virtual_characteristic_optional_list : 297 299
virtual_characteristic_optional_list_optional : 294

Parsing method: LALR

state 0

    (0) S' -> . a2l
    (1) a2l -> . version_list project
    (84) version_list -> . version
    (85) version_list -> . version version_list
    (86) version -> . version_asap2_a2ml number_list
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_asap2_a2ml             shift and go to state 1
    version                        shift and go to state 3
    version_list                   shift and go to state 4
    a2l                            shift and go to state 5

state 1

    (86) version -> version_asap2_a2ml . number_list
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 7

state 2

    (87) version_asap2_a2ml -> ASAP2_VERSION .

    NUMERIC         reduce using rule 87 (version_asap2_a2ml -> ASAP2_VERSION .)


state 3

    (84) version_list -> version .
    (85) version_list -> version . version_list
    (84) version_list -> . version
    (85) version_list -> . version version_list
    (86) version -> . version_asap2_a2ml number_list
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    begin           reduce using rule 84 (version_list -> version .)
    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_list                   shift and go to state 9
    version                        shift and go to state 3
    version_asap2_a2ml             shift and go to state 1

state 4

    (1) a2l -> version_list . project
    (103) project -> . begin PROJECT IDENT STRING header module_list end PROJECT
    (104) project -> . begin PROJECT IDENT STRING module_list end PROJECT

    begin           shift and go to state 10

    project                        shift and go to state 11

state 5

    (0) S' -> a2l .



state 6

    (88) version_asap2_a2ml -> A2ML_VERSION .

    NUMERIC         reduce using rule 88 (version_asap2_a2ml -> A2ML_VERSION .)


state 7

    (86) version -> version_asap2_a2ml number_list .

    ADDR_EPK        reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    EPK             reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    SUPPLIER        reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    CUSTOMER        reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    CUSTOMER_NO     reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    USER            reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    PHONE_NO        reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    ECU             reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    CPU_TYPE        reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    NO_OF_INTERFACES reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    ECU_CALIBRATION_OFFSET reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    begin           reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    SYSTEM_CONSTANT reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    ASAP2_VERSION   reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    A2ML_VERSION    reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    end             reduce using rule 86 (version -> version_asap2_a2ml number_list .)


state 8

    (97) number_list -> NUMERIC .
    (98) number_list -> NUMERIC . number_list
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    begin           reduce using rule 97 (number_list -> NUMERIC .)
    end             reduce using rule 97 (number_list -> NUMERIC .)
    DEFAULT_VALUE   reduce using rule 97 (number_list -> NUMERIC .)
    DEFAULT_VALUE_NUMERIC reduce using rule 97 (number_list -> NUMERIC .)
    ASAP2_VERSION   reduce using rule 97 (number_list -> NUMERIC .)
    A2ML_VERSION    reduce using rule 97 (number_list -> NUMERIC .)
    ADDR_EPK        reduce using rule 97 (number_list -> NUMERIC .)
    EPK             reduce using rule 97 (number_list -> NUMERIC .)
    SUPPLIER        reduce using rule 97 (number_list -> NUMERIC .)
    CUSTOMER        reduce using rule 97 (number_list -> NUMERIC .)
    CUSTOMER_NO     reduce using rule 97 (number_list -> NUMERIC .)
    USER            reduce using rule 97 (number_list -> NUMERIC .)
    PHONE_NO        reduce using rule 97 (number_list -> NUMERIC .)
    ECU             reduce using rule 97 (number_list -> NUMERIC .)
    CPU_TYPE        reduce using rule 97 (number_list -> NUMERIC .)
    NO_OF_INTERFACES reduce using rule 97 (number_list -> NUMERIC .)
    ECU_CALIBRATION_OFFSET reduce using rule 97 (number_list -> NUMERIC .)
    SYSTEM_CONSTANT reduce using rule 97 (number_list -> NUMERIC .)
    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 12

state 9

    (85) version_list -> version version_list .

    begin           reduce using rule 85 (version_list -> version version_list .)


state 10

    (103) project -> begin . PROJECT IDENT STRING header module_list end PROJECT
    (104) project -> begin . PROJECT IDENT STRING module_list end PROJECT

    PROJECT         shift and go to state 13


state 11

    (1) a2l -> version_list project .

    $end            reduce using rule 1 (a2l -> version_list project .)


state 12

    (98) number_list -> NUMERIC number_list .

    begin           reduce using rule 98 (number_list -> NUMERIC number_list .)
    end             reduce using rule 98 (number_list -> NUMERIC number_list .)
    DEFAULT_VALUE   reduce using rule 98 (number_list -> NUMERIC number_list .)
    DEFAULT_VALUE_NUMERIC reduce using rule 98 (number_list -> NUMERIC number_list .)
    ASAP2_VERSION   reduce using rule 98 (number_list -> NUMERIC number_list .)
    A2ML_VERSION    reduce using rule 98 (number_list -> NUMERIC number_list .)
    ADDR_EPK        reduce using rule 98 (number_list -> NUMERIC number_list .)
    EPK             reduce using rule 98 (number_list -> NUMERIC number_list .)
    SUPPLIER        reduce using rule 98 (number_list -> NUMERIC number_list .)
    CUSTOMER        reduce using rule 98 (number_list -> NUMERIC number_list .)
    CUSTOMER_NO     reduce using rule 98 (number_list -> NUMERIC number_list .)
    USER            reduce using rule 98 (number_list -> NUMERIC number_list .)
    PHONE_NO        reduce using rule 98 (number_list -> NUMERIC number_list .)
    ECU             reduce using rule 98 (number_list -> NUMERIC number_list .)
    CPU_TYPE        reduce using rule 98 (number_list -> NUMERIC number_list .)
    NO_OF_INTERFACES reduce using rule 98 (number_list -> NUMERIC number_list .)
    ECU_CALIBRATION_OFFSET reduce using rule 98 (number_list -> NUMERIC number_list .)
    SYSTEM_CONSTANT reduce using rule 98 (number_list -> NUMERIC number_list .)


state 13

    (103) project -> begin PROJECT . IDENT STRING header module_list end PROJECT
    (104) project -> begin PROJECT . IDENT STRING module_list end PROJECT

    IDENT           shift and go to state 14


state 14

    (103) project -> begin PROJECT IDENT . STRING header module_list end PROJECT
    (104) project -> begin PROJECT IDENT . STRING module_list end PROJECT

    STRING          shift and go to state 15


state 15

    (103) project -> begin PROJECT IDENT STRING . header module_list end PROJECT
    (104) project -> begin PROJECT IDENT STRING . module_list end PROJECT
    (105) header -> . begin HEADER STRING header_version header_project_no end HEADER
    (112) module_list -> . module
    (113) module_list -> . module module_list
    (110) module -> . begin MODULE IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> . begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE

    begin           shift and go to state 17

    module_list                    shift and go to state 16
    module                         shift and go to state 18
    header                         shift and go to state 19

state 16

    (104) project -> begin PROJECT IDENT STRING module_list . end PROJECT

    end             shift and go to state 20


state 17

    (105) header -> begin . HEADER STRING header_version header_project_no end HEADER
    (110) module -> begin . MODULE IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> begin . MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE

    HEADER          shift and go to state 22
    MODULE          shift and go to state 21


state 18

    (112) module_list -> module .
    (113) module_list -> module . module_list
    (112) module_list -> . module
    (113) module_list -> . module module_list
    (110) module -> . begin MODULE IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> . begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE

    end             reduce using rule 112 (module_list -> module .)
    begin           shift and go to state 24

    module_list                    shift and go to state 23
    module                         shift and go to state 18

state 19

    (103) project -> begin PROJECT IDENT STRING header . module_list end PROJECT
    (112) module_list -> . module
    (113) module_list -> . module module_list
    (110) module -> . begin MODULE IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> . begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE

    begin           shift and go to state 24

    module_list                    shift and go to state 25
    module                         shift and go to state 18

state 20

    (104) project -> begin PROJECT IDENT STRING module_list end . PROJECT

    PROJECT         shift and go to state 26


state 21

    (110) module -> begin MODULE . IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> begin MODULE . IDENT STRING a2ml optional_module_parameter_list end MODULE

    IDENT           shift and go to state 27


state 22

    (105) header -> begin HEADER . STRING header_version header_project_no end HEADER

    STRING          shift and go to state 28


state 23

    (113) module_list -> module module_list .

    end             reduce using rule 113 (module_list -> module module_list .)


state 24

    (110) module -> begin . MODULE IDENT STRING optional_module_parameter_list end MODULE
    (111) module -> begin . MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE

    MODULE          shift and go to state 21


state 25

    (103) project -> begin PROJECT IDENT STRING header module_list . end PROJECT

    end             shift and go to state 29


state 26

    (104) project -> begin PROJECT IDENT STRING module_list end PROJECT .

    $end            reduce using rule 104 (project -> begin PROJECT IDENT STRING module_list end PROJECT .)


state 27

    (110) module -> begin MODULE IDENT . STRING optional_module_parameter_list end MODULE
    (111) module -> begin MODULE IDENT . STRING a2ml optional_module_parameter_list end MODULE

    STRING          shift and go to state 30


state 28

    (105) header -> begin HEADER STRING . header_version header_project_no end HEADER
    (106) header_version -> . empty
    (107) header_version -> . VERSION STRING
    (698) empty -> .

    VERSION         shift and go to state 31
    PROJECT_NO      reduce using rule 698 (empty -> .)
    end             reduce using rule 698 (empty -> .)

    header_version                 shift and go to state 32
    empty                          shift and go to state 33

state 29

    (103) project -> begin PROJECT IDENT STRING header module_list end . PROJECT

    PROJECT         shift and go to state 34


state 30

    (110) module -> begin MODULE IDENT STRING . optional_module_parameter_list end MODULE
    (111) module -> begin MODULE IDENT STRING . a2ml optional_module_parameter_list end MODULE
    (162) optional_module_parameter_list -> . empty
    (163) optional_module_parameter_list -> . module_parameter_list
    (114) a2ml -> . begin A2ML a2ml_declaration_list end A2ML
    (698) empty -> .
    (160) module_parameter_list -> . module_parameter
    (161) module_parameter_list -> . module_parameter module_parameter_list
    (115) module_parameter -> . mod_par
    (116) module_parameter -> . mod_common
    (117) module_parameter -> . if_data_module
    (118) module_parameter -> . characteristic
    (119) module_parameter -> . axis_pts
    (120) module_parameter -> . measurement
    (121) module_parameter -> . compu_method
    (122) module_parameter -> . compu_tab
    (123) module_parameter -> . compu_vtab
    (124) module_parameter -> . compu_vtab_range
    (125) module_parameter -> . function
    (126) module_parameter -> . group
    (127) module_parameter -> . record_layout
    (128) module_parameter -> . variant_coding
    (129) module_parameter -> . frame
    (130) module_parameter -> . user_rights
    (131) module_parameter -> . unit
    (164) mod_par -> . begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
    (192) mod_common -> . begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
    (132) if_data_module -> . begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
    (275) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (380) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (402) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (453) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (481) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (489) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (496) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (502) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (527) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (545) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (634) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (663) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (678) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (686) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    begin           shift and go to state 47
    end             reduce using rule 698 (empty -> .)

    mod_par                        shift and go to state 36
    record_layout                  shift and go to state 37
    frame                          shift and go to state 38
    compu_tab                      shift and go to state 40
    measurement                    shift and go to state 41
    variant_coding                 shift and go to state 42
    group                          shift and go to state 50
    if_data_module                 shift and go to state 43
    unit                           shift and go to state 44
    empty                          shift and go to state 45
    function                       shift and go to state 46
    mod_common                     shift and go to state 39
    user_rights                    shift and go to state 35
    module_parameter               shift and go to state 48
    axis_pts                       shift and go to state 49
    compu_vtab                     shift and go to state 51
    compu_method                   shift and go to state 52
    optional_module_parameter_list shift and go to state 53
    characteristic                 shift and go to state 54
    a2ml                           shift and go to state 55
    module_parameter_list          shift and go to state 56
    compu_vtab_range               shift and go to state 57

state 31

    (107) header_version -> VERSION . STRING

    STRING          shift and go to state 58


state 32

    (105) header -> begin HEADER STRING header_version . header_project_no end HEADER
    (108) header_project_no -> . empty
    (109) header_project_no -> . PROJECT_NO IDENT
    (698) empty -> .

    PROJECT_NO      shift and go to state 61
    end             reduce using rule 698 (empty -> .)

    header_project_no              shift and go to state 59
    empty                          shift and go to state 60

state 33

    (106) header_version -> empty .

    PROJECT_NO      reduce using rule 106 (header_version -> empty .)
    end             reduce using rule 106 (header_version -> empty .)


state 34

    (103) project -> begin PROJECT IDENT STRING header module_list end PROJECT .

    $end            reduce using rule 103 (project -> begin PROJECT IDENT STRING header module_list end PROJECT .)


state 35

    (130) module_parameter -> user_rights .

    begin           reduce using rule 130 (module_parameter -> user_rights .)
    end             reduce using rule 130 (module_parameter -> user_rights .)


state 36

    (115) module_parameter -> mod_par .

    begin           reduce using rule 115 (module_parameter -> mod_par .)
    end             reduce using rule 115 (module_parameter -> mod_par .)


state 37

    (127) module_parameter -> record_layout .

    begin           reduce using rule 127 (module_parameter -> record_layout .)
    end             reduce using rule 127 (module_parameter -> record_layout .)


state 38

    (129) module_parameter -> frame .

    begin           reduce using rule 129 (module_parameter -> frame .)
    end             reduce using rule 129 (module_parameter -> frame .)


state 39

    (116) module_parameter -> mod_common .

    begin           reduce using rule 116 (module_parameter -> mod_common .)
    end             reduce using rule 116 (module_parameter -> mod_common .)


state 40

    (122) module_parameter -> compu_tab .

    begin           reduce using rule 122 (module_parameter -> compu_tab .)
    end             reduce using rule 122 (module_parameter -> compu_tab .)


state 41

    (120) module_parameter -> measurement .

    begin           reduce using rule 120 (module_parameter -> measurement .)
    end             reduce using rule 120 (module_parameter -> measurement .)


state 42

    (128) module_parameter -> variant_coding .

    begin           reduce using rule 128 (module_parameter -> variant_coding .)
    end             reduce using rule 128 (module_parameter -> variant_coding .)


state 43

    (117) module_parameter -> if_data_module .

    begin           reduce using rule 117 (module_parameter -> if_data_module .)
    end             reduce using rule 117 (module_parameter -> if_data_module .)


state 44

    (131) module_parameter -> unit .

    begin           reduce using rule 131 (module_parameter -> unit .)
    end             reduce using rule 131 (module_parameter -> unit .)


state 45

    (162) optional_module_parameter_list -> empty .

    end             reduce using rule 162 (optional_module_parameter_list -> empty .)


state 46

    (125) module_parameter -> function .

    begin           reduce using rule 125 (module_parameter -> function .)
    end             reduce using rule 125 (module_parameter -> function .)


state 47

    (114) a2ml -> begin . A2ML a2ml_declaration_list end A2ML
    (164) mod_par -> begin . MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
    (192) mod_common -> begin . MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
    (132) if_data_module -> begin . IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
    (275) characteristic -> begin . CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (380) axis_pts -> begin . AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (402) measurement -> begin . MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (453) compu_method -> begin . COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (481) compu_tab -> begin . COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (489) compu_vtab -> begin . COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (496) compu_vtab_range -> begin . COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (502) function -> begin . FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (527) group -> begin . GROUP IDENT STRING group_optional_list_optional end GROUP
    (545) record_layout -> begin . RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (634) variant_coding -> begin . VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (663) frame -> begin . FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (678) user_rights -> begin . USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (686) unit -> begin . UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    A2ML            shift and go to state 66
    MOD_PAR         shift and go to state 72
    MOD_COMMON      shift and go to state 75
    IF_DATA         shift and go to state 73
    CHARACTERISTIC  shift and go to state 76
    AXIS_PTS        shift and go to state 68
    MEASUREMENT     shift and go to state 69
    COMPU_METHOD    shift and go to state 65
    COMPU_TAB       shift and go to state 74
    COMPU_VTAB      shift and go to state 62
    COMPU_VTAB_RANGE shift and go to state 70
    FUNCTION        shift and go to state 71
    GROUP           shift and go to state 63
    RECORD_LAYOUT   shift and go to state 64
    VARIANT_CODING  shift and go to state 67
    FRAME           shift and go to state 79
    USER_RIGHTS     shift and go to state 78
    UNIT            shift and go to state 77


state 48

    (160) module_parameter_list -> module_parameter .
    (161) module_parameter_list -> module_parameter . module_parameter_list
    (160) module_parameter_list -> . module_parameter
    (161) module_parameter_list -> . module_parameter module_parameter_list
    (115) module_parameter -> . mod_par
    (116) module_parameter -> . mod_common
    (117) module_parameter -> . if_data_module
    (118) module_parameter -> . characteristic
    (119) module_parameter -> . axis_pts
    (120) module_parameter -> . measurement
    (121) module_parameter -> . compu_method
    (122) module_parameter -> . compu_tab
    (123) module_parameter -> . compu_vtab
    (124) module_parameter -> . compu_vtab_range
    (125) module_parameter -> . function
    (126) module_parameter -> . group
    (127) module_parameter -> . record_layout
    (128) module_parameter -> . variant_coding
    (129) module_parameter -> . frame
    (130) module_parameter -> . user_rights
    (131) module_parameter -> . unit
    (164) mod_par -> . begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
    (192) mod_common -> . begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
    (132) if_data_module -> . begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
    (275) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (380) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (402) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (453) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (481) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (489) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (496) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (502) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (527) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (545) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (634) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (663) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (678) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (686) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 160 (module_parameter_list -> module_parameter .)
    begin           shift and go to state 80

    mod_par                        shift and go to state 36
    record_layout                  shift and go to state 37
    frame                          shift and go to state 38
    compu_tab                      shift and go to state 40
    measurement                    shift and go to state 41
    unit                           shift and go to state 44
    group                          shift and go to state 50
    if_data_module                 shift and go to state 43
    variant_coding                 shift and go to state 42
    function                       shift and go to state 46
    mod_common                     shift and go to state 39
    user_rights                    shift and go to state 35
    module_parameter               shift and go to state 48
    axis_pts                       shift and go to state 49
    compu_vtab                     shift and go to state 51
    compu_method                   shift and go to state 52
    characteristic                 shift and go to state 54
    module_parameter_list          shift and go to state 81
    compu_vtab_range               shift and go to state 57

state 49

    (119) module_parameter -> axis_pts .

    begin           reduce using rule 119 (module_parameter -> axis_pts .)
    end             reduce using rule 119 (module_parameter -> axis_pts .)


state 50

    (126) module_parameter -> group .

    begin           reduce using rule 126 (module_parameter -> group .)
    end             reduce using rule 126 (module_parameter -> group .)


state 51

    (123) module_parameter -> compu_vtab .

    begin           reduce using rule 123 (module_parameter -> compu_vtab .)
    end             reduce using rule 123 (module_parameter -> compu_vtab .)


state 52

    (121) module_parameter -> compu_method .

    begin           reduce using rule 121 (module_parameter -> compu_method .)
    end             reduce using rule 121 (module_parameter -> compu_method .)


state 53

    (110) module -> begin MODULE IDENT STRING optional_module_parameter_list . end MODULE

    end             shift and go to state 82


state 54

    (118) module_parameter -> characteristic .

    begin           reduce using rule 118 (module_parameter -> characteristic .)
    end             reduce using rule 118 (module_parameter -> characteristic .)


state 55

    (111) module -> begin MODULE IDENT STRING a2ml . optional_module_parameter_list end MODULE
    (162) optional_module_parameter_list -> . empty
    (163) optional_module_parameter_list -> . module_parameter_list
    (698) empty -> .
    (160) module_parameter_list -> . module_parameter
    (161) module_parameter_list -> . module_parameter module_parameter_list
    (115) module_parameter -> . mod_par
    (116) module_parameter -> . mod_common
    (117) module_parameter -> . if_data_module
    (118) module_parameter -> . characteristic
    (119) module_parameter -> . axis_pts
    (120) module_parameter -> . measurement
    (121) module_parameter -> . compu_method
    (122) module_parameter -> . compu_tab
    (123) module_parameter -> . compu_vtab
    (124) module_parameter -> . compu_vtab_range
    (125) module_parameter -> . function
    (126) module_parameter -> . group
    (127) module_parameter -> . record_layout
    (128) module_parameter -> . variant_coding
    (129) module_parameter -> . frame
    (130) module_parameter -> . user_rights
    (131) module_parameter -> . unit
    (164) mod_par -> . begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
    (192) mod_common -> . begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
    (132) if_data_module -> . begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
    (275) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (380) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (402) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (453) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (481) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (489) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (496) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (502) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (527) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (545) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (634) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (663) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (678) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (686) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 80

    mod_par                        shift and go to state 36
    record_layout                  shift and go to state 37
    frame                          shift and go to state 38
    compu_tab                      shift and go to state 40
    measurement                    shift and go to state 41
    variant_coding                 shift and go to state 42
    group                          shift and go to state 50
    if_data_module                 shift and go to state 43
    unit                           shift and go to state 44
    empty                          shift and go to state 45
    function                       shift and go to state 46
    mod_common                     shift and go to state 39
    user_rights                    shift and go to state 35
    module_parameter               shift and go to state 48
    axis_pts                       shift and go to state 49
    compu_vtab                     shift and go to state 51
    compu_method                   shift and go to state 52
    optional_module_parameter_list shift and go to state 83
    characteristic                 shift and go to state 54
    module_parameter_list          shift and go to state 56
    compu_vtab_range               shift and go to state 57

state 56

    (163) optional_module_parameter_list -> module_parameter_list .

    end             reduce using rule 163 (optional_module_parameter_list -> module_parameter_list .)


state 57

    (124) module_parameter -> compu_vtab_range .

    begin           reduce using rule 124 (module_parameter -> compu_vtab_range .)
    end             reduce using rule 124 (module_parameter -> compu_vtab_range .)


state 58

    (107) header_version -> VERSION STRING .

    PROJECT_NO      reduce using rule 107 (header_version -> VERSION STRING .)
    end             reduce using rule 107 (header_version -> VERSION STRING .)


state 59

    (105) header -> begin HEADER STRING header_version header_project_no . end HEADER

    end             shift and go to state 84


state 60

    (108) header_project_no -> empty .

    end             reduce using rule 108 (header_project_no -> empty .)


state 61

    (109) header_project_no -> PROJECT_NO . IDENT

    IDENT           shift and go to state 85


state 62

    (489) compu_vtab -> begin COMPU_VTAB . IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    IDENT           shift and go to state 86


state 63

    (527) group -> begin GROUP . IDENT STRING group_optional_list_optional end GROUP

    IDENT           shift and go to state 87


state 64

    (545) record_layout -> begin RECORD_LAYOUT . IDENT record_layout_optional_list_optional end RECORD_LAYOUT

    IDENT           shift and go to state 88


state 65

    (453) compu_method -> begin COMPU_METHOD . IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    IDENT           shift and go to state 89


state 66

    (114) a2ml -> begin A2ML . a2ml_declaration_list end A2ML
    (4) a2ml_declaration_list -> . a2ml_declaration
    (5) a2ml_declaration_list -> . a2ml_declaration a2ml_declaration_list
    (2) a2ml_declaration -> . a2ml_type_definition SEMICOLON
    (3) a2ml_declaration -> . a2ml_block_definition SEMICOLON
    (6) a2ml_type_definition -> . a2ml_type_name
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    block           shift and go to state 112
    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_block_definition          shift and go to state 109
    a2ml_declaration_list          shift and go to state 91
    a2ml_enum_type_name            shift and go to state 98
    a2ml_type_definition           shift and go to state 92
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_declaration               shift and go to state 102
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_type_name                 shift and go to state 111

state 67

    (634) variant_coding -> begin VARIANT_CODING . variant_coding_optional_list_optional end VARIANT_CODING
    (660) variant_coding_optional_list_optional -> . empty
    (661) variant_coding_optional_list_optional -> . variant_coding_optional_list
    (698) empty -> .
    (658) variant_coding_optional_list -> . variant_coding_optional
    (659) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (635) variant_coding_optional -> . var_separator
    (636) variant_coding_optional -> . var_naming
    (637) variant_coding_optional -> . var_criterion
    (638) variant_coding_optional -> . var_forbidden_comb
    (639) variant_coding_optional -> . var_characteristic
    (643) var_separator -> . VAR_SEPARATOR STRING
    (644) var_naming -> . VAR_NAMING IDENT
    (649) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (645) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (640) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 698 (empty -> .)
    VAR_SEPARATOR   shift and go to state 123
    VAR_NAMING      shift and go to state 124
    begin           shift and go to state 122

    var_characteristic             shift and go to state 118
    var_naming                     shift and go to state 115
    variant_coding_optional_list_optional shift and go to state 119
    var_separator                  shift and go to state 116
    empty                          shift and go to state 121
    var_criterion                  shift and go to state 113
    var_forbidden_comb             shift and go to state 114
    variant_coding_optional        shift and go to state 120
    variant_coding_optional_list   shift and go to state 117

state 68

    (380) axis_pts -> begin AXIS_PTS . IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 125


state 69

    (402) measurement -> begin MEASUREMENT . IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 126


state 70

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE . IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    IDENT           shift and go to state 127


state 71

    (502) function -> begin FUNCTION . IDENT STRING function_optional_list_optional end FUNCTION

    IDENT           shift and go to state 128


state 72

    (164) mod_par -> begin MOD_PAR . STRING mod_par_optional_list_optional end MOD_PAR

    STRING          shift and go to state 129


state 73

    (132) if_data_module -> begin IF_DATA . IDENT if_data_module_optional_parameter_list_optional end IF_DATA

    IDENT           shift and go to state 130


state 74

    (481) compu_tab -> begin COMPU_TAB . IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    IDENT           shift and go to state 131


state 75

    (192) mod_common -> begin MOD_COMMON . STRING mod_common_optional_parameter_list_optional end MOD_COMMON

    STRING          shift and go to state 132


state 76

    (275) characteristic -> begin CHARACTERISTIC . IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 133


state 77

    (686) unit -> begin UNIT . IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    IDENT           shift and go to state 134


state 78

    (678) user_rights -> begin USER_RIGHTS . IDENT user_rights_optional_list_optional end USER_RIGHTS

    IDENT           shift and go to state 135


state 79

    (663) frame -> begin FRAME . IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    IDENT           shift and go to state 136


state 80

    (164) mod_par -> begin . MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR
    (192) mod_common -> begin . MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON
    (132) if_data_module -> begin . IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA
    (275) characteristic -> begin . CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (380) axis_pts -> begin . AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (402) measurement -> begin . MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (453) compu_method -> begin . COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (481) compu_tab -> begin . COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (489) compu_vtab -> begin . COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (496) compu_vtab_range -> begin . COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (502) function -> begin . FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (527) group -> begin . GROUP IDENT STRING group_optional_list_optional end GROUP
    (545) record_layout -> begin . RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (634) variant_coding -> begin . VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (663) frame -> begin . FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (678) user_rights -> begin . USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (686) unit -> begin . UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    MOD_PAR         shift and go to state 72
    MOD_COMMON      shift and go to state 75
    IF_DATA         shift and go to state 73
    CHARACTERISTIC  shift and go to state 76
    AXIS_PTS        shift and go to state 68
    MEASUREMENT     shift and go to state 69
    COMPU_METHOD    shift and go to state 65
    COMPU_TAB       shift and go to state 74
    COMPU_VTAB      shift and go to state 62
    COMPU_VTAB_RANGE shift and go to state 70
    FUNCTION        shift and go to state 71
    GROUP           shift and go to state 63
    RECORD_LAYOUT   shift and go to state 64
    VARIANT_CODING  shift and go to state 67
    FRAME           shift and go to state 79
    USER_RIGHTS     shift and go to state 78
    UNIT            shift and go to state 77


state 81

    (161) module_parameter_list -> module_parameter module_parameter_list .

    end             reduce using rule 161 (module_parameter_list -> module_parameter module_parameter_list .)


state 82

    (110) module -> begin MODULE IDENT STRING optional_module_parameter_list end . MODULE

    MODULE          shift and go to state 137


state 83

    (111) module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list . end MODULE

    end             shift and go to state 138


state 84

    (105) header -> begin HEADER STRING header_version header_project_no end . HEADER

    HEADER          shift and go to state 139


state 85

    (109) header_project_no -> PROJECT_NO IDENT .

    end             reduce using rule 109 (header_project_no -> PROJECT_NO IDENT .)


state 86

    (489) compu_vtab -> begin COMPU_VTAB IDENT . STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    STRING          shift and go to state 140


state 87

    (527) group -> begin GROUP IDENT . STRING group_optional_list_optional end GROUP

    STRING          shift and go to state 141


state 88

    (545) record_layout -> begin RECORD_LAYOUT IDENT . record_layout_optional_list_optional end RECORD_LAYOUT
    (587) record_layout_optional_list_optional -> . empty
    (588) record_layout_optional_list_optional -> . record_layout_optional_list
    (698) empty -> .
    (585) record_layout_optional_list -> . record_layout_optional
    (586) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (546) record_layout_optional -> . fnc_values
    (547) record_layout_optional -> . identification
    (548) record_layout_optional -> . axis_pts_x
    (549) record_layout_optional -> . axis_pts_y
    (550) record_layout_optional -> . axis_pts_z
    (551) record_layout_optional -> . axis_rescale_x
    (552) record_layout_optional -> . axis_rescale_y
    (553) record_layout_optional -> . axis_rescale_z
    (554) record_layout_optional -> . no_axis_pts_x
    (555) record_layout_optional -> . no_axis_pts_y
    (556) record_layout_optional -> . no_axis_pts_z
    (557) record_layout_optional -> . no_rescale_x
    (558) record_layout_optional -> . no_rescale_y
    (559) record_layout_optional -> . no_rescale_z
    (560) record_layout_optional -> . fix_no_axis_pts_x
    (561) record_layout_optional -> . fix_no_axis_pts_y
    (562) record_layout_optional -> . fix_no_axis_pts_z
    (563) record_layout_optional -> . src_addr_x
    (564) record_layout_optional -> . src_addr_y
    (565) record_layout_optional -> . src_addr_z
    (566) record_layout_optional -> . rip_addr_x
    (567) record_layout_optional -> . rip_addr_y
    (568) record_layout_optional -> . rip_addr_z
    (569) record_layout_optional -> . rip_addr_w
    (570) record_layout_optional -> . shift_op_x
    (571) record_layout_optional -> . shift_op_y
    (572) record_layout_optional -> . shift_op_z
    (573) record_layout_optional -> . offset_x
    (574) record_layout_optional -> . offset_y
    (575) record_layout_optional -> . offset_z
    (576) record_layout_optional -> . dist_op_x
    (577) record_layout_optional -> . dist_op_y
    (578) record_layout_optional -> . dist_op_z
    (579) record_layout_optional -> . alignment_byte
    (580) record_layout_optional -> . alignment_word
    (581) record_layout_optional -> . alignment_long
    (582) record_layout_optional -> . alignment_float32_ieee
    (583) record_layout_optional -> . alignment_float64_ieee
    (584) record_layout_optional -> . reserved
    (589) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (595) identification -> . IDENTIFICATION NUMERIC datatype
    (596) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (597) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (598) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (599) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (600) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (601) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (602) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (603) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (604) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (605) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (606) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (607) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (608) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (609) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (610) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (611) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (612) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (613) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (616) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (617) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (618) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (619) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (620) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (621) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (622) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (623) offset_x -> . OFFSET_X NUMERIC datatype
    (624) offset_y -> . OFFSET_Y NUMERIC datatype
    (625) offset_z -> . OFFSET_Z NUMERIC datatype
    (626) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (627) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (628) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (629) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (630) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (631) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (632) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (633) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (662) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 698 (empty -> .)
    FNC_VALUES      shift and go to state 217
    IDENTIFICATION  shift and go to state 199
    AXIS_PTS_X      shift and go to state 149
    AXIS_PTS_Y      shift and go to state 150
    AXIS_PTS_Z      shift and go to state 148
    AXIS_RESCALE_X  shift and go to state 206
    AXIS_RESCALE_Y  shift and go to state 207
    AXIS_RESCALE_Z  shift and go to state 205
    NO_AXIS_PTS_X   shift and go to state 143
    NO_AXIS_PTS_Y   shift and go to state 142
    NO_AXIS_PTS_Z   shift and go to state 144
    NO_RESCALE_X    shift and go to state 171
    NO_RESCALE_Y    shift and go to state 172
    NO_RESCALE_Z    shift and go to state 170
    FIX_NO_AXIS_PTS_X shift and go to state 165
    FIX_NO_AXIS_PTS_Y shift and go to state 164
    FIX_NO_AXIS_PTS_Z shift and go to state 166
    SRC_ADDR_X      shift and go to state 147
    SRC_ADDR_Y      shift and go to state 146
    SRC_ADDR_Z      shift and go to state 145
    RIP_ADDR_X      shift and go to state 211
    RIP_ADDR_Y      shift and go to state 212
    RIP_ADDR_Z      shift and go to state 210
    RIP_ADDR_W      shift and go to state 208
    SHIFT_OP_X      shift and go to state 156
    SHIFT_OP_Y      shift and go to state 155
    SHIFT_OP_Z      shift and go to state 158
    OFFSET_X        shift and go to state 202
    OFFSET_Y        shift and go to state 203
    OFFSET_Z        shift and go to state 204
    DIST_OP_X       shift and go to state 176
    DIST_OP_Y       shift and go to state 177
    DIST_OP_Z       shift and go to state 175
    ALIGNMENT_BYTE  shift and go to state 200
    ALIGNMENT_WORD  shift and go to state 198
    ALIGNMENT_LONG  shift and go to state 151
    ALIGNMENT_FLOAT32_IEEE shift and go to state 179
    ALIGNMENT_FLOAT64_IEEE shift and go to state 162
    RESERVED        shift and go to state 216

    reserved                       shift and go to state 201
    record_layout_optional         shift and go to state 183
    record_layout_optional_list    shift and go to state 184
    src_addr_z                     shift and go to state 218
    src_addr_y                     shift and go to state 167
    src_addr_x                     shift and go to state 168
    record_layout_optional_list_optional shift and go to state 185
    axis_rescale_z                 shift and go to state 152
    shift_op_z                     shift and go to state 221
    identification                 shift and go to state 173
    offset_y                       shift and go to state 214
    offset_z                       shift and go to state 215
    offset_x                       shift and go to state 213
    axis_rescale_y                 shift and go to state 154
    empty                          shift and go to state 186
    alignment_long                 shift and go to state 222
    alignment_float64_ieee         shift and go to state 169
    alignment_byte                 shift and go to state 209
    alignment_word                 shift and go to state 174
    shift_op_y                     shift and go to state 219
    no_axis_pts_y                  shift and go to state 187
    no_axis_pts_x                  shift and go to state 188
    axis_rescale_x                 shift and go to state 153
    no_axis_pts_z                  shift and go to state 189
    rip_addr_w                     shift and go to state 190
    fnc_values                     shift and go to state 191
    axis_pts_z                     shift and go to state 192
    alignment_float32_ieee         shift and go to state 223
    axis_pts_x                     shift and go to state 193
    axis_pts_y                     shift and go to state 194
    rip_addr_z                     shift and go to state 195
    rip_addr_x                     shift and go to state 196
    rip_addr_y                     shift and go to state 197
    no_rescale_z                   shift and go to state 163
    shift_op_x                     shift and go to state 220
    no_rescale_x                   shift and go to state 157
    no_rescale_y                   shift and go to state 178
    dist_op_z                      shift and go to state 180
    dist_op_x                      shift and go to state 181
    dist_op_y                      shift and go to state 182
    fix_no_axis_pts_y              shift and go to state 159
    fix_no_axis_pts_x              shift and go to state 160
    fix_no_axis_pts_z              shift and go to state 161

state 89

    (453) compu_method -> begin COMPU_METHOD IDENT . STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 224


state 90

    (13) a2ml_predefined_type_name -> int .

    BRACE_OPEN      reduce using rule 13 (a2ml_predefined_type_name -> int .)
    SEMICOLON       reduce using rule 13 (a2ml_predefined_type_name -> int .)
    PARENTHESE_CLOSE reduce using rule 13 (a2ml_predefined_type_name -> int .)


state 91

    (114) a2ml -> begin A2ML a2ml_declaration_list . end A2ML

    end             shift and go to state 225


state 92

    (2) a2ml_declaration -> a2ml_type_definition . SEMICOLON

    SEMICOLON       shift and go to state 226


state 93

    (12) a2ml_predefined_type_name -> char .

    BRACE_OPEN      reduce using rule 12 (a2ml_predefined_type_name -> char .)
    SEMICOLON       reduce using rule 12 (a2ml_predefined_type_name -> char .)
    PARENTHESE_CLOSE reduce using rule 12 (a2ml_predefined_type_name -> char .)


state 94

    (14) a2ml_predefined_type_name -> long .

    BRACE_OPEN      reduce using rule 14 (a2ml_predefined_type_name -> long .)
    SEMICOLON       reduce using rule 14 (a2ml_predefined_type_name -> long .)
    PARENTHESE_CLOSE reduce using rule 14 (a2ml_predefined_type_name -> long .)


state 95

    (8) a2ml_type_name -> a2ml_struct_type_name .

    SEMICOLON       reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)
    BRACE_OPEN      reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)
    PARENTHESE_CLOSE reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)


state 96

    (27) a2ml_struct_type_name -> struct . a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> struct . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (698) empty -> .

    IDENT           shift and go to state 227
    CURLY_OPEN      reduce using rule 698 (empty -> .)

    a2ml_identifier                shift and go to state 229
    empty                          shift and go to state 230
    a2ml_identifier_optional       shift and go to state 228

state 97

    (15) a2ml_predefined_type_name -> uchar .

    BRACE_OPEN      reduce using rule 15 (a2ml_predefined_type_name -> uchar .)
    SEMICOLON       reduce using rule 15 (a2ml_predefined_type_name -> uchar .)
    PARENTHESE_CLOSE reduce using rule 15 (a2ml_predefined_type_name -> uchar .)


state 98

    (9) a2ml_type_name -> a2ml_enum_type_name .

    SEMICOLON       reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)
    BRACE_OPEN      reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)
    PARENTHESE_CLOSE reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)


state 99

    (53) a2ml_taggedunion_type_name -> taggedunion . a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> taggedunion . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (698) empty -> .

    IDENT           shift and go to state 227
    CURLY_OPEN      reduce using rule 698 (empty -> .)

    a2ml_identifier                shift and go to state 232
    empty                          shift and go to state 230
    a2ml_identifier_optional       shift and go to state 231

state 100

    (10) a2ml_type_name -> a2ml_taggedstruct_type_name .

    SEMICOLON       reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)
    BRACE_OPEN      reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)
    PARENTHESE_CLOSE reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)


state 101

    (7) a2ml_type_name -> a2ml_predefined_type_name .

    SEMICOLON       reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)
    BRACE_OPEN      reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)
    PARENTHESE_CLOSE reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)


state 102

    (4) a2ml_declaration_list -> a2ml_declaration .
    (5) a2ml_declaration_list -> a2ml_declaration . a2ml_declaration_list
    (4) a2ml_declaration_list -> . a2ml_declaration
    (5) a2ml_declaration_list -> . a2ml_declaration a2ml_declaration_list
    (2) a2ml_declaration -> . a2ml_type_definition SEMICOLON
    (3) a2ml_declaration -> . a2ml_block_definition SEMICOLON
    (6) a2ml_type_definition -> . a2ml_type_name
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    end             reduce using rule 4 (a2ml_declaration_list -> a2ml_declaration .)
    block           shift and go to state 112
    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_block_definition          shift and go to state 109
    a2ml_declaration_list          shift and go to state 233
    a2ml_enum_type_name            shift and go to state 98
    a2ml_type_definition           shift and go to state 92
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_declaration               shift and go to state 102
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_type_name                 shift and go to state 111

state 103

    (11) a2ml_type_name -> a2ml_taggedunion_type_name .

    SEMICOLON       reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)
    BRACE_OPEN      reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)
    PARENTHESE_CLOSE reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)


state 104

    (19) a2ml_predefined_type_name -> float .

    BRACE_OPEN      reduce using rule 19 (a2ml_predefined_type_name -> float .)
    SEMICOLON       reduce using rule 19 (a2ml_predefined_type_name -> float .)
    PARENTHESE_CLOSE reduce using rule 19 (a2ml_predefined_type_name -> float .)


state 105

    (17) a2ml_predefined_type_name -> ulong .

    BRACE_OPEN      reduce using rule 17 (a2ml_predefined_type_name -> ulong .)
    SEMICOLON       reduce using rule 17 (a2ml_predefined_type_name -> ulong .)
    PARENTHESE_CLOSE reduce using rule 17 (a2ml_predefined_type_name -> ulong .)


state 106

    (21) a2ml_enum_type_name -> enum . a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> enum . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (698) empty -> .

    IDENT           shift and go to state 227
    CURLY_OPEN      reduce using rule 698 (empty -> .)

    a2ml_identifier                shift and go to state 235
    empty                          shift and go to state 230
    a2ml_identifier_optional       shift and go to state 234

state 107

    (16) a2ml_predefined_type_name -> uint .

    BRACE_OPEN      reduce using rule 16 (a2ml_predefined_type_name -> uint .)
    SEMICOLON       reduce using rule 16 (a2ml_predefined_type_name -> uint .)
    PARENTHESE_CLOSE reduce using rule 16 (a2ml_predefined_type_name -> uint .)


state 108

    (41) a2ml_taggedstruct_type_name -> taggedstruct . a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> taggedstruct . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (698) empty -> .

    IDENT           shift and go to state 227
    CURLY_OPEN      reduce using rule 698 (empty -> .)

    a2ml_identifier                shift and go to state 237
    empty                          shift and go to state 230
    a2ml_identifier_optional       shift and go to state 236

state 109

    (3) a2ml_declaration -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 238


state 110

    (18) a2ml_predefined_type_name -> double .

    BRACE_OPEN      reduce using rule 18 (a2ml_predefined_type_name -> double .)
    SEMICOLON       reduce using rule 18 (a2ml_predefined_type_name -> double .)
    PARENTHESE_CLOSE reduce using rule 18 (a2ml_predefined_type_name -> double .)


state 111

    (6) a2ml_type_definition -> a2ml_type_name .

    SEMICOLON       reduce using rule 6 (a2ml_type_definition -> a2ml_type_name .)


state 112

    (20) a2ml_block_definition -> block . a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    STRING          shift and go to state 239

    a2ml_tag                       shift and go to state 240

state 113

    (637) variant_coding_optional -> var_criterion .

    VAR_SEPARATOR   reduce using rule 637 (variant_coding_optional -> var_criterion .)
    VAR_NAMING      reduce using rule 637 (variant_coding_optional -> var_criterion .)
    begin           reduce using rule 637 (variant_coding_optional -> var_criterion .)
    end             reduce using rule 637 (variant_coding_optional -> var_criterion .)


state 114

    (638) variant_coding_optional -> var_forbidden_comb .

    VAR_SEPARATOR   reduce using rule 638 (variant_coding_optional -> var_forbidden_comb .)
    VAR_NAMING      reduce using rule 638 (variant_coding_optional -> var_forbidden_comb .)
    begin           reduce using rule 638 (variant_coding_optional -> var_forbidden_comb .)
    end             reduce using rule 638 (variant_coding_optional -> var_forbidden_comb .)


state 115

    (636) variant_coding_optional -> var_naming .

    VAR_SEPARATOR   reduce using rule 636 (variant_coding_optional -> var_naming .)
    VAR_NAMING      reduce using rule 636 (variant_coding_optional -> var_naming .)
    begin           reduce using rule 636 (variant_coding_optional -> var_naming .)
    end             reduce using rule 636 (variant_coding_optional -> var_naming .)


state 116

    (635) variant_coding_optional -> var_separator .

    VAR_SEPARATOR   reduce using rule 635 (variant_coding_optional -> var_separator .)
    VAR_NAMING      reduce using rule 635 (variant_coding_optional -> var_separator .)
    begin           reduce using rule 635 (variant_coding_optional -> var_separator .)
    end             reduce using rule 635 (variant_coding_optional -> var_separator .)


state 117

    (661) variant_coding_optional_list_optional -> variant_coding_optional_list .

    end             reduce using rule 661 (variant_coding_optional_list_optional -> variant_coding_optional_list .)


state 118

    (639) variant_coding_optional -> var_characteristic .

    VAR_SEPARATOR   reduce using rule 639 (variant_coding_optional -> var_characteristic .)
    VAR_NAMING      reduce using rule 639 (variant_coding_optional -> var_characteristic .)
    begin           reduce using rule 639 (variant_coding_optional -> var_characteristic .)
    end             reduce using rule 639 (variant_coding_optional -> var_characteristic .)


state 119

    (634) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional . end VARIANT_CODING

    end             shift and go to state 241


state 120

    (658) variant_coding_optional_list -> variant_coding_optional .
    (659) variant_coding_optional_list -> variant_coding_optional . variant_coding_optional_list
    (658) variant_coding_optional_list -> . variant_coding_optional
    (659) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (635) variant_coding_optional -> . var_separator
    (636) variant_coding_optional -> . var_naming
    (637) variant_coding_optional -> . var_criterion
    (638) variant_coding_optional -> . var_forbidden_comb
    (639) variant_coding_optional -> . var_characteristic
    (643) var_separator -> . VAR_SEPARATOR STRING
    (644) var_naming -> . VAR_NAMING IDENT
    (649) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (645) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (640) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 658 (variant_coding_optional_list -> variant_coding_optional .)
    VAR_SEPARATOR   shift and go to state 123
    VAR_NAMING      shift and go to state 124
    begin           shift and go to state 122

    var_characteristic             shift and go to state 118
    var_forbidden_comb             shift and go to state 114
    var_naming                     shift and go to state 115
    var_separator                  shift and go to state 116
    var_criterion                  shift and go to state 113
    variant_coding_optional        shift and go to state 120
    variant_coding_optional_list   shift and go to state 242

state 121

    (660) variant_coding_optional_list_optional -> empty .

    end             reduce using rule 660 (variant_coding_optional_list_optional -> empty .)


state 122

    (649) var_criterion -> begin . VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (645) var_forbidden_comb -> begin . VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (640) var_characteristic -> begin . VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    VAR_CRITERION   shift and go to state 245
    VAR_FORBIDDEN_COMB shift and go to state 244
    VAR_CHARACTERISTIC shift and go to state 243


state 123

    (643) var_separator -> VAR_SEPARATOR . STRING

    STRING          shift and go to state 246


state 124

    (644) var_naming -> VAR_NAMING . IDENT

    IDENT           shift and go to state 247


state 125

    (380) axis_pts -> begin AXIS_PTS IDENT . STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    STRING          shift and go to state 248


state 126

    (402) measurement -> begin MEASUREMENT IDENT . STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    STRING          shift and go to state 249


state 127

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT . STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    STRING          shift and go to state 250


state 128

    (502) function -> begin FUNCTION IDENT . STRING function_optional_list_optional end FUNCTION

    STRING          shift and go to state 251


state 129

    (164) mod_par -> begin MOD_PAR STRING . mod_par_optional_list_optional end MOD_PAR
    (183) mod_par_optional_list_optional -> . empty
    (184) mod_par_optional_list_optional -> . mod_par_optional_list
    (698) empty -> .
    (181) mod_par_optional_list -> . mod_par_optional
    (182) mod_par_optional_list -> . mod_par_optional mod_par_optional_list
    (165) mod_par_optional -> . version
    (166) mod_par_optional -> . addr_epk
    (167) mod_par_optional -> . epk
    (168) mod_par_optional -> . supplier
    (169) mod_par_optional -> . customer
    (170) mod_par_optional -> . customer_no
    (171) mod_par_optional -> . user
    (172) mod_par_optional -> . phone_no
    (173) mod_par_optional -> . ecu
    (174) mod_par_optional -> . cpu_type
    (175) mod_par_optional -> . no_of_interfaces
    (176) mod_par_optional -> . ecu_calibration_offset
    (177) mod_par_optional -> . calibration_method
    (178) mod_par_optional -> . memory_layout
    (179) mod_par_optional -> . memory_segment
    (180) mod_par_optional -> . system_constant
    (86) version -> . version_asap2_a2ml number_list
    (185) addr_epk -> . ADDR_EPK NUMERIC
    (186) epk -> . EPK STRING
    (187) supplier -> . SUPPLIER STRING
    (188) customer -> . CUSTOMER STRING
    (189) customer_no -> . CUSTOMER_NO STRING
    (190) user -> . USER STRING
    (191) phone_no -> . PHONE_NO STRING
    (208) ecu -> . ECU STRING
    (209) cpu_type -> . CPU_TYPE STRING
    (210) no_of_interfaces -> . NO_OF_INTERFACES NUMERIC
    (211) ecu_calibration_offset -> . ECU_CALIBRATION_OFFSET NUMERIC
    (212) calibration_method -> . begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD
    (213) memory_layout -> . begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT
    (230) memory_segment -> . begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (252) system_constant -> . SYSTEM_CONSTANT STRING STRING
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    end             reduce using rule 698 (empty -> .)
    ADDR_EPK        shift and go to state 270
    EPK             shift and go to state 254
    SUPPLIER        shift and go to state 272
    CUSTOMER        shift and go to state 255
    CUSTOMER_NO     shift and go to state 284
    USER            shift and go to state 262
    PHONE_NO        shift and go to state 279
    ECU             shift and go to state 260
    CPU_TYPE        shift and go to state 276
    NO_OF_INTERFACES shift and go to state 271
    ECU_CALIBRATION_OFFSET shift and go to state 268
    begin           shift and go to state 269
    SYSTEM_CONSTANT shift and go to state 261
    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    ecu_calibration_offset         shift and go to state 252
    version_asap2_a2ml             shift and go to state 1
    no_of_interfaces               shift and go to state 256
    customer_no                    shift and go to state 257
    addr_epk                       shift and go to state 258
    mod_par_optional_list          shift and go to state 259
    version                        shift and go to state 263
    mod_par_optional               shift and go to state 264
    supplier                       shift and go to state 265
    empty                          shift and go to state 266
    cpu_type                       shift and go to state 282
    memory_layout                  shift and go to state 253
    ecu                            shift and go to state 273
    mod_par_optional_list_optional shift and go to state 274
    user                           shift and go to state 275
    customer                       shift and go to state 277
    memory_segment                 shift and go to state 278
    system_constant                shift and go to state 280
    phone_no                       shift and go to state 281
    epk                            shift and go to state 267
    calibration_method             shift and go to state 283

state 130

    (132) if_data_module -> begin IF_DATA IDENT . if_data_module_optional_parameter_list_optional end IF_DATA
    (143) if_data_module_optional_parameter_list_optional -> . empty
    (144) if_data_module_optional_parameter_list_optional -> . if_data_module_optional_parameter_list
    (698) empty -> .
    (141) if_data_module_optional_parameter_list -> . if_data_module_optional_parameter
    (142) if_data_module_optional_parameter_list -> . if_data_module_optional_parameter if_data_module_optional_parameter_list
    (133) if_data_module_optional_parameter -> . source
    (134) if_data_module_optional_parameter -> . raster
    (135) if_data_module_optional_parameter -> . event_group
    (136) if_data_module_optional_parameter -> . seed_key
    (137) if_data_module_optional_parameter -> . checksum
    (138) if_data_module_optional_parameter -> . tp_blob tp_data
    (139) if_data_module_optional_parameter -> . if_data_module_unsupported_element
    (152) source -> . begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE
    (145) raster -> . begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER
    (146) event_group -> . begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP
    (147) seed_key -> . begin SEED_KEY STRING STRING STRING end SEED_KEY
    (148) checksum -> . begin CHECKSUM STRING end CHECKSUM
    (149) checksum -> . begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM
    (150) tp_blob -> . TP_BLOB
    (140) if_data_module_unsupported_element -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 291
    TP_BLOB         shift and go to state 290
    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286

    raster                         shift and go to state 296
    checksum                       shift and go to state 298
    if_data_module_optional_parameter_list shift and go to state 297
    seed_key                       shift and go to state 299
    source                         shift and go to state 287
    if_data_module_optional_parameter_list_optional shift and go to state 294
    if_data_module_unsupported_element shift and go to state 285
    tp_blob                        shift and go to state 300
    generic_parameter_list         shift and go to state 301
    generic_parameter              shift and go to state 288
    event_group                    shift and go to state 295
    empty                          shift and go to state 289
    if_data_module_optional_parameter shift and go to state 302

state 131

    (481) compu_tab -> begin COMPU_TAB IDENT . STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    STRING          shift and go to state 303


state 132

    (192) mod_common -> begin MOD_COMMON STRING . mod_common_optional_parameter_list_optional end MOD_COMMON
    (204) mod_common_optional_parameter_list_optional -> . empty
    (205) mod_common_optional_parameter_list_optional -> . mod_common_optional_parameter_list
    (698) empty -> .
    (202) mod_common_optional_parameter_list -> . mod_common_optional_parameter
    (203) mod_common_optional_parameter_list -> . mod_common_optional_parameter mod_common_optional_parameter_list
    (193) mod_common_optional_parameter -> . s_rec_layout
    (194) mod_common_optional_parameter -> . deposit
    (195) mod_common_optional_parameter -> . byte_order
    (196) mod_common_optional_parameter -> . data_size
    (197) mod_common_optional_parameter -> . alignment_byte
    (198) mod_common_optional_parameter -> . alignment_word
    (199) mod_common_optional_parameter -> . alignment_long
    (200) mod_common_optional_parameter -> . alignment_float32_ieee
    (201) mod_common_optional_parameter -> . alignment_float64_ieee
    (206) s_rec_layout -> . S_REC_LAYOUT IDENT
    (399) deposit -> . DEPOSIT deposit_mode
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (207) data_size -> . DATA_SIZE NUMERIC
    (629) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (630) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (631) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (632) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (633) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC

    end             reduce using rule 698 (empty -> .)
    S_REC_LAYOUT    shift and go to state 311
    DEPOSIT         shift and go to state 315
    BYTE_ORDER      shift and go to state 306
    DATA_SIZE       shift and go to state 320
    ALIGNMENT_BYTE  shift and go to state 200
    ALIGNMENT_WORD  shift and go to state 198
    ALIGNMENT_LONG  shift and go to state 151
    ALIGNMENT_FLOAT32_IEEE shift and go to state 179
    ALIGNMENT_FLOAT64_IEEE shift and go to state 162

    byte_order                     shift and go to state 312
    alignment_byte                 shift and go to state 307
    mod_common_optional_parameter_list_optional shift and go to state 304
    alignment_float64_ieee         shift and go to state 313
    alignment_float32_ieee         shift and go to state 319
    alignment_word                 shift and go to state 314
    deposit                        shift and go to state 317
    alignment_long                 shift and go to state 318
    mod_common_optional_parameter  shift and go to state 305
    mod_common_optional_parameter_list shift and go to state 316
    data_size                      shift and go to state 309
    empty                          shift and go to state 310
    s_rec_layout                   shift and go to state 308

state 133

    (275) characteristic -> begin CHARACTERISTIC IDENT . STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    STRING          shift and go to state 321


state 134

    (686) unit -> begin UNIT IDENT . STRING STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 322


state 135

    (678) user_rights -> begin USER_RIGHTS IDENT . user_rights_optional_list_optional end USER_RIGHTS
    (683) user_rights_optional_list_optional -> . empty
    (684) user_rights_optional_list_optional -> . user_rights_optional_list
    (698) empty -> .
    (681) user_rights_optional_list -> . user_rights_optional
    (682) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (679) user_rights_optional -> . ref_group
    (680) user_rights_optional -> . READ_ONLY
    (685) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 698 (empty -> .)
    READ_ONLY       shift and go to state 323
    begin           shift and go to state 324

    user_rights_optional_list_optional shift and go to state 326
    user_rights_optional_list      shift and go to state 325
    user_rights_optional           shift and go to state 327
    ref_group                      shift and go to state 328
    empty                          shift and go to state 329

state 136

    (663) frame -> begin FRAME IDENT . STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    STRING          shift and go to state 330


state 137

    (110) module -> begin MODULE IDENT STRING optional_module_parameter_list end MODULE .

    begin           reduce using rule 110 (module -> begin MODULE IDENT STRING optional_module_parameter_list end MODULE .)
    end             reduce using rule 110 (module -> begin MODULE IDENT STRING optional_module_parameter_list end MODULE .)


state 138

    (111) module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list end . MODULE

    MODULE          shift and go to state 331


state 139

    (105) header -> begin HEADER STRING header_version header_project_no end HEADER .

    begin           reduce using rule 105 (header -> begin HEADER STRING header_version header_project_no end HEADER .)


state 140

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING . compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (490) compu_vtab_conversion_type -> . TAB_VERB

    TAB_VERB        shift and go to state 333

    compu_vtab_conversion_type     shift and go to state 332

state 141

    (527) group -> begin GROUP IDENT STRING . group_optional_list_optional end GROUP
    (536) group_optional_list_optional -> . empty
    (537) group_optional_list_optional -> . group_optional_list
    (698) empty -> .
    (534) group_optional_list -> . group_optional
    (535) group_optional_list -> . group_optional group_optional_list
    (528) group_optional -> . annotation
    (529) group_optional -> . ROOT
    (530) group_optional -> . ref_characteristic
    (531) group_optional -> . ref_measurement
    (532) group_optional -> . function_list
    (533) group_optional -> . sub_group
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (516) ref_characteristic -> . begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (538) ref_measurement -> . begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (544) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 698 (empty -> .)
    ROOT            shift and go to state 337
    begin           shift and go to state 339

    sub_group                      shift and go to state 340
    function_list                  shift and go to state 343
    group_optional                 shift and go to state 342
    group_optional_list_optional   shift and go to state 334
    ref_measurement                shift and go to state 335
    ref_characteristic             shift and go to state 344
    group_optional_list            shift and go to state 341
    annotation                     shift and go to state 336
    empty                          shift and go to state 338

state 142

    (603) no_axis_pts_y -> NO_AXIS_PTS_Y . NUMERIC datatype

    NUMERIC         shift and go to state 345


state 143

    (602) no_axis_pts_x -> NO_AXIS_PTS_X . NUMERIC datatype

    NUMERIC         shift and go to state 346


state 144

    (604) no_axis_pts_z -> NO_AXIS_PTS_Z . NUMERIC datatype

    NUMERIC         shift and go to state 347


state 145

    (613) src_addr_z -> SRC_ADDR_Z . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 348


state 146

    (612) src_addr_y -> SRC_ADDR_Y . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 349


state 147

    (611) src_addr_x -> SRC_ADDR_X . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 350


state 148

    (598) axis_pts_z -> AXIS_PTS_Z . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 351


state 149

    (596) axis_pts_x -> AXIS_PTS_X . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 352


state 150

    (597) axis_pts_y -> AXIS_PTS_Y . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 353


state 151

    (631) alignment_long -> ALIGNMENT_LONG . NUMERIC

    NUMERIC         shift and go to state 354


state 152

    (553) record_layout_optional -> axis_rescale_z .

    FNC_VALUES      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    IDENTIFICATION  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_X      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Y      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Z      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_X    reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Y    reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Z    reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_X      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Y      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Z      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_X      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Y      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Z      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_W      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_X      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Y      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Z      reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    OFFSET_X        reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Y        reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Z        reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_X       reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Y       reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Z       reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    RESERVED        reduce using rule 553 (record_layout_optional -> axis_rescale_z .)
    end             reduce using rule 553 (record_layout_optional -> axis_rescale_z .)


state 153

    (551) record_layout_optional -> axis_rescale_x .

    FNC_VALUES      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    IDENTIFICATION  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_X      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Y      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Z      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_X    reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Y    reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Z    reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_X      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Y      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Z      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_X      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Y      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Z      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_W      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_X      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Y      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Z      reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    OFFSET_X        reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Y        reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Z        reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_X       reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Y       reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Z       reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    RESERVED        reduce using rule 551 (record_layout_optional -> axis_rescale_x .)
    end             reduce using rule 551 (record_layout_optional -> axis_rescale_x .)


state 154

    (552) record_layout_optional -> axis_rescale_y .

    FNC_VALUES      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    IDENTIFICATION  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_X      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Y      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Z      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_X    reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Y    reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Z    reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_X      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Y      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Z      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_X      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Y      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Z      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_W      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_X      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Y      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Z      reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    OFFSET_X        reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Y        reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Z        reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_X       reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Y       reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Z       reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    RESERVED        reduce using rule 552 (record_layout_optional -> axis_rescale_y .)
    end             reduce using rule 552 (record_layout_optional -> axis_rescale_y .)


state 155

    (621) shift_op_y -> SHIFT_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 355


state 156

    (620) shift_op_x -> SHIFT_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 356


state 157

    (557) record_layout_optional -> no_rescale_x .

    FNC_VALUES      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    IDENTIFICATION  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_X      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Y      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Z      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_X    reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Y    reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Z    reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_X      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Y      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Z      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_X      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Y      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Z      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_W      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_X      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Y      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Z      reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    OFFSET_X        reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    OFFSET_Y        reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    OFFSET_Z        reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    DIST_OP_X       reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Y       reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Z       reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    RESERVED        reduce using rule 557 (record_layout_optional -> no_rescale_x .)
    end             reduce using rule 557 (record_layout_optional -> no_rescale_x .)


state 158

    (622) shift_op_z -> SHIFT_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 357


state 159

    (561) record_layout_optional -> fix_no_axis_pts_y .

    FNC_VALUES      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_X        reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Y        reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Z        reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_X       reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    RESERVED        reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)
    end             reduce using rule 561 (record_layout_optional -> fix_no_axis_pts_y .)


state 160

    (560) record_layout_optional -> fix_no_axis_pts_x .

    FNC_VALUES      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_X        reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Y        reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Z        reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_X       reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    RESERVED        reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)
    end             reduce using rule 560 (record_layout_optional -> fix_no_axis_pts_x .)


state 161

    (562) record_layout_optional -> fix_no_axis_pts_z .

    FNC_VALUES      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_X        reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Y        reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Z        reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_X       reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    RESERVED        reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)
    end             reduce using rule 562 (record_layout_optional -> fix_no_axis_pts_z .)


state 162

    (633) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE . NUMERIC

    NUMERIC         shift and go to state 358


state 163

    (559) record_layout_optional -> no_rescale_z .

    FNC_VALUES      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    IDENTIFICATION  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_X      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Y      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Z      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_X    reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Y    reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Z    reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_X      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Y      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Z      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_X      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Y      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Z      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_W      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_X      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Y      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Z      reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    OFFSET_X        reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    OFFSET_Y        reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    OFFSET_Z        reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    DIST_OP_X       reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Y       reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Z       reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    RESERVED        reduce using rule 559 (record_layout_optional -> no_rescale_z .)
    end             reduce using rule 559 (record_layout_optional -> no_rescale_z .)


state 164

    (609) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y . NUMERIC

    NUMERIC         shift and go to state 359


state 165

    (608) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X . NUMERIC

    NUMERIC         shift and go to state 360


state 166

    (610) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z . NUMERIC

    NUMERIC         shift and go to state 361


state 167

    (564) record_layout_optional -> src_addr_y .

    FNC_VALUES      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    IDENTIFICATION  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_X      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Y      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Z      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_X  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_X    reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Y    reduce using rule 564 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Z    reduce using rule 564 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 564 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 564 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_X      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Y      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Z      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_X      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Y      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Z      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_W      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_X      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Y      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Z      reduce using rule 564 (record_layout_optional -> src_addr_y .)
    OFFSET_X        reduce using rule 564 (record_layout_optional -> src_addr_y .)
    OFFSET_Y        reduce using rule 564 (record_layout_optional -> src_addr_y .)
    OFFSET_Z        reduce using rule 564 (record_layout_optional -> src_addr_y .)
    DIST_OP_X       reduce using rule 564 (record_layout_optional -> src_addr_y .)
    DIST_OP_Y       reduce using rule 564 (record_layout_optional -> src_addr_y .)
    DIST_OP_Z       reduce using rule 564 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_WORD  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_LONG  reduce using rule 564 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 564 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 564 (record_layout_optional -> src_addr_y .)
    RESERVED        reduce using rule 564 (record_layout_optional -> src_addr_y .)
    end             reduce using rule 564 (record_layout_optional -> src_addr_y .)


state 168

    (563) record_layout_optional -> src_addr_x .

    FNC_VALUES      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    IDENTIFICATION  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_X      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Y      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Z      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_X  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_X    reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Y    reduce using rule 563 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Z    reduce using rule 563 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 563 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 563 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_X      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Y      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Z      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_X      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Y      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Z      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_W      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_X      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Y      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Z      reduce using rule 563 (record_layout_optional -> src_addr_x .)
    OFFSET_X        reduce using rule 563 (record_layout_optional -> src_addr_x .)
    OFFSET_Y        reduce using rule 563 (record_layout_optional -> src_addr_x .)
    OFFSET_Z        reduce using rule 563 (record_layout_optional -> src_addr_x .)
    DIST_OP_X       reduce using rule 563 (record_layout_optional -> src_addr_x .)
    DIST_OP_Y       reduce using rule 563 (record_layout_optional -> src_addr_x .)
    DIST_OP_Z       reduce using rule 563 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_WORD  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_LONG  reduce using rule 563 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 563 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 563 (record_layout_optional -> src_addr_x .)
    RESERVED        reduce using rule 563 (record_layout_optional -> src_addr_x .)
    end             reduce using rule 563 (record_layout_optional -> src_addr_x .)


state 169

    (583) record_layout_optional -> alignment_float64_ieee .

    FNC_VALUES      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    IDENTIFICATION  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_X      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Y      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Z      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_X  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Y  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Z  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_X   reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_X    reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Y    reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Z    reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_X      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Y      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Z      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_X      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Y      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Z      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_W      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_X      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Y      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Z      reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_X        reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Y        reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Z        reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_X       reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Y       reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Z       reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_BYTE  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_WORD  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_LONG  reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    RESERVED        reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)
    end             reduce using rule 583 (record_layout_optional -> alignment_float64_ieee .)


state 170

    (607) no_rescale_z -> NO_RESCALE_Z . NUMERIC datatype

    NUMERIC         shift and go to state 362


state 171

    (605) no_rescale_x -> NO_RESCALE_X . NUMERIC datatype

    NUMERIC         shift and go to state 363


state 172

    (606) no_rescale_y -> NO_RESCALE_Y . NUMERIC datatype

    NUMERIC         shift and go to state 364


state 173

    (547) record_layout_optional -> identification .

    FNC_VALUES      reduce using rule 547 (record_layout_optional -> identification .)
    IDENTIFICATION  reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_PTS_X      reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_PTS_Y      reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_PTS_Z      reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_RESCALE_X  reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_RESCALE_Y  reduce using rule 547 (record_layout_optional -> identification .)
    AXIS_RESCALE_Z  reduce using rule 547 (record_layout_optional -> identification .)
    NO_AXIS_PTS_X   reduce using rule 547 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Y   reduce using rule 547 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Z   reduce using rule 547 (record_layout_optional -> identification .)
    NO_RESCALE_X    reduce using rule 547 (record_layout_optional -> identification .)
    NO_RESCALE_Y    reduce using rule 547 (record_layout_optional -> identification .)
    NO_RESCALE_Z    reduce using rule 547 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_X reduce using rule 547 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Y reduce using rule 547 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Z reduce using rule 547 (record_layout_optional -> identification .)
    SRC_ADDR_X      reduce using rule 547 (record_layout_optional -> identification .)
    SRC_ADDR_Y      reduce using rule 547 (record_layout_optional -> identification .)
    SRC_ADDR_Z      reduce using rule 547 (record_layout_optional -> identification .)
    RIP_ADDR_X      reduce using rule 547 (record_layout_optional -> identification .)
    RIP_ADDR_Y      reduce using rule 547 (record_layout_optional -> identification .)
    RIP_ADDR_Z      reduce using rule 547 (record_layout_optional -> identification .)
    RIP_ADDR_W      reduce using rule 547 (record_layout_optional -> identification .)
    SHIFT_OP_X      reduce using rule 547 (record_layout_optional -> identification .)
    SHIFT_OP_Y      reduce using rule 547 (record_layout_optional -> identification .)
    SHIFT_OP_Z      reduce using rule 547 (record_layout_optional -> identification .)
    OFFSET_X        reduce using rule 547 (record_layout_optional -> identification .)
    OFFSET_Y        reduce using rule 547 (record_layout_optional -> identification .)
    OFFSET_Z        reduce using rule 547 (record_layout_optional -> identification .)
    DIST_OP_X       reduce using rule 547 (record_layout_optional -> identification .)
    DIST_OP_Y       reduce using rule 547 (record_layout_optional -> identification .)
    DIST_OP_Z       reduce using rule 547 (record_layout_optional -> identification .)
    ALIGNMENT_BYTE  reduce using rule 547 (record_layout_optional -> identification .)
    ALIGNMENT_WORD  reduce using rule 547 (record_layout_optional -> identification .)
    ALIGNMENT_LONG  reduce using rule 547 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 547 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 547 (record_layout_optional -> identification .)
    RESERVED        reduce using rule 547 (record_layout_optional -> identification .)
    end             reduce using rule 547 (record_layout_optional -> identification .)


state 174

    (580) record_layout_optional -> alignment_word .

    FNC_VALUES      reduce using rule 580 (record_layout_optional -> alignment_word .)
    IDENTIFICATION  reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_PTS_X      reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Y      reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Z      reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_X  reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Y  reduce using rule 580 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Z  reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_X   reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Y   reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Z   reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_RESCALE_X    reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Y    reduce using rule 580 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Z    reduce using rule 580 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_X reduce using rule 580 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Y reduce using rule 580 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Z reduce using rule 580 (record_layout_optional -> alignment_word .)
    SRC_ADDR_X      reduce using rule 580 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Y      reduce using rule 580 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Z      reduce using rule 580 (record_layout_optional -> alignment_word .)
    RIP_ADDR_X      reduce using rule 580 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Y      reduce using rule 580 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Z      reduce using rule 580 (record_layout_optional -> alignment_word .)
    RIP_ADDR_W      reduce using rule 580 (record_layout_optional -> alignment_word .)
    SHIFT_OP_X      reduce using rule 580 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Y      reduce using rule 580 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Z      reduce using rule 580 (record_layout_optional -> alignment_word .)
    OFFSET_X        reduce using rule 580 (record_layout_optional -> alignment_word .)
    OFFSET_Y        reduce using rule 580 (record_layout_optional -> alignment_word .)
    OFFSET_Z        reduce using rule 580 (record_layout_optional -> alignment_word .)
    DIST_OP_X       reduce using rule 580 (record_layout_optional -> alignment_word .)
    DIST_OP_Y       reduce using rule 580 (record_layout_optional -> alignment_word .)
    DIST_OP_Z       reduce using rule 580 (record_layout_optional -> alignment_word .)
    ALIGNMENT_BYTE  reduce using rule 580 (record_layout_optional -> alignment_word .)
    ALIGNMENT_WORD  reduce using rule 580 (record_layout_optional -> alignment_word .)
    ALIGNMENT_LONG  reduce using rule 580 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 580 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 580 (record_layout_optional -> alignment_word .)
    RESERVED        reduce using rule 580 (record_layout_optional -> alignment_word .)
    end             reduce using rule 580 (record_layout_optional -> alignment_word .)


state 175

    (628) dist_op_z -> DIST_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 365


state 176

    (626) dist_op_x -> DIST_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 366


state 177

    (627) dist_op_y -> DIST_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 367


state 178

    (558) record_layout_optional -> no_rescale_y .

    FNC_VALUES      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    IDENTIFICATION  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_X      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Y      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Z      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_X    reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Y    reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Z    reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_X      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Y      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Z      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_X      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Y      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Z      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_W      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_X      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Y      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Z      reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    OFFSET_X        reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    OFFSET_Y        reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    OFFSET_Z        reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    DIST_OP_X       reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Y       reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Z       reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    RESERVED        reduce using rule 558 (record_layout_optional -> no_rescale_y .)
    end             reduce using rule 558 (record_layout_optional -> no_rescale_y .)


state 179

    (632) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE . NUMERIC

    NUMERIC         shift and go to state 368


state 180

    (578) record_layout_optional -> dist_op_z .

    FNC_VALUES      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    IDENTIFICATION  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_X      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Y      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Z      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_X  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Y  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Z  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_X   reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_X    reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Y    reduce using rule 578 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Z    reduce using rule 578 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 578 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 578 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_X      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Y      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Z      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_X      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Y      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Z      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_W      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_X      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Y      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Z      reduce using rule 578 (record_layout_optional -> dist_op_z .)
    OFFSET_X        reduce using rule 578 (record_layout_optional -> dist_op_z .)
    OFFSET_Y        reduce using rule 578 (record_layout_optional -> dist_op_z .)
    OFFSET_Z        reduce using rule 578 (record_layout_optional -> dist_op_z .)
    DIST_OP_X       reduce using rule 578 (record_layout_optional -> dist_op_z .)
    DIST_OP_Y       reduce using rule 578 (record_layout_optional -> dist_op_z .)
    DIST_OP_Z       reduce using rule 578 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_BYTE  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_WORD  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_LONG  reduce using rule 578 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 578 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 578 (record_layout_optional -> dist_op_z .)
    RESERVED        reduce using rule 578 (record_layout_optional -> dist_op_z .)
    end             reduce using rule 578 (record_layout_optional -> dist_op_z .)


state 181

    (576) record_layout_optional -> dist_op_x .

    FNC_VALUES      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    IDENTIFICATION  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_X      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Y      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Z      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_X  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Y  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Z  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_X   reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_X    reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Y    reduce using rule 576 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Z    reduce using rule 576 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 576 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 576 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_X      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Y      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Z      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_X      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Y      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Z      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_W      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_X      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Y      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Z      reduce using rule 576 (record_layout_optional -> dist_op_x .)
    OFFSET_X        reduce using rule 576 (record_layout_optional -> dist_op_x .)
    OFFSET_Y        reduce using rule 576 (record_layout_optional -> dist_op_x .)
    OFFSET_Z        reduce using rule 576 (record_layout_optional -> dist_op_x .)
    DIST_OP_X       reduce using rule 576 (record_layout_optional -> dist_op_x .)
    DIST_OP_Y       reduce using rule 576 (record_layout_optional -> dist_op_x .)
    DIST_OP_Z       reduce using rule 576 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_BYTE  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_WORD  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_LONG  reduce using rule 576 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 576 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 576 (record_layout_optional -> dist_op_x .)
    RESERVED        reduce using rule 576 (record_layout_optional -> dist_op_x .)
    end             reduce using rule 576 (record_layout_optional -> dist_op_x .)


state 182

    (577) record_layout_optional -> dist_op_y .

    FNC_VALUES      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    IDENTIFICATION  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_X      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Y      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Z      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_X  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Y  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Z  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_X   reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_X    reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Y    reduce using rule 577 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Z    reduce using rule 577 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 577 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 577 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_X      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Y      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Z      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_X      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Y      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Z      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_W      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_X      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Y      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Z      reduce using rule 577 (record_layout_optional -> dist_op_y .)
    OFFSET_X        reduce using rule 577 (record_layout_optional -> dist_op_y .)
    OFFSET_Y        reduce using rule 577 (record_layout_optional -> dist_op_y .)
    OFFSET_Z        reduce using rule 577 (record_layout_optional -> dist_op_y .)
    DIST_OP_X       reduce using rule 577 (record_layout_optional -> dist_op_y .)
    DIST_OP_Y       reduce using rule 577 (record_layout_optional -> dist_op_y .)
    DIST_OP_Z       reduce using rule 577 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_BYTE  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_WORD  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_LONG  reduce using rule 577 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 577 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 577 (record_layout_optional -> dist_op_y .)
    RESERVED        reduce using rule 577 (record_layout_optional -> dist_op_y .)
    end             reduce using rule 577 (record_layout_optional -> dist_op_y .)


state 183

    (585) record_layout_optional_list -> record_layout_optional .
    (586) record_layout_optional_list -> record_layout_optional . record_layout_optional_list
    (585) record_layout_optional_list -> . record_layout_optional
    (586) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (546) record_layout_optional -> . fnc_values
    (547) record_layout_optional -> . identification
    (548) record_layout_optional -> . axis_pts_x
    (549) record_layout_optional -> . axis_pts_y
    (550) record_layout_optional -> . axis_pts_z
    (551) record_layout_optional -> . axis_rescale_x
    (552) record_layout_optional -> . axis_rescale_y
    (553) record_layout_optional -> . axis_rescale_z
    (554) record_layout_optional -> . no_axis_pts_x
    (555) record_layout_optional -> . no_axis_pts_y
    (556) record_layout_optional -> . no_axis_pts_z
    (557) record_layout_optional -> . no_rescale_x
    (558) record_layout_optional -> . no_rescale_y
    (559) record_layout_optional -> . no_rescale_z
    (560) record_layout_optional -> . fix_no_axis_pts_x
    (561) record_layout_optional -> . fix_no_axis_pts_y
    (562) record_layout_optional -> . fix_no_axis_pts_z
    (563) record_layout_optional -> . src_addr_x
    (564) record_layout_optional -> . src_addr_y
    (565) record_layout_optional -> . src_addr_z
    (566) record_layout_optional -> . rip_addr_x
    (567) record_layout_optional -> . rip_addr_y
    (568) record_layout_optional -> . rip_addr_z
    (569) record_layout_optional -> . rip_addr_w
    (570) record_layout_optional -> . shift_op_x
    (571) record_layout_optional -> . shift_op_y
    (572) record_layout_optional -> . shift_op_z
    (573) record_layout_optional -> . offset_x
    (574) record_layout_optional -> . offset_y
    (575) record_layout_optional -> . offset_z
    (576) record_layout_optional -> . dist_op_x
    (577) record_layout_optional -> . dist_op_y
    (578) record_layout_optional -> . dist_op_z
    (579) record_layout_optional -> . alignment_byte
    (580) record_layout_optional -> . alignment_word
    (581) record_layout_optional -> . alignment_long
    (582) record_layout_optional -> . alignment_float32_ieee
    (583) record_layout_optional -> . alignment_float64_ieee
    (584) record_layout_optional -> . reserved
    (589) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (595) identification -> . IDENTIFICATION NUMERIC datatype
    (596) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (597) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (598) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (599) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (600) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (601) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (602) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (603) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (604) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (605) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (606) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (607) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (608) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (609) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (610) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (611) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (612) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (613) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (616) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (617) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (618) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (619) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (620) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (621) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (622) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (623) offset_x -> . OFFSET_X NUMERIC datatype
    (624) offset_y -> . OFFSET_Y NUMERIC datatype
    (625) offset_z -> . OFFSET_Z NUMERIC datatype
    (626) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (627) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (628) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (629) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (630) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (631) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (632) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (633) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (662) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 585 (record_layout_optional_list -> record_layout_optional .)
    FNC_VALUES      shift and go to state 217
    IDENTIFICATION  shift and go to state 199
    AXIS_PTS_X      shift and go to state 149
    AXIS_PTS_Y      shift and go to state 150
    AXIS_PTS_Z      shift and go to state 148
    AXIS_RESCALE_X  shift and go to state 206
    AXIS_RESCALE_Y  shift and go to state 207
    AXIS_RESCALE_Z  shift and go to state 205
    NO_AXIS_PTS_X   shift and go to state 143
    NO_AXIS_PTS_Y   shift and go to state 142
    NO_AXIS_PTS_Z   shift and go to state 144
    NO_RESCALE_X    shift and go to state 171
    NO_RESCALE_Y    shift and go to state 172
    NO_RESCALE_Z    shift and go to state 170
    FIX_NO_AXIS_PTS_X shift and go to state 165
    FIX_NO_AXIS_PTS_Y shift and go to state 164
    FIX_NO_AXIS_PTS_Z shift and go to state 166
    SRC_ADDR_X      shift and go to state 147
    SRC_ADDR_Y      shift and go to state 146
    SRC_ADDR_Z      shift and go to state 145
    RIP_ADDR_X      shift and go to state 211
    RIP_ADDR_Y      shift and go to state 212
    RIP_ADDR_Z      shift and go to state 210
    RIP_ADDR_W      shift and go to state 208
    SHIFT_OP_X      shift and go to state 156
    SHIFT_OP_Y      shift and go to state 155
    SHIFT_OP_Z      shift and go to state 158
    OFFSET_X        shift and go to state 202
    OFFSET_Y        shift and go to state 203
    OFFSET_Z        shift and go to state 204
    DIST_OP_X       shift and go to state 176
    DIST_OP_Y       shift and go to state 177
    DIST_OP_Z       shift and go to state 175
    ALIGNMENT_BYTE  shift and go to state 200
    ALIGNMENT_WORD  shift and go to state 198
    ALIGNMENT_LONG  shift and go to state 151
    ALIGNMENT_FLOAT32_IEEE shift and go to state 179
    ALIGNMENT_FLOAT64_IEEE shift and go to state 162
    RESERVED        shift and go to state 216

    reserved                       shift and go to state 201
    record_layout_optional         shift and go to state 183
    record_layout_optional_list    shift and go to state 369
    src_addr_z                     shift and go to state 218
    src_addr_y                     shift and go to state 167
    src_addr_x                     shift and go to state 168
    axis_rescale_z                 shift and go to state 152
    shift_op_z                     shift and go to state 221
    identification                 shift and go to state 173
    offset_y                       shift and go to state 214
    offset_z                       shift and go to state 215
    offset_x                       shift and go to state 213
    axis_rescale_y                 shift and go to state 154
    alignment_long                 shift and go to state 222
    alignment_float64_ieee         shift and go to state 169
    alignment_byte                 shift and go to state 209
    alignment_word                 shift and go to state 174
    shift_op_y                     shift and go to state 219
    no_axis_pts_y                  shift and go to state 187
    no_axis_pts_x                  shift and go to state 188
    axis_rescale_x                 shift and go to state 153
    no_axis_pts_z                  shift and go to state 189
    rip_addr_w                     shift and go to state 190
    fnc_values                     shift and go to state 191
    axis_pts_z                     shift and go to state 192
    alignment_float32_ieee         shift and go to state 223
    axis_pts_x                     shift and go to state 193
    axis_pts_y                     shift and go to state 194
    rip_addr_z                     shift and go to state 195
    rip_addr_x                     shift and go to state 196
    rip_addr_y                     shift and go to state 197
    no_rescale_z                   shift and go to state 163
    shift_op_x                     shift and go to state 220
    no_rescale_x                   shift and go to state 157
    no_rescale_y                   shift and go to state 178
    dist_op_z                      shift and go to state 180
    dist_op_x                      shift and go to state 181
    dist_op_y                      shift and go to state 182
    fix_no_axis_pts_y              shift and go to state 159
    fix_no_axis_pts_x              shift and go to state 160
    fix_no_axis_pts_z              shift and go to state 161

state 184

    (588) record_layout_optional_list_optional -> record_layout_optional_list .

    end             reduce using rule 588 (record_layout_optional_list_optional -> record_layout_optional_list .)


state 185

    (545) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional . end RECORD_LAYOUT

    end             shift and go to state 370


state 186

    (587) record_layout_optional_list_optional -> empty .

    end             reduce using rule 587 (record_layout_optional_list_optional -> empty .)


state 187

    (555) record_layout_optional -> no_axis_pts_y .

    FNC_VALUES      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_X        reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Y        reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Z        reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_X       reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    RESERVED        reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)
    end             reduce using rule 555 (record_layout_optional -> no_axis_pts_y .)


state 188

    (554) record_layout_optional -> no_axis_pts_x .

    FNC_VALUES      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_X        reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Y        reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Z        reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_X       reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    RESERVED        reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)
    end             reduce using rule 554 (record_layout_optional -> no_axis_pts_x .)


state 189

    (556) record_layout_optional -> no_axis_pts_z .

    FNC_VALUES      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_X        reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Y        reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Z        reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_X       reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    RESERVED        reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)
    end             reduce using rule 556 (record_layout_optional -> no_axis_pts_z .)


state 190

    (569) record_layout_optional -> rip_addr_w .

    FNC_VALUES      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    IDENTIFICATION  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_X      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Y      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Z      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_X  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Y  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Z  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_X   reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Y   reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Z   reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_X    reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Y    reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Z    reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_X reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Y reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Z reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_X      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Y      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Z      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_X      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Y      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Z      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_W      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_X      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Y      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Z      reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    OFFSET_X        reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    OFFSET_Y        reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    OFFSET_Z        reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    DIST_OP_X       reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Y       reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Z       reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_BYTE  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_WORD  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_LONG  reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    RESERVED        reduce using rule 569 (record_layout_optional -> rip_addr_w .)
    end             reduce using rule 569 (record_layout_optional -> rip_addr_w .)


state 191

    (546) record_layout_optional -> fnc_values .

    FNC_VALUES      reduce using rule 546 (record_layout_optional -> fnc_values .)
    IDENTIFICATION  reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_PTS_X      reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Y      reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Z      reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_X  reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Y  reduce using rule 546 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Z  reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_X   reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Y   reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Z   reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_RESCALE_X    reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Y    reduce using rule 546 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Z    reduce using rule 546 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_X reduce using rule 546 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Y reduce using rule 546 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Z reduce using rule 546 (record_layout_optional -> fnc_values .)
    SRC_ADDR_X      reduce using rule 546 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Y      reduce using rule 546 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Z      reduce using rule 546 (record_layout_optional -> fnc_values .)
    RIP_ADDR_X      reduce using rule 546 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Y      reduce using rule 546 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Z      reduce using rule 546 (record_layout_optional -> fnc_values .)
    RIP_ADDR_W      reduce using rule 546 (record_layout_optional -> fnc_values .)
    SHIFT_OP_X      reduce using rule 546 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Y      reduce using rule 546 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Z      reduce using rule 546 (record_layout_optional -> fnc_values .)
    OFFSET_X        reduce using rule 546 (record_layout_optional -> fnc_values .)
    OFFSET_Y        reduce using rule 546 (record_layout_optional -> fnc_values .)
    OFFSET_Z        reduce using rule 546 (record_layout_optional -> fnc_values .)
    DIST_OP_X       reduce using rule 546 (record_layout_optional -> fnc_values .)
    DIST_OP_Y       reduce using rule 546 (record_layout_optional -> fnc_values .)
    DIST_OP_Z       reduce using rule 546 (record_layout_optional -> fnc_values .)
    ALIGNMENT_BYTE  reduce using rule 546 (record_layout_optional -> fnc_values .)
    ALIGNMENT_WORD  reduce using rule 546 (record_layout_optional -> fnc_values .)
    ALIGNMENT_LONG  reduce using rule 546 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 546 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 546 (record_layout_optional -> fnc_values .)
    RESERVED        reduce using rule 546 (record_layout_optional -> fnc_values .)
    end             reduce using rule 546 (record_layout_optional -> fnc_values .)


state 192

    (550) record_layout_optional -> axis_pts_z .

    FNC_VALUES      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    IDENTIFICATION  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_X      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_X    reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_X      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_X      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_W      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_X      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    OFFSET_X        reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    OFFSET_Y        reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    OFFSET_Z        reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    DIST_OP_X       reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Y       reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Z       reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    RESERVED        reduce using rule 550 (record_layout_optional -> axis_pts_z .)
    end             reduce using rule 550 (record_layout_optional -> axis_pts_z .)


state 193

    (548) record_layout_optional -> axis_pts_x .

    FNC_VALUES      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    IDENTIFICATION  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_X      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_X    reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_X      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_X      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_W      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_X      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    OFFSET_X        reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    OFFSET_Y        reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    OFFSET_Z        reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    DIST_OP_X       reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Y       reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Z       reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    RESERVED        reduce using rule 548 (record_layout_optional -> axis_pts_x .)
    end             reduce using rule 548 (record_layout_optional -> axis_pts_x .)


state 194

    (549) record_layout_optional -> axis_pts_y .

    FNC_VALUES      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    IDENTIFICATION  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_X      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_X    reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_X      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_X      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_W      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_X      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    OFFSET_X        reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    OFFSET_Y        reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    OFFSET_Z        reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    DIST_OP_X       reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Y       reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Z       reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    RESERVED        reduce using rule 549 (record_layout_optional -> axis_pts_y .)
    end             reduce using rule 549 (record_layout_optional -> axis_pts_y .)


state 195

    (568) record_layout_optional -> rip_addr_z .

    FNC_VALUES      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    IDENTIFICATION  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_X      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Y      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Z      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_X  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_X    reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Y    reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Z    reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_X      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Y      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Z      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_X      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Y      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Z      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_W      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_X      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Y      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Z      reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    OFFSET_X        reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    OFFSET_Y        reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    OFFSET_Z        reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    DIST_OP_X       reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Y       reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Z       reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_WORD  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_LONG  reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    RESERVED        reduce using rule 568 (record_layout_optional -> rip_addr_z .)
    end             reduce using rule 568 (record_layout_optional -> rip_addr_z .)


state 196

    (566) record_layout_optional -> rip_addr_x .

    FNC_VALUES      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    IDENTIFICATION  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_X      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Y      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Z      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_X  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_X    reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Y    reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Z    reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_X      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Y      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Z      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_X      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Y      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Z      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_W      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_X      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Y      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Z      reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    OFFSET_X        reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    OFFSET_Y        reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    OFFSET_Z        reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    DIST_OP_X       reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Y       reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Z       reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_WORD  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_LONG  reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    RESERVED        reduce using rule 566 (record_layout_optional -> rip_addr_x .)
    end             reduce using rule 566 (record_layout_optional -> rip_addr_x .)


state 197

    (567) record_layout_optional -> rip_addr_y .

    FNC_VALUES      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    IDENTIFICATION  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_X      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Y      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Z      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_X  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_X    reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Y    reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Z    reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_X      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Y      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Z      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_X      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Y      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Z      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_W      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_X      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Y      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Z      reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    OFFSET_X        reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    OFFSET_Y        reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    OFFSET_Z        reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    DIST_OP_X       reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Y       reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Z       reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_WORD  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_LONG  reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    RESERVED        reduce using rule 567 (record_layout_optional -> rip_addr_y .)
    end             reduce using rule 567 (record_layout_optional -> rip_addr_y .)


state 198

    (630) alignment_word -> ALIGNMENT_WORD . NUMERIC

    NUMERIC         shift and go to state 371


state 199

    (595) identification -> IDENTIFICATION . NUMERIC datatype

    NUMERIC         shift and go to state 372


state 200

    (629) alignment_byte -> ALIGNMENT_BYTE . NUMERIC

    NUMERIC         shift and go to state 373


state 201

    (584) record_layout_optional -> reserved .

    FNC_VALUES      reduce using rule 584 (record_layout_optional -> reserved .)
    IDENTIFICATION  reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_PTS_X      reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_PTS_Y      reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_PTS_Z      reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_RESCALE_X  reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Y  reduce using rule 584 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Z  reduce using rule 584 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_X   reduce using rule 584 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Y   reduce using rule 584 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Z   reduce using rule 584 (record_layout_optional -> reserved .)
    NO_RESCALE_X    reduce using rule 584 (record_layout_optional -> reserved .)
    NO_RESCALE_Y    reduce using rule 584 (record_layout_optional -> reserved .)
    NO_RESCALE_Z    reduce using rule 584 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_X reduce using rule 584 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Y reduce using rule 584 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Z reduce using rule 584 (record_layout_optional -> reserved .)
    SRC_ADDR_X      reduce using rule 584 (record_layout_optional -> reserved .)
    SRC_ADDR_Y      reduce using rule 584 (record_layout_optional -> reserved .)
    SRC_ADDR_Z      reduce using rule 584 (record_layout_optional -> reserved .)
    RIP_ADDR_X      reduce using rule 584 (record_layout_optional -> reserved .)
    RIP_ADDR_Y      reduce using rule 584 (record_layout_optional -> reserved .)
    RIP_ADDR_Z      reduce using rule 584 (record_layout_optional -> reserved .)
    RIP_ADDR_W      reduce using rule 584 (record_layout_optional -> reserved .)
    SHIFT_OP_X      reduce using rule 584 (record_layout_optional -> reserved .)
    SHIFT_OP_Y      reduce using rule 584 (record_layout_optional -> reserved .)
    SHIFT_OP_Z      reduce using rule 584 (record_layout_optional -> reserved .)
    OFFSET_X        reduce using rule 584 (record_layout_optional -> reserved .)
    OFFSET_Y        reduce using rule 584 (record_layout_optional -> reserved .)
    OFFSET_Z        reduce using rule 584 (record_layout_optional -> reserved .)
    DIST_OP_X       reduce using rule 584 (record_layout_optional -> reserved .)
    DIST_OP_Y       reduce using rule 584 (record_layout_optional -> reserved .)
    DIST_OP_Z       reduce using rule 584 (record_layout_optional -> reserved .)
    ALIGNMENT_BYTE  reduce using rule 584 (record_layout_optional -> reserved .)
    ALIGNMENT_WORD  reduce using rule 584 (record_layout_optional -> reserved .)
    ALIGNMENT_LONG  reduce using rule 584 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 584 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 584 (record_layout_optional -> reserved .)
    RESERVED        reduce using rule 584 (record_layout_optional -> reserved .)
    end             reduce using rule 584 (record_layout_optional -> reserved .)


state 202

    (623) offset_x -> OFFSET_X . NUMERIC datatype

    NUMERIC         shift and go to state 374


state 203

    (624) offset_y -> OFFSET_Y . NUMERIC datatype

    NUMERIC         shift and go to state 375


state 204

    (625) offset_z -> OFFSET_Z . NUMERIC datatype

    NUMERIC         shift and go to state 376


state 205

    (601) axis_rescale_z -> AXIS_RESCALE_Z . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 377


state 206

    (599) axis_rescale_x -> AXIS_RESCALE_X . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 378


state 207

    (600) axis_rescale_y -> AXIS_RESCALE_Y . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 379


state 208

    (619) rip_addr_w -> RIP_ADDR_W . NUMERIC datatype

    NUMERIC         shift and go to state 380


state 209

    (579) record_layout_optional -> alignment_byte .

    FNC_VALUES      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    IDENTIFICATION  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_X      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Y      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Z      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_X  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Y  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Z  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_X   reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Y   reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Z   reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_X    reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Y    reduce using rule 579 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Z    reduce using rule 579 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_X reduce using rule 579 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Y reduce using rule 579 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Z reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_X      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Y      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Z      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_X      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Y      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Z      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_W      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_X      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Y      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Z      reduce using rule 579 (record_layout_optional -> alignment_byte .)
    OFFSET_X        reduce using rule 579 (record_layout_optional -> alignment_byte .)
    OFFSET_Y        reduce using rule 579 (record_layout_optional -> alignment_byte .)
    OFFSET_Z        reduce using rule 579 (record_layout_optional -> alignment_byte .)
    DIST_OP_X       reduce using rule 579 (record_layout_optional -> alignment_byte .)
    DIST_OP_Y       reduce using rule 579 (record_layout_optional -> alignment_byte .)
    DIST_OP_Z       reduce using rule 579 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_BYTE  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_WORD  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_LONG  reduce using rule 579 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 579 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 579 (record_layout_optional -> alignment_byte .)
    RESERVED        reduce using rule 579 (record_layout_optional -> alignment_byte .)
    end             reduce using rule 579 (record_layout_optional -> alignment_byte .)


state 210

    (618) rip_addr_z -> RIP_ADDR_Z . NUMERIC datatype

    NUMERIC         shift and go to state 381


state 211

    (616) rip_addr_x -> RIP_ADDR_X . NUMERIC datatype

    NUMERIC         shift and go to state 382


state 212

    (617) rip_addr_y -> RIP_ADDR_Y . NUMERIC datatype

    NUMERIC         shift and go to state 383


state 213

    (573) record_layout_optional -> offset_x .

    FNC_VALUES      reduce using rule 573 (record_layout_optional -> offset_x .)
    IDENTIFICATION  reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_PTS_X      reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_PTS_Y      reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_PTS_Z      reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_X  reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Y  reduce using rule 573 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Z  reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_X   reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Y   reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Z   reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_RESCALE_X    reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_RESCALE_Y    reduce using rule 573 (record_layout_optional -> offset_x .)
    NO_RESCALE_Z    reduce using rule 573 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 573 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 573 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 573 (record_layout_optional -> offset_x .)
    SRC_ADDR_X      reduce using rule 573 (record_layout_optional -> offset_x .)
    SRC_ADDR_Y      reduce using rule 573 (record_layout_optional -> offset_x .)
    SRC_ADDR_Z      reduce using rule 573 (record_layout_optional -> offset_x .)
    RIP_ADDR_X      reduce using rule 573 (record_layout_optional -> offset_x .)
    RIP_ADDR_Y      reduce using rule 573 (record_layout_optional -> offset_x .)
    RIP_ADDR_Z      reduce using rule 573 (record_layout_optional -> offset_x .)
    RIP_ADDR_W      reduce using rule 573 (record_layout_optional -> offset_x .)
    SHIFT_OP_X      reduce using rule 573 (record_layout_optional -> offset_x .)
    SHIFT_OP_Y      reduce using rule 573 (record_layout_optional -> offset_x .)
    SHIFT_OP_Z      reduce using rule 573 (record_layout_optional -> offset_x .)
    OFFSET_X        reduce using rule 573 (record_layout_optional -> offset_x .)
    OFFSET_Y        reduce using rule 573 (record_layout_optional -> offset_x .)
    OFFSET_Z        reduce using rule 573 (record_layout_optional -> offset_x .)
    DIST_OP_X       reduce using rule 573 (record_layout_optional -> offset_x .)
    DIST_OP_Y       reduce using rule 573 (record_layout_optional -> offset_x .)
    DIST_OP_Z       reduce using rule 573 (record_layout_optional -> offset_x .)
    ALIGNMENT_BYTE  reduce using rule 573 (record_layout_optional -> offset_x .)
    ALIGNMENT_WORD  reduce using rule 573 (record_layout_optional -> offset_x .)
    ALIGNMENT_LONG  reduce using rule 573 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 573 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 573 (record_layout_optional -> offset_x .)
    RESERVED        reduce using rule 573 (record_layout_optional -> offset_x .)
    end             reduce using rule 573 (record_layout_optional -> offset_x .)


state 214

    (574) record_layout_optional -> offset_y .

    FNC_VALUES      reduce using rule 574 (record_layout_optional -> offset_y .)
    IDENTIFICATION  reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_PTS_X      reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_PTS_Y      reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_PTS_Z      reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_X  reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Y  reduce using rule 574 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Z  reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_X   reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Y   reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Z   reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_RESCALE_X    reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_RESCALE_Y    reduce using rule 574 (record_layout_optional -> offset_y .)
    NO_RESCALE_Z    reduce using rule 574 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 574 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 574 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 574 (record_layout_optional -> offset_y .)
    SRC_ADDR_X      reduce using rule 574 (record_layout_optional -> offset_y .)
    SRC_ADDR_Y      reduce using rule 574 (record_layout_optional -> offset_y .)
    SRC_ADDR_Z      reduce using rule 574 (record_layout_optional -> offset_y .)
    RIP_ADDR_X      reduce using rule 574 (record_layout_optional -> offset_y .)
    RIP_ADDR_Y      reduce using rule 574 (record_layout_optional -> offset_y .)
    RIP_ADDR_Z      reduce using rule 574 (record_layout_optional -> offset_y .)
    RIP_ADDR_W      reduce using rule 574 (record_layout_optional -> offset_y .)
    SHIFT_OP_X      reduce using rule 574 (record_layout_optional -> offset_y .)
    SHIFT_OP_Y      reduce using rule 574 (record_layout_optional -> offset_y .)
    SHIFT_OP_Z      reduce using rule 574 (record_layout_optional -> offset_y .)
    OFFSET_X        reduce using rule 574 (record_layout_optional -> offset_y .)
    OFFSET_Y        reduce using rule 574 (record_layout_optional -> offset_y .)
    OFFSET_Z        reduce using rule 574 (record_layout_optional -> offset_y .)
    DIST_OP_X       reduce using rule 574 (record_layout_optional -> offset_y .)
    DIST_OP_Y       reduce using rule 574 (record_layout_optional -> offset_y .)
    DIST_OP_Z       reduce using rule 574 (record_layout_optional -> offset_y .)
    ALIGNMENT_BYTE  reduce using rule 574 (record_layout_optional -> offset_y .)
    ALIGNMENT_WORD  reduce using rule 574 (record_layout_optional -> offset_y .)
    ALIGNMENT_LONG  reduce using rule 574 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 574 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 574 (record_layout_optional -> offset_y .)
    RESERVED        reduce using rule 574 (record_layout_optional -> offset_y .)
    end             reduce using rule 574 (record_layout_optional -> offset_y .)


state 215

    (575) record_layout_optional -> offset_z .

    FNC_VALUES      reduce using rule 575 (record_layout_optional -> offset_z .)
    IDENTIFICATION  reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_PTS_X      reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_PTS_Y      reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_PTS_Z      reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_X  reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Y  reduce using rule 575 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Z  reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_X   reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Y   reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Z   reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_RESCALE_X    reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_RESCALE_Y    reduce using rule 575 (record_layout_optional -> offset_z .)
    NO_RESCALE_Z    reduce using rule 575 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 575 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 575 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 575 (record_layout_optional -> offset_z .)
    SRC_ADDR_X      reduce using rule 575 (record_layout_optional -> offset_z .)
    SRC_ADDR_Y      reduce using rule 575 (record_layout_optional -> offset_z .)
    SRC_ADDR_Z      reduce using rule 575 (record_layout_optional -> offset_z .)
    RIP_ADDR_X      reduce using rule 575 (record_layout_optional -> offset_z .)
    RIP_ADDR_Y      reduce using rule 575 (record_layout_optional -> offset_z .)
    RIP_ADDR_Z      reduce using rule 575 (record_layout_optional -> offset_z .)
    RIP_ADDR_W      reduce using rule 575 (record_layout_optional -> offset_z .)
    SHIFT_OP_X      reduce using rule 575 (record_layout_optional -> offset_z .)
    SHIFT_OP_Y      reduce using rule 575 (record_layout_optional -> offset_z .)
    SHIFT_OP_Z      reduce using rule 575 (record_layout_optional -> offset_z .)
    OFFSET_X        reduce using rule 575 (record_layout_optional -> offset_z .)
    OFFSET_Y        reduce using rule 575 (record_layout_optional -> offset_z .)
    OFFSET_Z        reduce using rule 575 (record_layout_optional -> offset_z .)
    DIST_OP_X       reduce using rule 575 (record_layout_optional -> offset_z .)
    DIST_OP_Y       reduce using rule 575 (record_layout_optional -> offset_z .)
    DIST_OP_Z       reduce using rule 575 (record_layout_optional -> offset_z .)
    ALIGNMENT_BYTE  reduce using rule 575 (record_layout_optional -> offset_z .)
    ALIGNMENT_WORD  reduce using rule 575 (record_layout_optional -> offset_z .)
    ALIGNMENT_LONG  reduce using rule 575 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 575 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 575 (record_layout_optional -> offset_z .)
    RESERVED        reduce using rule 575 (record_layout_optional -> offset_z .)
    end             reduce using rule 575 (record_layout_optional -> offset_z .)


state 216

    (662) reserved -> RESERVED . NUMERIC datasize

    NUMERIC         shift and go to state 384


state 217

    (589) fnc_values -> FNC_VALUES . NUMERIC datatype fnc_values_index_mode addrtype

    NUMERIC         shift and go to state 385


state 218

    (565) record_layout_optional -> src_addr_z .

    FNC_VALUES      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    IDENTIFICATION  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_X      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Y      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Z      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_X  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_X    reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Y    reduce using rule 565 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Z    reduce using rule 565 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 565 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 565 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_X      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Y      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Z      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_X      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Y      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Z      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_W      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_X      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Y      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Z      reduce using rule 565 (record_layout_optional -> src_addr_z .)
    OFFSET_X        reduce using rule 565 (record_layout_optional -> src_addr_z .)
    OFFSET_Y        reduce using rule 565 (record_layout_optional -> src_addr_z .)
    OFFSET_Z        reduce using rule 565 (record_layout_optional -> src_addr_z .)
    DIST_OP_X       reduce using rule 565 (record_layout_optional -> src_addr_z .)
    DIST_OP_Y       reduce using rule 565 (record_layout_optional -> src_addr_z .)
    DIST_OP_Z       reduce using rule 565 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_WORD  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_LONG  reduce using rule 565 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 565 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 565 (record_layout_optional -> src_addr_z .)
    RESERVED        reduce using rule 565 (record_layout_optional -> src_addr_z .)
    end             reduce using rule 565 (record_layout_optional -> src_addr_z .)


state 219

    (571) record_layout_optional -> shift_op_y .

    FNC_VALUES      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    IDENTIFICATION  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_X      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Y      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Z      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_X  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Y  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Z  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_X   reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_X    reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Y    reduce using rule 571 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Z    reduce using rule 571 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 571 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 571 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_X      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Y      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Z      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_X      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Y      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Z      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_W      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_X      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Y      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Z      reduce using rule 571 (record_layout_optional -> shift_op_y .)
    OFFSET_X        reduce using rule 571 (record_layout_optional -> shift_op_y .)
    OFFSET_Y        reduce using rule 571 (record_layout_optional -> shift_op_y .)
    OFFSET_Z        reduce using rule 571 (record_layout_optional -> shift_op_y .)
    DIST_OP_X       reduce using rule 571 (record_layout_optional -> shift_op_y .)
    DIST_OP_Y       reduce using rule 571 (record_layout_optional -> shift_op_y .)
    DIST_OP_Z       reduce using rule 571 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_BYTE  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_WORD  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_LONG  reduce using rule 571 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 571 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 571 (record_layout_optional -> shift_op_y .)
    RESERVED        reduce using rule 571 (record_layout_optional -> shift_op_y .)
    end             reduce using rule 571 (record_layout_optional -> shift_op_y .)


state 220

    (570) record_layout_optional -> shift_op_x .

    FNC_VALUES      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    IDENTIFICATION  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_X      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Y      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Z      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_X  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Y  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Z  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_X   reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_X    reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Y    reduce using rule 570 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Z    reduce using rule 570 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 570 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 570 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_X      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Y      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Z      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_X      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Y      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Z      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_W      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_X      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Y      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Z      reduce using rule 570 (record_layout_optional -> shift_op_x .)
    OFFSET_X        reduce using rule 570 (record_layout_optional -> shift_op_x .)
    OFFSET_Y        reduce using rule 570 (record_layout_optional -> shift_op_x .)
    OFFSET_Z        reduce using rule 570 (record_layout_optional -> shift_op_x .)
    DIST_OP_X       reduce using rule 570 (record_layout_optional -> shift_op_x .)
    DIST_OP_Y       reduce using rule 570 (record_layout_optional -> shift_op_x .)
    DIST_OP_Z       reduce using rule 570 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_BYTE  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_WORD  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_LONG  reduce using rule 570 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 570 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 570 (record_layout_optional -> shift_op_x .)
    RESERVED        reduce using rule 570 (record_layout_optional -> shift_op_x .)
    end             reduce using rule 570 (record_layout_optional -> shift_op_x .)


state 221

    (572) record_layout_optional -> shift_op_z .

    FNC_VALUES      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    IDENTIFICATION  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_X      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Y      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Z      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_X  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Y  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Z  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_X   reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_X    reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Y    reduce using rule 572 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Z    reduce using rule 572 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 572 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 572 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_X      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Y      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Z      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_X      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Y      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Z      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_W      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_X      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Y      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Z      reduce using rule 572 (record_layout_optional -> shift_op_z .)
    OFFSET_X        reduce using rule 572 (record_layout_optional -> shift_op_z .)
    OFFSET_Y        reduce using rule 572 (record_layout_optional -> shift_op_z .)
    OFFSET_Z        reduce using rule 572 (record_layout_optional -> shift_op_z .)
    DIST_OP_X       reduce using rule 572 (record_layout_optional -> shift_op_z .)
    DIST_OP_Y       reduce using rule 572 (record_layout_optional -> shift_op_z .)
    DIST_OP_Z       reduce using rule 572 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_BYTE  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_WORD  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_LONG  reduce using rule 572 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 572 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 572 (record_layout_optional -> shift_op_z .)
    RESERVED        reduce using rule 572 (record_layout_optional -> shift_op_z .)
    end             reduce using rule 572 (record_layout_optional -> shift_op_z .)


state 222

    (581) record_layout_optional -> alignment_long .

    FNC_VALUES      reduce using rule 581 (record_layout_optional -> alignment_long .)
    IDENTIFICATION  reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_PTS_X      reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Y      reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Z      reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_X  reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Y  reduce using rule 581 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Z  reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_X   reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Y   reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Z   reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_RESCALE_X    reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Y    reduce using rule 581 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Z    reduce using rule 581 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_X reduce using rule 581 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Y reduce using rule 581 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Z reduce using rule 581 (record_layout_optional -> alignment_long .)
    SRC_ADDR_X      reduce using rule 581 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Y      reduce using rule 581 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Z      reduce using rule 581 (record_layout_optional -> alignment_long .)
    RIP_ADDR_X      reduce using rule 581 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Y      reduce using rule 581 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Z      reduce using rule 581 (record_layout_optional -> alignment_long .)
    RIP_ADDR_W      reduce using rule 581 (record_layout_optional -> alignment_long .)
    SHIFT_OP_X      reduce using rule 581 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Y      reduce using rule 581 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Z      reduce using rule 581 (record_layout_optional -> alignment_long .)
    OFFSET_X        reduce using rule 581 (record_layout_optional -> alignment_long .)
    OFFSET_Y        reduce using rule 581 (record_layout_optional -> alignment_long .)
    OFFSET_Z        reduce using rule 581 (record_layout_optional -> alignment_long .)
    DIST_OP_X       reduce using rule 581 (record_layout_optional -> alignment_long .)
    DIST_OP_Y       reduce using rule 581 (record_layout_optional -> alignment_long .)
    DIST_OP_Z       reduce using rule 581 (record_layout_optional -> alignment_long .)
    ALIGNMENT_BYTE  reduce using rule 581 (record_layout_optional -> alignment_long .)
    ALIGNMENT_WORD  reduce using rule 581 (record_layout_optional -> alignment_long .)
    ALIGNMENT_LONG  reduce using rule 581 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 581 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 581 (record_layout_optional -> alignment_long .)
    RESERVED        reduce using rule 581 (record_layout_optional -> alignment_long .)
    end             reduce using rule 581 (record_layout_optional -> alignment_long .)


state 223

    (582) record_layout_optional -> alignment_float32_ieee .

    FNC_VALUES      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    IDENTIFICATION  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_X      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Y      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Z      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_X  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Y  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Z  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_X   reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_X    reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Y    reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Z    reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_X      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Y      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Z      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_X      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Y      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Z      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_W      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_X      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Y      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Z      reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_X        reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Y        reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Z        reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_X       reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Y       reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Z       reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_BYTE  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_WORD  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_LONG  reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    RESERVED        reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)
    end             reduce using rule 582 (record_layout_optional -> alignment_float32_ieee .)


state 224

    (453) compu_method -> begin COMPU_METHOD IDENT STRING . compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (454) compu_method_conversion_type -> . TAB_INTP
    (455) compu_method_conversion_type -> . TAB_NOINTP
    (456) compu_method_conversion_type -> . TAB_VERB
    (457) compu_method_conversion_type -> . RAT_FUNC
    (458) compu_method_conversion_type -> . FORM
    (459) compu_method_conversion_type -> . IDENTICAL
    (460) compu_method_conversion_type -> . LINEAR

    TAB_INTP        shift and go to state 391
    TAB_NOINTP      shift and go to state 392
    TAB_VERB        shift and go to state 393
    RAT_FUNC        shift and go to state 389
    FORM            shift and go to state 387
    IDENTICAL       shift and go to state 386
    LINEAR          shift and go to state 388

    compu_method_conversion_type   shift and go to state 390

state 225

    (114) a2ml -> begin A2ML a2ml_declaration_list end . A2ML

    A2ML            shift and go to state 394


state 226

    (2) a2ml_declaration -> a2ml_type_definition SEMICOLON .

    block           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    char            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    int             reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    long            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    uchar           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    uint            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    ulong           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    double          reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    float           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    struct          reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    enum            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    taggedstruct    reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    taggedunion     reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    end             reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)


state 227

    (60) a2ml_identifier -> IDENT .

    SEMICOLON       reduce using rule 60 (a2ml_identifier -> IDENT .)
    CURLY_OPEN      reduce using rule 60 (a2ml_identifier -> IDENT .)
    PARENTHESE_CLOSE reduce using rule 60 (a2ml_identifier -> IDENT .)
    BRACE_OPEN      reduce using rule 60 (a2ml_identifier -> IDENT .)


state 228

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional . CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE

    CURLY_OPEN      shift and go to state 395


state 229

    (28) a2ml_struct_type_name -> struct a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    SEMICOLON       reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 230

    (61) a2ml_identifier_optional -> empty .

    CURLY_OPEN      reduce using rule 61 (a2ml_identifier_optional -> empty .)


state 231

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional . CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE

    CURLY_OPEN      shift and go to state 396


state 232

    (54) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    SEMICOLON       reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 233

    (5) a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list .

    end             reduce using rule 5 (a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list .)


state 234

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional . CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE

    CURLY_OPEN      shift and go to state 397


state 235

    (22) a2ml_enum_type_name -> enum a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    SEMICOLON       reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 236

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional . CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE

    CURLY_OPEN      shift and go to state 398


state 237

    (42) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    SEMICOLON       reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    BRACE_OPEN      reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 238

    (3) a2ml_declaration -> a2ml_block_definition SEMICOLON .

    block           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    char            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    int             reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    long            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    uchar           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    uint            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    ulong           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    double          reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    float           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    struct          reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    enum            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    taggedstruct    reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    taggedunion     reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    end             reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)


state 239

    (59) a2ml_tag -> STRING .

    PARENTHESE_OPEN reduce using rule 59 (a2ml_tag -> STRING .)
    char            reduce using rule 59 (a2ml_tag -> STRING .)
    int             reduce using rule 59 (a2ml_tag -> STRING .)
    long            reduce using rule 59 (a2ml_tag -> STRING .)
    uchar           reduce using rule 59 (a2ml_tag -> STRING .)
    uint            reduce using rule 59 (a2ml_tag -> STRING .)
    ulong           reduce using rule 59 (a2ml_tag -> STRING .)
    double          reduce using rule 59 (a2ml_tag -> STRING .)
    float           reduce using rule 59 (a2ml_tag -> STRING .)
    struct          reduce using rule 59 (a2ml_tag -> STRING .)
    enum            reduce using rule 59 (a2ml_tag -> STRING .)
    taggedstruct    reduce using rule 59 (a2ml_tag -> STRING .)
    taggedunion     reduce using rule 59 (a2ml_tag -> STRING .)
    SEMICOLON       reduce using rule 59 (a2ml_tag -> STRING .)
    PARENTHESE_CLOSE reduce using rule 59 (a2ml_tag -> STRING .)


state 240

    (20) a2ml_block_definition -> block a2ml_tag . a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_type_name                 shift and go to state 399

state 241

    (634) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end . VARIANT_CODING

    VARIANT_CODING  shift and go to state 400


state 242

    (659) variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .

    end             reduce using rule 659 (variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .)


state 243

    (640) var_characteristic -> begin VAR_CHARACTERISTIC . IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    IDENT           shift and go to state 401


state 244

    (645) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB . ident_ident_value_list end VAR_FORBIDDEN_COMB
    (646) ident_ident_value_list -> . ident_ident_value
    (647) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (648) ident_ident_value -> . IDENT IDENT

    IDENT           shift and go to state 402

    ident_ident_value              shift and go to state 403
    ident_ident_value_list         shift and go to state 404

state 245

    (649) var_criterion -> begin VAR_CRITERION . IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    IDENT           shift and go to state 405


state 246

    (643) var_separator -> VAR_SEPARATOR STRING .

    VAR_SEPARATOR   reduce using rule 643 (var_separator -> VAR_SEPARATOR STRING .)
    VAR_NAMING      reduce using rule 643 (var_separator -> VAR_SEPARATOR STRING .)
    begin           reduce using rule 643 (var_separator -> VAR_SEPARATOR STRING .)
    end             reduce using rule 643 (var_separator -> VAR_SEPARATOR STRING .)


state 247

    (644) var_naming -> VAR_NAMING IDENT .

    VAR_SEPARATOR   reduce using rule 644 (var_naming -> VAR_NAMING IDENT .)
    VAR_NAMING      reduce using rule 644 (var_naming -> VAR_NAMING IDENT .)
    begin           reduce using rule 644 (var_naming -> VAR_NAMING IDENT .)
    end             reduce using rule 644 (var_naming -> VAR_NAMING IDENT .)


state 248

    (380) axis_pts -> begin AXIS_PTS IDENT STRING . NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 406


state 249

    (402) measurement -> begin MEASUREMENT IDENT STRING . datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 408

state 250

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING . NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    NUMERIC         shift and go to state 418


state 251

    (502) function -> begin FUNCTION IDENT STRING . function_optional_list_optional end FUNCTION
    (513) function_optional_list_optional -> . empty
    (514) function_optional_list_optional -> . function_optional_list
    (698) empty -> .
    (511) function_optional_list -> . function_optional
    (512) function_optional_list -> . function_optional function_optional_list
    (503) function_optional -> . annotation
    (504) function_optional -> . def_characteristic
    (505) function_optional -> . ref_characteristic
    (506) function_optional -> . in_measurement
    (507) function_optional -> . out_measurement
    (508) function_optional -> . loc_measurement
    (509) function_optional -> . sub_function
    (510) function_optional -> . function_version
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (515) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (516) ref_characteristic -> . begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (522) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (523) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (524) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (525) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (526) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 425
    FUNCTION_VERSION shift and go to state 420

    function_optional              shift and go to state 419
    out_measurement                shift and go to state 430
    loc_measurement                shift and go to state 421
    def_characteristic             shift and go to state 426
    function_version               shift and go to state 432
    sub_function                   shift and go to state 427
    in_measurement                 shift and go to state 423
    ref_characteristic             shift and go to state 431
    function_optional_list_optional shift and go to state 429
    function_optional_list         shift and go to state 428
    annotation                     shift and go to state 422
    empty                          shift and go to state 424

state 252

    (176) mod_par_optional -> ecu_calibration_offset .

    ADDR_EPK        reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    EPK             reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    SUPPLIER        reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    CUSTOMER        reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    CUSTOMER_NO     reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    USER            reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    PHONE_NO        reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    ECU             reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    CPU_TYPE        reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    NO_OF_INTERFACES reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    ECU_CALIBRATION_OFFSET reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    begin           reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    SYSTEM_CONSTANT reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    ASAP2_VERSION   reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    A2ML_VERSION    reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)
    end             reduce using rule 176 (mod_par_optional -> ecu_calibration_offset .)


state 253

    (178) mod_par_optional -> memory_layout .

    ADDR_EPK        reduce using rule 178 (mod_par_optional -> memory_layout .)
    EPK             reduce using rule 178 (mod_par_optional -> memory_layout .)
    SUPPLIER        reduce using rule 178 (mod_par_optional -> memory_layout .)
    CUSTOMER        reduce using rule 178 (mod_par_optional -> memory_layout .)
    CUSTOMER_NO     reduce using rule 178 (mod_par_optional -> memory_layout .)
    USER            reduce using rule 178 (mod_par_optional -> memory_layout .)
    PHONE_NO        reduce using rule 178 (mod_par_optional -> memory_layout .)
    ECU             reduce using rule 178 (mod_par_optional -> memory_layout .)
    CPU_TYPE        reduce using rule 178 (mod_par_optional -> memory_layout .)
    NO_OF_INTERFACES reduce using rule 178 (mod_par_optional -> memory_layout .)
    ECU_CALIBRATION_OFFSET reduce using rule 178 (mod_par_optional -> memory_layout .)
    begin           reduce using rule 178 (mod_par_optional -> memory_layout .)
    SYSTEM_CONSTANT reduce using rule 178 (mod_par_optional -> memory_layout .)
    ASAP2_VERSION   reduce using rule 178 (mod_par_optional -> memory_layout .)
    A2ML_VERSION    reduce using rule 178 (mod_par_optional -> memory_layout .)
    end             reduce using rule 178 (mod_par_optional -> memory_layout .)


state 254

    (186) epk -> EPK . STRING

    STRING          shift and go to state 433


state 255

    (188) customer -> CUSTOMER . STRING

    STRING          shift and go to state 434


state 256

    (175) mod_par_optional -> no_of_interfaces .

    ADDR_EPK        reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    EPK             reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    SUPPLIER        reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    CUSTOMER        reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    CUSTOMER_NO     reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    USER            reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    PHONE_NO        reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    ECU             reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    CPU_TYPE        reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    NO_OF_INTERFACES reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    ECU_CALIBRATION_OFFSET reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    begin           reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    SYSTEM_CONSTANT reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    ASAP2_VERSION   reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    A2ML_VERSION    reduce using rule 175 (mod_par_optional -> no_of_interfaces .)
    end             reduce using rule 175 (mod_par_optional -> no_of_interfaces .)


state 257

    (170) mod_par_optional -> customer_no .

    ADDR_EPK        reduce using rule 170 (mod_par_optional -> customer_no .)
    EPK             reduce using rule 170 (mod_par_optional -> customer_no .)
    SUPPLIER        reduce using rule 170 (mod_par_optional -> customer_no .)
    CUSTOMER        reduce using rule 170 (mod_par_optional -> customer_no .)
    CUSTOMER_NO     reduce using rule 170 (mod_par_optional -> customer_no .)
    USER            reduce using rule 170 (mod_par_optional -> customer_no .)
    PHONE_NO        reduce using rule 170 (mod_par_optional -> customer_no .)
    ECU             reduce using rule 170 (mod_par_optional -> customer_no .)
    CPU_TYPE        reduce using rule 170 (mod_par_optional -> customer_no .)
    NO_OF_INTERFACES reduce using rule 170 (mod_par_optional -> customer_no .)
    ECU_CALIBRATION_OFFSET reduce using rule 170 (mod_par_optional -> customer_no .)
    begin           reduce using rule 170 (mod_par_optional -> customer_no .)
    SYSTEM_CONSTANT reduce using rule 170 (mod_par_optional -> customer_no .)
    ASAP2_VERSION   reduce using rule 170 (mod_par_optional -> customer_no .)
    A2ML_VERSION    reduce using rule 170 (mod_par_optional -> customer_no .)
    end             reduce using rule 170 (mod_par_optional -> customer_no .)


state 258

    (166) mod_par_optional -> addr_epk .

    ADDR_EPK        reduce using rule 166 (mod_par_optional -> addr_epk .)
    EPK             reduce using rule 166 (mod_par_optional -> addr_epk .)
    SUPPLIER        reduce using rule 166 (mod_par_optional -> addr_epk .)
    CUSTOMER        reduce using rule 166 (mod_par_optional -> addr_epk .)
    CUSTOMER_NO     reduce using rule 166 (mod_par_optional -> addr_epk .)
    USER            reduce using rule 166 (mod_par_optional -> addr_epk .)
    PHONE_NO        reduce using rule 166 (mod_par_optional -> addr_epk .)
    ECU             reduce using rule 166 (mod_par_optional -> addr_epk .)
    CPU_TYPE        reduce using rule 166 (mod_par_optional -> addr_epk .)
    NO_OF_INTERFACES reduce using rule 166 (mod_par_optional -> addr_epk .)
    ECU_CALIBRATION_OFFSET reduce using rule 166 (mod_par_optional -> addr_epk .)
    begin           reduce using rule 166 (mod_par_optional -> addr_epk .)
    SYSTEM_CONSTANT reduce using rule 166 (mod_par_optional -> addr_epk .)
    ASAP2_VERSION   reduce using rule 166 (mod_par_optional -> addr_epk .)
    A2ML_VERSION    reduce using rule 166 (mod_par_optional -> addr_epk .)
    end             reduce using rule 166 (mod_par_optional -> addr_epk .)


state 259

    (184) mod_par_optional_list_optional -> mod_par_optional_list .

    end             reduce using rule 184 (mod_par_optional_list_optional -> mod_par_optional_list .)


state 260

    (208) ecu -> ECU . STRING

    STRING          shift and go to state 435


state 261

    (252) system_constant -> SYSTEM_CONSTANT . STRING STRING

    STRING          shift and go to state 436


state 262

    (190) user -> USER . STRING

    STRING          shift and go to state 437


state 263

    (165) mod_par_optional -> version .

    ADDR_EPK        reduce using rule 165 (mod_par_optional -> version .)
    EPK             reduce using rule 165 (mod_par_optional -> version .)
    SUPPLIER        reduce using rule 165 (mod_par_optional -> version .)
    CUSTOMER        reduce using rule 165 (mod_par_optional -> version .)
    CUSTOMER_NO     reduce using rule 165 (mod_par_optional -> version .)
    USER            reduce using rule 165 (mod_par_optional -> version .)
    PHONE_NO        reduce using rule 165 (mod_par_optional -> version .)
    ECU             reduce using rule 165 (mod_par_optional -> version .)
    CPU_TYPE        reduce using rule 165 (mod_par_optional -> version .)
    NO_OF_INTERFACES reduce using rule 165 (mod_par_optional -> version .)
    ECU_CALIBRATION_OFFSET reduce using rule 165 (mod_par_optional -> version .)
    begin           reduce using rule 165 (mod_par_optional -> version .)
    SYSTEM_CONSTANT reduce using rule 165 (mod_par_optional -> version .)
    ASAP2_VERSION   reduce using rule 165 (mod_par_optional -> version .)
    A2ML_VERSION    reduce using rule 165 (mod_par_optional -> version .)
    end             reduce using rule 165 (mod_par_optional -> version .)


state 264

    (181) mod_par_optional_list -> mod_par_optional .
    (182) mod_par_optional_list -> mod_par_optional . mod_par_optional_list
    (181) mod_par_optional_list -> . mod_par_optional
    (182) mod_par_optional_list -> . mod_par_optional mod_par_optional_list
    (165) mod_par_optional -> . version
    (166) mod_par_optional -> . addr_epk
    (167) mod_par_optional -> . epk
    (168) mod_par_optional -> . supplier
    (169) mod_par_optional -> . customer
    (170) mod_par_optional -> . customer_no
    (171) mod_par_optional -> . user
    (172) mod_par_optional -> . phone_no
    (173) mod_par_optional -> . ecu
    (174) mod_par_optional -> . cpu_type
    (175) mod_par_optional -> . no_of_interfaces
    (176) mod_par_optional -> . ecu_calibration_offset
    (177) mod_par_optional -> . calibration_method
    (178) mod_par_optional -> . memory_layout
    (179) mod_par_optional -> . memory_segment
    (180) mod_par_optional -> . system_constant
    (86) version -> . version_asap2_a2ml number_list
    (185) addr_epk -> . ADDR_EPK NUMERIC
    (186) epk -> . EPK STRING
    (187) supplier -> . SUPPLIER STRING
    (188) customer -> . CUSTOMER STRING
    (189) customer_no -> . CUSTOMER_NO STRING
    (190) user -> . USER STRING
    (191) phone_no -> . PHONE_NO STRING
    (208) ecu -> . ECU STRING
    (209) cpu_type -> . CPU_TYPE STRING
    (210) no_of_interfaces -> . NO_OF_INTERFACES NUMERIC
    (211) ecu_calibration_offset -> . ECU_CALIBRATION_OFFSET NUMERIC
    (212) calibration_method -> . begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD
    (213) memory_layout -> . begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT
    (230) memory_segment -> . begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (252) system_constant -> . SYSTEM_CONSTANT STRING STRING
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    end             reduce using rule 181 (mod_par_optional_list -> mod_par_optional .)
    ADDR_EPK        shift and go to state 270
    EPK             shift and go to state 254
    SUPPLIER        shift and go to state 272
    CUSTOMER        shift and go to state 255
    CUSTOMER_NO     shift and go to state 284
    USER            shift and go to state 262
    PHONE_NO        shift and go to state 279
    ECU             shift and go to state 260
    CPU_TYPE        shift and go to state 276
    NO_OF_INTERFACES shift and go to state 271
    ECU_CALIBRATION_OFFSET shift and go to state 268
    begin           shift and go to state 269
    SYSTEM_CONSTANT shift and go to state 261
    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    ecu_calibration_offset         shift and go to state 252
    version_asap2_a2ml             shift and go to state 1
    no_of_interfaces               shift and go to state 256
    customer_no                    shift and go to state 257
    addr_epk                       shift and go to state 258
    mod_par_optional_list          shift and go to state 438
    version                        shift and go to state 263
    mod_par_optional               shift and go to state 264
    supplier                       shift and go to state 265
    epk                            shift and go to state 267
    memory_layout                  shift and go to state 253
    ecu                            shift and go to state 273
    user                           shift and go to state 275
    customer                       shift and go to state 277
    memory_segment                 shift and go to state 278
    system_constant                shift and go to state 280
    phone_no                       shift and go to state 281
    cpu_type                       shift and go to state 282
    calibration_method             shift and go to state 283

state 265

    (168) mod_par_optional -> supplier .

    ADDR_EPK        reduce using rule 168 (mod_par_optional -> supplier .)
    EPK             reduce using rule 168 (mod_par_optional -> supplier .)
    SUPPLIER        reduce using rule 168 (mod_par_optional -> supplier .)
    CUSTOMER        reduce using rule 168 (mod_par_optional -> supplier .)
    CUSTOMER_NO     reduce using rule 168 (mod_par_optional -> supplier .)
    USER            reduce using rule 168 (mod_par_optional -> supplier .)
    PHONE_NO        reduce using rule 168 (mod_par_optional -> supplier .)
    ECU             reduce using rule 168 (mod_par_optional -> supplier .)
    CPU_TYPE        reduce using rule 168 (mod_par_optional -> supplier .)
    NO_OF_INTERFACES reduce using rule 168 (mod_par_optional -> supplier .)
    ECU_CALIBRATION_OFFSET reduce using rule 168 (mod_par_optional -> supplier .)
    begin           reduce using rule 168 (mod_par_optional -> supplier .)
    SYSTEM_CONSTANT reduce using rule 168 (mod_par_optional -> supplier .)
    ASAP2_VERSION   reduce using rule 168 (mod_par_optional -> supplier .)
    A2ML_VERSION    reduce using rule 168 (mod_par_optional -> supplier .)
    end             reduce using rule 168 (mod_par_optional -> supplier .)


state 266

    (183) mod_par_optional_list_optional -> empty .

    end             reduce using rule 183 (mod_par_optional_list_optional -> empty .)


state 267

    (167) mod_par_optional -> epk .

    ADDR_EPK        reduce using rule 167 (mod_par_optional -> epk .)
    EPK             reduce using rule 167 (mod_par_optional -> epk .)
    SUPPLIER        reduce using rule 167 (mod_par_optional -> epk .)
    CUSTOMER        reduce using rule 167 (mod_par_optional -> epk .)
    CUSTOMER_NO     reduce using rule 167 (mod_par_optional -> epk .)
    USER            reduce using rule 167 (mod_par_optional -> epk .)
    PHONE_NO        reduce using rule 167 (mod_par_optional -> epk .)
    ECU             reduce using rule 167 (mod_par_optional -> epk .)
    CPU_TYPE        reduce using rule 167 (mod_par_optional -> epk .)
    NO_OF_INTERFACES reduce using rule 167 (mod_par_optional -> epk .)
    ECU_CALIBRATION_OFFSET reduce using rule 167 (mod_par_optional -> epk .)
    begin           reduce using rule 167 (mod_par_optional -> epk .)
    SYSTEM_CONSTANT reduce using rule 167 (mod_par_optional -> epk .)
    ASAP2_VERSION   reduce using rule 167 (mod_par_optional -> epk .)
    A2ML_VERSION    reduce using rule 167 (mod_par_optional -> epk .)
    end             reduce using rule 167 (mod_par_optional -> epk .)


state 268

    (211) ecu_calibration_offset -> ECU_CALIBRATION_OFFSET . NUMERIC

    NUMERIC         shift and go to state 439


state 269

    (212) calibration_method -> begin . CALIBRATION_METHOD number_list end CALIBRATION_METHOD
    (213) memory_layout -> begin . MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT
    (230) memory_segment -> begin . MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    CALIBRATION_METHOD shift and go to state 442
    MEMORY_LAYOUT   shift and go to state 440
    MEMORY_SEGMENT  shift and go to state 441


state 270

    (185) addr_epk -> ADDR_EPK . NUMERIC

    NUMERIC         shift and go to state 443


state 271

    (210) no_of_interfaces -> NO_OF_INTERFACES . NUMERIC

    NUMERIC         shift and go to state 444


state 272

    (187) supplier -> SUPPLIER . STRING

    STRING          shift and go to state 445


state 273

    (173) mod_par_optional -> ecu .

    ADDR_EPK        reduce using rule 173 (mod_par_optional -> ecu .)
    EPK             reduce using rule 173 (mod_par_optional -> ecu .)
    SUPPLIER        reduce using rule 173 (mod_par_optional -> ecu .)
    CUSTOMER        reduce using rule 173 (mod_par_optional -> ecu .)
    CUSTOMER_NO     reduce using rule 173 (mod_par_optional -> ecu .)
    USER            reduce using rule 173 (mod_par_optional -> ecu .)
    PHONE_NO        reduce using rule 173 (mod_par_optional -> ecu .)
    ECU             reduce using rule 173 (mod_par_optional -> ecu .)
    CPU_TYPE        reduce using rule 173 (mod_par_optional -> ecu .)
    NO_OF_INTERFACES reduce using rule 173 (mod_par_optional -> ecu .)
    ECU_CALIBRATION_OFFSET reduce using rule 173 (mod_par_optional -> ecu .)
    begin           reduce using rule 173 (mod_par_optional -> ecu .)
    SYSTEM_CONSTANT reduce using rule 173 (mod_par_optional -> ecu .)
    ASAP2_VERSION   reduce using rule 173 (mod_par_optional -> ecu .)
    A2ML_VERSION    reduce using rule 173 (mod_par_optional -> ecu .)
    end             reduce using rule 173 (mod_par_optional -> ecu .)


state 274

    (164) mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional . end MOD_PAR

    end             shift and go to state 446


state 275

    (171) mod_par_optional -> user .

    ADDR_EPK        reduce using rule 171 (mod_par_optional -> user .)
    EPK             reduce using rule 171 (mod_par_optional -> user .)
    SUPPLIER        reduce using rule 171 (mod_par_optional -> user .)
    CUSTOMER        reduce using rule 171 (mod_par_optional -> user .)
    CUSTOMER_NO     reduce using rule 171 (mod_par_optional -> user .)
    USER            reduce using rule 171 (mod_par_optional -> user .)
    PHONE_NO        reduce using rule 171 (mod_par_optional -> user .)
    ECU             reduce using rule 171 (mod_par_optional -> user .)
    CPU_TYPE        reduce using rule 171 (mod_par_optional -> user .)
    NO_OF_INTERFACES reduce using rule 171 (mod_par_optional -> user .)
    ECU_CALIBRATION_OFFSET reduce using rule 171 (mod_par_optional -> user .)
    begin           reduce using rule 171 (mod_par_optional -> user .)
    SYSTEM_CONSTANT reduce using rule 171 (mod_par_optional -> user .)
    ASAP2_VERSION   reduce using rule 171 (mod_par_optional -> user .)
    A2ML_VERSION    reduce using rule 171 (mod_par_optional -> user .)
    end             reduce using rule 171 (mod_par_optional -> user .)


state 276

    (209) cpu_type -> CPU_TYPE . STRING

    STRING          shift and go to state 447


state 277

    (169) mod_par_optional -> customer .

    ADDR_EPK        reduce using rule 169 (mod_par_optional -> customer .)
    EPK             reduce using rule 169 (mod_par_optional -> customer .)
    SUPPLIER        reduce using rule 169 (mod_par_optional -> customer .)
    CUSTOMER        reduce using rule 169 (mod_par_optional -> customer .)
    CUSTOMER_NO     reduce using rule 169 (mod_par_optional -> customer .)
    USER            reduce using rule 169 (mod_par_optional -> customer .)
    PHONE_NO        reduce using rule 169 (mod_par_optional -> customer .)
    ECU             reduce using rule 169 (mod_par_optional -> customer .)
    CPU_TYPE        reduce using rule 169 (mod_par_optional -> customer .)
    NO_OF_INTERFACES reduce using rule 169 (mod_par_optional -> customer .)
    ECU_CALIBRATION_OFFSET reduce using rule 169 (mod_par_optional -> customer .)
    begin           reduce using rule 169 (mod_par_optional -> customer .)
    SYSTEM_CONSTANT reduce using rule 169 (mod_par_optional -> customer .)
    ASAP2_VERSION   reduce using rule 169 (mod_par_optional -> customer .)
    A2ML_VERSION    reduce using rule 169 (mod_par_optional -> customer .)
    end             reduce using rule 169 (mod_par_optional -> customer .)


state 278

    (179) mod_par_optional -> memory_segment .

    ADDR_EPK        reduce using rule 179 (mod_par_optional -> memory_segment .)
    EPK             reduce using rule 179 (mod_par_optional -> memory_segment .)
    SUPPLIER        reduce using rule 179 (mod_par_optional -> memory_segment .)
    CUSTOMER        reduce using rule 179 (mod_par_optional -> memory_segment .)
    CUSTOMER_NO     reduce using rule 179 (mod_par_optional -> memory_segment .)
    USER            reduce using rule 179 (mod_par_optional -> memory_segment .)
    PHONE_NO        reduce using rule 179 (mod_par_optional -> memory_segment .)
    ECU             reduce using rule 179 (mod_par_optional -> memory_segment .)
    CPU_TYPE        reduce using rule 179 (mod_par_optional -> memory_segment .)
    NO_OF_INTERFACES reduce using rule 179 (mod_par_optional -> memory_segment .)
    ECU_CALIBRATION_OFFSET reduce using rule 179 (mod_par_optional -> memory_segment .)
    begin           reduce using rule 179 (mod_par_optional -> memory_segment .)
    SYSTEM_CONSTANT reduce using rule 179 (mod_par_optional -> memory_segment .)
    ASAP2_VERSION   reduce using rule 179 (mod_par_optional -> memory_segment .)
    A2ML_VERSION    reduce using rule 179 (mod_par_optional -> memory_segment .)
    end             reduce using rule 179 (mod_par_optional -> memory_segment .)


state 279

    (191) phone_no -> PHONE_NO . STRING

    STRING          shift and go to state 448


state 280

    (180) mod_par_optional -> system_constant .

    ADDR_EPK        reduce using rule 180 (mod_par_optional -> system_constant .)
    EPK             reduce using rule 180 (mod_par_optional -> system_constant .)
    SUPPLIER        reduce using rule 180 (mod_par_optional -> system_constant .)
    CUSTOMER        reduce using rule 180 (mod_par_optional -> system_constant .)
    CUSTOMER_NO     reduce using rule 180 (mod_par_optional -> system_constant .)
    USER            reduce using rule 180 (mod_par_optional -> system_constant .)
    PHONE_NO        reduce using rule 180 (mod_par_optional -> system_constant .)
    ECU             reduce using rule 180 (mod_par_optional -> system_constant .)
    CPU_TYPE        reduce using rule 180 (mod_par_optional -> system_constant .)
    NO_OF_INTERFACES reduce using rule 180 (mod_par_optional -> system_constant .)
    ECU_CALIBRATION_OFFSET reduce using rule 180 (mod_par_optional -> system_constant .)
    begin           reduce using rule 180 (mod_par_optional -> system_constant .)
    SYSTEM_CONSTANT reduce using rule 180 (mod_par_optional -> system_constant .)
    ASAP2_VERSION   reduce using rule 180 (mod_par_optional -> system_constant .)
    A2ML_VERSION    reduce using rule 180 (mod_par_optional -> system_constant .)
    end             reduce using rule 180 (mod_par_optional -> system_constant .)


state 281

    (172) mod_par_optional -> phone_no .

    ADDR_EPK        reduce using rule 172 (mod_par_optional -> phone_no .)
    EPK             reduce using rule 172 (mod_par_optional -> phone_no .)
    SUPPLIER        reduce using rule 172 (mod_par_optional -> phone_no .)
    CUSTOMER        reduce using rule 172 (mod_par_optional -> phone_no .)
    CUSTOMER_NO     reduce using rule 172 (mod_par_optional -> phone_no .)
    USER            reduce using rule 172 (mod_par_optional -> phone_no .)
    PHONE_NO        reduce using rule 172 (mod_par_optional -> phone_no .)
    ECU             reduce using rule 172 (mod_par_optional -> phone_no .)
    CPU_TYPE        reduce using rule 172 (mod_par_optional -> phone_no .)
    NO_OF_INTERFACES reduce using rule 172 (mod_par_optional -> phone_no .)
    ECU_CALIBRATION_OFFSET reduce using rule 172 (mod_par_optional -> phone_no .)
    begin           reduce using rule 172 (mod_par_optional -> phone_no .)
    SYSTEM_CONSTANT reduce using rule 172 (mod_par_optional -> phone_no .)
    ASAP2_VERSION   reduce using rule 172 (mod_par_optional -> phone_no .)
    A2ML_VERSION    reduce using rule 172 (mod_par_optional -> phone_no .)
    end             reduce using rule 172 (mod_par_optional -> phone_no .)


state 282

    (174) mod_par_optional -> cpu_type .

    ADDR_EPK        reduce using rule 174 (mod_par_optional -> cpu_type .)
    EPK             reduce using rule 174 (mod_par_optional -> cpu_type .)
    SUPPLIER        reduce using rule 174 (mod_par_optional -> cpu_type .)
    CUSTOMER        reduce using rule 174 (mod_par_optional -> cpu_type .)
    CUSTOMER_NO     reduce using rule 174 (mod_par_optional -> cpu_type .)
    USER            reduce using rule 174 (mod_par_optional -> cpu_type .)
    PHONE_NO        reduce using rule 174 (mod_par_optional -> cpu_type .)
    ECU             reduce using rule 174 (mod_par_optional -> cpu_type .)
    CPU_TYPE        reduce using rule 174 (mod_par_optional -> cpu_type .)
    NO_OF_INTERFACES reduce using rule 174 (mod_par_optional -> cpu_type .)
    ECU_CALIBRATION_OFFSET reduce using rule 174 (mod_par_optional -> cpu_type .)
    begin           reduce using rule 174 (mod_par_optional -> cpu_type .)
    SYSTEM_CONSTANT reduce using rule 174 (mod_par_optional -> cpu_type .)
    ASAP2_VERSION   reduce using rule 174 (mod_par_optional -> cpu_type .)
    A2ML_VERSION    reduce using rule 174 (mod_par_optional -> cpu_type .)
    end             reduce using rule 174 (mod_par_optional -> cpu_type .)


state 283

    (177) mod_par_optional -> calibration_method .

    ADDR_EPK        reduce using rule 177 (mod_par_optional -> calibration_method .)
    EPK             reduce using rule 177 (mod_par_optional -> calibration_method .)
    SUPPLIER        reduce using rule 177 (mod_par_optional -> calibration_method .)
    CUSTOMER        reduce using rule 177 (mod_par_optional -> calibration_method .)
    CUSTOMER_NO     reduce using rule 177 (mod_par_optional -> calibration_method .)
    USER            reduce using rule 177 (mod_par_optional -> calibration_method .)
    PHONE_NO        reduce using rule 177 (mod_par_optional -> calibration_method .)
    ECU             reduce using rule 177 (mod_par_optional -> calibration_method .)
    CPU_TYPE        reduce using rule 177 (mod_par_optional -> calibration_method .)
    NO_OF_INTERFACES reduce using rule 177 (mod_par_optional -> calibration_method .)
    ECU_CALIBRATION_OFFSET reduce using rule 177 (mod_par_optional -> calibration_method .)
    begin           reduce using rule 177 (mod_par_optional -> calibration_method .)
    SYSTEM_CONSTANT reduce using rule 177 (mod_par_optional -> calibration_method .)
    ASAP2_VERSION   reduce using rule 177 (mod_par_optional -> calibration_method .)
    A2ML_VERSION    reduce using rule 177 (mod_par_optional -> calibration_method .)
    end             reduce using rule 177 (mod_par_optional -> calibration_method .)


state 284

    (189) customer_no -> CUSTOMER_NO . STRING

    STRING          shift and go to state 449


state 285

    (139) if_data_module_optional_parameter -> if_data_module_unsupported_element .

    begin           reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)
    TP_BLOB         reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)
    IDENT           reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)
    STRING          reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)
    NUMERIC         reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)
    end             reduce using rule 139 (if_data_module_optional_parameter -> if_data_module_unsupported_element .)


state 286

    (91) generic_parameter -> NUMERIC .

    IDENT           reduce using rule 91 (generic_parameter -> NUMERIC .)
    STRING          reduce using rule 91 (generic_parameter -> NUMERIC .)
    NUMERIC         reduce using rule 91 (generic_parameter -> NUMERIC .)
    begin           reduce using rule 91 (generic_parameter -> NUMERIC .)
    TP_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)
    end             reduce using rule 91 (generic_parameter -> NUMERIC .)
    DP_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)
    BA_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)
    KP_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)
    PA_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)
    QP_BLOB         reduce using rule 91 (generic_parameter -> NUMERIC .)


state 287

    (133) if_data_module_optional_parameter -> source .

    begin           reduce using rule 133 (if_data_module_optional_parameter -> source .)
    TP_BLOB         reduce using rule 133 (if_data_module_optional_parameter -> source .)
    IDENT           reduce using rule 133 (if_data_module_optional_parameter -> source .)
    STRING          reduce using rule 133 (if_data_module_optional_parameter -> source .)
    NUMERIC         reduce using rule 133 (if_data_module_optional_parameter -> source .)
    end             reduce using rule 133 (if_data_module_optional_parameter -> source .)


state 288

    (93) generic_parameter_list -> generic_parameter .
    (94) generic_parameter_list -> generic_parameter . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMERIC resolved as shift
  ! shift/reduce conflict for begin resolved as shift
    TP_BLOB         reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    end             reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    KP_BLOB         reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    DP_BLOB         reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    PA_BLOB         reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    BA_BLOB         reduce using rule 93 (generic_parameter_list -> generic_parameter .)
    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

  ! begin           [ reduce using rule 93 (generic_parameter_list -> generic_parameter .) ]
  ! IDENT           [ reduce using rule 93 (generic_parameter_list -> generic_parameter .) ]
  ! STRING          [ reduce using rule 93 (generic_parameter_list -> generic_parameter .) ]
  ! NUMERIC         [ reduce using rule 93 (generic_parameter_list -> generic_parameter .) ]

    generic_parameter              shift and go to state 288
    generic_parameter_list         shift and go to state 451

state 289

    (143) if_data_module_optional_parameter_list_optional -> empty .

    end             reduce using rule 143 (if_data_module_optional_parameter_list_optional -> empty .)


state 290

    (150) tp_blob -> TP_BLOB .

    IDENT           reduce using rule 150 (tp_blob -> TP_BLOB .)
    STRING          reduce using rule 150 (tp_blob -> TP_BLOB .)
    NUMERIC         reduce using rule 150 (tp_blob -> TP_BLOB .)
    begin           reduce using rule 150 (tp_blob -> TP_BLOB .)


state 291

    (152) source -> begin . SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE
    (145) raster -> begin . RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER
    (146) event_group -> begin . EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP
    (147) seed_key -> begin . SEED_KEY STRING STRING STRING end SEED_KEY
    (148) checksum -> begin . CHECKSUM STRING end CHECKSUM
    (149) checksum -> begin . CHECKSUM IDENT IDENT NUMERIC end CHECKSUM
    (92) generic_parameter -> begin . IDENT generic_parameter_list_optional end IDENT

    SOURCE          shift and go to state 456
    RASTER          shift and go to state 452
    EVENT_GROUP     shift and go to state 457
    SEED_KEY        shift and go to state 455
    CHECKSUM        shift and go to state 454
    IDENT           shift and go to state 453


state 292

    (89) generic_parameter -> IDENT .

    IDENT           reduce using rule 89 (generic_parameter -> IDENT .)
    STRING          reduce using rule 89 (generic_parameter -> IDENT .)
    NUMERIC         reduce using rule 89 (generic_parameter -> IDENT .)
    begin           reduce using rule 89 (generic_parameter -> IDENT .)
    TP_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)
    end             reduce using rule 89 (generic_parameter -> IDENT .)
    DP_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)
    BA_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)
    KP_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)
    PA_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)
    QP_BLOB         reduce using rule 89 (generic_parameter -> IDENT .)


state 293

    (90) generic_parameter -> STRING .

    IDENT           reduce using rule 90 (generic_parameter -> STRING .)
    STRING          reduce using rule 90 (generic_parameter -> STRING .)
    NUMERIC         reduce using rule 90 (generic_parameter -> STRING .)
    begin           reduce using rule 90 (generic_parameter -> STRING .)
    TP_BLOB         reduce using rule 90 (generic_parameter -> STRING .)
    end             reduce using rule 90 (generic_parameter -> STRING .)
    DP_BLOB         reduce using rule 90 (generic_parameter -> STRING .)
    BA_BLOB         reduce using rule 90 (generic_parameter -> STRING .)
    KP_BLOB         reduce using rule 90 (generic_parameter -> STRING .)
    PA_BLOB         reduce using rule 90 (generic_parameter -> STRING .)
    QP_BLOB         reduce using rule 90 (generic_parameter -> STRING .)


state 294

    (132) if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional . end IF_DATA

    end             shift and go to state 458


state 295

    (135) if_data_module_optional_parameter -> event_group .

    begin           reduce using rule 135 (if_data_module_optional_parameter -> event_group .)
    TP_BLOB         reduce using rule 135 (if_data_module_optional_parameter -> event_group .)
    IDENT           reduce using rule 135 (if_data_module_optional_parameter -> event_group .)
    STRING          reduce using rule 135 (if_data_module_optional_parameter -> event_group .)
    NUMERIC         reduce using rule 135 (if_data_module_optional_parameter -> event_group .)
    end             reduce using rule 135 (if_data_module_optional_parameter -> event_group .)


state 296

    (134) if_data_module_optional_parameter -> raster .

    begin           reduce using rule 134 (if_data_module_optional_parameter -> raster .)
    TP_BLOB         reduce using rule 134 (if_data_module_optional_parameter -> raster .)
    IDENT           reduce using rule 134 (if_data_module_optional_parameter -> raster .)
    STRING          reduce using rule 134 (if_data_module_optional_parameter -> raster .)
    NUMERIC         reduce using rule 134 (if_data_module_optional_parameter -> raster .)
    end             reduce using rule 134 (if_data_module_optional_parameter -> raster .)


state 297

    (144) if_data_module_optional_parameter_list_optional -> if_data_module_optional_parameter_list .

    end             reduce using rule 144 (if_data_module_optional_parameter_list_optional -> if_data_module_optional_parameter_list .)


state 298

    (137) if_data_module_optional_parameter -> checksum .

    begin           reduce using rule 137 (if_data_module_optional_parameter -> checksum .)
    TP_BLOB         reduce using rule 137 (if_data_module_optional_parameter -> checksum .)
    IDENT           reduce using rule 137 (if_data_module_optional_parameter -> checksum .)
    STRING          reduce using rule 137 (if_data_module_optional_parameter -> checksum .)
    NUMERIC         reduce using rule 137 (if_data_module_optional_parameter -> checksum .)
    end             reduce using rule 137 (if_data_module_optional_parameter -> checksum .)


state 299

    (136) if_data_module_optional_parameter -> seed_key .

    begin           reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)
    TP_BLOB         reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)
    IDENT           reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)
    STRING          reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)
    NUMERIC         reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)
    end             reduce using rule 136 (if_data_module_optional_parameter -> seed_key .)


state 300

    (138) if_data_module_optional_parameter -> tp_blob . tp_data
    (151) tp_data -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter_list         shift and go to state 460
    generic_parameter              shift and go to state 288
    tp_data                        shift and go to state 459

state 301

    (140) if_data_module_unsupported_element -> generic_parameter_list .

    begin           reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)
    TP_BLOB         reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)
    IDENT           reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)
    STRING          reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)
    NUMERIC         reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)
    end             reduce using rule 140 (if_data_module_unsupported_element -> generic_parameter_list .)


state 302

    (141) if_data_module_optional_parameter_list -> if_data_module_optional_parameter .
    (142) if_data_module_optional_parameter_list -> if_data_module_optional_parameter . if_data_module_optional_parameter_list
    (141) if_data_module_optional_parameter_list -> . if_data_module_optional_parameter
    (142) if_data_module_optional_parameter_list -> . if_data_module_optional_parameter if_data_module_optional_parameter_list
    (133) if_data_module_optional_parameter -> . source
    (134) if_data_module_optional_parameter -> . raster
    (135) if_data_module_optional_parameter -> . event_group
    (136) if_data_module_optional_parameter -> . seed_key
    (137) if_data_module_optional_parameter -> . checksum
    (138) if_data_module_optional_parameter -> . tp_blob tp_data
    (139) if_data_module_optional_parameter -> . if_data_module_unsupported_element
    (152) source -> . begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE
    (145) raster -> . begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER
    (146) event_group -> . begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP
    (147) seed_key -> . begin SEED_KEY STRING STRING STRING end SEED_KEY
    (148) checksum -> . begin CHECKSUM STRING end CHECKSUM
    (149) checksum -> . begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM
    (150) tp_blob -> . TP_BLOB
    (140) if_data_module_unsupported_element -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    end             reduce using rule 141 (if_data_module_optional_parameter_list -> if_data_module_optional_parameter .)
    begin           shift and go to state 291
    TP_BLOB         shift and go to state 290
    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286

    raster                         shift and go to state 296
    checksum                       shift and go to state 298
    if_data_module_optional_parameter_list shift and go to state 461
    seed_key                       shift and go to state 299
    source                         shift and go to state 287
    if_data_module_unsupported_element shift and go to state 285
    tp_blob                        shift and go to state 300
    generic_parameter_list         shift and go to state 301
    generic_parameter              shift and go to state 288
    if_data_module_optional_parameter shift and go to state 302
    event_group                    shift and go to state 295

state 303

    (481) compu_tab -> begin COMPU_TAB IDENT STRING . compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (482) compu_tab_conversion_type -> . TAB_INTP
    (483) compu_tab_conversion_type -> . TAB_NOINTP

    TAB_INTP        shift and go to state 462
    TAB_NOINTP      shift and go to state 464

    compu_tab_conversion_type      shift and go to state 463

state 304

    (192) mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional . end MOD_COMMON

    end             shift and go to state 465


state 305

    (202) mod_common_optional_parameter_list -> mod_common_optional_parameter .
    (203) mod_common_optional_parameter_list -> mod_common_optional_parameter . mod_common_optional_parameter_list
    (202) mod_common_optional_parameter_list -> . mod_common_optional_parameter
    (203) mod_common_optional_parameter_list -> . mod_common_optional_parameter mod_common_optional_parameter_list
    (193) mod_common_optional_parameter -> . s_rec_layout
    (194) mod_common_optional_parameter -> . deposit
    (195) mod_common_optional_parameter -> . byte_order
    (196) mod_common_optional_parameter -> . data_size
    (197) mod_common_optional_parameter -> . alignment_byte
    (198) mod_common_optional_parameter -> . alignment_word
    (199) mod_common_optional_parameter -> . alignment_long
    (200) mod_common_optional_parameter -> . alignment_float32_ieee
    (201) mod_common_optional_parameter -> . alignment_float64_ieee
    (206) s_rec_layout -> . S_REC_LAYOUT IDENT
    (399) deposit -> . DEPOSIT deposit_mode
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (207) data_size -> . DATA_SIZE NUMERIC
    (629) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (630) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (631) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (632) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (633) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC

    end             reduce using rule 202 (mod_common_optional_parameter_list -> mod_common_optional_parameter .)
    S_REC_LAYOUT    shift and go to state 311
    DEPOSIT         shift and go to state 315
    BYTE_ORDER      shift and go to state 306
    DATA_SIZE       shift and go to state 320
    ALIGNMENT_BYTE  shift and go to state 200
    ALIGNMENT_WORD  shift and go to state 198
    ALIGNMENT_LONG  shift and go to state 151
    ALIGNMENT_FLOAT32_IEEE shift and go to state 179
    ALIGNMENT_FLOAT64_IEEE shift and go to state 162

    byte_order                     shift and go to state 312
    alignment_byte                 shift and go to state 307
    alignment_float64_ieee         shift and go to state 313
    alignment_float32_ieee         shift and go to state 319
    alignment_word                 shift and go to state 314
    s_rec_layout                   shift and go to state 308
    alignment_long                 shift and go to state 318
    mod_common_optional_parameter  shift and go to state 305
    mod_common_optional_parameter_list shift and go to state 466
    data_size                      shift and go to state 309
    deposit                        shift and go to state 317

state 306

    (284) byte_order -> BYTE_ORDER . byte_order_type
    (285) byte_order_type -> . MSB_FIRST
    (286) byte_order_type -> . MSB_LAST

    MSB_FIRST       shift and go to state 467
    MSB_LAST        shift and go to state 468

    byte_order_type                shift and go to state 469

state 307

    (197) mod_common_optional_parameter -> alignment_byte .

    S_REC_LAYOUT    reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    DEPOSIT         reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    BYTE_ORDER      reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    DATA_SIZE       reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    ALIGNMENT_BYTE  reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    ALIGNMENT_WORD  reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    ALIGNMENT_LONG  reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)
    end             reduce using rule 197 (mod_common_optional_parameter -> alignment_byte .)


state 308

    (193) mod_common_optional_parameter -> s_rec_layout .

    S_REC_LAYOUT    reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    DEPOSIT         reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    BYTE_ORDER      reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    DATA_SIZE       reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    ALIGNMENT_BYTE  reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    ALIGNMENT_WORD  reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    ALIGNMENT_LONG  reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)
    end             reduce using rule 193 (mod_common_optional_parameter -> s_rec_layout .)


state 309

    (196) mod_common_optional_parameter -> data_size .

    S_REC_LAYOUT    reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    DEPOSIT         reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    BYTE_ORDER      reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    DATA_SIZE       reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    ALIGNMENT_BYTE  reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    ALIGNMENT_WORD  reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    ALIGNMENT_LONG  reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 196 (mod_common_optional_parameter -> data_size .)
    end             reduce using rule 196 (mod_common_optional_parameter -> data_size .)


state 310

    (204) mod_common_optional_parameter_list_optional -> empty .

    end             reduce using rule 204 (mod_common_optional_parameter_list_optional -> empty .)


state 311

    (206) s_rec_layout -> S_REC_LAYOUT . IDENT

    IDENT           shift and go to state 470


state 312

    (195) mod_common_optional_parameter -> byte_order .

    S_REC_LAYOUT    reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    DEPOSIT         reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    BYTE_ORDER      reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    DATA_SIZE       reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    ALIGNMENT_BYTE  reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    ALIGNMENT_WORD  reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    ALIGNMENT_LONG  reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 195 (mod_common_optional_parameter -> byte_order .)
    end             reduce using rule 195 (mod_common_optional_parameter -> byte_order .)


state 313

    (201) mod_common_optional_parameter -> alignment_float64_ieee .

    S_REC_LAYOUT    reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    DEPOSIT         reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    BYTE_ORDER      reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    DATA_SIZE       reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    ALIGNMENT_BYTE  reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    ALIGNMENT_WORD  reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    ALIGNMENT_LONG  reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)
    end             reduce using rule 201 (mod_common_optional_parameter -> alignment_float64_ieee .)


state 314

    (198) mod_common_optional_parameter -> alignment_word .

    S_REC_LAYOUT    reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    DEPOSIT         reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    BYTE_ORDER      reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    DATA_SIZE       reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    ALIGNMENT_BYTE  reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    ALIGNMENT_WORD  reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    ALIGNMENT_LONG  reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)
    end             reduce using rule 198 (mod_common_optional_parameter -> alignment_word .)


state 315

    (399) deposit -> DEPOSIT . deposit_mode
    (400) deposit_mode -> . ABSOLUTE
    (401) deposit_mode -> . DIFFERENCE

    ABSOLUTE        shift and go to state 473
    DIFFERENCE      shift and go to state 472

    deposit_mode                   shift and go to state 471

state 316

    (205) mod_common_optional_parameter_list_optional -> mod_common_optional_parameter_list .

    end             reduce using rule 205 (mod_common_optional_parameter_list_optional -> mod_common_optional_parameter_list .)


state 317

    (194) mod_common_optional_parameter -> deposit .

    S_REC_LAYOUT    reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    DEPOSIT         reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    BYTE_ORDER      reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    DATA_SIZE       reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    ALIGNMENT_BYTE  reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    ALIGNMENT_WORD  reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    ALIGNMENT_LONG  reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 194 (mod_common_optional_parameter -> deposit .)
    end             reduce using rule 194 (mod_common_optional_parameter -> deposit .)


state 318

    (199) mod_common_optional_parameter -> alignment_long .

    S_REC_LAYOUT    reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    DEPOSIT         reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    BYTE_ORDER      reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    DATA_SIZE       reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    ALIGNMENT_BYTE  reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    ALIGNMENT_WORD  reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    ALIGNMENT_LONG  reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)
    end             reduce using rule 199 (mod_common_optional_parameter -> alignment_long .)


state 319

    (200) mod_common_optional_parameter -> alignment_float32_ieee .

    S_REC_LAYOUT    reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    DEPOSIT         reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    BYTE_ORDER      reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    DATA_SIZE       reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    ALIGNMENT_BYTE  reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    ALIGNMENT_WORD  reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    ALIGNMENT_LONG  reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)
    end             reduce using rule 200 (mod_common_optional_parameter -> alignment_float32_ieee .)


state 320

    (207) data_size -> DATA_SIZE . NUMERIC

    NUMERIC         shift and go to state 474


state 321

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING . characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (276) characteristic_type -> . VALUE
    (277) characteristic_type -> . CURVE
    (278) characteristic_type -> . MAP
    (279) characteristic_type -> . CUBOID
    (280) characteristic_type -> . VAL_BLK
    (281) characteristic_type -> . ASCII

    VALUE           shift and go to state 476
    CURVE           shift and go to state 477
    MAP             shift and go to state 475
    CUBOID          shift and go to state 479
    VAL_BLK         shift and go to state 478
    ASCII           shift and go to state 481

    characteristic_type            shift and go to state 480

state 322

    (686) unit -> begin UNIT IDENT STRING . STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 482


state 323

    (680) user_rights_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 680 (user_rights_optional -> READ_ONLY .)
    begin           reduce using rule 680 (user_rights_optional -> READ_ONLY .)
    end             reduce using rule 680 (user_rights_optional -> READ_ONLY .)


state 324

    (685) ref_group -> begin . REF_GROUP ident_list end REF_GROUP

    REF_GROUP       shift and go to state 483


state 325

    (684) user_rights_optional_list_optional -> user_rights_optional_list .

    end             reduce using rule 684 (user_rights_optional_list_optional -> user_rights_optional_list .)


state 326

    (678) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional . end USER_RIGHTS

    end             shift and go to state 484


state 327

    (681) user_rights_optional_list -> user_rights_optional .
    (682) user_rights_optional_list -> user_rights_optional . user_rights_optional_list
    (681) user_rights_optional_list -> . user_rights_optional
    (682) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (679) user_rights_optional -> . ref_group
    (680) user_rights_optional -> . READ_ONLY
    (685) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 681 (user_rights_optional_list -> user_rights_optional .)
    READ_ONLY       shift and go to state 323
    begin           shift and go to state 324

    user_rights_optional           shift and go to state 327
    ref_group                      shift and go to state 328
    user_rights_optional_list      shift and go to state 485

state 328

    (679) user_rights_optional -> ref_group .

    READ_ONLY       reduce using rule 679 (user_rights_optional -> ref_group .)
    begin           reduce using rule 679 (user_rights_optional -> ref_group .)
    end             reduce using rule 679 (user_rights_optional -> ref_group .)


state 329

    (683) user_rights_optional_list_optional -> empty .

    end             reduce using rule 683 (user_rights_optional_list_optional -> empty .)


state 330

    (663) frame -> begin FRAME IDENT STRING . NUMERIC NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 486


state 331

    (111) module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE .

    begin           reduce using rule 111 (module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE .)
    end             reduce using rule 111 (module -> begin MODULE IDENT STRING a2ml optional_module_parameter_list end MODULE .)


state 332

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type . NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    NUMERIC         shift and go to state 487


state 333

    (490) compu_vtab_conversion_type -> TAB_VERB .

    NUMERIC         reduce using rule 490 (compu_vtab_conversion_type -> TAB_VERB .)


state 334

    (527) group -> begin GROUP IDENT STRING group_optional_list_optional . end GROUP

    end             shift and go to state 488


state 335

    (531) group_optional -> ref_measurement .

    ROOT            reduce using rule 531 (group_optional -> ref_measurement .)
    begin           reduce using rule 531 (group_optional -> ref_measurement .)
    end             reduce using rule 531 (group_optional -> ref_measurement .)


state 336

    (528) group_optional -> annotation .

    ROOT            reduce using rule 528 (group_optional -> annotation .)
    begin           reduce using rule 528 (group_optional -> annotation .)
    end             reduce using rule 528 (group_optional -> annotation .)


state 337

    (529) group_optional -> ROOT .

    ROOT            reduce using rule 529 (group_optional -> ROOT .)
    begin           reduce using rule 529 (group_optional -> ROOT .)
    end             reduce using rule 529 (group_optional -> ROOT .)


state 338

    (536) group_optional_list_optional -> empty .

    end             reduce using rule 536 (group_optional_list_optional -> empty .)


state 339

    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (516) ref_characteristic -> begin . REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (538) ref_measurement -> begin . REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT
    (288) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (544) sub_group -> begin . SUB_GROUP ident_list end SUB_GROUP

    ANNOTATION      shift and go to state 493
    REF_CHARACTERISTIC shift and go to state 492
    REF_MEASUREMENT shift and go to state 491
    FUNCTION_LIST   shift and go to state 490
    SUB_GROUP       shift and go to state 489


state 340

    (533) group_optional -> sub_group .

    ROOT            reduce using rule 533 (group_optional -> sub_group .)
    begin           reduce using rule 533 (group_optional -> sub_group .)
    end             reduce using rule 533 (group_optional -> sub_group .)


state 341

    (537) group_optional_list_optional -> group_optional_list .

    end             reduce using rule 537 (group_optional_list_optional -> group_optional_list .)


state 342

    (534) group_optional_list -> group_optional .
    (535) group_optional_list -> group_optional . group_optional_list
    (534) group_optional_list -> . group_optional
    (535) group_optional_list -> . group_optional group_optional_list
    (528) group_optional -> . annotation
    (529) group_optional -> . ROOT
    (530) group_optional -> . ref_characteristic
    (531) group_optional -> . ref_measurement
    (532) group_optional -> . function_list
    (533) group_optional -> . sub_group
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (516) ref_characteristic -> . begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (538) ref_measurement -> . begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (544) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 534 (group_optional_list -> group_optional .)
    ROOT            shift and go to state 337
    begin           shift and go to state 339

    sub_group                      shift and go to state 340
    function_list                  shift and go to state 343
    group_optional                 shift and go to state 342
    ref_measurement                shift and go to state 335
    ref_characteristic             shift and go to state 344
    group_optional_list            shift and go to state 494
    annotation                     shift and go to state 336

state 343

    (532) group_optional -> function_list .

    ROOT            reduce using rule 532 (group_optional -> function_list .)
    begin           reduce using rule 532 (group_optional -> function_list .)
    end             reduce using rule 532 (group_optional -> function_list .)


state 344

    (530) group_optional -> ref_characteristic .

    ROOT            reduce using rule 530 (group_optional -> ref_characteristic .)
    begin           reduce using rule 530 (group_optional -> ref_characteristic .)
    end             reduce using rule 530 (group_optional -> ref_characteristic .)


state 345

    (603) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 495

state 346

    (602) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 496

state 347

    (604) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 497

state 348

    (613) src_addr_z -> SRC_ADDR_Z NUMERIC . src_addr_optional
    (614) src_addr_optional -> . empty
    (615) src_addr_optional -> . datatype
    (698) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 698 (empty -> .)
    IDENTIFICATION  reduce using rule 698 (empty -> .)
    AXIS_PTS_X      reduce using rule 698 (empty -> .)
    AXIS_PTS_Y      reduce using rule 698 (empty -> .)
    AXIS_PTS_Z      reduce using rule 698 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 698 (empty -> .)
    NO_RESCALE_X    reduce using rule 698 (empty -> .)
    NO_RESCALE_Y    reduce using rule 698 (empty -> .)
    NO_RESCALE_Z    reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 698 (empty -> .)
    SRC_ADDR_X      reduce using rule 698 (empty -> .)
    SRC_ADDR_Y      reduce using rule 698 (empty -> .)
    SRC_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_X      reduce using rule 698 (empty -> .)
    RIP_ADDR_Y      reduce using rule 698 (empty -> .)
    RIP_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_W      reduce using rule 698 (empty -> .)
    SHIFT_OP_X      reduce using rule 698 (empty -> .)
    SHIFT_OP_Y      reduce using rule 698 (empty -> .)
    SHIFT_OP_Z      reduce using rule 698 (empty -> .)
    OFFSET_X        reduce using rule 698 (empty -> .)
    OFFSET_Y        reduce using rule 698 (empty -> .)
    OFFSET_Z        reduce using rule 698 (empty -> .)
    DIST_OP_X       reduce using rule 698 (empty -> .)
    DIST_OP_Y       reduce using rule 698 (empty -> .)
    DIST_OP_Z       reduce using rule 698 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 698 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 698 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 698 (empty -> .)
    RESERVED        reduce using rule 698 (empty -> .)
    end             reduce using rule 698 (empty -> .)
    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 498
    empty                          shift and go to state 500
    src_addr_optional              shift and go to state 499

state 349

    (612) src_addr_y -> SRC_ADDR_Y NUMERIC . src_addr_optional
    (614) src_addr_optional -> . empty
    (615) src_addr_optional -> . datatype
    (698) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 698 (empty -> .)
    IDENTIFICATION  reduce using rule 698 (empty -> .)
    AXIS_PTS_X      reduce using rule 698 (empty -> .)
    AXIS_PTS_Y      reduce using rule 698 (empty -> .)
    AXIS_PTS_Z      reduce using rule 698 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 698 (empty -> .)
    NO_RESCALE_X    reduce using rule 698 (empty -> .)
    NO_RESCALE_Y    reduce using rule 698 (empty -> .)
    NO_RESCALE_Z    reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 698 (empty -> .)
    SRC_ADDR_X      reduce using rule 698 (empty -> .)
    SRC_ADDR_Y      reduce using rule 698 (empty -> .)
    SRC_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_X      reduce using rule 698 (empty -> .)
    RIP_ADDR_Y      reduce using rule 698 (empty -> .)
    RIP_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_W      reduce using rule 698 (empty -> .)
    SHIFT_OP_X      reduce using rule 698 (empty -> .)
    SHIFT_OP_Y      reduce using rule 698 (empty -> .)
    SHIFT_OP_Z      reduce using rule 698 (empty -> .)
    OFFSET_X        reduce using rule 698 (empty -> .)
    OFFSET_Y        reduce using rule 698 (empty -> .)
    OFFSET_Z        reduce using rule 698 (empty -> .)
    DIST_OP_X       reduce using rule 698 (empty -> .)
    DIST_OP_Y       reduce using rule 698 (empty -> .)
    DIST_OP_Z       reduce using rule 698 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 698 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 698 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 698 (empty -> .)
    RESERVED        reduce using rule 698 (empty -> .)
    end             reduce using rule 698 (empty -> .)
    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 498
    empty                          shift and go to state 500
    src_addr_optional              shift and go to state 501

state 350

    (611) src_addr_x -> SRC_ADDR_X NUMERIC . src_addr_optional
    (614) src_addr_optional -> . empty
    (615) src_addr_optional -> . datatype
    (698) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 698 (empty -> .)
    IDENTIFICATION  reduce using rule 698 (empty -> .)
    AXIS_PTS_X      reduce using rule 698 (empty -> .)
    AXIS_PTS_Y      reduce using rule 698 (empty -> .)
    AXIS_PTS_Z      reduce using rule 698 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 698 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 698 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 698 (empty -> .)
    NO_RESCALE_X    reduce using rule 698 (empty -> .)
    NO_RESCALE_Y    reduce using rule 698 (empty -> .)
    NO_RESCALE_Z    reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 698 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 698 (empty -> .)
    SRC_ADDR_X      reduce using rule 698 (empty -> .)
    SRC_ADDR_Y      reduce using rule 698 (empty -> .)
    SRC_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_X      reduce using rule 698 (empty -> .)
    RIP_ADDR_Y      reduce using rule 698 (empty -> .)
    RIP_ADDR_Z      reduce using rule 698 (empty -> .)
    RIP_ADDR_W      reduce using rule 698 (empty -> .)
    SHIFT_OP_X      reduce using rule 698 (empty -> .)
    SHIFT_OP_Y      reduce using rule 698 (empty -> .)
    SHIFT_OP_Z      reduce using rule 698 (empty -> .)
    OFFSET_X        reduce using rule 698 (empty -> .)
    OFFSET_Y        reduce using rule 698 (empty -> .)
    OFFSET_Z        reduce using rule 698 (empty -> .)
    DIST_OP_X       reduce using rule 698 (empty -> .)
    DIST_OP_Y       reduce using rule 698 (empty -> .)
    DIST_OP_Z       reduce using rule 698 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 698 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 698 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 698 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 698 (empty -> .)
    RESERVED        reduce using rule 698 (empty -> .)
    end             reduce using rule 698 (empty -> .)
    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 498
    empty                          shift and go to state 500
    src_addr_optional              shift and go to state 502

state 351

    (598) axis_pts_z -> AXIS_PTS_Z NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 503

state 352

    (596) axis_pts_x -> AXIS_PTS_X NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 504

state 353

    (597) axis_pts_y -> AXIS_PTS_Y NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 505

state 354

    (631) alignment_long -> ALIGNMENT_LONG NUMERIC .

    FNC_VALUES      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    IDENTIFICATION  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_X      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Y      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Z      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_X    reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Y    reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Z    reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_X      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Y      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Z      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_X      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Y      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Z      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_W      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_X      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Y      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Z      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_X        reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Y        reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Z        reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_X       reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Y       reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Z       reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RESERVED        reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    end             reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    S_REC_LAYOUT    reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DEPOSIT         reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    BYTE_ORDER      reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DATA_SIZE       reduce using rule 631 (alignment_long -> ALIGNMENT_LONG NUMERIC .)


state 355

    (621) shift_op_y -> SHIFT_OP_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 506

state 356

    (620) shift_op_x -> SHIFT_OP_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 507

state 357

    (622) shift_op_z -> SHIFT_OP_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 508

state 358

    (633) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .

    S_REC_LAYOUT    reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DEPOSIT         reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    BYTE_ORDER      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DATA_SIZE       reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    end             reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FNC_VALUES      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RESERVED        reduce using rule 633 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)


state 359

    (609) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .

    FNC_VALUES      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    IDENTIFICATION  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_X      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Y      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Z      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_X    reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Y    reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Z    reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_X      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Y      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Z      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_X      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Y      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Z      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_W      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_X      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Y      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Z      reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_X        reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Y        reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Z        reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_X       reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Y       reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Z       reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RESERVED        reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    end             reduce using rule 609 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)


state 360

    (608) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .

    FNC_VALUES      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    IDENTIFICATION  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_X      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Y      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Z      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_X    reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Y    reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Z    reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_X      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Y      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Z      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_X      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Y      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Z      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_W      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_X      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Y      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Z      reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_X        reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Y        reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Z        reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_X       reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Y       reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Z       reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RESERVED        reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    end             reduce using rule 608 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)


state 361

    (610) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .

    FNC_VALUES      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    IDENTIFICATION  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_X      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Y      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Z      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_X    reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Y    reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Z    reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_X      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Y      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Z      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_X      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Y      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Z      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_W      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_X      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Y      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Z      reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_X        reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Y        reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Z        reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_X       reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Y       reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Z       reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RESERVED        reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    end             reduce using rule 610 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)


state 362

    (607) no_rescale_z -> NO_RESCALE_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 509

state 363

    (605) no_rescale_x -> NO_RESCALE_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 510

state 364

    (606) no_rescale_y -> NO_RESCALE_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 511

state 365

    (628) dist_op_z -> DIST_OP_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 512

state 366

    (626) dist_op_x -> DIST_OP_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 513

state 367

    (627) dist_op_y -> DIST_OP_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 514

state 368

    (632) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .

    S_REC_LAYOUT    reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DEPOSIT         reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    BYTE_ORDER      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DATA_SIZE       reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    end             reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FNC_VALUES      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RESERVED        reduce using rule 632 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)


state 369

    (586) record_layout_optional_list -> record_layout_optional record_layout_optional_list .

    end             reduce using rule 586 (record_layout_optional_list -> record_layout_optional record_layout_optional_list .)


state 370

    (545) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end . RECORD_LAYOUT

    RECORD_LAYOUT   shift and go to state 515


state 371

    (630) alignment_word -> ALIGNMENT_WORD NUMERIC .

    S_REC_LAYOUT    reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DEPOSIT         reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    BYTE_ORDER      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DATA_SIZE       reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    end             reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FNC_VALUES      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    IDENTIFICATION  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_X      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Y      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Z      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_X    reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Y    reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Z    reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_X      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Y      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Z      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_X      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Y      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Z      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_W      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_X      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Y      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Z      reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_X        reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Y        reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Z        reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_X       reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Y       reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Z       reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RESERVED        reduce using rule 630 (alignment_word -> ALIGNMENT_WORD NUMERIC .)


state 372

    (595) identification -> IDENTIFICATION NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 516

state 373

    (629) alignment_byte -> ALIGNMENT_BYTE NUMERIC .

    FNC_VALUES      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    IDENTIFICATION  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_X      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_X    reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_X      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_X      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_W      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_X      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_X        reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Y        reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Z        reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_X       reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Y       reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Z       reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RESERVED        reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    end             reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    S_REC_LAYOUT    reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DEPOSIT         reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    BYTE_ORDER      reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DATA_SIZE       reduce using rule 629 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)


state 374

    (623) offset_x -> OFFSET_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 517

state 375

    (624) offset_y -> OFFSET_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 518

state 376

    (625) offset_z -> OFFSET_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 519

state 377

    (601) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 520

state 378

    (599) axis_rescale_x -> AXIS_RESCALE_X NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 521

state 379

    (600) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 522

state 380

    (619) rip_addr_w -> RIP_ADDR_W NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 523

state 381

    (618) rip_addr_z -> RIP_ADDR_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 524

state 382

    (616) rip_addr_x -> RIP_ADDR_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 525

state 383

    (617) rip_addr_y -> RIP_ADDR_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 526

state 384

    (662) reserved -> RESERVED NUMERIC . datasize
    (75) datasize -> . BYTE
    (76) datasize -> . WORD
    (77) datasize -> . LONG

    BYTE            shift and go to state 529
    WORD            shift and go to state 527
    LONG            shift and go to state 528

    datasize                       shift and go to state 530

state 385

    (589) fnc_values -> FNC_VALUES NUMERIC . datatype fnc_values_index_mode addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 417
    SBYTE           shift and go to state 416
    UWORD           shift and go to state 413
    SWORD           shift and go to state 414
    ULONG           shift and go to state 407
    SLONG           shift and go to state 415
    A_UINT64        shift and go to state 411
    A_INT64         shift and go to state 409
    FLOAT32_IEEE    shift and go to state 410
    FLOAT64_IEEE    shift and go to state 412

    datatype                       shift and go to state 531

state 386

    (459) compu_method_conversion_type -> IDENTICAL .

    STRING          reduce using rule 459 (compu_method_conversion_type -> IDENTICAL .)


state 387

    (458) compu_method_conversion_type -> FORM .

    STRING          reduce using rule 458 (compu_method_conversion_type -> FORM .)


state 388

    (460) compu_method_conversion_type -> LINEAR .

    STRING          reduce using rule 460 (compu_method_conversion_type -> LINEAR .)


state 389

    (457) compu_method_conversion_type -> RAT_FUNC .

    STRING          reduce using rule 457 (compu_method_conversion_type -> RAT_FUNC .)


state 390

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type . STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 532


state 391

    (454) compu_method_conversion_type -> TAB_INTP .

    STRING          reduce using rule 454 (compu_method_conversion_type -> TAB_INTP .)


state 392

    (455) compu_method_conversion_type -> TAB_NOINTP .

    STRING          reduce using rule 455 (compu_method_conversion_type -> TAB_NOINTP .)


state 393

    (456) compu_method_conversion_type -> TAB_VERB .

    STRING          reduce using rule 456 (compu_method_conversion_type -> TAB_VERB .)


state 394

    (114) a2ml -> begin A2ML a2ml_declaration_list end A2ML .

    begin           reduce using rule 114 (a2ml -> begin A2ML a2ml_declaration_list end A2ML .)
    end             reduce using rule 114 (a2ml -> begin A2ML a2ml_declaration_list end A2ML .)


state 395

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN . a2ml_struct_member_list_optional CURLY_CLOSE
    (29) a2ml_struct_member_list_optional -> . empty
    (30) a2ml_struct_member_list_optional -> . a2ml_struct_member_list
    (698) empty -> .
    (31) a2ml_struct_member_list -> . a2ml_struct_member
    (32) a2ml_struct_member_list -> . a2ml_struct_member a2ml_struct_member_list
    (33) a2ml_struct_member -> . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    CURLY_CLOSE     reduce using rule 698 (empty -> .)
    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_struct_member_list_optional shift and go to state 533
    a2ml_struct_member             shift and go to state 534
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_member                    shift and go to state 535
    a2ml_struct_member_list        shift and go to state 538
    empty                          shift and go to state 536
    a2ml_type_name                 shift and go to state 537

state 396

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN . a2ml_taggedunion_member_list CURLY_CLOSE
    (55) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member
    (56) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member a2ml_taggedunion_member_list
    (57) a2ml_taggedunion_member -> . a2ml_tag a2ml_member SEMICOLON
    (58) a2ml_taggedunion_member -> . a2ml_block_definition SEMICOLON
    (59) a2ml_tag -> . STRING
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name

    STRING          shift and go to state 239
    block           shift and go to state 112

    a2ml_block_definition          shift and go to state 542
    a2ml_taggedunion_member_list   shift and go to state 539
    a2ml_taggedunion_member        shift and go to state 540
    a2ml_tag                       shift and go to state 541

state 397

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN . a2ml_enumerator_list CURLY_CLOSE
    (23) a2ml_enumerator_list -> . a2ml_enumerator
    (24) a2ml_enumerator_list -> . a2ml_enumerator COMMA a2ml_enumerator_list
    (25) a2ml_enumerator -> . a2ml_keyword EQUAL a2ml_constant
    (26) a2ml_enumerator -> . a2ml_keyword
    (63) a2ml_keyword -> . STRING

    STRING          shift and go to state 544

    a2ml_keyword                   shift and go to state 543
    a2ml_enumerator                shift and go to state 545
    a2ml_enumerator_list           shift and go to state 546

state 398

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN . a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (43) a2ml_taggedstruct_member_list_optional -> . empty
    (44) a2ml_taggedstruct_member_list_optional -> . a2ml_taggedstruct_member_list
    (698) empty -> .
    (45) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member
    (46) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member a2ml_taggedstruct_member_list
    (47) a2ml_taggedstruct_member -> . a2ml_taggedstruct_definition SEMICOLON
    (48) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (49) a2ml_taggedstruct_member -> . a2ml_block_definition SEMICOLON
    (50) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    CURLY_CLOSE     reduce using rule 698 (empty -> .)
    PARENTHESE_OPEN shift and go to state 548
    block           shift and go to state 112
    STRING          shift and go to state 239

    a2ml_taggedstruct_member       shift and go to state 549
    a2ml_block_definition          shift and go to state 547
    a2ml_taggedstruct_member_list  shift and go to state 552
    a2ml_taggedstruct_definition   shift and go to state 550
    a2ml_tag                       shift and go to state 551
    empty                          shift and go to state 553
    a2ml_taggedstruct_member_list_optional shift and go to state 554

state 399

    (20) a2ml_block_definition -> block a2ml_tag a2ml_type_name .

    SEMICOLON       reduce using rule 20 (a2ml_block_definition -> block a2ml_tag a2ml_type_name .)
    PARENTHESE_CLOSE reduce using rule 20 (a2ml_block_definition -> block a2ml_tag a2ml_type_name .)


state 400

    (634) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .

    begin           reduce using rule 634 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)
    end             reduce using rule 634 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)


state 401

    (640) var_characteristic -> begin VAR_CHARACTERISTIC IDENT . ident_list var_characteristic_optional end VAR_CHARACTERISTIC
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 556

state 402

    (648) ident_ident_value -> IDENT . IDENT

    IDENT           shift and go to state 557


state 403

    (646) ident_ident_value_list -> ident_ident_value .
    (647) ident_ident_value_list -> ident_ident_value . ident_ident_value_list
    (646) ident_ident_value_list -> . ident_ident_value
    (647) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (648) ident_ident_value -> . IDENT IDENT

    end             reduce using rule 646 (ident_ident_value_list -> ident_ident_value .)
    IDENT           shift and go to state 402

    ident_ident_value              shift and go to state 403
    ident_ident_value_list         shift and go to state 558

state 404

    (645) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list . end VAR_FORBIDDEN_COMB

    end             shift and go to state 559


state 405

    (649) var_criterion -> begin VAR_CRITERION IDENT . STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    STRING          shift and go to state 560


state 406

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC . IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 561


state 407

    (69) datatype -> ULONG .

    FNC_VALUES      reduce using rule 69 (datatype -> ULONG .)
    IDENTIFICATION  reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_X      reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_Y      reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_Z      reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_X  reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_Y  reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_Z  reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_X   reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_Y   reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_Z   reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_X    reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_Y    reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_Z    reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_X      reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_Y      reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_Z      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_X      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_Y      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_Z      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_W      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_X      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_Y      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_Z      reduce using rule 69 (datatype -> ULONG .)
    OFFSET_X        reduce using rule 69 (datatype -> ULONG .)
    OFFSET_Y        reduce using rule 69 (datatype -> ULONG .)
    OFFSET_Z        reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_X       reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_Y       reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_Z       reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_BYTE  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_WORD  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_LONG  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 69 (datatype -> ULONG .)
    RESERVED        reduce using rule 69 (datatype -> ULONG .)
    end             reduce using rule 69 (datatype -> ULONG .)
    NUMERIC         reduce using rule 69 (datatype -> ULONG .)
    INDEX_INCR      reduce using rule 69 (datatype -> ULONG .)
    INDEX_DECR      reduce using rule 69 (datatype -> ULONG .)
    COLUMN_DIR      reduce using rule 69 (datatype -> ULONG .)
    ROW_DIR         reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_WITH_X reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_WITH_Y reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_CURVES reduce using rule 69 (datatype -> ULONG .)
    IDENT           reduce using rule 69 (datatype -> ULONG .)


state 408

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype . IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 562


state 409

    (72) datatype -> A_INT64 .

    FNC_VALUES      reduce using rule 72 (datatype -> A_INT64 .)
    IDENTIFICATION  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_X      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_Y      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_Z      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_X  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_Y  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_Z  reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_X   reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Y   reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Z   reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_X    reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_Y    reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_Z    reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_X      reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_Y      reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_Z      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_X      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_Y      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_Z      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_W      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_X      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_Y      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_Z      reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_X        reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_Y        reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_Z        reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_X       reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_Y       reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_Z       reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_BYTE  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_WORD  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_LONG  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 72 (datatype -> A_INT64 .)
    RESERVED        reduce using rule 72 (datatype -> A_INT64 .)
    end             reduce using rule 72 (datatype -> A_INT64 .)
    NUMERIC         reduce using rule 72 (datatype -> A_INT64 .)
    INDEX_INCR      reduce using rule 72 (datatype -> A_INT64 .)
    INDEX_DECR      reduce using rule 72 (datatype -> A_INT64 .)
    COLUMN_DIR      reduce using rule 72 (datatype -> A_INT64 .)
    ROW_DIR         reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_WITH_X reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_WITH_Y reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_CURVES reduce using rule 72 (datatype -> A_INT64 .)
    IDENT           reduce using rule 72 (datatype -> A_INT64 .)


state 410

    (73) datatype -> FLOAT32_IEEE .

    FNC_VALUES      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    IDENTIFICATION  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_X  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_X    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Y    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Z    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_W      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_X        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_Y        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_Z        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_X       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Y       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Z       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_WORD  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_LONG  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RESERVED        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    end             reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NUMERIC         reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    INDEX_INCR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    INDEX_DECR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    COLUMN_DIR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ROW_DIR         reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_X reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_CURVES reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    IDENT           reduce using rule 73 (datatype -> FLOAT32_IEEE .)


state 411

    (71) datatype -> A_UINT64 .

    FNC_VALUES      reduce using rule 71 (datatype -> A_UINT64 .)
    IDENTIFICATION  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_X      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_X  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Y  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Z  reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_X   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Y   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Z   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_X    reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_Y    reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_Z    reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_X      reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_X      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_W      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_X      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_X        reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_Y        reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_Z        reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_X       reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_Y       reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_Z       reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_BYTE  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_WORD  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_LONG  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 71 (datatype -> A_UINT64 .)
    RESERVED        reduce using rule 71 (datatype -> A_UINT64 .)
    end             reduce using rule 71 (datatype -> A_UINT64 .)
    NUMERIC         reduce using rule 71 (datatype -> A_UINT64 .)
    INDEX_INCR      reduce using rule 71 (datatype -> A_UINT64 .)
    INDEX_DECR      reduce using rule 71 (datatype -> A_UINT64 .)
    COLUMN_DIR      reduce using rule 71 (datatype -> A_UINT64 .)
    ROW_DIR         reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_X reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_Y reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_CURVES reduce using rule 71 (datatype -> A_UINT64 .)
    IDENT           reduce using rule 71 (datatype -> A_UINT64 .)


state 412

    (74) datatype -> FLOAT64_IEEE .

    FNC_VALUES      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    IDENTIFICATION  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_X  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_X    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Y    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Z    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_W      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_X        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_Y        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_Z        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_X       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Y       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Z       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_WORD  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_LONG  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RESERVED        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    end             reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NUMERIC         reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    INDEX_INCR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    INDEX_DECR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    COLUMN_DIR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ROW_DIR         reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_X reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_CURVES reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    IDENT           reduce using rule 74 (datatype -> FLOAT64_IEEE .)


state 413

    (67) datatype -> UWORD .

    FNC_VALUES      reduce using rule 67 (datatype -> UWORD .)
    IDENTIFICATION  reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_X      reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_Y      reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_Z      reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_X  reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_Y  reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_Z  reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_X   reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_Y   reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_Z   reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_X    reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_Y    reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_Z    reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_X      reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_Y      reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_Z      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_X      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_Y      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_Z      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_W      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_X      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_Y      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_Z      reduce using rule 67 (datatype -> UWORD .)
    OFFSET_X        reduce using rule 67 (datatype -> UWORD .)
    OFFSET_Y        reduce using rule 67 (datatype -> UWORD .)
    OFFSET_Z        reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_X       reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_Y       reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_Z       reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_BYTE  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_WORD  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_LONG  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 67 (datatype -> UWORD .)
    RESERVED        reduce using rule 67 (datatype -> UWORD .)
    end             reduce using rule 67 (datatype -> UWORD .)
    NUMERIC         reduce using rule 67 (datatype -> UWORD .)
    INDEX_INCR      reduce using rule 67 (datatype -> UWORD .)
    INDEX_DECR      reduce using rule 67 (datatype -> UWORD .)
    COLUMN_DIR      reduce using rule 67 (datatype -> UWORD .)
    ROW_DIR         reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_WITH_X reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_WITH_Y reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_CURVES reduce using rule 67 (datatype -> UWORD .)
    IDENT           reduce using rule 67 (datatype -> UWORD .)


state 414

    (68) datatype -> SWORD .

    FNC_VALUES      reduce using rule 68 (datatype -> SWORD .)
    IDENTIFICATION  reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_X      reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_Y      reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_Z      reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_X  reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_Y  reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_Z  reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_X   reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_Y   reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_Z   reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_X    reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_Y    reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_Z    reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_X      reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_Y      reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_Z      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_X      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_Y      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_Z      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_W      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_X      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_Y      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_Z      reduce using rule 68 (datatype -> SWORD .)
    OFFSET_X        reduce using rule 68 (datatype -> SWORD .)
    OFFSET_Y        reduce using rule 68 (datatype -> SWORD .)
    OFFSET_Z        reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_X       reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_Y       reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_Z       reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_BYTE  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_WORD  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_LONG  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 68 (datatype -> SWORD .)
    RESERVED        reduce using rule 68 (datatype -> SWORD .)
    end             reduce using rule 68 (datatype -> SWORD .)
    NUMERIC         reduce using rule 68 (datatype -> SWORD .)
    INDEX_INCR      reduce using rule 68 (datatype -> SWORD .)
    INDEX_DECR      reduce using rule 68 (datatype -> SWORD .)
    COLUMN_DIR      reduce using rule 68 (datatype -> SWORD .)
    ROW_DIR         reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_WITH_X reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_WITH_Y reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_CURVES reduce using rule 68 (datatype -> SWORD .)
    IDENT           reduce using rule 68 (datatype -> SWORD .)


state 415

    (70) datatype -> SLONG .

    FNC_VALUES      reduce using rule 70 (datatype -> SLONG .)
    IDENTIFICATION  reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_X      reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_Y      reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_Z      reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_X  reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_Y  reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_Z  reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_X   reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_Y   reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_Z   reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_X    reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_Y    reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_Z    reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_X      reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_Y      reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_Z      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_X      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_Y      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_Z      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_W      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_X      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_Y      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_Z      reduce using rule 70 (datatype -> SLONG .)
    OFFSET_X        reduce using rule 70 (datatype -> SLONG .)
    OFFSET_Y        reduce using rule 70 (datatype -> SLONG .)
    OFFSET_Z        reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_X       reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_Y       reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_Z       reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_BYTE  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_WORD  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_LONG  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 70 (datatype -> SLONG .)
    RESERVED        reduce using rule 70 (datatype -> SLONG .)
    end             reduce using rule 70 (datatype -> SLONG .)
    NUMERIC         reduce using rule 70 (datatype -> SLONG .)
    INDEX_INCR      reduce using rule 70 (datatype -> SLONG .)
    INDEX_DECR      reduce using rule 70 (datatype -> SLONG .)
    COLUMN_DIR      reduce using rule 70 (datatype -> SLONG .)
    ROW_DIR         reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_WITH_X reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_WITH_Y reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_CURVES reduce using rule 70 (datatype -> SLONG .)
    IDENT           reduce using rule 70 (datatype -> SLONG .)


state 416

    (66) datatype -> SBYTE .

    FNC_VALUES      reduce using rule 66 (datatype -> SBYTE .)
    IDENTIFICATION  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_X      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_Y      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_Z      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_X  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_Y  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_Z  reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_X   reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_X    reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_Y    reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_Z    reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_X      reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_Y      reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_Z      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_X      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_Y      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_Z      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_W      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_X      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_Y      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_Z      reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_X        reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_Y        reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_Z        reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_X       reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_Y       reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_Z       reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_BYTE  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_WORD  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_LONG  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 66 (datatype -> SBYTE .)
    RESERVED        reduce using rule 66 (datatype -> SBYTE .)
    end             reduce using rule 66 (datatype -> SBYTE .)
    NUMERIC         reduce using rule 66 (datatype -> SBYTE .)
    INDEX_INCR      reduce using rule 66 (datatype -> SBYTE .)
    INDEX_DECR      reduce using rule 66 (datatype -> SBYTE .)
    COLUMN_DIR      reduce using rule 66 (datatype -> SBYTE .)
    ROW_DIR         reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_WITH_X reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_WITH_Y reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_CURVES reduce using rule 66 (datatype -> SBYTE .)
    IDENT           reduce using rule 66 (datatype -> SBYTE .)


state 417

    (65) datatype -> UBYTE .

    FNC_VALUES      reduce using rule 65 (datatype -> UBYTE .)
    IDENTIFICATION  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_X      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_Y      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_Z      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_X  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_Y  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_Z  reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_X   reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_X    reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_Y    reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_Z    reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_X      reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_Y      reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_Z      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_X      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_Y      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_Z      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_W      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_X      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_Y      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_Z      reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_X        reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_Y        reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_Z        reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_X       reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_Y       reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_Z       reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_BYTE  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_WORD  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_LONG  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 65 (datatype -> UBYTE .)
    RESERVED        reduce using rule 65 (datatype -> UBYTE .)
    end             reduce using rule 65 (datatype -> UBYTE .)
    NUMERIC         reduce using rule 65 (datatype -> UBYTE .)
    INDEX_INCR      reduce using rule 65 (datatype -> UBYTE .)
    INDEX_DECR      reduce using rule 65 (datatype -> UBYTE .)
    COLUMN_DIR      reduce using rule 65 (datatype -> UBYTE .)
    ROW_DIR         reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_WITH_X reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_WITH_Y reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_CURVES reduce using rule 65 (datatype -> UBYTE .)
    IDENT           reduce using rule 65 (datatype -> UBYTE .)


state 418

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC . number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (497) number_number_string_value_list -> . number_number_string_value
    (498) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (499) number_number_string_value -> . NUMERIC NUMERIC STRING

    NUMERIC         shift and go to state 565

    number_number_string_value_list shift and go to state 564
    number_number_string_value     shift and go to state 563

state 419

    (511) function_optional_list -> function_optional .
    (512) function_optional_list -> function_optional . function_optional_list
    (511) function_optional_list -> . function_optional
    (512) function_optional_list -> . function_optional function_optional_list
    (503) function_optional -> . annotation
    (504) function_optional -> . def_characteristic
    (505) function_optional -> . ref_characteristic
    (506) function_optional -> . in_measurement
    (507) function_optional -> . out_measurement
    (508) function_optional -> . loc_measurement
    (509) function_optional -> . sub_function
    (510) function_optional -> . function_version
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (515) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (516) ref_characteristic -> . begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (522) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (523) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (524) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (525) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (526) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 511 (function_optional_list -> function_optional .)
    begin           shift and go to state 425
    FUNCTION_VERSION shift and go to state 420

    function_optional              shift and go to state 419
    out_measurement                shift and go to state 430
    loc_measurement                shift and go to state 421
    def_characteristic             shift and go to state 426
    function_version               shift and go to state 432
    sub_function                   shift and go to state 427
    in_measurement                 shift and go to state 423
    ref_characteristic             shift and go to state 431
    function_optional_list         shift and go to state 566
    annotation                     shift and go to state 422

state 420

    (526) function_version -> FUNCTION_VERSION . STRING

    STRING          shift and go to state 567


state 421

    (508) function_optional -> loc_measurement .

    begin           reduce using rule 508 (function_optional -> loc_measurement .)
    FUNCTION_VERSION reduce using rule 508 (function_optional -> loc_measurement .)
    end             reduce using rule 508 (function_optional -> loc_measurement .)


state 422

    (503) function_optional -> annotation .

    begin           reduce using rule 503 (function_optional -> annotation .)
    FUNCTION_VERSION reduce using rule 503 (function_optional -> annotation .)
    end             reduce using rule 503 (function_optional -> annotation .)


state 423

    (506) function_optional -> in_measurement .

    begin           reduce using rule 506 (function_optional -> in_measurement .)
    FUNCTION_VERSION reduce using rule 506 (function_optional -> in_measurement .)
    end             reduce using rule 506 (function_optional -> in_measurement .)


state 424

    (513) function_optional_list_optional -> empty .

    end             reduce using rule 513 (function_optional_list_optional -> empty .)


state 425

    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (515) def_characteristic -> begin . DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (516) ref_characteristic -> begin . REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (522) in_measurement -> begin . IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (523) out_measurement -> begin . OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (524) loc_measurement -> begin . LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (525) sub_function -> begin . SUB_FUNCTION ident_list end SUB_FUNCTION

    ANNOTATION      shift and go to state 493
    DEF_CHARACTERISTIC shift and go to state 569
    REF_CHARACTERISTIC shift and go to state 492
    IN_MEASUREMENT  shift and go to state 571
    OUT_MEASUREMENT shift and go to state 572
    LOC_MEASUREMENT shift and go to state 568
    SUB_FUNCTION    shift and go to state 570


state 426

    (504) function_optional -> def_characteristic .

    begin           reduce using rule 504 (function_optional -> def_characteristic .)
    FUNCTION_VERSION reduce using rule 504 (function_optional -> def_characteristic .)
    end             reduce using rule 504 (function_optional -> def_characteristic .)


state 427

    (509) function_optional -> sub_function .

    begin           reduce using rule 509 (function_optional -> sub_function .)
    FUNCTION_VERSION reduce using rule 509 (function_optional -> sub_function .)
    end             reduce using rule 509 (function_optional -> sub_function .)


state 428

    (514) function_optional_list_optional -> function_optional_list .

    end             reduce using rule 514 (function_optional_list_optional -> function_optional_list .)


state 429

    (502) function -> begin FUNCTION IDENT STRING function_optional_list_optional . end FUNCTION

    end             shift and go to state 573


state 430

    (507) function_optional -> out_measurement .

    begin           reduce using rule 507 (function_optional -> out_measurement .)
    FUNCTION_VERSION reduce using rule 507 (function_optional -> out_measurement .)
    end             reduce using rule 507 (function_optional -> out_measurement .)


state 431

    (505) function_optional -> ref_characteristic .

    begin           reduce using rule 505 (function_optional -> ref_characteristic .)
    FUNCTION_VERSION reduce using rule 505 (function_optional -> ref_characteristic .)
    end             reduce using rule 505 (function_optional -> ref_characteristic .)


state 432

    (510) function_optional -> function_version .

    begin           reduce using rule 510 (function_optional -> function_version .)
    FUNCTION_VERSION reduce using rule 510 (function_optional -> function_version .)
    end             reduce using rule 510 (function_optional -> function_version .)


state 433

    (186) epk -> EPK STRING .

    ADDR_EPK        reduce using rule 186 (epk -> EPK STRING .)
    EPK             reduce using rule 186 (epk -> EPK STRING .)
    SUPPLIER        reduce using rule 186 (epk -> EPK STRING .)
    CUSTOMER        reduce using rule 186 (epk -> EPK STRING .)
    CUSTOMER_NO     reduce using rule 186 (epk -> EPK STRING .)
    USER            reduce using rule 186 (epk -> EPK STRING .)
    PHONE_NO        reduce using rule 186 (epk -> EPK STRING .)
    ECU             reduce using rule 186 (epk -> EPK STRING .)
    CPU_TYPE        reduce using rule 186 (epk -> EPK STRING .)
    NO_OF_INTERFACES reduce using rule 186 (epk -> EPK STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 186 (epk -> EPK STRING .)
    begin           reduce using rule 186 (epk -> EPK STRING .)
    SYSTEM_CONSTANT reduce using rule 186 (epk -> EPK STRING .)
    ASAP2_VERSION   reduce using rule 186 (epk -> EPK STRING .)
    A2ML_VERSION    reduce using rule 186 (epk -> EPK STRING .)
    end             reduce using rule 186 (epk -> EPK STRING .)


state 434

    (188) customer -> CUSTOMER STRING .

    ADDR_EPK        reduce using rule 188 (customer -> CUSTOMER STRING .)
    EPK             reduce using rule 188 (customer -> CUSTOMER STRING .)
    SUPPLIER        reduce using rule 188 (customer -> CUSTOMER STRING .)
    CUSTOMER        reduce using rule 188 (customer -> CUSTOMER STRING .)
    CUSTOMER_NO     reduce using rule 188 (customer -> CUSTOMER STRING .)
    USER            reduce using rule 188 (customer -> CUSTOMER STRING .)
    PHONE_NO        reduce using rule 188 (customer -> CUSTOMER STRING .)
    ECU             reduce using rule 188 (customer -> CUSTOMER STRING .)
    CPU_TYPE        reduce using rule 188 (customer -> CUSTOMER STRING .)
    NO_OF_INTERFACES reduce using rule 188 (customer -> CUSTOMER STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 188 (customer -> CUSTOMER STRING .)
    begin           reduce using rule 188 (customer -> CUSTOMER STRING .)
    SYSTEM_CONSTANT reduce using rule 188 (customer -> CUSTOMER STRING .)
    ASAP2_VERSION   reduce using rule 188 (customer -> CUSTOMER STRING .)
    A2ML_VERSION    reduce using rule 188 (customer -> CUSTOMER STRING .)
    end             reduce using rule 188 (customer -> CUSTOMER STRING .)


state 435

    (208) ecu -> ECU STRING .

    ADDR_EPK        reduce using rule 208 (ecu -> ECU STRING .)
    EPK             reduce using rule 208 (ecu -> ECU STRING .)
    SUPPLIER        reduce using rule 208 (ecu -> ECU STRING .)
    CUSTOMER        reduce using rule 208 (ecu -> ECU STRING .)
    CUSTOMER_NO     reduce using rule 208 (ecu -> ECU STRING .)
    USER            reduce using rule 208 (ecu -> ECU STRING .)
    PHONE_NO        reduce using rule 208 (ecu -> ECU STRING .)
    ECU             reduce using rule 208 (ecu -> ECU STRING .)
    CPU_TYPE        reduce using rule 208 (ecu -> ECU STRING .)
    NO_OF_INTERFACES reduce using rule 208 (ecu -> ECU STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 208 (ecu -> ECU STRING .)
    begin           reduce using rule 208 (ecu -> ECU STRING .)
    SYSTEM_CONSTANT reduce using rule 208 (ecu -> ECU STRING .)
    ASAP2_VERSION   reduce using rule 208 (ecu -> ECU STRING .)
    A2ML_VERSION    reduce using rule 208 (ecu -> ECU STRING .)
    end             reduce using rule 208 (ecu -> ECU STRING .)


state 436

    (252) system_constant -> SYSTEM_CONSTANT STRING . STRING

    STRING          shift and go to state 574


state 437

    (190) user -> USER STRING .

    ADDR_EPK        reduce using rule 190 (user -> USER STRING .)
    EPK             reduce using rule 190 (user -> USER STRING .)
    SUPPLIER        reduce using rule 190 (user -> USER STRING .)
    CUSTOMER        reduce using rule 190 (user -> USER STRING .)
    CUSTOMER_NO     reduce using rule 190 (user -> USER STRING .)
    USER            reduce using rule 190 (user -> USER STRING .)
    PHONE_NO        reduce using rule 190 (user -> USER STRING .)
    ECU             reduce using rule 190 (user -> USER STRING .)
    CPU_TYPE        reduce using rule 190 (user -> USER STRING .)
    NO_OF_INTERFACES reduce using rule 190 (user -> USER STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 190 (user -> USER STRING .)
    begin           reduce using rule 190 (user -> USER STRING .)
    SYSTEM_CONSTANT reduce using rule 190 (user -> USER STRING .)
    ASAP2_VERSION   reduce using rule 190 (user -> USER STRING .)
    A2ML_VERSION    reduce using rule 190 (user -> USER STRING .)
    end             reduce using rule 190 (user -> USER STRING .)


state 438

    (182) mod_par_optional_list -> mod_par_optional mod_par_optional_list .

    end             reduce using rule 182 (mod_par_optional_list -> mod_par_optional mod_par_optional_list .)


state 439

    (211) ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .

    ADDR_EPK        reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    EPK             reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    SUPPLIER        reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    CUSTOMER        reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    CUSTOMER_NO     reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    USER            reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    PHONE_NO        reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    ECU             reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    CPU_TYPE        reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    NO_OF_INTERFACES reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    ECU_CALIBRATION_OFFSET reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    begin           reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    SYSTEM_CONSTANT reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    ASAP2_VERSION   reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    A2ML_VERSION    reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)
    end             reduce using rule 211 (ecu_calibration_offset -> ECU_CALIBRATION_OFFSET NUMERIC .)


state 440

    (213) memory_layout -> begin MEMORY_LAYOUT . memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT
    (214) memory_layout_prg_type -> . PRG_CODE
    (215) memory_layout_prg_type -> . PRG_DATA
    (216) memory_layout_prg_type -> . PRG_RESERVED

    PRG_CODE        shift and go to state 577
    PRG_DATA        shift and go to state 578
    PRG_RESERVED    shift and go to state 575

    memory_layout_prg_type         shift and go to state 576

state 441

    (230) memory_segment -> begin MEMORY_SEGMENT . IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    IDENT           shift and go to state 579


state 442

    (212) calibration_method -> begin CALIBRATION_METHOD . number_list end CALIBRATION_METHOD
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 580

state 443

    (185) addr_epk -> ADDR_EPK NUMERIC .

    ADDR_EPK        reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    EPK             reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    SUPPLIER        reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    CUSTOMER        reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    CUSTOMER_NO     reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    USER            reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    PHONE_NO        reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    ECU             reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    CPU_TYPE        reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    NO_OF_INTERFACES reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    ECU_CALIBRATION_OFFSET reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    begin           reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    SYSTEM_CONSTANT reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    ASAP2_VERSION   reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    A2ML_VERSION    reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)
    end             reduce using rule 185 (addr_epk -> ADDR_EPK NUMERIC .)


state 444

    (210) no_of_interfaces -> NO_OF_INTERFACES NUMERIC .

    ADDR_EPK        reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    EPK             reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    SUPPLIER        reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    CUSTOMER        reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    CUSTOMER_NO     reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    USER            reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    PHONE_NO        reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    ECU             reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    CPU_TYPE        reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    NO_OF_INTERFACES reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    ECU_CALIBRATION_OFFSET reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    begin           reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    SYSTEM_CONSTANT reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    ASAP2_VERSION   reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    A2ML_VERSION    reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)
    end             reduce using rule 210 (no_of_interfaces -> NO_OF_INTERFACES NUMERIC .)


state 445

    (187) supplier -> SUPPLIER STRING .

    ADDR_EPK        reduce using rule 187 (supplier -> SUPPLIER STRING .)
    EPK             reduce using rule 187 (supplier -> SUPPLIER STRING .)
    SUPPLIER        reduce using rule 187 (supplier -> SUPPLIER STRING .)
    CUSTOMER        reduce using rule 187 (supplier -> SUPPLIER STRING .)
    CUSTOMER_NO     reduce using rule 187 (supplier -> SUPPLIER STRING .)
    USER            reduce using rule 187 (supplier -> SUPPLIER STRING .)
    PHONE_NO        reduce using rule 187 (supplier -> SUPPLIER STRING .)
    ECU             reduce using rule 187 (supplier -> SUPPLIER STRING .)
    CPU_TYPE        reduce using rule 187 (supplier -> SUPPLIER STRING .)
    NO_OF_INTERFACES reduce using rule 187 (supplier -> SUPPLIER STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 187 (supplier -> SUPPLIER STRING .)
    begin           reduce using rule 187 (supplier -> SUPPLIER STRING .)
    SYSTEM_CONSTANT reduce using rule 187 (supplier -> SUPPLIER STRING .)
    ASAP2_VERSION   reduce using rule 187 (supplier -> SUPPLIER STRING .)
    A2ML_VERSION    reduce using rule 187 (supplier -> SUPPLIER STRING .)
    end             reduce using rule 187 (supplier -> SUPPLIER STRING .)


state 446

    (164) mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional end . MOD_PAR

    MOD_PAR         shift and go to state 581


state 447

    (209) cpu_type -> CPU_TYPE STRING .

    ADDR_EPK        reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    EPK             reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    SUPPLIER        reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    CUSTOMER        reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    CUSTOMER_NO     reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    USER            reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    PHONE_NO        reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    ECU             reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    CPU_TYPE        reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    NO_OF_INTERFACES reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    begin           reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    SYSTEM_CONSTANT reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    ASAP2_VERSION   reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    A2ML_VERSION    reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)
    end             reduce using rule 209 (cpu_type -> CPU_TYPE STRING .)


state 448

    (191) phone_no -> PHONE_NO STRING .

    ADDR_EPK        reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    EPK             reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    SUPPLIER        reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    CUSTOMER        reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    CUSTOMER_NO     reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    USER            reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    PHONE_NO        reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    ECU             reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    CPU_TYPE        reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    NO_OF_INTERFACES reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    begin           reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    SYSTEM_CONSTANT reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    ASAP2_VERSION   reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    A2ML_VERSION    reduce using rule 191 (phone_no -> PHONE_NO STRING .)
    end             reduce using rule 191 (phone_no -> PHONE_NO STRING .)


state 449

    (189) customer_no -> CUSTOMER_NO STRING .

    ADDR_EPK        reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    EPK             reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    SUPPLIER        reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    CUSTOMER        reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    CUSTOMER_NO     reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    USER            reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    PHONE_NO        reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    ECU             reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    CPU_TYPE        reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    NO_OF_INTERFACES reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    begin           reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    SYSTEM_CONSTANT reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    ASAP2_VERSION   reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    A2ML_VERSION    reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)
    end             reduce using rule 189 (customer_no -> CUSTOMER_NO STRING .)


state 450

    (92) generic_parameter -> begin . IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 453


state 451

    (94) generic_parameter_list -> generic_parameter generic_parameter_list .

    begin           reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    TP_BLOB         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    IDENT           reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    STRING          reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    NUMERIC         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    end             reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    KP_BLOB         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    DP_BLOB         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    PA_BLOB         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)
    BA_BLOB         reduce using rule 94 (generic_parameter_list -> generic_parameter generic_parameter_list .)


state 452

    (145) raster -> begin RASTER . STRING STRING NUMERIC NUMERIC NUMERIC end RASTER

    STRING          shift and go to state 582


state 453

    (92) generic_parameter -> begin IDENT . generic_parameter_list_optional end IDENT
    (95) generic_parameter_list_optional -> . empty
    (96) generic_parameter_list_optional -> . generic_parameter_list
    (698) empty -> .
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    end             reduce using rule 698 (empty -> .)
    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter              shift and go to state 288
    generic_parameter_list         shift and go to state 583
    empty                          shift and go to state 585
    generic_parameter_list_optional shift and go to state 584

state 454

    (148) checksum -> begin CHECKSUM . STRING end CHECKSUM
    (149) checksum -> begin CHECKSUM . IDENT IDENT NUMERIC end CHECKSUM

    STRING          shift and go to state 587
    IDENT           shift and go to state 586


state 455

    (147) seed_key -> begin SEED_KEY . STRING STRING STRING end SEED_KEY

    STRING          shift and go to state 588


state 456

    (152) source -> begin SOURCE . IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE

    IDENT           shift and go to state 589


state 457

    (146) event_group -> begin EVENT_GROUP . STRING STRING NUMERIC end EVENT_GROUP

    STRING          shift and go to state 590


state 458

    (132) if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end . IF_DATA

    IF_DATA         shift and go to state 591


state 459

    (138) if_data_module_optional_parameter -> tp_blob tp_data .

    begin           reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)
    TP_BLOB         reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)
    IDENT           reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)
    STRING          reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)
    NUMERIC         reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)
    end             reduce using rule 138 (if_data_module_optional_parameter -> tp_blob tp_data .)


state 460

    (151) tp_data -> generic_parameter_list .

    begin           reduce using rule 151 (tp_data -> generic_parameter_list .)
    TP_BLOB         reduce using rule 151 (tp_data -> generic_parameter_list .)
    IDENT           reduce using rule 151 (tp_data -> generic_parameter_list .)
    STRING          reduce using rule 151 (tp_data -> generic_parameter_list .)
    NUMERIC         reduce using rule 151 (tp_data -> generic_parameter_list .)
    end             reduce using rule 151 (tp_data -> generic_parameter_list .)


state 461

    (142) if_data_module_optional_parameter_list -> if_data_module_optional_parameter if_data_module_optional_parameter_list .

    end             reduce using rule 142 (if_data_module_optional_parameter_list -> if_data_module_optional_parameter if_data_module_optional_parameter_list .)


state 462

    (482) compu_tab_conversion_type -> TAB_INTP .

    NUMERIC         reduce using rule 482 (compu_tab_conversion_type -> TAB_INTP .)


state 463

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type . NUMERIC number_list compu_tab_optional end COMPU_TAB

    NUMERIC         shift and go to state 592


state 464

    (483) compu_tab_conversion_type -> TAB_NOINTP .

    NUMERIC         reduce using rule 483 (compu_tab_conversion_type -> TAB_NOINTP .)


state 465

    (192) mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end . MOD_COMMON

    MOD_COMMON      shift and go to state 593


state 466

    (203) mod_common_optional_parameter_list -> mod_common_optional_parameter mod_common_optional_parameter_list .

    end             reduce using rule 203 (mod_common_optional_parameter_list -> mod_common_optional_parameter mod_common_optional_parameter_list .)


state 467

    (285) byte_order_type -> MSB_FIRST .

    S_REC_LAYOUT    reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    DEPOSIT         reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    BYTE_ORDER      reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    DATA_SIZE       reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ALIGNMENT_BYTE  reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ALIGNMENT_WORD  reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ALIGNMENT_LONG  reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    end             reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    READ_WRITE      reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    DISPLAY_IDENTIFIER reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    FORMAT          reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ARRAY_SIZE      reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    BIT_MASK        reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    begin           reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    MAX_REFRESH     reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS     reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ERROR_MASK      reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    REF_MEMORY_SEGMENT reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    MATRIX_DIM      reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS_EXTENSION reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    READ_ONLY       reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    GUARD_RAILS     reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    NUMBER          reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    EXTENDED_LIMITS reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    COMPARISON_QUANTITY reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    CALIBRATION_ACCESS reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    AXIS_PTS_REF    reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    MAX_GRAD        reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    MONOTONY        reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    FIX_AXIS_PAR    reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    FIX_AXIS_PAR_DIST reduce using rule 285 (byte_order_type -> MSB_FIRST .)
    CURVE_AXIS_REF  reduce using rule 285 (byte_order_type -> MSB_FIRST .)


state 468

    (286) byte_order_type -> MSB_LAST .

    S_REC_LAYOUT    reduce using rule 286 (byte_order_type -> MSB_LAST .)
    DEPOSIT         reduce using rule 286 (byte_order_type -> MSB_LAST .)
    BYTE_ORDER      reduce using rule 286 (byte_order_type -> MSB_LAST .)
    DATA_SIZE       reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ALIGNMENT_BYTE  reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ALIGNMENT_WORD  reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ALIGNMENT_LONG  reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 286 (byte_order_type -> MSB_LAST .)
    end             reduce using rule 286 (byte_order_type -> MSB_LAST .)
    READ_WRITE      reduce using rule 286 (byte_order_type -> MSB_LAST .)
    DISPLAY_IDENTIFIER reduce using rule 286 (byte_order_type -> MSB_LAST .)
    FORMAT          reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ARRAY_SIZE      reduce using rule 286 (byte_order_type -> MSB_LAST .)
    BIT_MASK        reduce using rule 286 (byte_order_type -> MSB_LAST .)
    begin           reduce using rule 286 (byte_order_type -> MSB_LAST .)
    MAX_REFRESH     reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS     reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ERROR_MASK      reduce using rule 286 (byte_order_type -> MSB_LAST .)
    REF_MEMORY_SEGMENT reduce using rule 286 (byte_order_type -> MSB_LAST .)
    MATRIX_DIM      reduce using rule 286 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS_EXTENSION reduce using rule 286 (byte_order_type -> MSB_LAST .)
    READ_ONLY       reduce using rule 286 (byte_order_type -> MSB_LAST .)
    GUARD_RAILS     reduce using rule 286 (byte_order_type -> MSB_LAST .)
    NUMBER          reduce using rule 286 (byte_order_type -> MSB_LAST .)
    EXTENDED_LIMITS reduce using rule 286 (byte_order_type -> MSB_LAST .)
    COMPARISON_QUANTITY reduce using rule 286 (byte_order_type -> MSB_LAST .)
    CALIBRATION_ACCESS reduce using rule 286 (byte_order_type -> MSB_LAST .)
    AXIS_PTS_REF    reduce using rule 286 (byte_order_type -> MSB_LAST .)
    MAX_GRAD        reduce using rule 286 (byte_order_type -> MSB_LAST .)
    MONOTONY        reduce using rule 286 (byte_order_type -> MSB_LAST .)
    FIX_AXIS_PAR    reduce using rule 286 (byte_order_type -> MSB_LAST .)
    FIX_AXIS_PAR_DIST reduce using rule 286 (byte_order_type -> MSB_LAST .)
    CURVE_AXIS_REF  reduce using rule 286 (byte_order_type -> MSB_LAST .)


state 469

    (284) byte_order -> BYTE_ORDER byte_order_type .

    READ_WRITE      reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    DISPLAY_IDENTIFIER reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    FORMAT          reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ARRAY_SIZE      reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    BIT_MASK        reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    begin           reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    BYTE_ORDER      reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    MAX_REFRESH     reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS     reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ERROR_MASK      reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    REF_MEMORY_SEGMENT reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    MATRIX_DIM      reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    end             reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    S_REC_LAYOUT    reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    DEPOSIT         reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    DATA_SIZE       reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ALIGNMENT_BYTE  reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ALIGNMENT_WORD  reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ALIGNMENT_LONG  reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    READ_ONLY       reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    GUARD_RAILS     reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    EXTENDED_LIMITS reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    CALIBRATION_ACCESS reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    NUMBER          reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    COMPARISON_QUANTITY reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    AXIS_PTS_REF    reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    MAX_GRAD        reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    MONOTONY        reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    FIX_AXIS_PAR    reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    FIX_AXIS_PAR_DIST reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)
    CURVE_AXIS_REF  reduce using rule 284 (byte_order -> BYTE_ORDER byte_order_type .)


state 470

    (206) s_rec_layout -> S_REC_LAYOUT IDENT .

    S_REC_LAYOUT    reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    DEPOSIT         reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    BYTE_ORDER      reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    DATA_SIZE       reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    ALIGNMENT_BYTE  reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    ALIGNMENT_WORD  reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    ALIGNMENT_LONG  reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)
    end             reduce using rule 206 (s_rec_layout -> S_REC_LAYOUT IDENT .)


state 471

    (399) deposit -> DEPOSIT deposit_mode .

    READ_ONLY       reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    FORMAT          reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    begin           reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    AXIS_PTS_REF    reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    MAX_GRAD        reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    MONOTONY        reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    BYTE_ORDER      reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    EXTENDED_LIMITS reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    FIX_AXIS_PAR    reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    FIX_AXIS_PAR_DIST reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    DEPOSIT         reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    CURVE_AXIS_REF  reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    end             reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    GUARD_RAILS     reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    DISPLAY_IDENTIFIER reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    REF_MEMORY_SEGMENT reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    CALIBRATION_ACCESS reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ECU_ADDRESS_EXTENSION reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    S_REC_LAYOUT    reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    DATA_SIZE       reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ALIGNMENT_BYTE  reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ALIGNMENT_WORD  reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ALIGNMENT_LONG  reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 399 (deposit -> DEPOSIT deposit_mode .)


state 472

    (401) deposit_mode -> DIFFERENCE .

    S_REC_LAYOUT    reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    DEPOSIT         reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    BYTE_ORDER      reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    DATA_SIZE       reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ALIGNMENT_BYTE  reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ALIGNMENT_WORD  reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ALIGNMENT_LONG  reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    end             reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    READ_ONLY       reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    GUARD_RAILS     reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    DISPLAY_IDENTIFIER reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    FORMAT          reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    begin           reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    REF_MEMORY_SEGMENT reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    EXTENDED_LIMITS reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    CALIBRATION_ACCESS reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    ECU_ADDRESS_EXTENSION reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    AXIS_PTS_REF    reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    MAX_GRAD        reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    MONOTONY        reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    FIX_AXIS_PAR    reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    FIX_AXIS_PAR_DIST reduce using rule 401 (deposit_mode -> DIFFERENCE .)
    CURVE_AXIS_REF  reduce using rule 401 (deposit_mode -> DIFFERENCE .)


state 473

    (400) deposit_mode -> ABSOLUTE .

    S_REC_LAYOUT    reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    DEPOSIT         reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    BYTE_ORDER      reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    DATA_SIZE       reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ALIGNMENT_BYTE  reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ALIGNMENT_WORD  reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ALIGNMENT_LONG  reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    end             reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    READ_ONLY       reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    GUARD_RAILS     reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    DISPLAY_IDENTIFIER reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    FORMAT          reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    begin           reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    REF_MEMORY_SEGMENT reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    EXTENDED_LIMITS reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    CALIBRATION_ACCESS reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    ECU_ADDRESS_EXTENSION reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    AXIS_PTS_REF    reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    MAX_GRAD        reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    MONOTONY        reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    FIX_AXIS_PAR    reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    FIX_AXIS_PAR_DIST reduce using rule 400 (deposit_mode -> ABSOLUTE .)
    CURVE_AXIS_REF  reduce using rule 400 (deposit_mode -> ABSOLUTE .)


state 474

    (207) data_size -> DATA_SIZE NUMERIC .

    S_REC_LAYOUT    reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    DEPOSIT         reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    BYTE_ORDER      reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    DATA_SIZE       reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)
    end             reduce using rule 207 (data_size -> DATA_SIZE NUMERIC .)


state 475

    (278) characteristic_type -> MAP .

    NUMERIC         reduce using rule 278 (characteristic_type -> MAP .)


state 476

    (276) characteristic_type -> VALUE .

    NUMERIC         reduce using rule 276 (characteristic_type -> VALUE .)


state 477

    (277) characteristic_type -> CURVE .

    NUMERIC         reduce using rule 277 (characteristic_type -> CURVE .)


state 478

    (280) characteristic_type -> VAL_BLK .

    NUMERIC         reduce using rule 280 (characteristic_type -> VAL_BLK .)


state 479

    (279) characteristic_type -> CUBOID .

    NUMERIC         reduce using rule 279 (characteristic_type -> CUBOID .)


state 480

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type . NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 594


state 481

    (281) characteristic_type -> ASCII .

    NUMERIC         reduce using rule 281 (characteristic_type -> ASCII .)


state 482

    (686) unit -> begin UNIT IDENT STRING STRING . unit_type unit_optional_list_optional end UNIT
    (687) unit_type -> . EXTENDED_SI
    (688) unit_type -> . DERIVED

    EXTENDED_SI     shift and go to state 597
    DERIVED         shift and go to state 595

    unit_type                      shift and go to state 596

state 483

    (685) ref_group -> begin REF_GROUP . ident_list end REF_GROUP
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 598

state 484

    (678) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end . USER_RIGHTS

    USER_RIGHTS     shift and go to state 599


state 485

    (682) user_rights_optional_list -> user_rights_optional user_rights_optional_list .

    end             reduce using rule 682 (user_rights_optional_list -> user_rights_optional user_rights_optional_list .)


state 486

    (663) frame -> begin FRAME IDENT STRING NUMERIC . NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 600


state 487

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC . number_string_value_list compu_vtab_optional end COMPU_VTAB
    (491) number_string_value_list -> . number_string_value
    (492) number_string_value_list -> . number_string_value number_string_value_list
    (493) number_string_value -> . NUMERIC STRING

    NUMERIC         shift and go to state 601

    number_string_value            shift and go to state 603
    number_string_value_list       shift and go to state 602

state 488

    (527) group -> begin GROUP IDENT STRING group_optional_list_optional end . GROUP

    GROUP           shift and go to state 604


state 489

    (544) sub_group -> begin SUB_GROUP . ident_list end SUB_GROUP
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 605

state 490

    (288) function_list -> begin FUNCTION_LIST . ident_list end FUNCTION_LIST
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 606

state 491

    (538) ref_measurement -> begin REF_MEASUREMENT . ref_measurement_optional_list_optional end REF_MEASUREMENT
    (542) ref_measurement_optional_list_optional -> . empty
    (543) ref_measurement_optional_list_optional -> . ref_measurement_optional_list
    (698) empty -> .
    (540) ref_measurement_optional_list -> . ref_measurement_optional
    (541) ref_measurement_optional_list -> . ref_measurement_optional ref_measurement_optional_list
    (539) ref_measurement_optional -> . IDENT

    end             reduce using rule 698 (empty -> .)
    IDENT           shift and go to state 607

    ref_measurement_optional       shift and go to state 609
    ref_measurement_optional_list_optional shift and go to state 610
    empty                          shift and go to state 611
    ref_measurement_optional_list  shift and go to state 608

state 492

    (516) ref_characteristic -> begin REF_CHARACTERISTIC . ref_characteristic_optional_list_optional end REF_CHARACTERISTIC
    (520) ref_characteristic_optional_list_optional -> . empty
    (521) ref_characteristic_optional_list_optional -> . ref_characteristic_optional_list
    (698) empty -> .
    (518) ref_characteristic_optional_list -> . ref_characteristic_optional
    (519) ref_characteristic_optional_list -> . ref_characteristic_optional ref_characteristic_optional_list
    (517) ref_characteristic_optional -> . IDENT

    end             reduce using rule 698 (empty -> .)
    IDENT           shift and go to state 613

    ref_characteristic_optional    shift and go to state 612
    ref_characteristic_optional_list shift and go to state 614
    empty                          shift and go to state 615
    ref_characteristic_optional_list_optional shift and go to state 616

state 493

    (301) annotation -> begin ANNOTATION . annotation_optional_list_optional end ANNOTATION
    (310) annotation_optional_list_optional -> . empty
    (311) annotation_optional_list_optional -> . annotation_optional_list
    (698) empty -> .
    (308) annotation_optional_list -> . annotation_optional
    (309) annotation_optional_list -> . annotation_optional annotation_optional_list
    (302) annotation_optional -> . annotation_label
    (303) annotation_optional -> . annotation_origin
    (304) annotation_optional -> . annotation_text
    (305) annotation_label -> . ANNOTATION_LABEL STRING
    (306) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (307) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 698 (empty -> .)
    ANNOTATION_LABEL shift and go to state 620
    ANNOTATION_ORIGIN shift and go to state 623
    begin           shift and go to state 618

    annotation_optional_list_optional shift and go to state 617
    annotation_origin              shift and go to state 619
    annotation_text                shift and go to state 621
    annotation_optional_list       shift and go to state 622
    annotation_optional            shift and go to state 624
    annotation_label               shift and go to state 625
    empty                          shift and go to state 626

state 494

    (535) group_optional_list -> group_optional group_optional_list .

    end             reduce using rule 535 (group_optional_list -> group_optional group_optional_list .)


state 495

    (603) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RESERVED        reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    end             reduce using rule 603 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)


state 496

    (602) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RESERVED        reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    end             reduce using rule 602 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)


state 497

    (604) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RESERVED        reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    end             reduce using rule 604 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)


state 498

    (615) src_addr_optional -> datatype .

    FNC_VALUES      reduce using rule 615 (src_addr_optional -> datatype .)
    IDENTIFICATION  reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_PTS_X      reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_PTS_Y      reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_PTS_Z      reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_RESCALE_X  reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Y  reduce using rule 615 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Z  reduce using rule 615 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_X   reduce using rule 615 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Y   reduce using rule 615 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Z   reduce using rule 615 (src_addr_optional -> datatype .)
    NO_RESCALE_X    reduce using rule 615 (src_addr_optional -> datatype .)
    NO_RESCALE_Y    reduce using rule 615 (src_addr_optional -> datatype .)
    NO_RESCALE_Z    reduce using rule 615 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 615 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 615 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 615 (src_addr_optional -> datatype .)
    SRC_ADDR_X      reduce using rule 615 (src_addr_optional -> datatype .)
    SRC_ADDR_Y      reduce using rule 615 (src_addr_optional -> datatype .)
    SRC_ADDR_Z      reduce using rule 615 (src_addr_optional -> datatype .)
    RIP_ADDR_X      reduce using rule 615 (src_addr_optional -> datatype .)
    RIP_ADDR_Y      reduce using rule 615 (src_addr_optional -> datatype .)
    RIP_ADDR_Z      reduce using rule 615 (src_addr_optional -> datatype .)
    RIP_ADDR_W      reduce using rule 615 (src_addr_optional -> datatype .)
    SHIFT_OP_X      reduce using rule 615 (src_addr_optional -> datatype .)
    SHIFT_OP_Y      reduce using rule 615 (src_addr_optional -> datatype .)
    SHIFT_OP_Z      reduce using rule 615 (src_addr_optional -> datatype .)
    OFFSET_X        reduce using rule 615 (src_addr_optional -> datatype .)
    OFFSET_Y        reduce using rule 615 (src_addr_optional -> datatype .)
    OFFSET_Z        reduce using rule 615 (src_addr_optional -> datatype .)
    DIST_OP_X       reduce using rule 615 (src_addr_optional -> datatype .)
    DIST_OP_Y       reduce using rule 615 (src_addr_optional -> datatype .)
    DIST_OP_Z       reduce using rule 615 (src_addr_optional -> datatype .)
    ALIGNMENT_BYTE  reduce using rule 615 (src_addr_optional -> datatype .)
    ALIGNMENT_WORD  reduce using rule 615 (src_addr_optional -> datatype .)
    ALIGNMENT_LONG  reduce using rule 615 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 615 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 615 (src_addr_optional -> datatype .)
    RESERVED        reduce using rule 615 (src_addr_optional -> datatype .)
    end             reduce using rule 615 (src_addr_optional -> datatype .)


state 499

    (613) src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    end             reduce using rule 613 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)


state 500

    (614) src_addr_optional -> empty .

    FNC_VALUES      reduce using rule 614 (src_addr_optional -> empty .)
    IDENTIFICATION  reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_PTS_X      reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_PTS_Y      reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_PTS_Z      reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_RESCALE_X  reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_RESCALE_Y  reduce using rule 614 (src_addr_optional -> empty .)
    AXIS_RESCALE_Z  reduce using rule 614 (src_addr_optional -> empty .)
    NO_AXIS_PTS_X   reduce using rule 614 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Y   reduce using rule 614 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Z   reduce using rule 614 (src_addr_optional -> empty .)
    NO_RESCALE_X    reduce using rule 614 (src_addr_optional -> empty .)
    NO_RESCALE_Y    reduce using rule 614 (src_addr_optional -> empty .)
    NO_RESCALE_Z    reduce using rule 614 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_X reduce using rule 614 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Y reduce using rule 614 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Z reduce using rule 614 (src_addr_optional -> empty .)
    SRC_ADDR_X      reduce using rule 614 (src_addr_optional -> empty .)
    SRC_ADDR_Y      reduce using rule 614 (src_addr_optional -> empty .)
    SRC_ADDR_Z      reduce using rule 614 (src_addr_optional -> empty .)
    RIP_ADDR_X      reduce using rule 614 (src_addr_optional -> empty .)
    RIP_ADDR_Y      reduce using rule 614 (src_addr_optional -> empty .)
    RIP_ADDR_Z      reduce using rule 614 (src_addr_optional -> empty .)
    RIP_ADDR_W      reduce using rule 614 (src_addr_optional -> empty .)
    SHIFT_OP_X      reduce using rule 614 (src_addr_optional -> empty .)
    SHIFT_OP_Y      reduce using rule 614 (src_addr_optional -> empty .)
    SHIFT_OP_Z      reduce using rule 614 (src_addr_optional -> empty .)
    OFFSET_X        reduce using rule 614 (src_addr_optional -> empty .)
    OFFSET_Y        reduce using rule 614 (src_addr_optional -> empty .)
    OFFSET_Z        reduce using rule 614 (src_addr_optional -> empty .)
    DIST_OP_X       reduce using rule 614 (src_addr_optional -> empty .)
    DIST_OP_Y       reduce using rule 614 (src_addr_optional -> empty .)
    DIST_OP_Z       reduce using rule 614 (src_addr_optional -> empty .)
    ALIGNMENT_BYTE  reduce using rule 614 (src_addr_optional -> empty .)
    ALIGNMENT_WORD  reduce using rule 614 (src_addr_optional -> empty .)
    ALIGNMENT_LONG  reduce using rule 614 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 614 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 614 (src_addr_optional -> empty .)
    RESERVED        reduce using rule 614 (src_addr_optional -> empty .)
    end             reduce using rule 614 (src_addr_optional -> empty .)


state 501

    (612) src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    end             reduce using rule 612 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)


state 502

    (611) src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    end             reduce using rule 611 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)


state 503

    (598) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 629

state 504

    (596) axis_pts_x -> AXIS_PTS_X NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 630

state 505

    (597) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 631

state 506

    (621) shift_op_y -> SHIFT_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    end             reduce using rule 621 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)


state 507

    (620) shift_op_x -> SHIFT_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    end             reduce using rule 620 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)


state 508

    (622) shift_op_z -> SHIFT_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    end             reduce using rule 622 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)


state 509

    (607) no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RESERVED        reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    end             reduce using rule 607 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)


state 510

    (605) no_rescale_x -> NO_RESCALE_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RESERVED        reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    end             reduce using rule 605 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)


state 511

    (606) no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RESERVED        reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    end             reduce using rule 606 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)


state 512

    (628) dist_op_z -> DIST_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    end             reduce using rule 628 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)


state 513

    (626) dist_op_x -> DIST_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    end             reduce using rule 626 (dist_op_x -> DIST_OP_X NUMERIC datatype .)


state 514

    (627) dist_op_y -> DIST_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    end             reduce using rule 627 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)


state 515

    (545) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .

    begin           reduce using rule 545 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)
    end             reduce using rule 545 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)


state 516

    (595) identification -> IDENTIFICATION NUMERIC datatype .

    FNC_VALUES      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_X        reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Y        reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Z        reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_X       reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    RESERVED        reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)
    end             reduce using rule 595 (identification -> IDENTIFICATION NUMERIC datatype .)


state 517

    (623) offset_x -> OFFSET_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    RESERVED        reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)
    end             reduce using rule 623 (offset_x -> OFFSET_X NUMERIC datatype .)


state 518

    (624) offset_y -> OFFSET_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RESERVED        reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)
    end             reduce using rule 624 (offset_y -> OFFSET_Y NUMERIC datatype .)


state 519

    (625) offset_z -> OFFSET_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RESERVED        reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)
    end             reduce using rule 625 (offset_z -> OFFSET_Z NUMERIC datatype .)


state 520

    (601) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 632


state 521

    (599) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 633


state 522

    (600) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 634


state 523

    (619) rip_addr_w -> RIP_ADDR_W NUMERIC datatype .

    FNC_VALUES      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_X        reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Y        reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Z        reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_X       reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RESERVED        reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    end             reduce using rule 619 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)


state 524

    (618) rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RESERVED        reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    end             reduce using rule 618 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)


state 525

    (616) rip_addr_x -> RIP_ADDR_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RESERVED        reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    end             reduce using rule 616 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)


state 526

    (617) rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RESERVED        reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    end             reduce using rule 617 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)


state 527

    (76) datasize -> WORD .

    FNC_VALUES      reduce using rule 76 (datasize -> WORD .)
    IDENTIFICATION  reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_X      reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_Y      reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_Z      reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_X  reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_Y  reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_Z  reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_X   reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_Y   reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_Z   reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_X    reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_Y    reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_Z    reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_X      reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_Y      reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_Z      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_X      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_Y      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_Z      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_W      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_X      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_Y      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_Z      reduce using rule 76 (datasize -> WORD .)
    OFFSET_X        reduce using rule 76 (datasize -> WORD .)
    OFFSET_Y        reduce using rule 76 (datasize -> WORD .)
    OFFSET_Z        reduce using rule 76 (datasize -> WORD .)
    DIST_OP_X       reduce using rule 76 (datasize -> WORD .)
    DIST_OP_Y       reduce using rule 76 (datasize -> WORD .)
    DIST_OP_Z       reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_BYTE  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_WORD  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_LONG  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 76 (datasize -> WORD .)
    RESERVED        reduce using rule 76 (datasize -> WORD .)
    end             reduce using rule 76 (datasize -> WORD .)


state 528

    (77) datasize -> LONG .

    FNC_VALUES      reduce using rule 77 (datasize -> LONG .)
    IDENTIFICATION  reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_X      reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_Y      reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_Z      reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_X  reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_Y  reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_Z  reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_X   reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_Y   reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_Z   reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_X    reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_Y    reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_Z    reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_X      reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_Y      reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_Z      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_X      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_Y      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_Z      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_W      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_X      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_Y      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_Z      reduce using rule 77 (datasize -> LONG .)
    OFFSET_X        reduce using rule 77 (datasize -> LONG .)
    OFFSET_Y        reduce using rule 77 (datasize -> LONG .)
    OFFSET_Z        reduce using rule 77 (datasize -> LONG .)
    DIST_OP_X       reduce using rule 77 (datasize -> LONG .)
    DIST_OP_Y       reduce using rule 77 (datasize -> LONG .)
    DIST_OP_Z       reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_BYTE  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_WORD  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_LONG  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 77 (datasize -> LONG .)
    RESERVED        reduce using rule 77 (datasize -> LONG .)
    end             reduce using rule 77 (datasize -> LONG .)


state 529

    (75) datasize -> BYTE .

    FNC_VALUES      reduce using rule 75 (datasize -> BYTE .)
    IDENTIFICATION  reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_X      reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_Y      reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_Z      reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_X  reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_Y  reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_Z  reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_X   reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_Y   reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_Z   reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_X    reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_Y    reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_Z    reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_X      reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_Y      reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_Z      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_X      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_Y      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_Z      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_W      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_X      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_Y      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_Z      reduce using rule 75 (datasize -> BYTE .)
    OFFSET_X        reduce using rule 75 (datasize -> BYTE .)
    OFFSET_Y        reduce using rule 75 (datasize -> BYTE .)
    OFFSET_Z        reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_X       reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_Y       reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_Z       reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_BYTE  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_WORD  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_LONG  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 75 (datasize -> BYTE .)
    RESERVED        reduce using rule 75 (datasize -> BYTE .)
    end             reduce using rule 75 (datasize -> BYTE .)


state 530

    (662) reserved -> RESERVED NUMERIC datasize .

    FNC_VALUES      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    IDENTIFICATION  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_X      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Y      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Z      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_X  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Y  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Z  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_X   reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Y   reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Z   reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_X    reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Y    reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Z    reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_X reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Y reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Z reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_X      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Y      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Z      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_X      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Y      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Z      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_W      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_X      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Y      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Z      reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_X        reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Y        reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Z        reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_X       reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Y       reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Z       reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_BYTE  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_WORD  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_LONG  reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    RESERVED        reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)
    end             reduce using rule 662 (reserved -> RESERVED NUMERIC datasize .)


state 531

    (589) fnc_values -> FNC_VALUES NUMERIC datatype . fnc_values_index_mode addrtype
    (590) fnc_values_index_mode -> . COLUMN_DIR
    (591) fnc_values_index_mode -> . ROW_DIR
    (592) fnc_values_index_mode -> . ALTERNATE_WITH_X
    (593) fnc_values_index_mode -> . ALTERNATE_WITH_Y
    (594) fnc_values_index_mode -> . ALTERNATE_CURVES

    COLUMN_DIR      shift and go to state 637
    ROW_DIR         shift and go to state 635
    ALTERNATE_WITH_X shift and go to state 636
    ALTERNATE_WITH_Y shift and go to state 640
    ALTERNATE_CURVES shift and go to state 638

    fnc_values_index_mode          shift and go to state 639

state 532

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING . STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 641


state 533

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 642


state 534

    (31) a2ml_struct_member_list -> a2ml_struct_member .
    (32) a2ml_struct_member_list -> a2ml_struct_member . a2ml_struct_member_list
    (31) a2ml_struct_member_list -> . a2ml_struct_member
    (32) a2ml_struct_member_list -> . a2ml_struct_member a2ml_struct_member_list
    (33) a2ml_struct_member -> . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    CURLY_CLOSE     reduce using rule 31 (a2ml_struct_member_list -> a2ml_struct_member .)
    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_struct_member             shift and go to state 534
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_member                    shift and go to state 535
    a2ml_struct_member_list        shift and go to state 643
    a2ml_type_name                 shift and go to state 537

state 535

    (33) a2ml_struct_member -> a2ml_member . SEMICOLON

    SEMICOLON       shift and go to state 644


state 536

    (29) a2ml_struct_member_list_optional -> empty .

    CURLY_CLOSE     reduce using rule 29 (a2ml_struct_member_list_optional -> empty .)


state 537

    (34) a2ml_member -> a2ml_type_name . a2ml_array_specifier_optional
    (37) a2ml_array_specifier_optional -> . empty
    (38) a2ml_array_specifier_optional -> . a2ml_array_specifier
    (698) empty -> .
    (39) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier

    SEMICOLON       reduce using rule 698 (empty -> .)
    PARENTHESE_CLOSE reduce using rule 698 (empty -> .)
    BRACE_OPEN      shift and go to state 647

    a2ml_array_specifier           shift and go to state 646
    a2ml_array_specifier_optional  shift and go to state 648
    empty                          shift and go to state 645

state 538

    (30) a2ml_struct_member_list_optional -> a2ml_struct_member_list .

    CURLY_CLOSE     reduce using rule 30 (a2ml_struct_member_list_optional -> a2ml_struct_member_list .)


state 539

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 649


state 540

    (55) a2ml_taggedunion_member_list -> a2ml_taggedunion_member .
    (56) a2ml_taggedunion_member_list -> a2ml_taggedunion_member . a2ml_taggedunion_member_list
    (55) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member
    (56) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member a2ml_taggedunion_member_list
    (57) a2ml_taggedunion_member -> . a2ml_tag a2ml_member SEMICOLON
    (58) a2ml_taggedunion_member -> . a2ml_block_definition SEMICOLON
    (59) a2ml_tag -> . STRING
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name

    CURLY_CLOSE     reduce using rule 55 (a2ml_taggedunion_member_list -> a2ml_taggedunion_member .)
    STRING          shift and go to state 239
    block           shift and go to state 112

    a2ml_block_definition          shift and go to state 542
    a2ml_taggedunion_member_list   shift and go to state 650
    a2ml_taggedunion_member        shift and go to state 540
    a2ml_tag                       shift and go to state 541

state 541

    (57) a2ml_taggedunion_member -> a2ml_tag . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_member                    shift and go to state 651
    a2ml_type_name                 shift and go to state 537

state 542

    (58) a2ml_taggedunion_member -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 652


state 543

    (25) a2ml_enumerator -> a2ml_keyword . EQUAL a2ml_constant
    (26) a2ml_enumerator -> a2ml_keyword .

    EQUAL           shift and go to state 653
    COMMA           reduce using rule 26 (a2ml_enumerator -> a2ml_keyword .)
    CURLY_CLOSE     reduce using rule 26 (a2ml_enumerator -> a2ml_keyword .)


state 544

    (63) a2ml_keyword -> STRING .

    EQUAL           reduce using rule 63 (a2ml_keyword -> STRING .)
    COMMA           reduce using rule 63 (a2ml_keyword -> STRING .)
    CURLY_CLOSE     reduce using rule 63 (a2ml_keyword -> STRING .)


state 545

    (23) a2ml_enumerator_list -> a2ml_enumerator .
    (24) a2ml_enumerator_list -> a2ml_enumerator . COMMA a2ml_enumerator_list

    CURLY_CLOSE     reduce using rule 23 (a2ml_enumerator_list -> a2ml_enumerator .)
    COMMA           shift and go to state 654


state 546

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 655


state 547

    (49) a2ml_taggedstruct_member -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 656


state 548

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN . a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN . a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    block           shift and go to state 112
    STRING          shift and go to state 239

    a2ml_block_definition          shift and go to state 657
    a2ml_taggedstruct_definition   shift and go to state 658
    a2ml_tag                       shift and go to state 551

state 549

    (45) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member .
    (46) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member . a2ml_taggedstruct_member_list
    (45) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member
    (46) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member a2ml_taggedstruct_member_list
    (47) a2ml_taggedstruct_member -> . a2ml_taggedstruct_definition SEMICOLON
    (48) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (49) a2ml_taggedstruct_member -> . a2ml_block_definition SEMICOLON
    (50) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    CURLY_CLOSE     reduce using rule 45 (a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member .)
    PARENTHESE_OPEN shift and go to state 548
    block           shift and go to state 112
    STRING          shift and go to state 239

    a2ml_taggedstruct_member       shift and go to state 549
    a2ml_block_definition          shift and go to state 547
    a2ml_taggedstruct_member_list  shift and go to state 659
    a2ml_taggedstruct_definition   shift and go to state 550
    a2ml_tag                       shift and go to state 551

state 550

    (47) a2ml_taggedstruct_member -> a2ml_taggedstruct_definition . SEMICOLON

    SEMICOLON       shift and go to state 660


state 551

    (51) a2ml_taggedstruct_definition -> a2ml_tag . a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> a2ml_tag . PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK
    (35) a2ml_member_optional -> . empty
    (36) a2ml_member_optional -> . a2ml_member
    (698) empty -> .
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    PARENTHESE_OPEN shift and go to state 661
    SEMICOLON       reduce using rule 698 (empty -> .)
    PARENTHESE_CLOSE reduce using rule 698 (empty -> .)
    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_member_optional           shift and go to state 664
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_member                    shift and go to state 662
    empty                          shift and go to state 663
    a2ml_type_name                 shift and go to state 537

state 552

    (44) a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list .

    CURLY_CLOSE     reduce using rule 44 (a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list .)


state 553

    (43) a2ml_taggedstruct_member_list_optional -> empty .

    CURLY_CLOSE     reduce using rule 43 (a2ml_taggedstruct_member_list_optional -> empty .)


state 554

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 665


state 555

    (99) ident_list -> IDENT .
    (100) ident_list -> IDENT . ident_list
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    end             reduce using rule 99 (ident_list -> IDENT .)
    begin           reduce using rule 99 (ident_list -> IDENT .)
    VAR_MEASUREMENT reduce using rule 99 (ident_list -> IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 99 (ident_list -> IDENT .)
    FRAME_MEASUREMENT reduce using rule 99 (ident_list -> IDENT .)
    IDENT           shift and go to state 555

    ident_list                     shift and go to state 666

state 556

    (640) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list . var_characteristic_optional end VAR_CHARACTERISTIC
    (641) var_characteristic_optional -> . var_address
    (642) var_address -> . begin VAR_ADDRESS number_list end VAR_ADDRESS

    begin           shift and go to state 667

    var_characteristic_optional    shift and go to state 669
    var_address                    shift and go to state 668

state 557

    (648) ident_ident_value -> IDENT IDENT .

    IDENT           reduce using rule 648 (ident_ident_value -> IDENT IDENT .)
    end             reduce using rule 648 (ident_ident_value -> IDENT IDENT .)


state 558

    (647) ident_ident_value_list -> ident_ident_value ident_ident_value_list .

    end             reduce using rule 647 (ident_ident_value_list -> ident_ident_value ident_ident_value_list .)


state 559

    (645) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end . VAR_FORBIDDEN_COMB

    VAR_FORBIDDEN_COMB shift and go to state 670


state 560

    (649) var_criterion -> begin VAR_CRITERION IDENT STRING . ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 671

state 561

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT . IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 672


state 562

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT . NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 673


state 563

    (497) number_number_string_value_list -> number_number_string_value .
    (498) number_number_string_value_list -> number_number_string_value . number_number_string_value_list
    (497) number_number_string_value_list -> . number_number_string_value
    (498) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (499) number_number_string_value -> . NUMERIC NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 497 (number_number_string_value_list -> number_number_string_value .)
    end             reduce using rule 497 (number_number_string_value_list -> number_number_string_value .)
    NUMERIC         shift and go to state 565

    number_number_string_value_list shift and go to state 674
    number_number_string_value     shift and go to state 563

state 564

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list . compu_vtab_range_optional end COMPU_VTAB_RANGE
    (500) compu_vtab_range_optional -> . empty
    (501) compu_vtab_range_optional -> . default_value
    (698) empty -> .
    (487) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 698 (empty -> .)
    DEFAULT_VALUE   shift and go to state 676

    default_value                  shift and go to state 675
    compu_vtab_range_optional      shift and go to state 677
    empty                          shift and go to state 678

state 565

    (499) number_number_string_value -> NUMERIC . NUMERIC STRING

    NUMERIC         shift and go to state 679


state 566

    (512) function_optional_list -> function_optional function_optional_list .

    end             reduce using rule 512 (function_optional_list -> function_optional function_optional_list .)


state 567

    (526) function_version -> FUNCTION_VERSION STRING .

    begin           reduce using rule 526 (function_version -> FUNCTION_VERSION STRING .)
    FUNCTION_VERSION reduce using rule 526 (function_version -> FUNCTION_VERSION STRING .)
    end             reduce using rule 526 (function_version -> FUNCTION_VERSION STRING .)


state 568

    (524) loc_measurement -> begin LOC_MEASUREMENT . ident_list end LOC_MEASUREMENT
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 680

state 569

    (515) def_characteristic -> begin DEF_CHARACTERISTIC . ident_list end DEF_CHARACTERISTIC
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 681

state 570

    (525) sub_function -> begin SUB_FUNCTION . ident_list end SUB_FUNCTION
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 682

state 571

    (522) in_measurement -> begin IN_MEASUREMENT . ident_list end IN_MEASUREMENT
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 683

state 572

    (523) out_measurement -> begin OUT_MEASUREMENT . ident_list end OUT_MEASUREMENT
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 684

state 573

    (502) function -> begin FUNCTION IDENT STRING function_optional_list_optional end . FUNCTION

    FUNCTION        shift and go to state 685


state 574

    (252) system_constant -> SYSTEM_CONSTANT STRING STRING .

    ADDR_EPK        reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    EPK             reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    SUPPLIER        reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    CUSTOMER        reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    CUSTOMER_NO     reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    USER            reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    PHONE_NO        reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    ECU             reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    CPU_TYPE        reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    NO_OF_INTERFACES reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    ECU_CALIBRATION_OFFSET reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    begin           reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    SYSTEM_CONSTANT reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    ASAP2_VERSION   reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    A2ML_VERSION    reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)
    end             reduce using rule 252 (system_constant -> SYSTEM_CONSTANT STRING STRING .)


state 575

    (216) memory_layout_prg_type -> PRG_RESERVED .

    NUMERIC         reduce using rule 216 (memory_layout_prg_type -> PRG_RESERVED .)


state 576

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type . NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT

    NUMERIC         shift and go to state 686


state 577

    (214) memory_layout_prg_type -> PRG_CODE .

    NUMERIC         reduce using rule 214 (memory_layout_prg_type -> PRG_CODE .)


state 578

    (215) memory_layout_prg_type -> PRG_DATA .

    NUMERIC         reduce using rule 215 (memory_layout_prg_type -> PRG_DATA .)


state 579

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT . STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    STRING          shift and go to state 687


state 580

    (212) calibration_method -> begin CALIBRATION_METHOD number_list . end CALIBRATION_METHOD

    end             shift and go to state 688


state 581

    (164) mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR .

    begin           reduce using rule 164 (mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR .)
    end             reduce using rule 164 (mod_par -> begin MOD_PAR STRING mod_par_optional_list_optional end MOD_PAR .)


state 582

    (145) raster -> begin RASTER STRING . STRING NUMERIC NUMERIC NUMERIC end RASTER

    STRING          shift and go to state 689


state 583

    (96) generic_parameter_list_optional -> generic_parameter_list .

    end             reduce using rule 96 (generic_parameter_list_optional -> generic_parameter_list .)


state 584

    (92) generic_parameter -> begin IDENT generic_parameter_list_optional . end IDENT

    end             shift and go to state 690


state 585

    (95) generic_parameter_list_optional -> empty .

    end             reduce using rule 95 (generic_parameter_list_optional -> empty .)


state 586

    (149) checksum -> begin CHECKSUM IDENT . IDENT NUMERIC end CHECKSUM

    IDENT           shift and go to state 691


state 587

    (148) checksum -> begin CHECKSUM STRING . end CHECKSUM

    end             shift and go to state 692


state 588

    (147) seed_key -> begin SEED_KEY STRING . STRING STRING end SEED_KEY

    STRING          shift and go to state 693


state 589

    (152) source -> begin SOURCE IDENT . NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE

    NUMERIC         shift and go to state 694


state 590

    (146) event_group -> begin EVENT_GROUP STRING . STRING NUMERIC end EVENT_GROUP

    STRING          shift and go to state 695


state 591

    (132) if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA .

    begin           reduce using rule 132 (if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA .)
    end             reduce using rule 132 (if_data_module -> begin IF_DATA IDENT if_data_module_optional_parameter_list_optional end IF_DATA .)


state 592

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC . number_list compu_tab_optional end COMPU_TAB
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 696

state 593

    (192) mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON .

    begin           reduce using rule 192 (mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON .)
    end             reduce using rule 192 (mod_common -> begin MOD_COMMON STRING mod_common_optional_parameter_list_optional end MOD_COMMON .)


state 594

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC . IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 697


state 595

    (688) unit_type -> DERIVED .

    SI_EXPONENTS    reduce using rule 688 (unit_type -> DERIVED .)
    REF_UNIT        reduce using rule 688 (unit_type -> DERIVED .)
    UNIT_CONVERSION reduce using rule 688 (unit_type -> DERIVED .)
    end             reduce using rule 688 (unit_type -> DERIVED .)


state 596

    (686) unit -> begin UNIT IDENT STRING STRING unit_type . unit_optional_list_optional end UNIT
    (694) unit_optional_list_optional -> . empty
    (695) unit_optional_list_optional -> . unit_optional_list
    (698) empty -> .
    (692) unit_optional_list -> . unit_optional
    (693) unit_optional_list -> . unit_optional unit_optional_list
    (689) unit_optional -> . si_exponents
    (690) unit_optional -> . ref_unit
    (691) unit_optional -> . unit_conversion
    (696) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (473) ref_unit -> . REF_UNIT IDENT
    (697) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 698 (empty -> .)
    SI_EXPONENTS    shift and go to state 699
    REF_UNIT        shift and go to state 700
    UNIT_CONVERSION shift and go to state 706

    unit_optional_list             shift and go to state 698
    unit_optional_list_optional    shift and go to state 701
    unit_conversion                shift and go to state 702
    si_exponents                   shift and go to state 703
    ref_unit                       shift and go to state 705
    unit_optional                  shift and go to state 707
    empty                          shift and go to state 704

state 597

    (687) unit_type -> EXTENDED_SI .

    SI_EXPONENTS    reduce using rule 687 (unit_type -> EXTENDED_SI .)
    REF_UNIT        reduce using rule 687 (unit_type -> EXTENDED_SI .)
    UNIT_CONVERSION reduce using rule 687 (unit_type -> EXTENDED_SI .)
    end             reduce using rule 687 (unit_type -> EXTENDED_SI .)


state 598

    (685) ref_group -> begin REF_GROUP ident_list . end REF_GROUP

    end             shift and go to state 708


state 599

    (678) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .

    begin           reduce using rule 678 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)
    end             reduce using rule 678 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)


state 600

    (663) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC . frame_optional_list_optional end FRAME
    (675) frame_optional_list_optional -> . empty
    (676) frame_optional_list_optional -> . frame_optional_list
    (698) empty -> .
    (673) frame_optional_list -> . frame_optional
    (674) frame_optional_list -> . frame_optional frame_optional_list
    (664) frame_optional -> . frame_measurement
    (665) frame_optional -> . if_data_frame
    (677) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (666) if_data_frame -> . begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA

    end             reduce using rule 698 (empty -> .)
    FRAME_MEASUREMENT shift and go to state 713
    begin           shift and go to state 709

    frame_optional_list            shift and go to state 711
    frame_optional_list_optional   shift and go to state 710
    if_data_frame                  shift and go to state 712
    frame_optional                 shift and go to state 714
    empty                          shift and go to state 715
    frame_measurement              shift and go to state 716

state 601

    (493) number_string_value -> NUMERIC . STRING

    STRING          shift and go to state 717


state 602

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list . compu_vtab_optional end COMPU_VTAB
    (494) compu_vtab_optional -> . empty
    (495) compu_vtab_optional -> . default_value
    (698) empty -> .
    (487) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 698 (empty -> .)
    DEFAULT_VALUE   shift and go to state 676

    default_value                  shift and go to state 718
    compu_vtab_optional            shift and go to state 719
    empty                          shift and go to state 720

state 603

    (491) number_string_value_list -> number_string_value .
    (492) number_string_value_list -> number_string_value . number_string_value_list
    (491) number_string_value_list -> . number_string_value
    (492) number_string_value_list -> . number_string_value number_string_value_list
    (493) number_string_value -> . NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 491 (number_string_value_list -> number_string_value .)
    end             reduce using rule 491 (number_string_value_list -> number_string_value .)
    NUMERIC         shift and go to state 601

    number_string_value            shift and go to state 603
    number_string_value_list       shift and go to state 721

state 604

    (527) group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .

    begin           reduce using rule 527 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)
    end             reduce using rule 527 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)


state 605

    (544) sub_group -> begin SUB_GROUP ident_list . end SUB_GROUP

    end             shift and go to state 722


state 606

    (288) function_list -> begin FUNCTION_LIST ident_list . end FUNCTION_LIST

    end             shift and go to state 723


state 607

    (539) ref_measurement_optional -> IDENT .

    IDENT           reduce using rule 539 (ref_measurement_optional -> IDENT .)
    end             reduce using rule 539 (ref_measurement_optional -> IDENT .)


state 608

    (543) ref_measurement_optional_list_optional -> ref_measurement_optional_list .

    end             reduce using rule 543 (ref_measurement_optional_list_optional -> ref_measurement_optional_list .)


state 609

    (540) ref_measurement_optional_list -> ref_measurement_optional .
    (541) ref_measurement_optional_list -> ref_measurement_optional . ref_measurement_optional_list
    (540) ref_measurement_optional_list -> . ref_measurement_optional
    (541) ref_measurement_optional_list -> . ref_measurement_optional ref_measurement_optional_list
    (539) ref_measurement_optional -> . IDENT

    end             reduce using rule 540 (ref_measurement_optional_list -> ref_measurement_optional .)
    IDENT           shift and go to state 607

    ref_measurement_optional       shift and go to state 609
    ref_measurement_optional_list  shift and go to state 724

state 610

    (538) ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional . end REF_MEASUREMENT

    end             shift and go to state 725


state 611

    (542) ref_measurement_optional_list_optional -> empty .

    end             reduce using rule 542 (ref_measurement_optional_list_optional -> empty .)


state 612

    (518) ref_characteristic_optional_list -> ref_characteristic_optional .
    (519) ref_characteristic_optional_list -> ref_characteristic_optional . ref_characteristic_optional_list
    (518) ref_characteristic_optional_list -> . ref_characteristic_optional
    (519) ref_characteristic_optional_list -> . ref_characteristic_optional ref_characteristic_optional_list
    (517) ref_characteristic_optional -> . IDENT

    end             reduce using rule 518 (ref_characteristic_optional_list -> ref_characteristic_optional .)
    IDENT           shift and go to state 613

    ref_characteristic_optional    shift and go to state 612
    ref_characteristic_optional_list shift and go to state 726

state 613

    (517) ref_characteristic_optional -> IDENT .

    IDENT           reduce using rule 517 (ref_characteristic_optional -> IDENT .)
    end             reduce using rule 517 (ref_characteristic_optional -> IDENT .)


state 614

    (521) ref_characteristic_optional_list_optional -> ref_characteristic_optional_list .

    end             reduce using rule 521 (ref_characteristic_optional_list_optional -> ref_characteristic_optional_list .)


state 615

    (520) ref_characteristic_optional_list_optional -> empty .

    end             reduce using rule 520 (ref_characteristic_optional_list_optional -> empty .)


state 616

    (516) ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional . end REF_CHARACTERISTIC

    end             shift and go to state 727


state 617

    (301) annotation -> begin ANNOTATION annotation_optional_list_optional . end ANNOTATION

    end             shift and go to state 728


state 618

    (307) annotation_text -> begin . ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 729


state 619

    (303) annotation_optional -> annotation_origin .

    ANNOTATION_LABEL reduce using rule 303 (annotation_optional -> annotation_origin .)
    ANNOTATION_ORIGIN reduce using rule 303 (annotation_optional -> annotation_origin .)
    begin           reduce using rule 303 (annotation_optional -> annotation_origin .)
    end             reduce using rule 303 (annotation_optional -> annotation_origin .)


state 620

    (305) annotation_label -> ANNOTATION_LABEL . STRING

    STRING          shift and go to state 730


state 621

    (304) annotation_optional -> annotation_text .

    ANNOTATION_LABEL reduce using rule 304 (annotation_optional -> annotation_text .)
    ANNOTATION_ORIGIN reduce using rule 304 (annotation_optional -> annotation_text .)
    begin           reduce using rule 304 (annotation_optional -> annotation_text .)
    end             reduce using rule 304 (annotation_optional -> annotation_text .)


state 622

    (311) annotation_optional_list_optional -> annotation_optional_list .

    end             reduce using rule 311 (annotation_optional_list_optional -> annotation_optional_list .)


state 623

    (306) annotation_origin -> ANNOTATION_ORIGIN . STRING

    STRING          shift and go to state 731


state 624

    (308) annotation_optional_list -> annotation_optional .
    (309) annotation_optional_list -> annotation_optional . annotation_optional_list
    (308) annotation_optional_list -> . annotation_optional
    (309) annotation_optional_list -> . annotation_optional annotation_optional_list
    (302) annotation_optional -> . annotation_label
    (303) annotation_optional -> . annotation_origin
    (304) annotation_optional -> . annotation_text
    (305) annotation_label -> . ANNOTATION_LABEL STRING
    (306) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (307) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 308 (annotation_optional_list -> annotation_optional .)
    ANNOTATION_LABEL shift and go to state 620
    ANNOTATION_ORIGIN shift and go to state 623
    begin           shift and go to state 618

    annotation_optional_list       shift and go to state 732
    annotation_origin              shift and go to state 619
    annotation_text                shift and go to state 621
    annotation_optional            shift and go to state 624
    annotation_label               shift and go to state 625

state 625

    (302) annotation_optional -> annotation_label .

    ANNOTATION_LABEL reduce using rule 302 (annotation_optional -> annotation_label .)
    ANNOTATION_ORIGIN reduce using rule 302 (annotation_optional -> annotation_label .)
    begin           reduce using rule 302 (annotation_optional -> annotation_label .)
    end             reduce using rule 302 (annotation_optional -> annotation_label .)


state 626

    (310) annotation_optional_list_optional -> empty .

    end             reduce using rule 310 (annotation_optional_list_optional -> empty .)


state 627

    (83) indexorder -> INDEX_DECR .

    PBYTE           reduce using rule 83 (indexorder -> INDEX_DECR .)
    PWORD           reduce using rule 83 (indexorder -> INDEX_DECR .)
    PLONG           reduce using rule 83 (indexorder -> INDEX_DECR .)
    DIRECT          reduce using rule 83 (indexorder -> INDEX_DECR .)


state 628

    (82) indexorder -> INDEX_INCR .

    PBYTE           reduce using rule 82 (indexorder -> INDEX_INCR .)
    PWORD           reduce using rule 82 (indexorder -> INDEX_INCR .)
    PLONG           reduce using rule 82 (indexorder -> INDEX_INCR .)
    DIRECT          reduce using rule 82 (indexorder -> INDEX_INCR .)


state 629

    (598) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 733

state 630

    (596) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 738

state 631

    (597) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 739

state 632

    (601) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 740

state 633

    (599) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 741

state 634

    (600) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 628
    INDEX_DECR      shift and go to state 627

    indexorder                     shift and go to state 742

state 635

    (591) fnc_values_index_mode -> ROW_DIR .

    PBYTE           reduce using rule 591 (fnc_values_index_mode -> ROW_DIR .)
    PWORD           reduce using rule 591 (fnc_values_index_mode -> ROW_DIR .)
    PLONG           reduce using rule 591 (fnc_values_index_mode -> ROW_DIR .)
    DIRECT          reduce using rule 591 (fnc_values_index_mode -> ROW_DIR .)


state 636

    (592) fnc_values_index_mode -> ALTERNATE_WITH_X .

    PBYTE           reduce using rule 592 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PWORD           reduce using rule 592 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PLONG           reduce using rule 592 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    DIRECT          reduce using rule 592 (fnc_values_index_mode -> ALTERNATE_WITH_X .)


state 637

    (590) fnc_values_index_mode -> COLUMN_DIR .

    PBYTE           reduce using rule 590 (fnc_values_index_mode -> COLUMN_DIR .)
    PWORD           reduce using rule 590 (fnc_values_index_mode -> COLUMN_DIR .)
    PLONG           reduce using rule 590 (fnc_values_index_mode -> COLUMN_DIR .)
    DIRECT          reduce using rule 590 (fnc_values_index_mode -> COLUMN_DIR .)


state 638

    (594) fnc_values_index_mode -> ALTERNATE_CURVES .

    PBYTE           reduce using rule 594 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PWORD           reduce using rule 594 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PLONG           reduce using rule 594 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    DIRECT          reduce using rule 594 (fnc_values_index_mode -> ALTERNATE_CURVES .)


state 639

    (589) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 743

state 640

    (593) fnc_values_index_mode -> ALTERNATE_WITH_Y .

    PBYTE           reduce using rule 593 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PWORD           reduce using rule 593 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PLONG           reduce using rule 593 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    DIRECT          reduce using rule 593 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)


state 641

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING . compu_method_optional_list_optional end COMPU_METHOD
    (476) compu_method_optional_list_optional -> . empty
    (477) compu_method_optional_list_optional -> . compu_method_optional_list
    (698) empty -> .
    (474) compu_method_optional_list -> . compu_method_optional
    (475) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (461) compu_method_optional -> . formula
    (462) compu_method_optional -> . coeffs
    (463) compu_method_optional -> . coeffs_linear
    (464) compu_method_optional -> . compu_tab_ref
    (465) compu_method_optional -> . ref_unit
    (466) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (470) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (471) coeffs_linear -> . COEFFS_LINEAR NUMERIC NUMERIC
    (472) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (473) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 752
    COEFFS          shift and go to state 756
    COEFFS_LINEAR   shift and go to state 747
    COMPU_TAB_REF   shift and go to state 744
    REF_UNIT        shift and go to state 700

    ref_unit                       shift and go to state 749
    compu_tab_ref                  shift and go to state 755
    compu_method_optional_list_optional shift and go to state 745
    compu_method_optional_list     shift and go to state 746
    compu_method_optional          shift and go to state 748
    coeffs                         shift and go to state 753
    formula                        shift and go to state 750
    coeffs_linear                  shift and go to state 754
    empty                          shift and go to state 751

state 642

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)
    SEMICOLON       reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)


state 643

    (32) a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list .

    CURLY_CLOSE     reduce using rule 32 (a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list .)


state 644

    (33) a2ml_struct_member -> a2ml_member SEMICOLON .

    char            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    int             reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    long            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    uchar           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    uint            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    ulong           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    double          reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    float           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    struct          reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    enum            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    taggedstruct    reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    taggedunion     reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    CURLY_CLOSE     reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)


state 645

    (37) a2ml_array_specifier_optional -> empty .

    SEMICOLON       reduce using rule 37 (a2ml_array_specifier_optional -> empty .)
    PARENTHESE_CLOSE reduce using rule 37 (a2ml_array_specifier_optional -> empty .)


state 646

    (38) a2ml_array_specifier_optional -> a2ml_array_specifier .

    SEMICOLON       reduce using rule 38 (a2ml_array_specifier_optional -> a2ml_array_specifier .)
    PARENTHESE_CLOSE reduce using rule 38 (a2ml_array_specifier_optional -> a2ml_array_specifier .)


state 647

    (39) a2ml_array_specifier -> BRACE_OPEN . a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> BRACE_OPEN . a2ml_constant BRACE_CLOSE a2ml_array_specifier
    (64) a2ml_constant -> . NUMERIC

    NUMERIC         shift and go to state 757

    a2ml_constant                  shift and go to state 758

state 648

    (34) a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .

    SEMICOLON       reduce using rule 34 (a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .)
    PARENTHESE_CLOSE reduce using rule 34 (a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .)


state 649

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)
    SEMICOLON       reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)


state 650

    (56) a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list .

    CURLY_CLOSE     reduce using rule 56 (a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list .)


state 651

    (57) a2ml_taggedunion_member -> a2ml_tag a2ml_member . SEMICOLON

    SEMICOLON       shift and go to state 759


state 652

    (58) a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .

    STRING          reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)
    block           reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)


state 653

    (25) a2ml_enumerator -> a2ml_keyword EQUAL . a2ml_constant
    (64) a2ml_constant -> . NUMERIC

    NUMERIC         shift and go to state 757

    a2ml_constant                  shift and go to state 760

state 654

    (24) a2ml_enumerator_list -> a2ml_enumerator COMMA . a2ml_enumerator_list
    (23) a2ml_enumerator_list -> . a2ml_enumerator
    (24) a2ml_enumerator_list -> . a2ml_enumerator COMMA a2ml_enumerator_list
    (25) a2ml_enumerator -> . a2ml_keyword EQUAL a2ml_constant
    (26) a2ml_enumerator -> . a2ml_keyword
    (63) a2ml_keyword -> . STRING

    STRING          shift and go to state 544

    a2ml_keyword                   shift and go to state 543
    a2ml_enumerator                shift and go to state 545
    a2ml_enumerator_list           shift and go to state 761

state 655

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)
    SEMICOLON       reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)


state 656

    (49) a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .

    PARENTHESE_OPEN reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    block           reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    STRING          reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)


state 657

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition . PARENTHESE_CLOSE ASTERISK SEMICOLON

    PARENTHESE_CLOSE shift and go to state 762


state 658

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition . PARENTHESE_CLOSE ASTERISK SEMICOLON

    PARENTHESE_CLOSE shift and go to state 763


state 659

    (46) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list .

    CURLY_CLOSE     reduce using rule 46 (a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list .)


state 660

    (47) a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .

    PARENTHESE_OPEN reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    block           reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    STRING          reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)


state 661

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN . a2ml_member PARENTHESE_CLOSE ASTERISK
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 93
    int             shift and go to state 90
    long            shift and go to state 94
    uchar           shift and go to state 97
    uint            shift and go to state 107
    ulong           shift and go to state 105
    double          shift and go to state 110
    float           shift and go to state 104
    struct          shift and go to state 96
    enum            shift and go to state 106
    taggedstruct    shift and go to state 108
    taggedunion     shift and go to state 99

    a2ml_struct_type_name          shift and go to state 95
    a2ml_enum_type_name            shift and go to state 98
    a2ml_taggedstruct_type_name    shift and go to state 100
    a2ml_predefined_type_name      shift and go to state 101
    a2ml_taggedunion_type_name     shift and go to state 103
    a2ml_member                    shift and go to state 764
    a2ml_type_name                 shift and go to state 537

state 662

    (36) a2ml_member_optional -> a2ml_member .

    SEMICOLON       reduce using rule 36 (a2ml_member_optional -> a2ml_member .)
    PARENTHESE_CLOSE reduce using rule 36 (a2ml_member_optional -> a2ml_member .)


state 663

    (35) a2ml_member_optional -> empty .

    SEMICOLON       reduce using rule 35 (a2ml_member_optional -> empty .)
    PARENTHESE_CLOSE reduce using rule 35 (a2ml_member_optional -> empty .)


state 664

    (51) a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .

    SEMICOLON       reduce using rule 51 (a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .)
    PARENTHESE_CLOSE reduce using rule 51 (a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .)


state 665

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .

    SEMICOLON       reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)
    BRACE_OPEN      reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)


state 666

    (100) ident_list -> IDENT ident_list .

    end             reduce using rule 100 (ident_list -> IDENT ident_list .)
    begin           reduce using rule 100 (ident_list -> IDENT ident_list .)
    VAR_MEASUREMENT reduce using rule 100 (ident_list -> IDENT ident_list .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 100 (ident_list -> IDENT ident_list .)
    FRAME_MEASUREMENT reduce using rule 100 (ident_list -> IDENT ident_list .)


state 667

    (642) var_address -> begin . VAR_ADDRESS number_list end VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 765


state 668

    (641) var_characteristic_optional -> var_address .

    end             reduce using rule 641 (var_characteristic_optional -> var_address .)


state 669

    (640) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional . end VAR_CHARACTERISTIC

    end             shift and go to state 766


state 670

    (645) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .

    VAR_SEPARATOR   reduce using rule 645 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    VAR_NAMING      reduce using rule 645 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    begin           reduce using rule 645 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    end             reduce using rule 645 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)


state 671

    (649) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list . var_criterion_optional_list_optional end VAR_CRITERION
    (654) var_criterion_optional_list_optional -> . empty
    (655) var_criterion_optional_list_optional -> . var_criterion_optional_list
    (698) empty -> .
    (652) var_criterion_optional_list -> . var_criterion_optional
    (653) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (650) var_criterion_optional -> . var_measurement
    (651) var_criterion_optional -> . var_selection_characteristic
    (656) var_measurement -> . VAR_MEASUREMENT IDENT
    (657) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 698 (empty -> .)
    VAR_MEASUREMENT shift and go to state 769
    VAR_SELECTION_CHARACTERISTIC shift and go to state 772

    var_criterion_optional         shift and go to state 767
    var_criterion_optional_list    shift and go to state 768
    var_criterion_optional_list_optional shift and go to state 770
    var_selection_characteristic   shift and go to state 771
    var_measurement                shift and go to state 773
    empty                          shift and go to state 774

state 672

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT . NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 775


state 673

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC . NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 776


state 674

    (498) number_number_string_value_list -> number_number_string_value number_number_string_value_list .

    DEFAULT_VALUE   reduce using rule 498 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)
    end             reduce using rule 498 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)


state 675

    (501) compu_vtab_range_optional -> default_value .

    end             reduce using rule 501 (compu_vtab_range_optional -> default_value .)


state 676

    (487) default_value -> DEFAULT_VALUE . STRING

    STRING          shift and go to state 777


state 677

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional . end COMPU_VTAB_RANGE

    end             shift and go to state 778


state 678

    (500) compu_vtab_range_optional -> empty .

    end             reduce using rule 500 (compu_vtab_range_optional -> empty .)


state 679

    (499) number_number_string_value -> NUMERIC NUMERIC . STRING

    STRING          shift and go to state 779


state 680

    (524) loc_measurement -> begin LOC_MEASUREMENT ident_list . end LOC_MEASUREMENT

    end             shift and go to state 780


state 681

    (515) def_characteristic -> begin DEF_CHARACTERISTIC ident_list . end DEF_CHARACTERISTIC

    end             shift and go to state 781


state 682

    (525) sub_function -> begin SUB_FUNCTION ident_list . end SUB_FUNCTION

    end             shift and go to state 782


state 683

    (522) in_measurement -> begin IN_MEASUREMENT ident_list . end IN_MEASUREMENT

    end             shift and go to state 783


state 684

    (523) out_measurement -> begin OUT_MEASUREMENT ident_list . end OUT_MEASUREMENT

    end             shift and go to state 784


state 685

    (502) function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .

    begin           reduce using rule 502 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)
    end             reduce using rule 502 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)


state 686

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC . NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT

    NUMERIC         shift and go to state 785


state 687

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING . memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (231) memory_segment_prg_type -> . CODE
    (232) memory_segment_prg_type -> . DATA
    (233) memory_segment_prg_type -> . OFFLINE_DATA
    (234) memory_segment_prg_type -> . VARIABLES
    (235) memory_segment_prg_type -> . SERAM
    (236) memory_segment_prg_type -> . RESERVED
    (237) memory_segment_prg_type -> . CALIBRATION_VARIABLES
    (238) memory_segment_prg_type -> . EXCLUDE_FROM_FLASH

    CODE            shift and go to state 792
    DATA            shift and go to state 793
    OFFLINE_DATA    shift and go to state 788
    VARIABLES       shift and go to state 787
    SERAM           shift and go to state 791
    RESERVED        shift and go to state 786
    CALIBRATION_VARIABLES shift and go to state 789
    EXCLUDE_FROM_FLASH shift and go to state 790

    memory_segment_prg_type        shift and go to state 794

state 688

    (212) calibration_method -> begin CALIBRATION_METHOD number_list end . CALIBRATION_METHOD

    CALIBRATION_METHOD shift and go to state 795


state 689

    (145) raster -> begin RASTER STRING STRING . NUMERIC NUMERIC NUMERIC end RASTER

    NUMERIC         shift and go to state 796


state 690

    (92) generic_parameter -> begin IDENT generic_parameter_list_optional end . IDENT

    IDENT           shift and go to state 797


state 691

    (149) checksum -> begin CHECKSUM IDENT IDENT . NUMERIC end CHECKSUM

    NUMERIC         shift and go to state 798


state 692

    (148) checksum -> begin CHECKSUM STRING end . CHECKSUM

    CHECKSUM        shift and go to state 799


state 693

    (147) seed_key -> begin SEED_KEY STRING STRING . STRING end SEED_KEY

    STRING          shift and go to state 800


state 694

    (152) source -> begin SOURCE IDENT NUMERIC . NUMERIC source_optional_parameter_list_optional end SOURCE

    NUMERIC         shift and go to state 801


state 695

    (146) event_group -> begin EVENT_GROUP STRING STRING . NUMERIC end EVENT_GROUP

    NUMERIC         shift and go to state 802


state 696

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list . compu_tab_optional end COMPU_TAB
    (484) compu_tab_optional -> . empty
    (485) compu_tab_optional -> . default_value
    (486) compu_tab_optional -> . default_value_numeric
    (698) empty -> .
    (487) default_value -> . DEFAULT_VALUE STRING
    (488) default_value_numeric -> . DEFAULT_VALUE_NUMERIC NUMERIC

    end             reduce using rule 698 (empty -> .)
    DEFAULT_VALUE   shift and go to state 676
    DEFAULT_VALUE_NUMERIC shift and go to state 804

    default_value                  shift and go to state 803
    default_value_numeric          shift and go to state 805
    compu_tab_optional             shift and go to state 806
    empty                          shift and go to state 807

state 697

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT . NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 808


state 698

    (695) unit_optional_list_optional -> unit_optional_list .

    end             reduce using rule 695 (unit_optional_list_optional -> unit_optional_list .)


state 699

    (696) si_exponents -> SI_EXPONENTS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 809


state 700

    (473) ref_unit -> REF_UNIT . IDENT

    IDENT           shift and go to state 810


state 701

    (686) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional . end UNIT

    end             shift and go to state 811


state 702

    (691) unit_optional -> unit_conversion .

    SI_EXPONENTS    reduce using rule 691 (unit_optional -> unit_conversion .)
    REF_UNIT        reduce using rule 691 (unit_optional -> unit_conversion .)
    UNIT_CONVERSION reduce using rule 691 (unit_optional -> unit_conversion .)
    end             reduce using rule 691 (unit_optional -> unit_conversion .)


state 703

    (689) unit_optional -> si_exponents .

    SI_EXPONENTS    reduce using rule 689 (unit_optional -> si_exponents .)
    REF_UNIT        reduce using rule 689 (unit_optional -> si_exponents .)
    UNIT_CONVERSION reduce using rule 689 (unit_optional -> si_exponents .)
    end             reduce using rule 689 (unit_optional -> si_exponents .)


state 704

    (694) unit_optional_list_optional -> empty .

    end             reduce using rule 694 (unit_optional_list_optional -> empty .)


state 705

    (690) unit_optional -> ref_unit .

    SI_EXPONENTS    reduce using rule 690 (unit_optional -> ref_unit .)
    REF_UNIT        reduce using rule 690 (unit_optional -> ref_unit .)
    UNIT_CONVERSION reduce using rule 690 (unit_optional -> ref_unit .)
    end             reduce using rule 690 (unit_optional -> ref_unit .)


state 706

    (697) unit_conversion -> UNIT_CONVERSION . NUMERIC NUMERIC

    NUMERIC         shift and go to state 812


state 707

    (692) unit_optional_list -> unit_optional .
    (693) unit_optional_list -> unit_optional . unit_optional_list
    (692) unit_optional_list -> . unit_optional
    (693) unit_optional_list -> . unit_optional unit_optional_list
    (689) unit_optional -> . si_exponents
    (690) unit_optional -> . ref_unit
    (691) unit_optional -> . unit_conversion
    (696) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (473) ref_unit -> . REF_UNIT IDENT
    (697) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 692 (unit_optional_list -> unit_optional .)
    SI_EXPONENTS    shift and go to state 699
    REF_UNIT        shift and go to state 700
    UNIT_CONVERSION shift and go to state 706

    ref_unit                       shift and go to state 705
    si_exponents                   shift and go to state 703
    unit_optional                  shift and go to state 707
    unit_conversion                shift and go to state 702
    unit_optional_list             shift and go to state 813

state 708

    (685) ref_group -> begin REF_GROUP ident_list end . REF_GROUP

    REF_GROUP       shift and go to state 814


state 709

    (666) if_data_frame -> begin . IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA

    IF_DATA         shift and go to state 815


state 710

    (663) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional . end FRAME

    end             shift and go to state 816


state 711

    (676) frame_optional_list_optional -> frame_optional_list .

    end             reduce using rule 676 (frame_optional_list_optional -> frame_optional_list .)


state 712

    (665) frame_optional -> if_data_frame .

    FRAME_MEASUREMENT reduce using rule 665 (frame_optional -> if_data_frame .)
    begin           reduce using rule 665 (frame_optional -> if_data_frame .)
    end             reduce using rule 665 (frame_optional -> if_data_frame .)


state 713

    (677) frame_measurement -> FRAME_MEASUREMENT . ident_list
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 817

state 714

    (673) frame_optional_list -> frame_optional .
    (674) frame_optional_list -> frame_optional . frame_optional_list
    (673) frame_optional_list -> . frame_optional
    (674) frame_optional_list -> . frame_optional frame_optional_list
    (664) frame_optional -> . frame_measurement
    (665) frame_optional -> . if_data_frame
    (677) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (666) if_data_frame -> . begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA

    end             reduce using rule 673 (frame_optional_list -> frame_optional .)
    FRAME_MEASUREMENT shift and go to state 713
    begin           shift and go to state 709

    frame_optional_list            shift and go to state 818
    if_data_frame                  shift and go to state 712
    frame_measurement              shift and go to state 716
    frame_optional                 shift and go to state 714

state 715

    (675) frame_optional_list_optional -> empty .

    end             reduce using rule 675 (frame_optional_list_optional -> empty .)


state 716

    (664) frame_optional -> frame_measurement .

    FRAME_MEASUREMENT reduce using rule 664 (frame_optional -> frame_measurement .)
    begin           reduce using rule 664 (frame_optional -> frame_measurement .)
    end             reduce using rule 664 (frame_optional -> frame_measurement .)


state 717

    (493) number_string_value -> NUMERIC STRING .

    NUMERIC         reduce using rule 493 (number_string_value -> NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 493 (number_string_value -> NUMERIC STRING .)
    end             reduce using rule 493 (number_string_value -> NUMERIC STRING .)


state 718

    (495) compu_vtab_optional -> default_value .

    end             reduce using rule 495 (compu_vtab_optional -> default_value .)


state 719

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional . end COMPU_VTAB

    end             shift and go to state 819


state 720

    (494) compu_vtab_optional -> empty .

    end             reduce using rule 494 (compu_vtab_optional -> empty .)


state 721

    (492) number_string_value_list -> number_string_value number_string_value_list .

    DEFAULT_VALUE   reduce using rule 492 (number_string_value_list -> number_string_value number_string_value_list .)
    end             reduce using rule 492 (number_string_value_list -> number_string_value number_string_value_list .)


state 722

    (544) sub_group -> begin SUB_GROUP ident_list end . SUB_GROUP

    SUB_GROUP       shift and go to state 820


state 723

    (288) function_list -> begin FUNCTION_LIST ident_list end . FUNCTION_LIST

    FUNCTION_LIST   shift and go to state 821


state 724

    (541) ref_measurement_optional_list -> ref_measurement_optional ref_measurement_optional_list .

    end             reduce using rule 541 (ref_measurement_optional_list -> ref_measurement_optional ref_measurement_optional_list .)


state 725

    (538) ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end . REF_MEASUREMENT

    REF_MEASUREMENT shift and go to state 822


state 726

    (519) ref_characteristic_optional_list -> ref_characteristic_optional ref_characteristic_optional_list .

    end             reduce using rule 519 (ref_characteristic_optional_list -> ref_characteristic_optional ref_characteristic_optional_list .)


state 727

    (516) ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end . REF_CHARACTERISTIC

    REF_CHARACTERISTIC shift and go to state 823


state 728

    (301) annotation -> begin ANNOTATION annotation_optional_list_optional end . ANNOTATION

    ANNOTATION      shift and go to state 824


state 729

    (307) annotation_text -> begin ANNOTATION_TEXT . string_list end ANNOTATION_TEXT
    (101) string_list -> . STRING
    (102) string_list -> . STRING string_list

    STRING          shift and go to state 826

    string_list                    shift and go to state 825

state 730

    (305) annotation_label -> ANNOTATION_LABEL STRING .

    ANNOTATION_LABEL reduce using rule 305 (annotation_label -> ANNOTATION_LABEL STRING .)
    ANNOTATION_ORIGIN reduce using rule 305 (annotation_label -> ANNOTATION_LABEL STRING .)
    begin           reduce using rule 305 (annotation_label -> ANNOTATION_LABEL STRING .)
    end             reduce using rule 305 (annotation_label -> ANNOTATION_LABEL STRING .)


state 731

    (306) annotation_origin -> ANNOTATION_ORIGIN STRING .

    ANNOTATION_LABEL reduce using rule 306 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    ANNOTATION_ORIGIN reduce using rule 306 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    begin           reduce using rule 306 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    end             reduce using rule 306 (annotation_origin -> ANNOTATION_ORIGIN STRING .)


state 732

    (309) annotation_optional_list -> annotation_optional annotation_optional_list .

    end             reduce using rule 309 (annotation_optional_list -> annotation_optional annotation_optional_list .)


state 733

    (598) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 598 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)


state 734

    (78) addrtype -> PBYTE .

    FNC_VALUES      reduce using rule 78 (addrtype -> PBYTE .)
    IDENTIFICATION  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_X      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_Y      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_Z      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_X  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_Y  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_Z  reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_X   reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_X    reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_Y    reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_Z    reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_X      reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_Y      reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_Z      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_X      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_Y      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_Z      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_W      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_X      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_Y      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_Z      reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_X        reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_Y        reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_Z        reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_X       reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_Y       reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_Z       reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_BYTE  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_WORD  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_LONG  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 78 (addrtype -> PBYTE .)
    RESERVED        reduce using rule 78 (addrtype -> PBYTE .)
    end             reduce using rule 78 (addrtype -> PBYTE .)


state 735

    (81) addrtype -> DIRECT .

    FNC_VALUES      reduce using rule 81 (addrtype -> DIRECT .)
    IDENTIFICATION  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_X      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_Y      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_Z      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_X  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_Y  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_Z  reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_X   reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Y   reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Z   reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_X    reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_Y    reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_Z    reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_X reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Y reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Z reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_X      reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_Y      reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_Z      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_X      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_Y      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_Z      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_W      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_X      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_Y      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_Z      reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_X        reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_Y        reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_Z        reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_X       reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_Y       reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_Z       reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_BYTE  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_WORD  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_LONG  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 81 (addrtype -> DIRECT .)
    RESERVED        reduce using rule 81 (addrtype -> DIRECT .)
    end             reduce using rule 81 (addrtype -> DIRECT .)


state 736

    (79) addrtype -> PWORD .

    FNC_VALUES      reduce using rule 79 (addrtype -> PWORD .)
    IDENTIFICATION  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_X      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_Y      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_Z      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_X  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_Y  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_Z  reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_X   reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_Y   reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_Z   reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_X    reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_Y    reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_Z    reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_X      reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_Y      reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_Z      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_X      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_Y      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_Z      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_W      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_X      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_Y      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_Z      reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_X        reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_Y        reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_Z        reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_X       reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_Y       reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_Z       reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_BYTE  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_WORD  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_LONG  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 79 (addrtype -> PWORD .)
    RESERVED        reduce using rule 79 (addrtype -> PWORD .)
    end             reduce using rule 79 (addrtype -> PWORD .)


state 737

    (80) addrtype -> PLONG .

    FNC_VALUES      reduce using rule 80 (addrtype -> PLONG .)
    IDENTIFICATION  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_X      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_Y      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_Z      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_X  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_Y  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_Z  reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_X   reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_Y   reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_Z   reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_X    reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_Y    reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_Z    reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_X      reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_Y      reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_Z      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_X      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_Y      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_Z      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_W      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_X      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_Y      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_Z      reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_X        reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_Y        reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_Z        reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_X       reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_Y       reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_Z       reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_BYTE  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_WORD  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_LONG  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 80 (addrtype -> PLONG .)
    RESERVED        reduce using rule 80 (addrtype -> PLONG .)
    end             reduce using rule 80 (addrtype -> PLONG .)


state 738

    (596) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 596 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)


state 739

    (597) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 597 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)


state 740

    (601) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 827

state 741

    (599) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 828

state 742

    (600) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 734
    PWORD           shift and go to state 736
    PLONG           shift and go to state 737
    DIRECT          shift and go to state 735

    addrtype                       shift and go to state 829

state 743

    (589) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .

    FNC_VALUES      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    IDENTIFICATION  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_X      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Y      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Z      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_X  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Y  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Z  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_X   reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_X    reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Y    reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Z    reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_X      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Y      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Z      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_X      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Y      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Z      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_W      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_X      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Y      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Z      reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_X        reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Y        reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Z        reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_X       reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Y       reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Z       reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_BYTE  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_WORD  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_LONG  reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RESERVED        reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    end             reduce using rule 589 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)


state 744

    (472) compu_tab_ref -> COMPU_TAB_REF . IDENT

    IDENT           shift and go to state 830


state 745

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional . end COMPU_METHOD

    end             shift and go to state 831


state 746

    (477) compu_method_optional_list_optional -> compu_method_optional_list .

    end             reduce using rule 477 (compu_method_optional_list_optional -> compu_method_optional_list .)


state 747

    (471) coeffs_linear -> COEFFS_LINEAR . NUMERIC NUMERIC

    NUMERIC         shift and go to state 832


state 748

    (474) compu_method_optional_list -> compu_method_optional .
    (475) compu_method_optional_list -> compu_method_optional . compu_method_optional_list
    (474) compu_method_optional_list -> . compu_method_optional
    (475) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (461) compu_method_optional -> . formula
    (462) compu_method_optional -> . coeffs
    (463) compu_method_optional -> . coeffs_linear
    (464) compu_method_optional -> . compu_tab_ref
    (465) compu_method_optional -> . ref_unit
    (466) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (470) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (471) coeffs_linear -> . COEFFS_LINEAR NUMERIC NUMERIC
    (472) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (473) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 474 (compu_method_optional_list -> compu_method_optional .)
    begin           shift and go to state 752
    COEFFS          shift and go to state 756
    COEFFS_LINEAR   shift and go to state 747
    COMPU_TAB_REF   shift and go to state 744
    REF_UNIT        shift and go to state 700

    compu_tab_ref                  shift and go to state 755
    compu_method_optional          shift and go to state 748
    compu_method_optional_list     shift and go to state 833
    ref_unit                       shift and go to state 749
    coeffs                         shift and go to state 753
    formula                        shift and go to state 750
    coeffs_linear                  shift and go to state 754

state 749

    (465) compu_method_optional -> ref_unit .

    begin           reduce using rule 465 (compu_method_optional -> ref_unit .)
    COEFFS          reduce using rule 465 (compu_method_optional -> ref_unit .)
    COEFFS_LINEAR   reduce using rule 465 (compu_method_optional -> ref_unit .)
    COMPU_TAB_REF   reduce using rule 465 (compu_method_optional -> ref_unit .)
    REF_UNIT        reduce using rule 465 (compu_method_optional -> ref_unit .)
    end             reduce using rule 465 (compu_method_optional -> ref_unit .)


state 750

    (461) compu_method_optional -> formula .

    begin           reduce using rule 461 (compu_method_optional -> formula .)
    COEFFS          reduce using rule 461 (compu_method_optional -> formula .)
    COEFFS_LINEAR   reduce using rule 461 (compu_method_optional -> formula .)
    COMPU_TAB_REF   reduce using rule 461 (compu_method_optional -> formula .)
    REF_UNIT        reduce using rule 461 (compu_method_optional -> formula .)
    end             reduce using rule 461 (compu_method_optional -> formula .)


state 751

    (476) compu_method_optional_list_optional -> empty .

    end             reduce using rule 476 (compu_method_optional_list_optional -> empty .)


state 752

    (466) formula -> begin . FORMULA STRING formula_optional end FORMULA

    FORMULA         shift and go to state 834


state 753

    (462) compu_method_optional -> coeffs .

    begin           reduce using rule 462 (compu_method_optional -> coeffs .)
    COEFFS          reduce using rule 462 (compu_method_optional -> coeffs .)
    COEFFS_LINEAR   reduce using rule 462 (compu_method_optional -> coeffs .)
    COMPU_TAB_REF   reduce using rule 462 (compu_method_optional -> coeffs .)
    REF_UNIT        reduce using rule 462 (compu_method_optional -> coeffs .)
    end             reduce using rule 462 (compu_method_optional -> coeffs .)


state 754

    (463) compu_method_optional -> coeffs_linear .

    begin           reduce using rule 463 (compu_method_optional -> coeffs_linear .)
    COEFFS          reduce using rule 463 (compu_method_optional -> coeffs_linear .)
    COEFFS_LINEAR   reduce using rule 463 (compu_method_optional -> coeffs_linear .)
    COMPU_TAB_REF   reduce using rule 463 (compu_method_optional -> coeffs_linear .)
    REF_UNIT        reduce using rule 463 (compu_method_optional -> coeffs_linear .)
    end             reduce using rule 463 (compu_method_optional -> coeffs_linear .)


state 755

    (464) compu_method_optional -> compu_tab_ref .

    begin           reduce using rule 464 (compu_method_optional -> compu_tab_ref .)
    COEFFS          reduce using rule 464 (compu_method_optional -> compu_tab_ref .)
    COEFFS_LINEAR   reduce using rule 464 (compu_method_optional -> compu_tab_ref .)
    COMPU_TAB_REF   reduce using rule 464 (compu_method_optional -> compu_tab_ref .)
    REF_UNIT        reduce using rule 464 (compu_method_optional -> compu_tab_ref .)
    end             reduce using rule 464 (compu_method_optional -> compu_tab_ref .)


state 756

    (470) coeffs -> COEFFS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 835


state 757

    (64) a2ml_constant -> NUMERIC .

    COMMA           reduce using rule 64 (a2ml_constant -> NUMERIC .)
    CURLY_CLOSE     reduce using rule 64 (a2ml_constant -> NUMERIC .)
    BRACE_CLOSE     reduce using rule 64 (a2ml_constant -> NUMERIC .)


state 758

    (39) a2ml_array_specifier -> BRACE_OPEN a2ml_constant . BRACE_CLOSE
    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant . BRACE_CLOSE a2ml_array_specifier

    BRACE_CLOSE     shift and go to state 836


state 759

    (57) a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .

    STRING          reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)
    block           reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)
    CURLY_CLOSE     reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)


state 760

    (25) a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .

    COMMA           reduce using rule 25 (a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .)
    CURLY_CLOSE     reduce using rule 25 (a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .)


state 761

    (24) a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list .

    CURLY_CLOSE     reduce using rule 24 (a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list .)


state 762

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE . ASTERISK SEMICOLON

    ASTERISK        shift and go to state 837


state 763

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE . ASTERISK SEMICOLON

    ASTERISK        shift and go to state 838


state 764

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member . PARENTHESE_CLOSE ASTERISK

    PARENTHESE_CLOSE shift and go to state 839


state 765

    (642) var_address -> begin VAR_ADDRESS . number_list end VAR_ADDRESS
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 840

state 766

    (640) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end . VAR_CHARACTERISTIC

    VAR_CHARACTERISTIC shift and go to state 841


state 767

    (652) var_criterion_optional_list -> var_criterion_optional .
    (653) var_criterion_optional_list -> var_criterion_optional . var_criterion_optional_list
    (652) var_criterion_optional_list -> . var_criterion_optional
    (653) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (650) var_criterion_optional -> . var_measurement
    (651) var_criterion_optional -> . var_selection_characteristic
    (656) var_measurement -> . VAR_MEASUREMENT IDENT
    (657) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 652 (var_criterion_optional_list -> var_criterion_optional .)
    VAR_MEASUREMENT shift and go to state 769
    VAR_SELECTION_CHARACTERISTIC shift and go to state 772

    var_criterion_optional         shift and go to state 767
    var_selection_characteristic   shift and go to state 771
    var_measurement                shift and go to state 773
    var_criterion_optional_list    shift and go to state 842

state 768

    (655) var_criterion_optional_list_optional -> var_criterion_optional_list .

    end             reduce using rule 655 (var_criterion_optional_list_optional -> var_criterion_optional_list .)


state 769

    (656) var_measurement -> VAR_MEASUREMENT . IDENT

    IDENT           shift and go to state 843


state 770

    (649) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional . end VAR_CRITERION

    end             shift and go to state 844


state 771

    (651) var_criterion_optional -> var_selection_characteristic .

    VAR_MEASUREMENT reduce using rule 651 (var_criterion_optional -> var_selection_characteristic .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 651 (var_criterion_optional -> var_selection_characteristic .)
    end             reduce using rule 651 (var_criterion_optional -> var_selection_characteristic .)


state 772

    (657) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC . IDENT

    IDENT           shift and go to state 845


state 773

    (650) var_criterion_optional -> var_measurement .

    VAR_MEASUREMENT reduce using rule 650 (var_criterion_optional -> var_measurement .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 650 (var_criterion_optional -> var_measurement .)
    end             reduce using rule 650 (var_criterion_optional -> var_measurement .)


state 774

    (654) var_criterion_optional_list_optional -> empty .

    end             reduce using rule 654 (var_criterion_optional_list_optional -> empty .)


state 775

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC . IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 846


state 776

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC . NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 847


state 777

    (487) default_value -> DEFAULT_VALUE STRING .

    end             reduce using rule 487 (default_value -> DEFAULT_VALUE STRING .)


state 778

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end . COMPU_VTAB_RANGE

    COMPU_VTAB_RANGE shift and go to state 848


state 779

    (499) number_number_string_value -> NUMERIC NUMERIC STRING .

    NUMERIC         reduce using rule 499 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 499 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    end             reduce using rule 499 (number_number_string_value -> NUMERIC NUMERIC STRING .)


state 780

    (524) loc_measurement -> begin LOC_MEASUREMENT ident_list end . LOC_MEASUREMENT

    LOC_MEASUREMENT shift and go to state 849


state 781

    (515) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end . DEF_CHARACTERISTIC

    DEF_CHARACTERISTIC shift and go to state 850


state 782

    (525) sub_function -> begin SUB_FUNCTION ident_list end . SUB_FUNCTION

    SUB_FUNCTION    shift and go to state 851


state 783

    (522) in_measurement -> begin IN_MEASUREMENT ident_list end . IN_MEASUREMENT

    IN_MEASUREMENT  shift and go to state 852


state 784

    (523) out_measurement -> begin OUT_MEASUREMENT ident_list end . OUT_MEASUREMENT

    OUT_MEASUREMENT shift and go to state 853


state 785

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC . number_list memory_layout_parameter_optional end MEMORY_LAYOUT
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 854

state 786

    (236) memory_segment_prg_type -> RESERVED .

    RAM             reduce using rule 236 (memory_segment_prg_type -> RESERVED .)
    EEPROM          reduce using rule 236 (memory_segment_prg_type -> RESERVED .)
    EPROM           reduce using rule 236 (memory_segment_prg_type -> RESERVED .)
    ROM             reduce using rule 236 (memory_segment_prg_type -> RESERVED .)
    REGISTER        reduce using rule 236 (memory_segment_prg_type -> RESERVED .)
    FLASH           reduce using rule 236 (memory_segment_prg_type -> RESERVED .)


state 787

    (234) memory_segment_prg_type -> VARIABLES .

    RAM             reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)
    EEPROM          reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)
    EPROM           reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)
    ROM             reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)
    REGISTER        reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)
    FLASH           reduce using rule 234 (memory_segment_prg_type -> VARIABLES .)


state 788

    (233) memory_segment_prg_type -> OFFLINE_DATA .

    RAM             reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)
    EEPROM          reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)
    EPROM           reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)
    ROM             reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)
    REGISTER        reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)
    FLASH           reduce using rule 233 (memory_segment_prg_type -> OFFLINE_DATA .)


state 789

    (237) memory_segment_prg_type -> CALIBRATION_VARIABLES .

    RAM             reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)
    EEPROM          reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)
    EPROM           reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)
    ROM             reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)
    REGISTER        reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)
    FLASH           reduce using rule 237 (memory_segment_prg_type -> CALIBRATION_VARIABLES .)


state 790

    (238) memory_segment_prg_type -> EXCLUDE_FROM_FLASH .

    RAM             reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)
    EEPROM          reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)
    EPROM           reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)
    ROM             reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)
    REGISTER        reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)
    FLASH           reduce using rule 238 (memory_segment_prg_type -> EXCLUDE_FROM_FLASH .)


state 791

    (235) memory_segment_prg_type -> SERAM .

    RAM             reduce using rule 235 (memory_segment_prg_type -> SERAM .)
    EEPROM          reduce using rule 235 (memory_segment_prg_type -> SERAM .)
    EPROM           reduce using rule 235 (memory_segment_prg_type -> SERAM .)
    ROM             reduce using rule 235 (memory_segment_prg_type -> SERAM .)
    REGISTER        reduce using rule 235 (memory_segment_prg_type -> SERAM .)
    FLASH           reduce using rule 235 (memory_segment_prg_type -> SERAM .)


state 792

    (231) memory_segment_prg_type -> CODE .

    RAM             reduce using rule 231 (memory_segment_prg_type -> CODE .)
    EEPROM          reduce using rule 231 (memory_segment_prg_type -> CODE .)
    EPROM           reduce using rule 231 (memory_segment_prg_type -> CODE .)
    ROM             reduce using rule 231 (memory_segment_prg_type -> CODE .)
    REGISTER        reduce using rule 231 (memory_segment_prg_type -> CODE .)
    FLASH           reduce using rule 231 (memory_segment_prg_type -> CODE .)


state 793

    (232) memory_segment_prg_type -> DATA .

    RAM             reduce using rule 232 (memory_segment_prg_type -> DATA .)
    EEPROM          reduce using rule 232 (memory_segment_prg_type -> DATA .)
    EPROM           reduce using rule 232 (memory_segment_prg_type -> DATA .)
    ROM             reduce using rule 232 (memory_segment_prg_type -> DATA .)
    REGISTER        reduce using rule 232 (memory_segment_prg_type -> DATA .)
    FLASH           reduce using rule 232 (memory_segment_prg_type -> DATA .)


state 794

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type . memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (239) memory_segment_memory_type -> . RAM
    (240) memory_segment_memory_type -> . EEPROM
    (241) memory_segment_memory_type -> . EPROM
    (242) memory_segment_memory_type -> . ROM
    (243) memory_segment_memory_type -> . REGISTER
    (244) memory_segment_memory_type -> . FLASH

    RAM             shift and go to state 857
    EEPROM          shift and go to state 860
    EPROM           shift and go to state 858
    ROM             shift and go to state 861
    REGISTER        shift and go to state 856
    FLASH           shift and go to state 859

    memory_segment_memory_type     shift and go to state 855

state 795

    (212) calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .

    ADDR_EPK        reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    EPK             reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    SUPPLIER        reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    CUSTOMER        reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    CUSTOMER_NO     reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    USER            reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    PHONE_NO        reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    ECU             reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    CPU_TYPE        reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    NO_OF_INTERFACES reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    ECU_CALIBRATION_OFFSET reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    begin           reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    SYSTEM_CONSTANT reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    ASAP2_VERSION   reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    A2ML_VERSION    reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)
    end             reduce using rule 212 (calibration_method -> begin CALIBRATION_METHOD number_list end CALIBRATION_METHOD .)


state 796

    (145) raster -> begin RASTER STRING STRING NUMERIC . NUMERIC NUMERIC end RASTER

    NUMERIC         shift and go to state 862


state 797

    (92) generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .

    IDENT           reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    STRING          reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    NUMERIC         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    begin           reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    TP_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    end             reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    DP_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    BA_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    KP_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    PA_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)
    QP_BLOB         reduce using rule 92 (generic_parameter -> begin IDENT generic_parameter_list_optional end IDENT .)


state 798

    (149) checksum -> begin CHECKSUM IDENT IDENT NUMERIC . end CHECKSUM

    end             shift and go to state 863


state 799

    (148) checksum -> begin CHECKSUM STRING end CHECKSUM .

    begin           reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)
    end             reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)
    TP_BLOB         reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)
    IDENT           reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)
    STRING          reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)
    NUMERIC         reduce using rule 148 (checksum -> begin CHECKSUM STRING end CHECKSUM .)


state 800

    (147) seed_key -> begin SEED_KEY STRING STRING STRING . end SEED_KEY

    end             shift and go to state 864


state 801

    (152) source -> begin SOURCE IDENT NUMERIC NUMERIC . source_optional_parameter_list_optional end SOURCE
    (157) source_optional_parameter_list_optional -> . empty
    (158) source_optional_parameter_list_optional -> . source_optional_parameter_list
    (698) empty -> .
    (155) source_optional_parameter_list -> . source_optional_parameter
    (156) source_optional_parameter_list -> . source_optional_parameter source_optional_parameter_list
    (153) source_optional_parameter -> . display_identifier
    (154) source_optional_parameter -> . qp_blob
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (159) qp_blob -> . QP_BLOB IDENT

    end             reduce using rule 698 (empty -> .)
    DISPLAY_IDENTIFIER shift and go to state 871
    QP_BLOB         shift and go to state 865

    source_optional_parameter_list shift and go to state 868
    qp_blob                        shift and go to state 870
    display_identifier             shift and go to state 866
    source_optional_parameter_list_optional shift and go to state 867
    source_optional_parameter      shift and go to state 869
    empty                          shift and go to state 872

state 802

    (146) event_group -> begin EVENT_GROUP STRING STRING NUMERIC . end EVENT_GROUP

    end             shift and go to state 873


state 803

    (485) compu_tab_optional -> default_value .

    end             reduce using rule 485 (compu_tab_optional -> default_value .)


state 804

    (488) default_value_numeric -> DEFAULT_VALUE_NUMERIC . NUMERIC

    NUMERIC         shift and go to state 874


state 805

    (486) compu_tab_optional -> default_value_numeric .

    end             reduce using rule 486 (compu_tab_optional -> default_value_numeric .)


state 806

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional . end COMPU_TAB

    end             shift and go to state 875


state 807

    (484) compu_tab_optional -> empty .

    end             reduce using rule 484 (compu_tab_optional -> empty .)


state 808

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC . IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 876


state 809

    (696) si_exponents -> SI_EXPONENTS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 877


state 810

    (473) ref_unit -> REF_UNIT IDENT .

    SI_EXPONENTS    reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    REF_UNIT        reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    UNIT_CONVERSION reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    end             reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    begin           reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    COEFFS          reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    COEFFS_LINEAR   reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)
    COMPU_TAB_REF   reduce using rule 473 (ref_unit -> REF_UNIT IDENT .)


state 811

    (686) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end . UNIT

    UNIT            shift and go to state 878


state 812

    (697) unit_conversion -> UNIT_CONVERSION NUMERIC . NUMERIC

    NUMERIC         shift and go to state 879


state 813

    (693) unit_optional_list -> unit_optional unit_optional_list .

    end             reduce using rule 693 (unit_optional_list -> unit_optional unit_optional_list .)


state 814

    (685) ref_group -> begin REF_GROUP ident_list end REF_GROUP .

    READ_ONLY       reduce using rule 685 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    begin           reduce using rule 685 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    end             reduce using rule 685 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)


state 815

    (666) if_data_frame -> begin IF_DATA . IDENT if_data_frame_parameter_optional_list_optional end IF_DATA

    IDENT           shift and go to state 880


state 816

    (663) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end . FRAME

    FRAME           shift and go to state 881


state 817

    (677) frame_measurement -> FRAME_MEASUREMENT ident_list .

    FRAME_MEASUREMENT reduce using rule 677 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    begin           reduce using rule 677 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    end             reduce using rule 677 (frame_measurement -> FRAME_MEASUREMENT ident_list .)


state 818

    (674) frame_optional_list -> frame_optional frame_optional_list .

    end             reduce using rule 674 (frame_optional_list -> frame_optional frame_optional_list .)


state 819

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end . COMPU_VTAB

    COMPU_VTAB      shift and go to state 882


state 820

    (544) sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .

    ROOT            reduce using rule 544 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    begin           reduce using rule 544 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    end             reduce using rule 544 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)


state 821

    (288) function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .

    ROOT            reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    begin           reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    end             reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    READ_ONLY       reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    GUARD_RAILS     reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    FORMAT          reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BYTE_ORDER      reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BIT_MASK        reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    NUMBER          reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    EXTENDED_LIMITS reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MAX_REFRESH     reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    COMPARISON_QUANTITY reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    CALIBRATION_ACCESS reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MATRIX_DIM      reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DEPOSIT         reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    READ_WRITE      reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ARRAY_SIZE      reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS     reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ERROR_MASK      reduce using rule 288 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)


state 822

    (538) ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT .

    ROOT            reduce using rule 538 (ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT .)
    begin           reduce using rule 538 (ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT .)
    end             reduce using rule 538 (ref_measurement -> begin REF_MEASUREMENT ref_measurement_optional_list_optional end REF_MEASUREMENT .)


state 823

    (516) ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC .

    ROOT            reduce using rule 516 (ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC .)
    begin           reduce using rule 516 (ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC .)
    end             reduce using rule 516 (ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 516 (ref_characteristic -> begin REF_CHARACTERISTIC ref_characteristic_optional_list_optional end REF_CHARACTERISTIC .)


state 824

    (301) annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .

    READ_WRITE      reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DISPLAY_IDENTIFIER reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FORMAT          reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ARRAY_SIZE      reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BIT_MASK        reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    begin           reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BYTE_ORDER      reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MAX_REFRESH     reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS     reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ERROR_MASK      reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    REF_MEMORY_SEGMENT reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MATRIX_DIM      reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    end             reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ROOT            reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    READ_ONLY       reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    GUARD_RAILS     reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DEPOSIT         reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    EXTENDED_LIMITS reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    CALIBRATION_ACCESS reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    AXIS_PTS_REF    reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MAX_GRAD        reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MONOTONY        reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FIX_AXIS_PAR    reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FIX_AXIS_PAR_DIST reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    CURVE_AXIS_REF  reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    NUMBER          reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    COMPARISON_QUANTITY reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FUNCTION_VERSION reduce using rule 301 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)


state 825

    (307) annotation_text -> begin ANNOTATION_TEXT string_list . end ANNOTATION_TEXT

    end             shift and go to state 883


state 826

    (101) string_list -> STRING .
    (102) string_list -> STRING . string_list
    (101) string_list -> . STRING
    (102) string_list -> . STRING string_list

    end             reduce using rule 101 (string_list -> STRING .)
    STRING          shift and go to state 826

    string_list                    shift and go to state 884

state 827

    (601) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 601 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)


state 828

    (599) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 599 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)


state 829

    (600) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 600 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)


state 830

    (472) compu_tab_ref -> COMPU_TAB_REF IDENT .

    begin           reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COEFFS          reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COEFFS_LINEAR   reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COMPU_TAB_REF   reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    REF_UNIT        reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    end             reduce using rule 472 (compu_tab_ref -> COMPU_TAB_REF IDENT .)


state 831

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end . COMPU_METHOD

    COMPU_METHOD    shift and go to state 885


state 832

    (471) coeffs_linear -> COEFFS_LINEAR NUMERIC . NUMERIC

    NUMERIC         shift and go to state 886


state 833

    (475) compu_method_optional_list -> compu_method_optional compu_method_optional_list .

    end             reduce using rule 475 (compu_method_optional_list -> compu_method_optional compu_method_optional_list .)


state 834

    (466) formula -> begin FORMULA . STRING formula_optional end FORMULA

    STRING          shift and go to state 887


state 835

    (470) coeffs -> COEFFS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 888


state 836

    (39) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .
    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE . a2ml_array_specifier
    (39) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier

    SEMICOLON       reduce using rule 39 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 39 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .)
    BRACE_OPEN      shift and go to state 647

    a2ml_array_specifier           shift and go to state 889

state 837

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK . SEMICOLON

    SEMICOLON       shift and go to state 890


state 838

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK . SEMICOLON

    SEMICOLON       shift and go to state 891


state 839

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE . ASTERISK

    ASTERISK        shift and go to state 892


state 840

    (642) var_address -> begin VAR_ADDRESS number_list . end VAR_ADDRESS

    end             shift and go to state 893


state 841

    (640) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .

    VAR_SEPARATOR   reduce using rule 640 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    VAR_NAMING      reduce using rule 640 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    begin           reduce using rule 640 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    end             reduce using rule 640 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)


state 842

    (653) var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .

    end             reduce using rule 653 (var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .)


state 843

    (656) var_measurement -> VAR_MEASUREMENT IDENT .

    VAR_MEASUREMENT reduce using rule 656 (var_measurement -> VAR_MEASUREMENT IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 656 (var_measurement -> VAR_MEASUREMENT IDENT .)
    end             reduce using rule 656 (var_measurement -> VAR_MEASUREMENT IDENT .)


state 844

    (649) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end . VAR_CRITERION

    VAR_CRITERION   shift and go to state 894


state 845

    (657) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .

    VAR_MEASUREMENT reduce using rule 657 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 657 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    end             reduce using rule 657 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)


state 846

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT . NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 895


state 847

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC . NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 896


state 848

    (496) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .

    begin           reduce using rule 496 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)
    end             reduce using rule 496 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)


state 849

    (524) loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .

    begin           reduce using rule 524 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 524 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    end             reduce using rule 524 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)


state 850

    (515) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .

    begin           reduce using rule 515 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 515 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    end             reduce using rule 515 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)


state 851

    (525) sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .

    begin           reduce using rule 525 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    FUNCTION_VERSION reduce using rule 525 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    end             reduce using rule 525 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)


state 852

    (522) in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .

    begin           reduce using rule 522 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 522 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    end             reduce using rule 522 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)


state 853

    (523) out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .

    begin           reduce using rule 523 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 523 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    end             reduce using rule 523 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)


state 854

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list . memory_layout_parameter_optional end MEMORY_LAYOUT
    (217) memory_layout_parameter_optional -> . empty
    (218) memory_layout_parameter_optional -> . if_data_memory_layout
    (698) empty -> .
    (219) if_data_memory_layout -> . begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 898

    memory_layout_parameter_optional shift and go to state 897
    if_data_memory_layout          shift and go to state 899
    empty                          shift and go to state 900

state 855

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type . memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (245) memory_segment_attributes -> . INTERN
    (246) memory_segment_attributes -> . EXTERN

    INTERN          shift and go to state 902
    EXTERN          shift and go to state 903

    memory_segment_attributes      shift and go to state 901

state 856

    (243) memory_segment_memory_type -> REGISTER .

    INTERN          reduce using rule 243 (memory_segment_memory_type -> REGISTER .)
    EXTERN          reduce using rule 243 (memory_segment_memory_type -> REGISTER .)


state 857

    (239) memory_segment_memory_type -> RAM .

    INTERN          reduce using rule 239 (memory_segment_memory_type -> RAM .)
    EXTERN          reduce using rule 239 (memory_segment_memory_type -> RAM .)


state 858

    (241) memory_segment_memory_type -> EPROM .

    INTERN          reduce using rule 241 (memory_segment_memory_type -> EPROM .)
    EXTERN          reduce using rule 241 (memory_segment_memory_type -> EPROM .)


state 859

    (244) memory_segment_memory_type -> FLASH .

    INTERN          reduce using rule 244 (memory_segment_memory_type -> FLASH .)
    EXTERN          reduce using rule 244 (memory_segment_memory_type -> FLASH .)


state 860

    (240) memory_segment_memory_type -> EEPROM .

    INTERN          reduce using rule 240 (memory_segment_memory_type -> EEPROM .)
    EXTERN          reduce using rule 240 (memory_segment_memory_type -> EEPROM .)


state 861

    (242) memory_segment_memory_type -> ROM .

    INTERN          reduce using rule 242 (memory_segment_memory_type -> ROM .)
    EXTERN          reduce using rule 242 (memory_segment_memory_type -> ROM .)


state 862

    (145) raster -> begin RASTER STRING STRING NUMERIC NUMERIC . NUMERIC end RASTER

    NUMERIC         shift and go to state 904


state 863

    (149) checksum -> begin CHECKSUM IDENT IDENT NUMERIC end . CHECKSUM

    CHECKSUM        shift and go to state 905


state 864

    (147) seed_key -> begin SEED_KEY STRING STRING STRING end . SEED_KEY

    SEED_KEY        shift and go to state 906


state 865

    (159) qp_blob -> QP_BLOB . IDENT

    IDENT           shift and go to state 907


state 866

    (153) source_optional_parameter -> display_identifier .

    DISPLAY_IDENTIFIER reduce using rule 153 (source_optional_parameter -> display_identifier .)
    QP_BLOB         reduce using rule 153 (source_optional_parameter -> display_identifier .)
    end             reduce using rule 153 (source_optional_parameter -> display_identifier .)


state 867

    (152) source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional . end SOURCE

    end             shift and go to state 908


state 868

    (158) source_optional_parameter_list_optional -> source_optional_parameter_list .

    end             reduce using rule 158 (source_optional_parameter_list_optional -> source_optional_parameter_list .)


state 869

    (155) source_optional_parameter_list -> source_optional_parameter .
    (156) source_optional_parameter_list -> source_optional_parameter . source_optional_parameter_list
    (155) source_optional_parameter_list -> . source_optional_parameter
    (156) source_optional_parameter_list -> . source_optional_parameter source_optional_parameter_list
    (153) source_optional_parameter -> . display_identifier
    (154) source_optional_parameter -> . qp_blob
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (159) qp_blob -> . QP_BLOB IDENT

    end             reduce using rule 155 (source_optional_parameter_list -> source_optional_parameter .)
    DISPLAY_IDENTIFIER shift and go to state 871
    QP_BLOB         shift and go to state 865

    display_identifier             shift and go to state 866
    source_optional_parameter_list shift and go to state 909
    qp_blob                        shift and go to state 870
    source_optional_parameter      shift and go to state 869

state 870

    (154) source_optional_parameter -> qp_blob .

    DISPLAY_IDENTIFIER reduce using rule 154 (source_optional_parameter -> qp_blob .)
    QP_BLOB         reduce using rule 154 (source_optional_parameter -> qp_blob .)
    end             reduce using rule 154 (source_optional_parameter -> qp_blob .)


state 871

    (282) display_identifier -> DISPLAY_IDENTIFIER . IDENT

    IDENT           shift and go to state 910


state 872

    (157) source_optional_parameter_list_optional -> empty .

    end             reduce using rule 157 (source_optional_parameter_list_optional -> empty .)


state 873

    (146) event_group -> begin EVENT_GROUP STRING STRING NUMERIC end . EVENT_GROUP

    EVENT_GROUP     shift and go to state 911


state 874

    (488) default_value_numeric -> DEFAULT_VALUE_NUMERIC NUMERIC .

    end             reduce using rule 488 (default_value_numeric -> DEFAULT_VALUE_NUMERIC NUMERIC .)


state 875

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end . COMPU_TAB

    COMPU_TAB       shift and go to state 912


state 876

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT . NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 913


state 877

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 914


state 878

    (686) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .

    begin           reduce using rule 686 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)
    end             reduce using rule 686 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)


state 879

    (697) unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 697 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 697 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 697 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    end             reduce using rule 697 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)


state 880

    (666) if_data_frame -> begin IF_DATA IDENT . if_data_frame_parameter_optional_list_optional end IF_DATA
    (670) if_data_frame_parameter_optional_list_optional -> . empty
    (671) if_data_frame_parameter_optional_list_optional -> . if_data_frame_parameter_optional_list
    (698) empty -> .
    (668) if_data_frame_parameter_optional_list -> . if_data_frame_parameter_optional
    (669) if_data_frame_parameter_optional_list -> . if_data_frame_parameter_optional if_data_frame_parameter_optional_list
    (667) if_data_frame_parameter_optional -> . QP_BLOB qp_data

    end             reduce using rule 698 (empty -> .)
    QP_BLOB         shift and go to state 918

    if_data_frame_parameter_optional shift and go to state 916
    if_data_frame_parameter_optional_list_optional shift and go to state 917
    empty                          shift and go to state 919
    if_data_frame_parameter_optional_list shift and go to state 915

state 881

    (663) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .

    begin           reduce using rule 663 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)
    end             reduce using rule 663 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)


state 882

    (489) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .

    begin           reduce using rule 489 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)
    end             reduce using rule 489 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)


state 883

    (307) annotation_text -> begin ANNOTATION_TEXT string_list end . ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 920


state 884

    (102) string_list -> STRING string_list .

    end             reduce using rule 102 (string_list -> STRING string_list .)


state 885

    (453) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .

    begin           reduce using rule 453 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)
    end             reduce using rule 453 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)


state 886

    (471) coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .

    begin           reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)
    COEFFS          reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)
    COEFFS_LINEAR   reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)
    COMPU_TAB_REF   reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)
    end             reduce using rule 471 (coeffs_linear -> COEFFS_LINEAR NUMERIC NUMERIC .)


state 887

    (466) formula -> begin FORMULA STRING . formula_optional end FORMULA
    (468) formula_optional -> . empty
    (469) formula_optional -> . formula_inv
    (698) empty -> .
    (467) formula_inv -> . FORMULA_INV STRING

    end             reduce using rule 698 (empty -> .)
    FORMULA_INV     shift and go to state 922

    formula_inv                    shift and go to state 921
    formula_optional               shift and go to state 923
    empty                          shift and go to state 924

state 888

    (470) coeffs -> COEFFS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 925


state 889

    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .

    SEMICOLON       reduce using rule 40 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .)
    PARENTHESE_CLOSE reduce using rule 40 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .)


state 890

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .

    PARENTHESE_OPEN reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    block           reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    STRING          reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    CURLY_CLOSE     reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)


state 891

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .

    PARENTHESE_OPEN reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    block           reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    STRING          reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    CURLY_CLOSE     reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)


state 892

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK .

    SEMICOLON       reduce using rule 52 (a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK .)
    PARENTHESE_CLOSE reduce using rule 52 (a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK .)


state 893

    (642) var_address -> begin VAR_ADDRESS number_list end . VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 926


state 894

    (649) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .

    VAR_SEPARATOR   reduce using rule 649 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    VAR_NAMING      reduce using rule 649 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    begin           reduce using rule 649 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    end             reduce using rule 649 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)


state 895

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC . NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 927


state 896

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC . measurement_optional_list_optional end MEASUREMENT
    (440) measurement_optional_list_optional -> . empty
    (441) measurement_optional_list_optional -> . measurement_optional_list
    (698) empty -> .
    (438) measurement_optional_list -> . measurement_optional
    (439) measurement_optional_list -> . measurement_optional measurement_optional_list
    (403) measurement_optional -> . display_identifier
    (404) measurement_optional -> . READ_WRITE
    (405) measurement_optional -> . format
    (406) measurement_optional -> . array_size
    (407) measurement_optional -> . bit_mask
    (408) measurement_optional -> . bit_operation
    (409) measurement_optional -> . byte_order
    (410) measurement_optional -> . max_refresh
    (411) measurement_optional -> . virtual
    (412) measurement_optional -> . function_list
    (413) measurement_optional -> . ecu_address
    (414) measurement_optional -> . error_mask
    (415) measurement_optional -> . ref_memory_segment
    (416) measurement_optional -> . annotation
    (417) measurement_optional -> . if_data_measurement
    (418) measurement_optional -> . matrix_dim
    (419) measurement_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (442) array_size -> . ARRAY_SIZE NUMERIC
    (287) bit_mask -> . BIT_MASK NUMERIC
    (443) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (292) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (478) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (479) ecu_address -> . ECU_ADDRESS NUMERIC
    (480) error_mask -> . ERROR_MASK NUMERIC
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (420) if_data_measurement -> . begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA
    (352) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 698 (empty -> .)
    READ_WRITE      shift and go to state 928
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    ARRAY_SIZE      shift and go to state 954
    BIT_MASK        shift and go to state 930
    begin           shift and go to state 941
    BYTE_ORDER      shift and go to state 306
    MAX_REFRESH     shift and go to state 956
    ECU_ADDRESS     shift and go to state 949
    ERROR_MASK      shift and go to state 936
    REF_MEMORY_SEGMENT shift and go to state 950
    MATRIX_DIM      shift and go to state 937
    ECU_ADDRESS_EXTENSION shift and go to state 944

    measurement_optional_list_optional shift and go to state 929
    error_mask                     shift and go to state 931
    display_identifier             shift and go to state 933
    bit_mask                       shift and go to state 935
    virtual                        shift and go to state 932
    annotation                     shift and go to state 947
    ecu_address                    shift and go to state 943
    empty                          shift and go to state 938
    ecu_address_extension          shift and go to state 939
    byte_order                     shift and go to state 940
    format                         shift and go to state 942
    matrix_dim                     shift and go to state 945
    measurement_optional           shift and go to state 946
    bit_operation                  shift and go to state 957
    measurement_optional_list      shift and go to state 948
    function_list                  shift and go to state 951
    array_size                     shift and go to state 952
    max_refresh                    shift and go to state 953
    if_data_measurement            shift and go to state 955
    ref_memory_segment             shift and go to state 958

state 897

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional . end MEMORY_LAYOUT

    end             shift and go to state 959


state 898

    (219) if_data_memory_layout -> begin . IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    IF_DATA         shift and go to state 960


state 899

    (218) memory_layout_parameter_optional -> if_data_memory_layout .

    end             reduce using rule 218 (memory_layout_parameter_optional -> if_data_memory_layout .)


state 900

    (217) memory_layout_parameter_optional -> empty .

    end             reduce using rule 217 (memory_layout_parameter_optional -> empty .)


state 901

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 961


state 902

    (245) memory_segment_attributes -> INTERN .

    NUMERIC         reduce using rule 245 (memory_segment_attributes -> INTERN .)


state 903

    (246) memory_segment_attributes -> EXTERN .

    NUMERIC         reduce using rule 246 (memory_segment_attributes -> EXTERN .)


state 904

    (145) raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC . end RASTER

    end             shift and go to state 962


state 905

    (149) checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .

    begin           reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)
    end             reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)
    TP_BLOB         reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)
    IDENT           reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)
    STRING          reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)
    NUMERIC         reduce using rule 149 (checksum -> begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM .)


state 906

    (147) seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .

    begin           reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)
    TP_BLOB         reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)
    IDENT           reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)
    STRING          reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)
    NUMERIC         reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)
    end             reduce using rule 147 (seed_key -> begin SEED_KEY STRING STRING STRING end SEED_KEY .)


state 907

    (159) qp_blob -> QP_BLOB IDENT .

    DISPLAY_IDENTIFIER reduce using rule 159 (qp_blob -> QP_BLOB IDENT .)
    QP_BLOB         reduce using rule 159 (qp_blob -> QP_BLOB IDENT .)
    end             reduce using rule 159 (qp_blob -> QP_BLOB IDENT .)


state 908

    (152) source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end . SOURCE

    SOURCE          shift and go to state 963


state 909

    (156) source_optional_parameter_list -> source_optional_parameter source_optional_parameter_list .

    end             reduce using rule 156 (source_optional_parameter_list -> source_optional_parameter source_optional_parameter_list .)


state 910

    (282) display_identifier -> DISPLAY_IDENTIFIER IDENT .

    DISPLAY_IDENTIFIER reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    QP_BLOB         reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    end             reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    READ_WRITE      reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    FORMAT          reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ARRAY_SIZE      reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BIT_MASK        reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    begin           reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BYTE_ORDER      reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MAX_REFRESH     reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS     reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ERROR_MASK      reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MATRIX_DIM      reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    READ_ONLY       reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    GUARD_RAILS     reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    DEPOSIT         reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    EXTENDED_LIMITS reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    CALIBRATION_ACCESS reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    NUMBER          reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    COMPARISON_QUANTITY reduce using rule 282 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)


state 911

    (146) event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .

    begin           reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)
    TP_BLOB         reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)
    IDENT           reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)
    STRING          reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)
    NUMERIC         reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)
    end             reduce using rule 146 (event_group -> begin EVENT_GROUP STRING STRING NUMERIC end EVENT_GROUP .)


state 912

    (481) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .

    begin           reduce using rule 481 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)
    end             reduce using rule 481 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)


state 913

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC . NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 964


state 914

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 965


state 915

    (671) if_data_frame_parameter_optional_list_optional -> if_data_frame_parameter_optional_list .

    end             reduce using rule 671 (if_data_frame_parameter_optional_list_optional -> if_data_frame_parameter_optional_list .)


state 916

    (668) if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional .
    (669) if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional . if_data_frame_parameter_optional_list
    (668) if_data_frame_parameter_optional_list -> . if_data_frame_parameter_optional
    (669) if_data_frame_parameter_optional_list -> . if_data_frame_parameter_optional if_data_frame_parameter_optional_list
    (667) if_data_frame_parameter_optional -> . QP_BLOB qp_data

    end             reduce using rule 668 (if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional .)
    QP_BLOB         shift and go to state 918

    if_data_frame_parameter_optional shift and go to state 916
    if_data_frame_parameter_optional_list shift and go to state 966

state 917

    (666) if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional . end IF_DATA

    end             shift and go to state 967


state 918

    (667) if_data_frame_parameter_optional -> QP_BLOB . qp_data
    (672) qp_data -> . generic_parameter
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    qp_data                        shift and go to state 968
    generic_parameter              shift and go to state 969

state 919

    (670) if_data_frame_parameter_optional_list_optional -> empty .

    end             reduce using rule 670 (if_data_frame_parameter_optional_list_optional -> empty .)


state 920

    (307) annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .

    ANNOTATION_LABEL reduce using rule 307 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    ANNOTATION_ORIGIN reduce using rule 307 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    begin           reduce using rule 307 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    end             reduce using rule 307 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)


state 921

    (469) formula_optional -> formula_inv .

    end             reduce using rule 469 (formula_optional -> formula_inv .)


state 922

    (467) formula_inv -> FORMULA_INV . STRING

    STRING          shift and go to state 970


state 923

    (466) formula -> begin FORMULA STRING formula_optional . end FORMULA

    end             shift and go to state 971


state 924

    (468) formula_optional -> empty .

    end             reduce using rule 468 (formula_optional -> empty .)


state 925

    (470) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 972


state 926

    (642) var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .

    end             reduce using rule 642 (var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .)


state 927

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC . NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 973


state 928

    (404) measurement_optional -> READ_WRITE .

    READ_WRITE      reduce using rule 404 (measurement_optional -> READ_WRITE .)
    DISPLAY_IDENTIFIER reduce using rule 404 (measurement_optional -> READ_WRITE .)
    FORMAT          reduce using rule 404 (measurement_optional -> READ_WRITE .)
    ARRAY_SIZE      reduce using rule 404 (measurement_optional -> READ_WRITE .)
    BIT_MASK        reduce using rule 404 (measurement_optional -> READ_WRITE .)
    begin           reduce using rule 404 (measurement_optional -> READ_WRITE .)
    BYTE_ORDER      reduce using rule 404 (measurement_optional -> READ_WRITE .)
    MAX_REFRESH     reduce using rule 404 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS     reduce using rule 404 (measurement_optional -> READ_WRITE .)
    ERROR_MASK      reduce using rule 404 (measurement_optional -> READ_WRITE .)
    REF_MEMORY_SEGMENT reduce using rule 404 (measurement_optional -> READ_WRITE .)
    MATRIX_DIM      reduce using rule 404 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS_EXTENSION reduce using rule 404 (measurement_optional -> READ_WRITE .)
    end             reduce using rule 404 (measurement_optional -> READ_WRITE .)


state 929

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional . end MEASUREMENT

    end             shift and go to state 974


state 930

    (287) bit_mask -> BIT_MASK . NUMERIC

    NUMERIC         shift and go to state 975


state 931

    (414) measurement_optional -> error_mask .

    READ_WRITE      reduce using rule 414 (measurement_optional -> error_mask .)
    DISPLAY_IDENTIFIER reduce using rule 414 (measurement_optional -> error_mask .)
    FORMAT          reduce using rule 414 (measurement_optional -> error_mask .)
    ARRAY_SIZE      reduce using rule 414 (measurement_optional -> error_mask .)
    BIT_MASK        reduce using rule 414 (measurement_optional -> error_mask .)
    begin           reduce using rule 414 (measurement_optional -> error_mask .)
    BYTE_ORDER      reduce using rule 414 (measurement_optional -> error_mask .)
    MAX_REFRESH     reduce using rule 414 (measurement_optional -> error_mask .)
    ECU_ADDRESS     reduce using rule 414 (measurement_optional -> error_mask .)
    ERROR_MASK      reduce using rule 414 (measurement_optional -> error_mask .)
    REF_MEMORY_SEGMENT reduce using rule 414 (measurement_optional -> error_mask .)
    MATRIX_DIM      reduce using rule 414 (measurement_optional -> error_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 414 (measurement_optional -> error_mask .)
    end             reduce using rule 414 (measurement_optional -> error_mask .)


state 932

    (411) measurement_optional -> virtual .

    READ_WRITE      reduce using rule 411 (measurement_optional -> virtual .)
    DISPLAY_IDENTIFIER reduce using rule 411 (measurement_optional -> virtual .)
    FORMAT          reduce using rule 411 (measurement_optional -> virtual .)
    ARRAY_SIZE      reduce using rule 411 (measurement_optional -> virtual .)
    BIT_MASK        reduce using rule 411 (measurement_optional -> virtual .)
    begin           reduce using rule 411 (measurement_optional -> virtual .)
    BYTE_ORDER      reduce using rule 411 (measurement_optional -> virtual .)
    MAX_REFRESH     reduce using rule 411 (measurement_optional -> virtual .)
    ECU_ADDRESS     reduce using rule 411 (measurement_optional -> virtual .)
    ERROR_MASK      reduce using rule 411 (measurement_optional -> virtual .)
    REF_MEMORY_SEGMENT reduce using rule 411 (measurement_optional -> virtual .)
    MATRIX_DIM      reduce using rule 411 (measurement_optional -> virtual .)
    ECU_ADDRESS_EXTENSION reduce using rule 411 (measurement_optional -> virtual .)
    end             reduce using rule 411 (measurement_optional -> virtual .)


state 933

    (403) measurement_optional -> display_identifier .

    READ_WRITE      reduce using rule 403 (measurement_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 403 (measurement_optional -> display_identifier .)
    FORMAT          reduce using rule 403 (measurement_optional -> display_identifier .)
    ARRAY_SIZE      reduce using rule 403 (measurement_optional -> display_identifier .)
    BIT_MASK        reduce using rule 403 (measurement_optional -> display_identifier .)
    begin           reduce using rule 403 (measurement_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 403 (measurement_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 403 (measurement_optional -> display_identifier .)
    ECU_ADDRESS     reduce using rule 403 (measurement_optional -> display_identifier .)
    ERROR_MASK      reduce using rule 403 (measurement_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 403 (measurement_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 403 (measurement_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 403 (measurement_optional -> display_identifier .)
    end             reduce using rule 403 (measurement_optional -> display_identifier .)


state 934

    (283) format -> FORMAT . STRING

    STRING          shift and go to state 976


state 935

    (407) measurement_optional -> bit_mask .

    READ_WRITE      reduce using rule 407 (measurement_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 407 (measurement_optional -> bit_mask .)
    FORMAT          reduce using rule 407 (measurement_optional -> bit_mask .)
    ARRAY_SIZE      reduce using rule 407 (measurement_optional -> bit_mask .)
    BIT_MASK        reduce using rule 407 (measurement_optional -> bit_mask .)
    begin           reduce using rule 407 (measurement_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 407 (measurement_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 407 (measurement_optional -> bit_mask .)
    ECU_ADDRESS     reduce using rule 407 (measurement_optional -> bit_mask .)
    ERROR_MASK      reduce using rule 407 (measurement_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 407 (measurement_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 407 (measurement_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 407 (measurement_optional -> bit_mask .)
    end             reduce using rule 407 (measurement_optional -> bit_mask .)


state 936

    (480) error_mask -> ERROR_MASK . NUMERIC

    NUMERIC         shift and go to state 977


state 937

    (352) matrix_dim -> MATRIX_DIM . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 978


state 938

    (440) measurement_optional_list_optional -> empty .

    end             reduce using rule 440 (measurement_optional_list_optional -> empty .)


state 939

    (419) measurement_optional -> ecu_address_extension .

    READ_WRITE      reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    ARRAY_SIZE      reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    begin           reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS     reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    ERROR_MASK      reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 419 (measurement_optional -> ecu_address_extension .)
    end             reduce using rule 419 (measurement_optional -> ecu_address_extension .)


state 940

    (409) measurement_optional -> byte_order .

    READ_WRITE      reduce using rule 409 (measurement_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 409 (measurement_optional -> byte_order .)
    FORMAT          reduce using rule 409 (measurement_optional -> byte_order .)
    ARRAY_SIZE      reduce using rule 409 (measurement_optional -> byte_order .)
    BIT_MASK        reduce using rule 409 (measurement_optional -> byte_order .)
    begin           reduce using rule 409 (measurement_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 409 (measurement_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 409 (measurement_optional -> byte_order .)
    ECU_ADDRESS     reduce using rule 409 (measurement_optional -> byte_order .)
    ERROR_MASK      reduce using rule 409 (measurement_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 409 (measurement_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 409 (measurement_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 409 (measurement_optional -> byte_order .)
    end             reduce using rule 409 (measurement_optional -> byte_order .)


state 941

    (443) bit_operation -> begin . BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (478) virtual -> begin . VIRTUAL ident_list end VIRTUAL
    (288) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (420) if_data_measurement -> begin . IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA

    BIT_OPERATION   shift and go to state 981
    VIRTUAL         shift and go to state 980
    FUNCTION_LIST   shift and go to state 490
    ANNOTATION      shift and go to state 493
    IF_DATA         shift and go to state 979


state 942

    (405) measurement_optional -> format .

    READ_WRITE      reduce using rule 405 (measurement_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 405 (measurement_optional -> format .)
    FORMAT          reduce using rule 405 (measurement_optional -> format .)
    ARRAY_SIZE      reduce using rule 405 (measurement_optional -> format .)
    BIT_MASK        reduce using rule 405 (measurement_optional -> format .)
    begin           reduce using rule 405 (measurement_optional -> format .)
    BYTE_ORDER      reduce using rule 405 (measurement_optional -> format .)
    MAX_REFRESH     reduce using rule 405 (measurement_optional -> format .)
    ECU_ADDRESS     reduce using rule 405 (measurement_optional -> format .)
    ERROR_MASK      reduce using rule 405 (measurement_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 405 (measurement_optional -> format .)
    MATRIX_DIM      reduce using rule 405 (measurement_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 405 (measurement_optional -> format .)
    end             reduce using rule 405 (measurement_optional -> format .)


state 943

    (413) measurement_optional -> ecu_address .

    READ_WRITE      reduce using rule 413 (measurement_optional -> ecu_address .)
    DISPLAY_IDENTIFIER reduce using rule 413 (measurement_optional -> ecu_address .)
    FORMAT          reduce using rule 413 (measurement_optional -> ecu_address .)
    ARRAY_SIZE      reduce using rule 413 (measurement_optional -> ecu_address .)
    BIT_MASK        reduce using rule 413 (measurement_optional -> ecu_address .)
    begin           reduce using rule 413 (measurement_optional -> ecu_address .)
    BYTE_ORDER      reduce using rule 413 (measurement_optional -> ecu_address .)
    MAX_REFRESH     reduce using rule 413 (measurement_optional -> ecu_address .)
    ECU_ADDRESS     reduce using rule 413 (measurement_optional -> ecu_address .)
    ERROR_MASK      reduce using rule 413 (measurement_optional -> ecu_address .)
    REF_MEMORY_SEGMENT reduce using rule 413 (measurement_optional -> ecu_address .)
    MATRIX_DIM      reduce using rule 413 (measurement_optional -> ecu_address .)
    ECU_ADDRESS_EXTENSION reduce using rule 413 (measurement_optional -> ecu_address .)
    end             reduce using rule 413 (measurement_optional -> ecu_address .)


state 944

    (353) ecu_address_extension -> ECU_ADDRESS_EXTENSION . NUMERIC

    NUMERIC         shift and go to state 982


state 945

    (418) measurement_optional -> matrix_dim .

    READ_WRITE      reduce using rule 418 (measurement_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 418 (measurement_optional -> matrix_dim .)
    FORMAT          reduce using rule 418 (measurement_optional -> matrix_dim .)
    ARRAY_SIZE      reduce using rule 418 (measurement_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 418 (measurement_optional -> matrix_dim .)
    begin           reduce using rule 418 (measurement_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 418 (measurement_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 418 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS     reduce using rule 418 (measurement_optional -> matrix_dim .)
    ERROR_MASK      reduce using rule 418 (measurement_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 418 (measurement_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 418 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 418 (measurement_optional -> matrix_dim .)
    end             reduce using rule 418 (measurement_optional -> matrix_dim .)


state 946

    (438) measurement_optional_list -> measurement_optional .
    (439) measurement_optional_list -> measurement_optional . measurement_optional_list
    (438) measurement_optional_list -> . measurement_optional
    (439) measurement_optional_list -> . measurement_optional measurement_optional_list
    (403) measurement_optional -> . display_identifier
    (404) measurement_optional -> . READ_WRITE
    (405) measurement_optional -> . format
    (406) measurement_optional -> . array_size
    (407) measurement_optional -> . bit_mask
    (408) measurement_optional -> . bit_operation
    (409) measurement_optional -> . byte_order
    (410) measurement_optional -> . max_refresh
    (411) measurement_optional -> . virtual
    (412) measurement_optional -> . function_list
    (413) measurement_optional -> . ecu_address
    (414) measurement_optional -> . error_mask
    (415) measurement_optional -> . ref_memory_segment
    (416) measurement_optional -> . annotation
    (417) measurement_optional -> . if_data_measurement
    (418) measurement_optional -> . matrix_dim
    (419) measurement_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (442) array_size -> . ARRAY_SIZE NUMERIC
    (287) bit_mask -> . BIT_MASK NUMERIC
    (443) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (292) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (478) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (479) ecu_address -> . ECU_ADDRESS NUMERIC
    (480) error_mask -> . ERROR_MASK NUMERIC
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (420) if_data_measurement -> . begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA
    (352) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 438 (measurement_optional_list -> measurement_optional .)
    READ_WRITE      shift and go to state 928
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    ARRAY_SIZE      shift and go to state 954
    BIT_MASK        shift and go to state 930
    begin           shift and go to state 941
    BYTE_ORDER      shift and go to state 306
    MAX_REFRESH     shift and go to state 956
    ECU_ADDRESS     shift and go to state 949
    ERROR_MASK      shift and go to state 936
    REF_MEMORY_SEGMENT shift and go to state 950
    MATRIX_DIM      shift and go to state 937
    ECU_ADDRESS_EXTENSION shift and go to state 944

    error_mask                     shift and go to state 931
    display_identifier             shift and go to state 933
    bit_mask                       shift and go to state 935
    virtual                        shift and go to state 932
    annotation                     shift and go to state 947
    ecu_address                    shift and go to state 943
    measurement_optional_list      shift and go to state 983
    ecu_address_extension          shift and go to state 939
    byte_order                     shift and go to state 940
    format                         shift and go to state 942
    matrix_dim                     shift and go to state 945
    measurement_optional           shift and go to state 946
    bit_operation                  shift and go to state 957
    function_list                  shift and go to state 951
    array_size                     shift and go to state 952
    max_refresh                    shift and go to state 953
    if_data_measurement            shift and go to state 955
    ref_memory_segment             shift and go to state 958

state 947

    (416) measurement_optional -> annotation .

    READ_WRITE      reduce using rule 416 (measurement_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 416 (measurement_optional -> annotation .)
    FORMAT          reduce using rule 416 (measurement_optional -> annotation .)
    ARRAY_SIZE      reduce using rule 416 (measurement_optional -> annotation .)
    BIT_MASK        reduce using rule 416 (measurement_optional -> annotation .)
    begin           reduce using rule 416 (measurement_optional -> annotation .)
    BYTE_ORDER      reduce using rule 416 (measurement_optional -> annotation .)
    MAX_REFRESH     reduce using rule 416 (measurement_optional -> annotation .)
    ECU_ADDRESS     reduce using rule 416 (measurement_optional -> annotation .)
    ERROR_MASK      reduce using rule 416 (measurement_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 416 (measurement_optional -> annotation .)
    MATRIX_DIM      reduce using rule 416 (measurement_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 416 (measurement_optional -> annotation .)
    end             reduce using rule 416 (measurement_optional -> annotation .)


state 948

    (441) measurement_optional_list_optional -> measurement_optional_list .

    end             reduce using rule 441 (measurement_optional_list_optional -> measurement_optional_list .)


state 949

    (479) ecu_address -> ECU_ADDRESS . NUMERIC

    NUMERIC         shift and go to state 984


state 950

    (300) ref_memory_segment -> REF_MEMORY_SEGMENT . IDENT

    IDENT           shift and go to state 985


state 951

    (412) measurement_optional -> function_list .

    READ_WRITE      reduce using rule 412 (measurement_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 412 (measurement_optional -> function_list .)
    FORMAT          reduce using rule 412 (measurement_optional -> function_list .)
    ARRAY_SIZE      reduce using rule 412 (measurement_optional -> function_list .)
    BIT_MASK        reduce using rule 412 (measurement_optional -> function_list .)
    begin           reduce using rule 412 (measurement_optional -> function_list .)
    BYTE_ORDER      reduce using rule 412 (measurement_optional -> function_list .)
    MAX_REFRESH     reduce using rule 412 (measurement_optional -> function_list .)
    ECU_ADDRESS     reduce using rule 412 (measurement_optional -> function_list .)
    ERROR_MASK      reduce using rule 412 (measurement_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 412 (measurement_optional -> function_list .)
    MATRIX_DIM      reduce using rule 412 (measurement_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 412 (measurement_optional -> function_list .)
    end             reduce using rule 412 (measurement_optional -> function_list .)


state 952

    (406) measurement_optional -> array_size .

    READ_WRITE      reduce using rule 406 (measurement_optional -> array_size .)
    DISPLAY_IDENTIFIER reduce using rule 406 (measurement_optional -> array_size .)
    FORMAT          reduce using rule 406 (measurement_optional -> array_size .)
    ARRAY_SIZE      reduce using rule 406 (measurement_optional -> array_size .)
    BIT_MASK        reduce using rule 406 (measurement_optional -> array_size .)
    begin           reduce using rule 406 (measurement_optional -> array_size .)
    BYTE_ORDER      reduce using rule 406 (measurement_optional -> array_size .)
    MAX_REFRESH     reduce using rule 406 (measurement_optional -> array_size .)
    ECU_ADDRESS     reduce using rule 406 (measurement_optional -> array_size .)
    ERROR_MASK      reduce using rule 406 (measurement_optional -> array_size .)
    REF_MEMORY_SEGMENT reduce using rule 406 (measurement_optional -> array_size .)
    MATRIX_DIM      reduce using rule 406 (measurement_optional -> array_size .)
    ECU_ADDRESS_EXTENSION reduce using rule 406 (measurement_optional -> array_size .)
    end             reduce using rule 406 (measurement_optional -> array_size .)


state 953

    (410) measurement_optional -> max_refresh .

    READ_WRITE      reduce using rule 410 (measurement_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 410 (measurement_optional -> max_refresh .)
    FORMAT          reduce using rule 410 (measurement_optional -> max_refresh .)
    ARRAY_SIZE      reduce using rule 410 (measurement_optional -> max_refresh .)
    BIT_MASK        reduce using rule 410 (measurement_optional -> max_refresh .)
    begin           reduce using rule 410 (measurement_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 410 (measurement_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 410 (measurement_optional -> max_refresh .)
    ECU_ADDRESS     reduce using rule 410 (measurement_optional -> max_refresh .)
    ERROR_MASK      reduce using rule 410 (measurement_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 410 (measurement_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 410 (measurement_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 410 (measurement_optional -> max_refresh .)
    end             reduce using rule 410 (measurement_optional -> max_refresh .)


state 954

    (442) array_size -> ARRAY_SIZE . NUMERIC

    NUMERIC         shift and go to state 986


state 955

    (417) measurement_optional -> if_data_measurement .

    READ_WRITE      reduce using rule 417 (measurement_optional -> if_data_measurement .)
    DISPLAY_IDENTIFIER reduce using rule 417 (measurement_optional -> if_data_measurement .)
    FORMAT          reduce using rule 417 (measurement_optional -> if_data_measurement .)
    ARRAY_SIZE      reduce using rule 417 (measurement_optional -> if_data_measurement .)
    BIT_MASK        reduce using rule 417 (measurement_optional -> if_data_measurement .)
    begin           reduce using rule 417 (measurement_optional -> if_data_measurement .)
    BYTE_ORDER      reduce using rule 417 (measurement_optional -> if_data_measurement .)
    MAX_REFRESH     reduce using rule 417 (measurement_optional -> if_data_measurement .)
    ECU_ADDRESS     reduce using rule 417 (measurement_optional -> if_data_measurement .)
    ERROR_MASK      reduce using rule 417 (measurement_optional -> if_data_measurement .)
    REF_MEMORY_SEGMENT reduce using rule 417 (measurement_optional -> if_data_measurement .)
    MATRIX_DIM      reduce using rule 417 (measurement_optional -> if_data_measurement .)
    ECU_ADDRESS_EXTENSION reduce using rule 417 (measurement_optional -> if_data_measurement .)
    end             reduce using rule 417 (measurement_optional -> if_data_measurement .)


state 956

    (292) max_refresh -> MAX_REFRESH . NUMERIC NUMERIC

    NUMERIC         shift and go to state 987


state 957

    (408) measurement_optional -> bit_operation .

    READ_WRITE      reduce using rule 408 (measurement_optional -> bit_operation .)
    DISPLAY_IDENTIFIER reduce using rule 408 (measurement_optional -> bit_operation .)
    FORMAT          reduce using rule 408 (measurement_optional -> bit_operation .)
    ARRAY_SIZE      reduce using rule 408 (measurement_optional -> bit_operation .)
    BIT_MASK        reduce using rule 408 (measurement_optional -> bit_operation .)
    begin           reduce using rule 408 (measurement_optional -> bit_operation .)
    BYTE_ORDER      reduce using rule 408 (measurement_optional -> bit_operation .)
    MAX_REFRESH     reduce using rule 408 (measurement_optional -> bit_operation .)
    ECU_ADDRESS     reduce using rule 408 (measurement_optional -> bit_operation .)
    ERROR_MASK      reduce using rule 408 (measurement_optional -> bit_operation .)
    REF_MEMORY_SEGMENT reduce using rule 408 (measurement_optional -> bit_operation .)
    MATRIX_DIM      reduce using rule 408 (measurement_optional -> bit_operation .)
    ECU_ADDRESS_EXTENSION reduce using rule 408 (measurement_optional -> bit_operation .)
    end             reduce using rule 408 (measurement_optional -> bit_operation .)


state 958

    (415) measurement_optional -> ref_memory_segment .

    READ_WRITE      reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    ARRAY_SIZE      reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    begin           reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS     reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    ERROR_MASK      reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 415 (measurement_optional -> ref_memory_segment .)
    end             reduce using rule 415 (measurement_optional -> ref_memory_segment .)


state 959

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end . MEMORY_LAYOUT

    MEMORY_LAYOUT   shift and go to state 988


state 960

    (219) if_data_memory_layout -> begin IF_DATA . IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    IDENT           shift and go to state 989


state 961

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 990


state 962

    (145) raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end . RASTER

    RASTER          shift and go to state 991


state 963

    (152) source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .

    begin           reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)
    TP_BLOB         reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)
    IDENT           reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)
    STRING          reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)
    NUMERIC         reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)
    end             reduce using rule 152 (source -> begin SOURCE IDENT NUMERIC NUMERIC source_optional_parameter_list_optional end SOURCE .)


state 964

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC . characteristic_optional_list_optional end CHARACTERISTIC
    (378) characteristic_optional_list_optional -> . empty
    (379) characteristic_optional_list_optional -> . characteristic_optional_list
    (698) empty -> .
    (376) characteristic_optional_list -> . characteristic_optional
    (377) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (354) characteristic_optional -> . display_identifier
    (355) characteristic_optional -> . format
    (356) characteristic_optional -> . byte_order
    (357) characteristic_optional -> . bit_mask
    (358) characteristic_optional -> . function_list
    (359) characteristic_optional -> . number
    (360) characteristic_optional -> . extended_limits
    (361) characteristic_optional -> . READ_ONLY
    (362) characteristic_optional -> . GUARD_RAILS
    (363) characteristic_optional -> . map_list
    (364) characteristic_optional -> . max_refresh
    (365) characteristic_optional -> . dependent_characteristic
    (366) characteristic_optional -> . virtual_characteristic
    (367) characteristic_optional -> . ref_memory_segment
    (368) characteristic_optional -> . annotation
    (369) characteristic_optional -> . comparison_quantity
    (370) characteristic_optional -> . if_data_characteristic
    (371) characteristic_optional -> . axis_descr
    (372) characteristic_optional -> . calibration_access
    (373) characteristic_optional -> . matrix_dim
    (374) characteristic_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (287) bit_mask -> . BIT_MASK NUMERIC
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (289) number -> . NUMBER NUMERIC
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (291) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (292) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (293) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (294) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (312) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (375) if_data_characteristic -> . if_data_memory_layout
    (313) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR
    (347) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (352) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC
    (219) if_data_memory_layout -> . begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 698 (empty -> .)
    READ_ONLY       shift and go to state 998
    GUARD_RAILS     shift and go to state 1019
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    BYTE_ORDER      shift and go to state 306
    BIT_MASK        shift and go to state 930
    begin           shift and go to state 1007
    NUMBER          shift and go to state 1010
    EXTENDED_LIMITS shift and go to state 999
    MAX_REFRESH     shift and go to state 956
    REF_MEMORY_SEGMENT shift and go to state 950
    COMPARISON_QUANTITY shift and go to state 996
    CALIBRATION_ACCESS shift and go to state 1003
    MATRIX_DIM      shift and go to state 937
    ECU_ADDRESS_EXTENSION shift and go to state 944

    number                         shift and go to state 992
    if_data_memory_layout          shift and go to state 993
    if_data_characteristic         shift and go to state 995
    display_identifier             shift and go to state 1000
    bit_mask                       shift and go to state 1001
    empty                          shift and go to state 1004
    ecu_address_extension          shift and go to state 1005
    byte_order                     shift and go to state 1006
    dependent_characteristic       shift and go to state 994
    characteristic_optional_list   shift and go to state 997
    format                         shift and go to state 1008
    map_list                       shift and go to state 1009
    axis_descr                     shift and go to state 1011
    matrix_dim                     shift and go to state 1012
    calibration_access             shift and go to state 1013
    annotation                     shift and go to state 1014
    extended_limits                shift and go to state 1016
    virtual_characteristic         shift and go to state 1015
    function_list                  shift and go to state 1017
    max_refresh                    shift and go to state 1021
    characteristic_optional        shift and go to state 1018
    comparison_quantity            shift and go to state 1002
    characteristic_optional_list_optional shift and go to state 1020
    ref_memory_segment             shift and go to state 1022

state 965

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 1023


state 966

    (669) if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional if_data_frame_parameter_optional_list .

    end             reduce using rule 669 (if_data_frame_parameter_optional_list -> if_data_frame_parameter_optional if_data_frame_parameter_optional_list .)


state 967

    (666) if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end . IF_DATA

    IF_DATA         shift and go to state 1024


state 968

    (667) if_data_frame_parameter_optional -> QP_BLOB qp_data .

    QP_BLOB         reduce using rule 667 (if_data_frame_parameter_optional -> QP_BLOB qp_data .)
    end             reduce using rule 667 (if_data_frame_parameter_optional -> QP_BLOB qp_data .)


state 969

    (672) qp_data -> generic_parameter .

    QP_BLOB         reduce using rule 672 (qp_data -> generic_parameter .)
    end             reduce using rule 672 (qp_data -> generic_parameter .)


state 970

    (467) formula_inv -> FORMULA_INV STRING .

    end             reduce using rule 467 (formula_inv -> FORMULA_INV STRING .)


state 971

    (466) formula -> begin FORMULA STRING formula_optional end . FORMULA

    FORMULA         shift and go to state 1025


state 972

    (470) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1026


state 973

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC . axis_pts_optional_list_optional end AXIS_PTS
    (397) axis_pts_optional_list_optional -> . empty
    (398) axis_pts_optional_list_optional -> . axis_pts_optional_list
    (698) empty -> .
    (395) axis_pts_optional_list -> . axis_pts_optional
    (396) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (381) axis_pts_optional -> . display_identifier
    (382) axis_pts_optional -> . READ_ONLY
    (383) axis_pts_optional -> . format
    (384) axis_pts_optional -> . deposit
    (385) axis_pts_optional -> . byte_order
    (386) axis_pts_optional -> . function_list
    (387) axis_pts_optional -> . ref_memory_segment
    (388) axis_pts_optional -> . GUARD_RAILS
    (389) axis_pts_optional -> . extended_limits
    (390) axis_pts_optional -> . annotation
    (391) axis_pts_optional -> . if_data_axis_pts
    (392) axis_pts_optional -> . calibration_access
    (393) axis_pts_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (399) deposit -> . DEPOSIT deposit_mode
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (394) if_data_axis_pts -> . if_data_memory_layout
    (347) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC
    (219) if_data_memory_layout -> . begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 698 (empty -> .)
    READ_ONLY       shift and go to state 1030
    GUARD_RAILS     shift and go to state 1042
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    DEPOSIT         shift and go to state 315
    BYTE_ORDER      shift and go to state 306
    begin           shift and go to state 1035
    REF_MEMORY_SEGMENT shift and go to state 950
    EXTENDED_LIMITS shift and go to state 999
    CALIBRATION_ACCESS shift and go to state 1003
    ECU_ADDRESS_EXTENSION shift and go to state 944

    if_data_memory_layout          shift and go to state 1027
    axis_pts_optional_list         shift and go to state 1028
    if_data_axis_pts               shift and go to state 1029
    display_identifier             shift and go to state 1031
    empty                          shift and go to state 1032
    ecu_address_extension          shift and go to state 1033
    byte_order                     shift and go to state 1034
    format                         shift and go to state 1036
    axis_pts_optional_list_optional shift and go to state 1037
    calibration_access             shift and go to state 1038
    annotation                     shift and go to state 1039
    extended_limits                shift and go to state 1040
    function_list                  shift and go to state 1041
    deposit                        shift and go to state 1043
    ref_memory_segment             shift and go to state 1044
    axis_pts_optional              shift and go to state 1045

state 974

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end . MEASUREMENT

    MEASUREMENT     shift and go to state 1046


state 975

    (287) bit_mask -> BIT_MASK NUMERIC .

    READ_ONLY       reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    GUARD_RAILS     reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    FORMAT          reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    BIT_MASK        reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    begin           reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    NUMBER          reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    EXTENDED_LIMITS reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    end             reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    READ_WRITE      reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 287 (bit_mask -> BIT_MASK NUMERIC .)


state 976

    (283) format -> FORMAT STRING .

    READ_WRITE      reduce using rule 283 (format -> FORMAT STRING .)
    DISPLAY_IDENTIFIER reduce using rule 283 (format -> FORMAT STRING .)
    FORMAT          reduce using rule 283 (format -> FORMAT STRING .)
    ARRAY_SIZE      reduce using rule 283 (format -> FORMAT STRING .)
    BIT_MASK        reduce using rule 283 (format -> FORMAT STRING .)
    begin           reduce using rule 283 (format -> FORMAT STRING .)
    BYTE_ORDER      reduce using rule 283 (format -> FORMAT STRING .)
    MAX_REFRESH     reduce using rule 283 (format -> FORMAT STRING .)
    ECU_ADDRESS     reduce using rule 283 (format -> FORMAT STRING .)
    ERROR_MASK      reduce using rule 283 (format -> FORMAT STRING .)
    REF_MEMORY_SEGMENT reduce using rule 283 (format -> FORMAT STRING .)
    MATRIX_DIM      reduce using rule 283 (format -> FORMAT STRING .)
    ECU_ADDRESS_EXTENSION reduce using rule 283 (format -> FORMAT STRING .)
    end             reduce using rule 283 (format -> FORMAT STRING .)
    READ_ONLY       reduce using rule 283 (format -> FORMAT STRING .)
    GUARD_RAILS     reduce using rule 283 (format -> FORMAT STRING .)
    DEPOSIT         reduce using rule 283 (format -> FORMAT STRING .)
    EXTENDED_LIMITS reduce using rule 283 (format -> FORMAT STRING .)
    CALIBRATION_ACCESS reduce using rule 283 (format -> FORMAT STRING .)
    AXIS_PTS_REF    reduce using rule 283 (format -> FORMAT STRING .)
    MAX_GRAD        reduce using rule 283 (format -> FORMAT STRING .)
    MONOTONY        reduce using rule 283 (format -> FORMAT STRING .)
    FIX_AXIS_PAR    reduce using rule 283 (format -> FORMAT STRING .)
    FIX_AXIS_PAR_DIST reduce using rule 283 (format -> FORMAT STRING .)
    CURVE_AXIS_REF  reduce using rule 283 (format -> FORMAT STRING .)
    NUMBER          reduce using rule 283 (format -> FORMAT STRING .)
    COMPARISON_QUANTITY reduce using rule 283 (format -> FORMAT STRING .)


state 977

    (480) error_mask -> ERROR_MASK NUMERIC .

    READ_WRITE      reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    FORMAT          reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    BIT_MASK        reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    begin           reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)
    end             reduce using rule 480 (error_mask -> ERROR_MASK NUMERIC .)


state 978

    (352) matrix_dim -> MATRIX_DIM NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1047


state 979

    (420) if_data_measurement -> begin IF_DATA . IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA

    IDENT           shift and go to state 1048


state 980

    (478) virtual -> begin VIRTUAL . ident_list end VIRTUAL
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 1049

state 981

    (443) bit_operation -> begin BIT_OPERATION . bit_operation_optional_list_optional end BIT_OPERATION
    (451) bit_operation_optional_list_optional -> . empty
    (452) bit_operation_optional_list_optional -> . bit_operation_optional_list
    (698) empty -> .
    (449) bit_operation_optional_list -> . bit_operation_optional
    (450) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (444) bit_operation_optional -> . left_shift
    (445) bit_operation_optional -> . right_shift
    (446) bit_operation_optional -> . SIGN_EXTEND
    (447) left_shift -> . LEFT_SHIFT NUMERIC
    (448) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 698 (empty -> .)
    SIGN_EXTEND     shift and go to state 1055
    LEFT_SHIFT      shift and go to state 1051
    RIGHT_SHIFT     shift and go to state 1050

    bit_operation_optional_list_optional shift and go to state 1056
    left_shift                     shift and go to state 1052
    bit_operation_optional_list    shift and go to state 1053
    right_shift                    shift and go to state 1054
    bit_operation_optional         shift and go to state 1057
    empty                          shift and go to state 1058

state 982

    (353) ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .

    READ_ONLY       reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    GUARD_RAILS     reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    FORMAT          reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DEPOSIT         reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BYTE_ORDER      reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    begin           reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    EXTENDED_LIMITS reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    end             reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BIT_MASK        reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    NUMBER          reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MAX_REFRESH     reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MATRIX_DIM      reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    READ_WRITE      reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ARRAY_SIZE      reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS     reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ERROR_MASK      reduce using rule 353 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)


state 983

    (439) measurement_optional_list -> measurement_optional measurement_optional_list .

    end             reduce using rule 439 (measurement_optional_list -> measurement_optional measurement_optional_list .)


state 984

    (479) ecu_address -> ECU_ADDRESS NUMERIC .

    READ_WRITE      reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    FORMAT          reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ARRAY_SIZE      reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BIT_MASK        reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    begin           reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BYTE_ORDER      reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MAX_REFRESH     reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS     reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ERROR_MASK      reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MATRIX_DIM      reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)
    end             reduce using rule 479 (ecu_address -> ECU_ADDRESS NUMERIC .)


state 985

    (300) ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .

    READ_WRITE      reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    FORMAT          reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ARRAY_SIZE      reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BIT_MASK        reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    begin           reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BYTE_ORDER      reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MAX_REFRESH     reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS     reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ERROR_MASK      reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MATRIX_DIM      reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    end             reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    READ_ONLY       reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    GUARD_RAILS     reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DEPOSIT         reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    EXTENDED_LIMITS reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    CALIBRATION_ACCESS reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    NUMBER          reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    COMPARISON_QUANTITY reduce using rule 300 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)


state 986

    (442) array_size -> ARRAY_SIZE NUMERIC .

    READ_WRITE      reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    FORMAT          reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    ARRAY_SIZE      reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    BIT_MASK        reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    begin           reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    BYTE_ORDER      reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    MAX_REFRESH     reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS     reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    ERROR_MASK      reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    MATRIX_DIM      reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)
    end             reduce using rule 442 (array_size -> ARRAY_SIZE NUMERIC .)


state 987

    (292) max_refresh -> MAX_REFRESH NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1059


state 988

    (213) memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .

    ADDR_EPK        reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    EPK             reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    SUPPLIER        reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    CUSTOMER        reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    CUSTOMER_NO     reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    USER            reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    PHONE_NO        reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    ECU             reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    CPU_TYPE        reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    NO_OF_INTERFACES reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    ECU_CALIBRATION_OFFSET reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    begin           reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    SYSTEM_CONSTANT reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    ASAP2_VERSION   reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    A2ML_VERSION    reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)
    end             reduce using rule 213 (memory_layout -> begin MEMORY_LAYOUT memory_layout_prg_type NUMERIC NUMERIC number_list memory_layout_parameter_optional end MEMORY_LAYOUT .)


state 989

    (219) if_data_memory_layout -> begin IF_DATA IDENT . if_data_memory_layout_optional_parameter_list_optional end IF_DATA
    (224) if_data_memory_layout_optional_parameter_list_optional -> . empty
    (225) if_data_memory_layout_optional_parameter_list_optional -> . if_data_memory_layout_optional_parameter_list
    (698) empty -> .
    (222) if_data_memory_layout_optional_parameter_list -> . if_data_memory_layout_optional_parameter
    (223) if_data_memory_layout_optional_parameter_list -> . if_data_memory_layout_optional_parameter if_data_memory_layout_optional_parameter_list
    (220) if_data_memory_layout_optional_parameter -> . dp_blob dp_data
    (221) if_data_memory_layout_optional_parameter -> . ba_blob pa_data
    (226) dp_blob -> . DP_BLOB
    (227) ba_blob -> . BA_BLOB

    end             reduce using rule 698 (empty -> .)
    DP_BLOB         shift and go to state 1067
    BA_BLOB         shift and go to state 1060

    dp_blob                        shift and go to state 1061
    if_data_memory_layout_optional_parameter shift and go to state 1062
    if_data_memory_layout_optional_parameter_list shift and go to state 1063
    ba_blob                        shift and go to state 1064
    if_data_memory_layout_optional_parameter_list_optional shift and go to state 1065
    empty                          shift and go to state 1066

state 990

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 1068


state 991

    (145) raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .

    begin           reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)
    TP_BLOB         reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)
    IDENT           reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)
    STRING          reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)
    NUMERIC         reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)
    end             reduce using rule 145 (raster -> begin RASTER STRING STRING NUMERIC NUMERIC NUMERIC end RASTER .)


state 992

    (359) characteristic_optional -> number .

    READ_ONLY       reduce using rule 359 (characteristic_optional -> number .)
    GUARD_RAILS     reduce using rule 359 (characteristic_optional -> number .)
    DISPLAY_IDENTIFIER reduce using rule 359 (characteristic_optional -> number .)
    FORMAT          reduce using rule 359 (characteristic_optional -> number .)
    BYTE_ORDER      reduce using rule 359 (characteristic_optional -> number .)
    BIT_MASK        reduce using rule 359 (characteristic_optional -> number .)
    begin           reduce using rule 359 (characteristic_optional -> number .)
    NUMBER          reduce using rule 359 (characteristic_optional -> number .)
    EXTENDED_LIMITS reduce using rule 359 (characteristic_optional -> number .)
    MAX_REFRESH     reduce using rule 359 (characteristic_optional -> number .)
    REF_MEMORY_SEGMENT reduce using rule 359 (characteristic_optional -> number .)
    COMPARISON_QUANTITY reduce using rule 359 (characteristic_optional -> number .)
    CALIBRATION_ACCESS reduce using rule 359 (characteristic_optional -> number .)
    MATRIX_DIM      reduce using rule 359 (characteristic_optional -> number .)
    ECU_ADDRESS_EXTENSION reduce using rule 359 (characteristic_optional -> number .)
    end             reduce using rule 359 (characteristic_optional -> number .)


state 993

    (375) if_data_characteristic -> if_data_memory_layout .

    READ_ONLY       reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    GUARD_RAILS     reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    DISPLAY_IDENTIFIER reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    FORMAT          reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    BYTE_ORDER      reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    BIT_MASK        reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    begin           reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    NUMBER          reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    EXTENDED_LIMITS reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    MAX_REFRESH     reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    REF_MEMORY_SEGMENT reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    COMPARISON_QUANTITY reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    CALIBRATION_ACCESS reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    MATRIX_DIM      reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    ECU_ADDRESS_EXTENSION reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)
    end             reduce using rule 375 (if_data_characteristic -> if_data_memory_layout .)


state 994

    (365) characteristic_optional -> dependent_characteristic .

    READ_ONLY       reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    GUARD_RAILS     reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    FORMAT          reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    BYTE_ORDER      reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    BIT_MASK        reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    begin           reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    NUMBER          reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    EXTENDED_LIMITS reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    MAX_REFRESH     reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    COMPARISON_QUANTITY reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    CALIBRATION_ACCESS reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    MATRIX_DIM      reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 365 (characteristic_optional -> dependent_characteristic .)
    end             reduce using rule 365 (characteristic_optional -> dependent_characteristic .)


state 995

    (370) characteristic_optional -> if_data_characteristic .

    READ_ONLY       reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    GUARD_RAILS     reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    FORMAT          reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    BYTE_ORDER      reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    BIT_MASK        reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    begin           reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    NUMBER          reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    EXTENDED_LIMITS reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    MAX_REFRESH     reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    COMPARISON_QUANTITY reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    CALIBRATION_ACCESS reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    MATRIX_DIM      reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 370 (characteristic_optional -> if_data_characteristic .)
    end             reduce using rule 370 (characteristic_optional -> if_data_characteristic .)


state 996

    (312) comparison_quantity -> COMPARISON_QUANTITY . IDENT

    IDENT           shift and go to state 1069


state 997

    (379) characteristic_optional_list_optional -> characteristic_optional_list .

    end             reduce using rule 379 (characteristic_optional_list_optional -> characteristic_optional_list .)


state 998

    (361) characteristic_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    FORMAT          reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    BIT_MASK        reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    begin           reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    NUMBER          reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    MAX_REFRESH     reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    COMPARISON_QUANTITY reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    MATRIX_DIM      reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 361 (characteristic_optional -> READ_ONLY .)
    end             reduce using rule 361 (characteristic_optional -> READ_ONLY .)


state 999

    (290) extended_limits -> EXTENDED_LIMITS . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1070


state 1000

    (354) characteristic_optional -> display_identifier .

    READ_ONLY       reduce using rule 354 (characteristic_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 354 (characteristic_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 354 (characteristic_optional -> display_identifier .)
    FORMAT          reduce using rule 354 (characteristic_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 354 (characteristic_optional -> display_identifier .)
    BIT_MASK        reduce using rule 354 (characteristic_optional -> display_identifier .)
    begin           reduce using rule 354 (characteristic_optional -> display_identifier .)
    NUMBER          reduce using rule 354 (characteristic_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 354 (characteristic_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 354 (characteristic_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 354 (characteristic_optional -> display_identifier .)
    COMPARISON_QUANTITY reduce using rule 354 (characteristic_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 354 (characteristic_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 354 (characteristic_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 354 (characteristic_optional -> display_identifier .)
    end             reduce using rule 354 (characteristic_optional -> display_identifier .)


state 1001

    (357) characteristic_optional -> bit_mask .

    READ_ONLY       reduce using rule 357 (characteristic_optional -> bit_mask .)
    GUARD_RAILS     reduce using rule 357 (characteristic_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 357 (characteristic_optional -> bit_mask .)
    FORMAT          reduce using rule 357 (characteristic_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 357 (characteristic_optional -> bit_mask .)
    BIT_MASK        reduce using rule 357 (characteristic_optional -> bit_mask .)
    begin           reduce using rule 357 (characteristic_optional -> bit_mask .)
    NUMBER          reduce using rule 357 (characteristic_optional -> bit_mask .)
    EXTENDED_LIMITS reduce using rule 357 (characteristic_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 357 (characteristic_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 357 (characteristic_optional -> bit_mask .)
    COMPARISON_QUANTITY reduce using rule 357 (characteristic_optional -> bit_mask .)
    CALIBRATION_ACCESS reduce using rule 357 (characteristic_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 357 (characteristic_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 357 (characteristic_optional -> bit_mask .)
    end             reduce using rule 357 (characteristic_optional -> bit_mask .)


state 1002

    (369) characteristic_optional -> comparison_quantity .

    READ_ONLY       reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    GUARD_RAILS     reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    DISPLAY_IDENTIFIER reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    FORMAT          reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    BYTE_ORDER      reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    BIT_MASK        reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    begin           reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    NUMBER          reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    EXTENDED_LIMITS reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    MAX_REFRESH     reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    REF_MEMORY_SEGMENT reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    COMPARISON_QUANTITY reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    CALIBRATION_ACCESS reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    MATRIX_DIM      reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    ECU_ADDRESS_EXTENSION reduce using rule 369 (characteristic_optional -> comparison_quantity .)
    end             reduce using rule 369 (characteristic_optional -> comparison_quantity .)


state 1003

    (347) calibration_access -> CALIBRATION_ACCESS . calibration_access_type
    (348) calibration_access_type -> . CALIBRATION
    (349) calibration_access_type -> . NO_CALIBRATION
    (350) calibration_access_type -> . NOT_IN_MCD_SYSTEM
    (351) calibration_access_type -> . OFFLINE_CALIBRATION

    CALIBRATION     shift and go to state 1072
    NO_CALIBRATION  shift and go to state 1073
    NOT_IN_MCD_SYSTEM shift and go to state 1074
    OFFLINE_CALIBRATION shift and go to state 1071

    calibration_access_type        shift and go to state 1075

state 1004

    (378) characteristic_optional_list_optional -> empty .

    end             reduce using rule 378 (characteristic_optional_list_optional -> empty .)


state 1005

    (374) characteristic_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    begin           reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    NUMBER          reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    COMPARISON_QUANTITY reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 374 (characteristic_optional -> ecu_address_extension .)
    end             reduce using rule 374 (characteristic_optional -> ecu_address_extension .)


state 1006

    (356) characteristic_optional -> byte_order .

    READ_ONLY       reduce using rule 356 (characteristic_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 356 (characteristic_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 356 (characteristic_optional -> byte_order .)
    FORMAT          reduce using rule 356 (characteristic_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 356 (characteristic_optional -> byte_order .)
    BIT_MASK        reduce using rule 356 (characteristic_optional -> byte_order .)
    begin           reduce using rule 356 (characteristic_optional -> byte_order .)
    NUMBER          reduce using rule 356 (characteristic_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 356 (characteristic_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 356 (characteristic_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 356 (characteristic_optional -> byte_order .)
    COMPARISON_QUANTITY reduce using rule 356 (characteristic_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 356 (characteristic_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 356 (characteristic_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 356 (characteristic_optional -> byte_order .)
    end             reduce using rule 356 (characteristic_optional -> byte_order .)


state 1007

    (288) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (291) map_list -> begin . MAP_LIST ident_list end MAP_LIST
    (293) dependent_characteristic -> begin . DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (294) virtual_characteristic -> begin . VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC
    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (313) axis_descr -> begin . AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR
    (219) if_data_memory_layout -> begin . IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    FUNCTION_LIST   shift and go to state 490
    MAP_LIST        shift and go to state 1077
    DEPENDENT_CHARACTERISTIC shift and go to state 1076
    VIRTUAL_CHARACTERISTIC shift and go to state 1079
    ANNOTATION      shift and go to state 493
    AXIS_DESCR      shift and go to state 1078
    IF_DATA         shift and go to state 960


state 1008

    (355) characteristic_optional -> format .

    READ_ONLY       reduce using rule 355 (characteristic_optional -> format .)
    GUARD_RAILS     reduce using rule 355 (characteristic_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 355 (characteristic_optional -> format .)
    FORMAT          reduce using rule 355 (characteristic_optional -> format .)
    BYTE_ORDER      reduce using rule 355 (characteristic_optional -> format .)
    BIT_MASK        reduce using rule 355 (characteristic_optional -> format .)
    begin           reduce using rule 355 (characteristic_optional -> format .)
    NUMBER          reduce using rule 355 (characteristic_optional -> format .)
    EXTENDED_LIMITS reduce using rule 355 (characteristic_optional -> format .)
    MAX_REFRESH     reduce using rule 355 (characteristic_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 355 (characteristic_optional -> format .)
    COMPARISON_QUANTITY reduce using rule 355 (characteristic_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 355 (characteristic_optional -> format .)
    MATRIX_DIM      reduce using rule 355 (characteristic_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 355 (characteristic_optional -> format .)
    end             reduce using rule 355 (characteristic_optional -> format .)


state 1009

    (363) characteristic_optional -> map_list .

    READ_ONLY       reduce using rule 363 (characteristic_optional -> map_list .)
    GUARD_RAILS     reduce using rule 363 (characteristic_optional -> map_list .)
    DISPLAY_IDENTIFIER reduce using rule 363 (characteristic_optional -> map_list .)
    FORMAT          reduce using rule 363 (characteristic_optional -> map_list .)
    BYTE_ORDER      reduce using rule 363 (characteristic_optional -> map_list .)
    BIT_MASK        reduce using rule 363 (characteristic_optional -> map_list .)
    begin           reduce using rule 363 (characteristic_optional -> map_list .)
    NUMBER          reduce using rule 363 (characteristic_optional -> map_list .)
    EXTENDED_LIMITS reduce using rule 363 (characteristic_optional -> map_list .)
    MAX_REFRESH     reduce using rule 363 (characteristic_optional -> map_list .)
    REF_MEMORY_SEGMENT reduce using rule 363 (characteristic_optional -> map_list .)
    COMPARISON_QUANTITY reduce using rule 363 (characteristic_optional -> map_list .)
    CALIBRATION_ACCESS reduce using rule 363 (characteristic_optional -> map_list .)
    MATRIX_DIM      reduce using rule 363 (characteristic_optional -> map_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 363 (characteristic_optional -> map_list .)
    end             reduce using rule 363 (characteristic_optional -> map_list .)


state 1010

    (289) number -> NUMBER . NUMERIC

    NUMERIC         shift and go to state 1080


state 1011

    (371) characteristic_optional -> axis_descr .

    READ_ONLY       reduce using rule 371 (characteristic_optional -> axis_descr .)
    GUARD_RAILS     reduce using rule 371 (characteristic_optional -> axis_descr .)
    DISPLAY_IDENTIFIER reduce using rule 371 (characteristic_optional -> axis_descr .)
    FORMAT          reduce using rule 371 (characteristic_optional -> axis_descr .)
    BYTE_ORDER      reduce using rule 371 (characteristic_optional -> axis_descr .)
    BIT_MASK        reduce using rule 371 (characteristic_optional -> axis_descr .)
    begin           reduce using rule 371 (characteristic_optional -> axis_descr .)
    NUMBER          reduce using rule 371 (characteristic_optional -> axis_descr .)
    EXTENDED_LIMITS reduce using rule 371 (characteristic_optional -> axis_descr .)
    MAX_REFRESH     reduce using rule 371 (characteristic_optional -> axis_descr .)
    REF_MEMORY_SEGMENT reduce using rule 371 (characteristic_optional -> axis_descr .)
    COMPARISON_QUANTITY reduce using rule 371 (characteristic_optional -> axis_descr .)
    CALIBRATION_ACCESS reduce using rule 371 (characteristic_optional -> axis_descr .)
    MATRIX_DIM      reduce using rule 371 (characteristic_optional -> axis_descr .)
    ECU_ADDRESS_EXTENSION reduce using rule 371 (characteristic_optional -> axis_descr .)
    end             reduce using rule 371 (characteristic_optional -> axis_descr .)


state 1012

    (373) characteristic_optional -> matrix_dim .

    READ_ONLY       reduce using rule 373 (characteristic_optional -> matrix_dim .)
    GUARD_RAILS     reduce using rule 373 (characteristic_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 373 (characteristic_optional -> matrix_dim .)
    FORMAT          reduce using rule 373 (characteristic_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 373 (characteristic_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 373 (characteristic_optional -> matrix_dim .)
    begin           reduce using rule 373 (characteristic_optional -> matrix_dim .)
    NUMBER          reduce using rule 373 (characteristic_optional -> matrix_dim .)
    EXTENDED_LIMITS reduce using rule 373 (characteristic_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 373 (characteristic_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 373 (characteristic_optional -> matrix_dim .)
    COMPARISON_QUANTITY reduce using rule 373 (characteristic_optional -> matrix_dim .)
    CALIBRATION_ACCESS reduce using rule 373 (characteristic_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 373 (characteristic_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 373 (characteristic_optional -> matrix_dim .)
    end             reduce using rule 373 (characteristic_optional -> matrix_dim .)


state 1013

    (372) characteristic_optional -> calibration_access .

    READ_ONLY       reduce using rule 372 (characteristic_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 372 (characteristic_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 372 (characteristic_optional -> calibration_access .)
    FORMAT          reduce using rule 372 (characteristic_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 372 (characteristic_optional -> calibration_access .)
    BIT_MASK        reduce using rule 372 (characteristic_optional -> calibration_access .)
    begin           reduce using rule 372 (characteristic_optional -> calibration_access .)
    NUMBER          reduce using rule 372 (characteristic_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 372 (characteristic_optional -> calibration_access .)
    MAX_REFRESH     reduce using rule 372 (characteristic_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 372 (characteristic_optional -> calibration_access .)
    COMPARISON_QUANTITY reduce using rule 372 (characteristic_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 372 (characteristic_optional -> calibration_access .)
    MATRIX_DIM      reduce using rule 372 (characteristic_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 372 (characteristic_optional -> calibration_access .)
    end             reduce using rule 372 (characteristic_optional -> calibration_access .)


state 1014

    (368) characteristic_optional -> annotation .

    READ_ONLY       reduce using rule 368 (characteristic_optional -> annotation .)
    GUARD_RAILS     reduce using rule 368 (characteristic_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 368 (characteristic_optional -> annotation .)
    FORMAT          reduce using rule 368 (characteristic_optional -> annotation .)
    BYTE_ORDER      reduce using rule 368 (characteristic_optional -> annotation .)
    BIT_MASK        reduce using rule 368 (characteristic_optional -> annotation .)
    begin           reduce using rule 368 (characteristic_optional -> annotation .)
    NUMBER          reduce using rule 368 (characteristic_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 368 (characteristic_optional -> annotation .)
    MAX_REFRESH     reduce using rule 368 (characteristic_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 368 (characteristic_optional -> annotation .)
    COMPARISON_QUANTITY reduce using rule 368 (characteristic_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 368 (characteristic_optional -> annotation .)
    MATRIX_DIM      reduce using rule 368 (characteristic_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 368 (characteristic_optional -> annotation .)
    end             reduce using rule 368 (characteristic_optional -> annotation .)


state 1015

    (366) characteristic_optional -> virtual_characteristic .

    READ_ONLY       reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    GUARD_RAILS     reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    FORMAT          reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    BYTE_ORDER      reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    BIT_MASK        reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    begin           reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    NUMBER          reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    EXTENDED_LIMITS reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    MAX_REFRESH     reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    COMPARISON_QUANTITY reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    CALIBRATION_ACCESS reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    MATRIX_DIM      reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 366 (characteristic_optional -> virtual_characteristic .)
    end             reduce using rule 366 (characteristic_optional -> virtual_characteristic .)


state 1016

    (360) characteristic_optional -> extended_limits .

    READ_ONLY       reduce using rule 360 (characteristic_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 360 (characteristic_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 360 (characteristic_optional -> extended_limits .)
    FORMAT          reduce using rule 360 (characteristic_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 360 (characteristic_optional -> extended_limits .)
    BIT_MASK        reduce using rule 360 (characteristic_optional -> extended_limits .)
    begin           reduce using rule 360 (characteristic_optional -> extended_limits .)
    NUMBER          reduce using rule 360 (characteristic_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 360 (characteristic_optional -> extended_limits .)
    MAX_REFRESH     reduce using rule 360 (characteristic_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 360 (characteristic_optional -> extended_limits .)
    COMPARISON_QUANTITY reduce using rule 360 (characteristic_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 360 (characteristic_optional -> extended_limits .)
    MATRIX_DIM      reduce using rule 360 (characteristic_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 360 (characteristic_optional -> extended_limits .)
    end             reduce using rule 360 (characteristic_optional -> extended_limits .)


state 1017

    (358) characteristic_optional -> function_list .

    READ_ONLY       reduce using rule 358 (characteristic_optional -> function_list .)
    GUARD_RAILS     reduce using rule 358 (characteristic_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 358 (characteristic_optional -> function_list .)
    FORMAT          reduce using rule 358 (characteristic_optional -> function_list .)
    BYTE_ORDER      reduce using rule 358 (characteristic_optional -> function_list .)
    BIT_MASK        reduce using rule 358 (characteristic_optional -> function_list .)
    begin           reduce using rule 358 (characteristic_optional -> function_list .)
    NUMBER          reduce using rule 358 (characteristic_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 358 (characteristic_optional -> function_list .)
    MAX_REFRESH     reduce using rule 358 (characteristic_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 358 (characteristic_optional -> function_list .)
    COMPARISON_QUANTITY reduce using rule 358 (characteristic_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 358 (characteristic_optional -> function_list .)
    MATRIX_DIM      reduce using rule 358 (characteristic_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 358 (characteristic_optional -> function_list .)
    end             reduce using rule 358 (characteristic_optional -> function_list .)


state 1018

    (376) characteristic_optional_list -> characteristic_optional .
    (377) characteristic_optional_list -> characteristic_optional . characteristic_optional_list
    (376) characteristic_optional_list -> . characteristic_optional
    (377) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (354) characteristic_optional -> . display_identifier
    (355) characteristic_optional -> . format
    (356) characteristic_optional -> . byte_order
    (357) characteristic_optional -> . bit_mask
    (358) characteristic_optional -> . function_list
    (359) characteristic_optional -> . number
    (360) characteristic_optional -> . extended_limits
    (361) characteristic_optional -> . READ_ONLY
    (362) characteristic_optional -> . GUARD_RAILS
    (363) characteristic_optional -> . map_list
    (364) characteristic_optional -> . max_refresh
    (365) characteristic_optional -> . dependent_characteristic
    (366) characteristic_optional -> . virtual_characteristic
    (367) characteristic_optional -> . ref_memory_segment
    (368) characteristic_optional -> . annotation
    (369) characteristic_optional -> . comparison_quantity
    (370) characteristic_optional -> . if_data_characteristic
    (371) characteristic_optional -> . axis_descr
    (372) characteristic_optional -> . calibration_access
    (373) characteristic_optional -> . matrix_dim
    (374) characteristic_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (287) bit_mask -> . BIT_MASK NUMERIC
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (289) number -> . NUMBER NUMERIC
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (291) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (292) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (293) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (294) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (312) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (375) if_data_characteristic -> . if_data_memory_layout
    (313) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR
    (347) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (352) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC
    (219) if_data_memory_layout -> . begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 376 (characteristic_optional_list -> characteristic_optional .)
    READ_ONLY       shift and go to state 998
    GUARD_RAILS     shift and go to state 1019
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    BYTE_ORDER      shift and go to state 306
    BIT_MASK        shift and go to state 930
    begin           shift and go to state 1007
    NUMBER          shift and go to state 1010
    EXTENDED_LIMITS shift and go to state 999
    MAX_REFRESH     shift and go to state 956
    REF_MEMORY_SEGMENT shift and go to state 950
    COMPARISON_QUANTITY shift and go to state 996
    CALIBRATION_ACCESS shift and go to state 1003
    MATRIX_DIM      shift and go to state 937
    ECU_ADDRESS_EXTENSION shift and go to state 944

    number                         shift and go to state 992
    if_data_memory_layout          shift and go to state 993
    if_data_characteristic         shift and go to state 995
    display_identifier             shift and go to state 1000
    bit_mask                       shift and go to state 1001
    ecu_address_extension          shift and go to state 1005
    byte_order                     shift and go to state 1006
    dependent_characteristic       shift and go to state 994
    characteristic_optional_list   shift and go to state 1081
    format                         shift and go to state 1008
    map_list                       shift and go to state 1009
    axis_descr                     shift and go to state 1011
    matrix_dim                     shift and go to state 1012
    calibration_access             shift and go to state 1013
    annotation                     shift and go to state 1014
    extended_limits                shift and go to state 1016
    virtual_characteristic         shift and go to state 1015
    function_list                  shift and go to state 1017
    max_refresh                    shift and go to state 1021
    characteristic_optional        shift and go to state 1018
    comparison_quantity            shift and go to state 1002
    ref_memory_segment             shift and go to state 1022

state 1019

    (362) characteristic_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    BIT_MASK        reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    begin           reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    NUMBER          reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    MAX_REFRESH     reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    COMPARISON_QUANTITY reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    MATRIX_DIM      reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)
    end             reduce using rule 362 (characteristic_optional -> GUARD_RAILS .)


state 1020

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional . end CHARACTERISTIC

    end             shift and go to state 1082


state 1021

    (364) characteristic_optional -> max_refresh .

    READ_ONLY       reduce using rule 364 (characteristic_optional -> max_refresh .)
    GUARD_RAILS     reduce using rule 364 (characteristic_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 364 (characteristic_optional -> max_refresh .)
    FORMAT          reduce using rule 364 (characteristic_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 364 (characteristic_optional -> max_refresh .)
    BIT_MASK        reduce using rule 364 (characteristic_optional -> max_refresh .)
    begin           reduce using rule 364 (characteristic_optional -> max_refresh .)
    NUMBER          reduce using rule 364 (characteristic_optional -> max_refresh .)
    EXTENDED_LIMITS reduce using rule 364 (characteristic_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 364 (characteristic_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 364 (characteristic_optional -> max_refresh .)
    COMPARISON_QUANTITY reduce using rule 364 (characteristic_optional -> max_refresh .)
    CALIBRATION_ACCESS reduce using rule 364 (characteristic_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 364 (characteristic_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 364 (characteristic_optional -> max_refresh .)
    end             reduce using rule 364 (characteristic_optional -> max_refresh .)


state 1022

    (367) characteristic_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    begin           reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    NUMBER          reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    COMPARISON_QUANTITY reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 367 (characteristic_optional -> ref_memory_segment .)
    end             reduce using rule 367 (characteristic_optional -> ref_memory_segment .)


state 1023

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1083


state 1024

    (666) if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA .

    FRAME_MEASUREMENT reduce using rule 666 (if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA .)
    begin           reduce using rule 666 (if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA .)
    end             reduce using rule 666 (if_data_frame -> begin IF_DATA IDENT if_data_frame_parameter_optional_list_optional end IF_DATA .)


state 1025

    (466) formula -> begin FORMULA STRING formula_optional end FORMULA .

    begin           reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COEFFS          reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COEFFS_LINEAR   reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COMPU_TAB_REF   reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    REF_UNIT        reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    end             reduce using rule 466 (formula -> begin FORMULA STRING formula_optional end FORMULA .)


state 1026

    (470) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1084


state 1027

    (394) if_data_axis_pts -> if_data_memory_layout .

    READ_ONLY       reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    GUARD_RAILS     reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    DISPLAY_IDENTIFIER reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    FORMAT          reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    DEPOSIT         reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    BYTE_ORDER      reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    begin           reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    REF_MEMORY_SEGMENT reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    EXTENDED_LIMITS reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    CALIBRATION_ACCESS reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    ECU_ADDRESS_EXTENSION reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)
    end             reduce using rule 394 (if_data_axis_pts -> if_data_memory_layout .)


state 1028

    (398) axis_pts_optional_list_optional -> axis_pts_optional_list .

    end             reduce using rule 398 (axis_pts_optional_list_optional -> axis_pts_optional_list .)


state 1029

    (391) axis_pts_optional -> if_data_axis_pts .

    READ_ONLY       reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    GUARD_RAILS     reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    DISPLAY_IDENTIFIER reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    FORMAT          reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    DEPOSIT         reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    BYTE_ORDER      reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    begin           reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    REF_MEMORY_SEGMENT reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    EXTENDED_LIMITS reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    CALIBRATION_ACCESS reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    ECU_ADDRESS_EXTENSION reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)
    end             reduce using rule 391 (axis_pts_optional -> if_data_axis_pts .)


state 1030

    (382) axis_pts_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    FORMAT          reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    DEPOSIT         reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    begin           reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 382 (axis_pts_optional -> READ_ONLY .)
    end             reduce using rule 382 (axis_pts_optional -> READ_ONLY .)


state 1031

    (381) axis_pts_optional -> display_identifier .

    READ_ONLY       reduce using rule 381 (axis_pts_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 381 (axis_pts_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 381 (axis_pts_optional -> display_identifier .)
    FORMAT          reduce using rule 381 (axis_pts_optional -> display_identifier .)
    DEPOSIT         reduce using rule 381 (axis_pts_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 381 (axis_pts_optional -> display_identifier .)
    begin           reduce using rule 381 (axis_pts_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 381 (axis_pts_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 381 (axis_pts_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 381 (axis_pts_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 381 (axis_pts_optional -> display_identifier .)
    end             reduce using rule 381 (axis_pts_optional -> display_identifier .)


state 1032

    (397) axis_pts_optional_list_optional -> empty .

    end             reduce using rule 397 (axis_pts_optional_list_optional -> empty .)


state 1033

    (393) axis_pts_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    DEPOSIT         reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    begin           reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)
    end             reduce using rule 393 (axis_pts_optional -> ecu_address_extension .)


state 1034

    (385) axis_pts_optional -> byte_order .

    READ_ONLY       reduce using rule 385 (axis_pts_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 385 (axis_pts_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 385 (axis_pts_optional -> byte_order .)
    FORMAT          reduce using rule 385 (axis_pts_optional -> byte_order .)
    DEPOSIT         reduce using rule 385 (axis_pts_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 385 (axis_pts_optional -> byte_order .)
    begin           reduce using rule 385 (axis_pts_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 385 (axis_pts_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 385 (axis_pts_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 385 (axis_pts_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 385 (axis_pts_optional -> byte_order .)
    end             reduce using rule 385 (axis_pts_optional -> byte_order .)


state 1035

    (288) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (219) if_data_memory_layout -> begin . IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    FUNCTION_LIST   shift and go to state 490
    ANNOTATION      shift and go to state 493
    IF_DATA         shift and go to state 960


state 1036

    (383) axis_pts_optional -> format .

    READ_ONLY       reduce using rule 383 (axis_pts_optional -> format .)
    GUARD_RAILS     reduce using rule 383 (axis_pts_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 383 (axis_pts_optional -> format .)
    FORMAT          reduce using rule 383 (axis_pts_optional -> format .)
    DEPOSIT         reduce using rule 383 (axis_pts_optional -> format .)
    BYTE_ORDER      reduce using rule 383 (axis_pts_optional -> format .)
    begin           reduce using rule 383 (axis_pts_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 383 (axis_pts_optional -> format .)
    EXTENDED_LIMITS reduce using rule 383 (axis_pts_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 383 (axis_pts_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 383 (axis_pts_optional -> format .)
    end             reduce using rule 383 (axis_pts_optional -> format .)


state 1037

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional . end AXIS_PTS

    end             shift and go to state 1085


state 1038

    (392) axis_pts_optional -> calibration_access .

    READ_ONLY       reduce using rule 392 (axis_pts_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 392 (axis_pts_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 392 (axis_pts_optional -> calibration_access .)
    FORMAT          reduce using rule 392 (axis_pts_optional -> calibration_access .)
    DEPOSIT         reduce using rule 392 (axis_pts_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 392 (axis_pts_optional -> calibration_access .)
    begin           reduce using rule 392 (axis_pts_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 392 (axis_pts_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 392 (axis_pts_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 392 (axis_pts_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 392 (axis_pts_optional -> calibration_access .)
    end             reduce using rule 392 (axis_pts_optional -> calibration_access .)


state 1039

    (390) axis_pts_optional -> annotation .

    READ_ONLY       reduce using rule 390 (axis_pts_optional -> annotation .)
    GUARD_RAILS     reduce using rule 390 (axis_pts_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 390 (axis_pts_optional -> annotation .)
    FORMAT          reduce using rule 390 (axis_pts_optional -> annotation .)
    DEPOSIT         reduce using rule 390 (axis_pts_optional -> annotation .)
    BYTE_ORDER      reduce using rule 390 (axis_pts_optional -> annotation .)
    begin           reduce using rule 390 (axis_pts_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 390 (axis_pts_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 390 (axis_pts_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 390 (axis_pts_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 390 (axis_pts_optional -> annotation .)
    end             reduce using rule 390 (axis_pts_optional -> annotation .)


state 1040

    (389) axis_pts_optional -> extended_limits .

    READ_ONLY       reduce using rule 389 (axis_pts_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 389 (axis_pts_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 389 (axis_pts_optional -> extended_limits .)
    FORMAT          reduce using rule 389 (axis_pts_optional -> extended_limits .)
    DEPOSIT         reduce using rule 389 (axis_pts_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 389 (axis_pts_optional -> extended_limits .)
    begin           reduce using rule 389 (axis_pts_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 389 (axis_pts_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 389 (axis_pts_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 389 (axis_pts_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 389 (axis_pts_optional -> extended_limits .)
    end             reduce using rule 389 (axis_pts_optional -> extended_limits .)


state 1041

    (386) axis_pts_optional -> function_list .

    READ_ONLY       reduce using rule 386 (axis_pts_optional -> function_list .)
    GUARD_RAILS     reduce using rule 386 (axis_pts_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 386 (axis_pts_optional -> function_list .)
    FORMAT          reduce using rule 386 (axis_pts_optional -> function_list .)
    DEPOSIT         reduce using rule 386 (axis_pts_optional -> function_list .)
    BYTE_ORDER      reduce using rule 386 (axis_pts_optional -> function_list .)
    begin           reduce using rule 386 (axis_pts_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 386 (axis_pts_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 386 (axis_pts_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 386 (axis_pts_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 386 (axis_pts_optional -> function_list .)
    end             reduce using rule 386 (axis_pts_optional -> function_list .)


state 1042

    (388) axis_pts_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    DEPOSIT         reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    begin           reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)
    end             reduce using rule 388 (axis_pts_optional -> GUARD_RAILS .)


state 1043

    (384) axis_pts_optional -> deposit .

    READ_ONLY       reduce using rule 384 (axis_pts_optional -> deposit .)
    GUARD_RAILS     reduce using rule 384 (axis_pts_optional -> deposit .)
    DISPLAY_IDENTIFIER reduce using rule 384 (axis_pts_optional -> deposit .)
    FORMAT          reduce using rule 384 (axis_pts_optional -> deposit .)
    DEPOSIT         reduce using rule 384 (axis_pts_optional -> deposit .)
    BYTE_ORDER      reduce using rule 384 (axis_pts_optional -> deposit .)
    begin           reduce using rule 384 (axis_pts_optional -> deposit .)
    REF_MEMORY_SEGMENT reduce using rule 384 (axis_pts_optional -> deposit .)
    EXTENDED_LIMITS reduce using rule 384 (axis_pts_optional -> deposit .)
    CALIBRATION_ACCESS reduce using rule 384 (axis_pts_optional -> deposit .)
    ECU_ADDRESS_EXTENSION reduce using rule 384 (axis_pts_optional -> deposit .)
    end             reduce using rule 384 (axis_pts_optional -> deposit .)


state 1044

    (387) axis_pts_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    DEPOSIT         reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    begin           reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)
    end             reduce using rule 387 (axis_pts_optional -> ref_memory_segment .)


state 1045

    (395) axis_pts_optional_list -> axis_pts_optional .
    (396) axis_pts_optional_list -> axis_pts_optional . axis_pts_optional_list
    (395) axis_pts_optional_list -> . axis_pts_optional
    (396) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (381) axis_pts_optional -> . display_identifier
    (382) axis_pts_optional -> . READ_ONLY
    (383) axis_pts_optional -> . format
    (384) axis_pts_optional -> . deposit
    (385) axis_pts_optional -> . byte_order
    (386) axis_pts_optional -> . function_list
    (387) axis_pts_optional -> . ref_memory_segment
    (388) axis_pts_optional -> . GUARD_RAILS
    (389) axis_pts_optional -> . extended_limits
    (390) axis_pts_optional -> . annotation
    (391) axis_pts_optional -> . if_data_axis_pts
    (392) axis_pts_optional -> . calibration_access
    (393) axis_pts_optional -> . ecu_address_extension
    (282) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (283) format -> . FORMAT STRING
    (399) deposit -> . DEPOSIT deposit_mode
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (288) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (300) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (394) if_data_axis_pts -> . if_data_memory_layout
    (347) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (353) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC
    (219) if_data_memory_layout -> . begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 395 (axis_pts_optional_list -> axis_pts_optional .)
    READ_ONLY       shift and go to state 1030
    GUARD_RAILS     shift and go to state 1042
    DISPLAY_IDENTIFIER shift and go to state 871
    FORMAT          shift and go to state 934
    DEPOSIT         shift and go to state 315
    BYTE_ORDER      shift and go to state 306
    begin           shift and go to state 1035
    REF_MEMORY_SEGMENT shift and go to state 950
    EXTENDED_LIMITS shift and go to state 999
    CALIBRATION_ACCESS shift and go to state 1003
    ECU_ADDRESS_EXTENSION shift and go to state 944

    byte_order                     shift and go to state 1034
    extended_limits                shift and go to state 1040
    function_list                  shift and go to state 1041
    format                         shift and go to state 1036
    display_identifier             shift and go to state 1031
    if_data_memory_layout          shift and go to state 1027
    annotation                     shift and go to state 1039
    deposit                        shift and go to state 1043
    calibration_access             shift and go to state 1038
    axis_pts_optional_list         shift and go to state 1086
    ref_memory_segment             shift and go to state 1044
    axis_pts_optional              shift and go to state 1045
    if_data_axis_pts               shift and go to state 1029
    ecu_address_extension          shift and go to state 1033

state 1046

    (402) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .

    begin           reduce using rule 402 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)
    end             reduce using rule 402 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)


state 1047

    (352) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1087


state 1048

    (420) if_data_measurement -> begin IF_DATA IDENT . if_data_measurement_optional_parameter_list_optional end IF_DATA
    (428) if_data_measurement_optional_parameter_list_optional -> . empty
    (429) if_data_measurement_optional_parameter_list_optional -> . if_data_measurement_optional_parameter_list
    (698) empty -> .
    (426) if_data_measurement_optional_parameter_list -> . if_data_measurement_optional_parameter
    (427) if_data_measurement_optional_parameter_list -> . if_data_measurement_optional_parameter if_data_measurement_optional_parameter_list
    (421) if_data_measurement_optional_parameter -> . kp_blob kp_data
    (422) if_data_measurement_optional_parameter -> . dp_blob dp_data
    (423) if_data_measurement_optional_parameter -> . pa_blob pa_data
    (424) if_data_measurement_optional_parameter -> . if_data_measurement_unsupported_element
    (430) kp_blob -> . KP_BLOB
    (226) dp_blob -> . DP_BLOB
    (431) pa_blob -> . PA_BLOB
    (425) if_data_measurement_unsupported_element -> . begin IDENT generic_parameter_list end IDENT

    end             reduce using rule 698 (empty -> .)
    KP_BLOB         shift and go to state 1090
    DP_BLOB         shift and go to state 1067
    PA_BLOB         shift and go to state 1094
    begin           shift and go to state 1088

    dp_blob                        shift and go to state 1089
    if_data_measurement_optional_parameter_list shift and go to state 1091
    if_data_measurement_optional_parameter_list_optional shift and go to state 1092
    empty                          shift and go to state 1098
    kp_blob                        shift and go to state 1095
    if_data_measurement_unsupported_element shift and go to state 1096
    pa_blob                        shift and go to state 1097
    if_data_measurement_optional_parameter shift and go to state 1093

state 1049

    (478) virtual -> begin VIRTUAL ident_list . end VIRTUAL

    end             shift and go to state 1099


state 1050

    (448) right_shift -> RIGHT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 1100


state 1051

    (447) left_shift -> LEFT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 1101


state 1052

    (444) bit_operation_optional -> left_shift .

    SIGN_EXTEND     reduce using rule 444 (bit_operation_optional -> left_shift .)
    LEFT_SHIFT      reduce using rule 444 (bit_operation_optional -> left_shift .)
    RIGHT_SHIFT     reduce using rule 444 (bit_operation_optional -> left_shift .)
    end             reduce using rule 444 (bit_operation_optional -> left_shift .)


state 1053

    (452) bit_operation_optional_list_optional -> bit_operation_optional_list .

    end             reduce using rule 452 (bit_operation_optional_list_optional -> bit_operation_optional_list .)


state 1054

    (445) bit_operation_optional -> right_shift .

    SIGN_EXTEND     reduce using rule 445 (bit_operation_optional -> right_shift .)
    LEFT_SHIFT      reduce using rule 445 (bit_operation_optional -> right_shift .)
    RIGHT_SHIFT     reduce using rule 445 (bit_operation_optional -> right_shift .)
    end             reduce using rule 445 (bit_operation_optional -> right_shift .)


state 1055

    (446) bit_operation_optional -> SIGN_EXTEND .

    SIGN_EXTEND     reduce using rule 446 (bit_operation_optional -> SIGN_EXTEND .)
    LEFT_SHIFT      reduce using rule 446 (bit_operation_optional -> SIGN_EXTEND .)
    RIGHT_SHIFT     reduce using rule 446 (bit_operation_optional -> SIGN_EXTEND .)
    end             reduce using rule 446 (bit_operation_optional -> SIGN_EXTEND .)


state 1056

    (443) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional . end BIT_OPERATION

    end             shift and go to state 1102


state 1057

    (449) bit_operation_optional_list -> bit_operation_optional .
    (450) bit_operation_optional_list -> bit_operation_optional . bit_operation_optional_list
    (449) bit_operation_optional_list -> . bit_operation_optional
    (450) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (444) bit_operation_optional -> . left_shift
    (445) bit_operation_optional -> . right_shift
    (446) bit_operation_optional -> . SIGN_EXTEND
    (447) left_shift -> . LEFT_SHIFT NUMERIC
    (448) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 449 (bit_operation_optional_list -> bit_operation_optional .)
    SIGN_EXTEND     shift and go to state 1055
    LEFT_SHIFT      shift and go to state 1051
    RIGHT_SHIFT     shift and go to state 1050

    left_shift                     shift and go to state 1052
    bit_operation_optional_list    shift and go to state 1103
    right_shift                    shift and go to state 1054
    bit_operation_optional         shift and go to state 1057

state 1058

    (451) bit_operation_optional_list_optional -> empty .

    end             reduce using rule 451 (bit_operation_optional_list_optional -> empty .)


state 1059

    (292) max_refresh -> MAX_REFRESH NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    FORMAT          reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    begin           reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    NUMBER          reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    end             reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    READ_WRITE      reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 292 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)


state 1060

    (227) ba_blob -> BA_BLOB .

    IDENT           reduce using rule 227 (ba_blob -> BA_BLOB .)
    STRING          reduce using rule 227 (ba_blob -> BA_BLOB .)
    NUMERIC         reduce using rule 227 (ba_blob -> BA_BLOB .)
    begin           reduce using rule 227 (ba_blob -> BA_BLOB .)


state 1061

    (220) if_data_memory_layout_optional_parameter -> dp_blob . dp_data
    (228) dp_data -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter_list         shift and go to state 1104
    generic_parameter              shift and go to state 288
    dp_data                        shift and go to state 1105

state 1062

    (222) if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter .
    (223) if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter . if_data_memory_layout_optional_parameter_list
    (222) if_data_memory_layout_optional_parameter_list -> . if_data_memory_layout_optional_parameter
    (223) if_data_memory_layout_optional_parameter_list -> . if_data_memory_layout_optional_parameter if_data_memory_layout_optional_parameter_list
    (220) if_data_memory_layout_optional_parameter -> . dp_blob dp_data
    (221) if_data_memory_layout_optional_parameter -> . ba_blob pa_data
    (226) dp_blob -> . DP_BLOB
    (227) ba_blob -> . BA_BLOB

    end             reduce using rule 222 (if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter .)
    DP_BLOB         shift and go to state 1067
    BA_BLOB         shift and go to state 1060

    dp_blob                        shift and go to state 1061
    if_data_memory_layout_optional_parameter shift and go to state 1062
    if_data_memory_layout_optional_parameter_list shift and go to state 1106
    ba_blob                        shift and go to state 1064

state 1063

    (225) if_data_memory_layout_optional_parameter_list_optional -> if_data_memory_layout_optional_parameter_list .

    end             reduce using rule 225 (if_data_memory_layout_optional_parameter_list_optional -> if_data_memory_layout_optional_parameter_list .)


state 1064

    (221) if_data_memory_layout_optional_parameter -> ba_blob . pa_data
    (229) pa_data -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter              shift and go to state 288
    pa_data                        shift and go to state 1107
    generic_parameter_list         shift and go to state 1108

state 1065

    (219) if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional . end IF_DATA

    end             shift and go to state 1109


state 1066

    (224) if_data_memory_layout_optional_parameter_list_optional -> empty .

    end             reduce using rule 224 (if_data_memory_layout_optional_parameter_list_optional -> empty .)


state 1067

    (226) dp_blob -> DP_BLOB .

    IDENT           reduce using rule 226 (dp_blob -> DP_BLOB .)
    STRING          reduce using rule 226 (dp_blob -> DP_BLOB .)
    NUMERIC         reduce using rule 226 (dp_blob -> DP_BLOB .)
    begin           reduce using rule 226 (dp_blob -> DP_BLOB .)


state 1068

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 1110


state 1069

    (312) comparison_quantity -> COMPARISON_QUANTITY IDENT .

    READ_ONLY       reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    GUARD_RAILS     reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    FORMAT          reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BYTE_ORDER      reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BIT_MASK        reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    begin           reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    NUMBER          reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    EXTENDED_LIMITS reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MAX_REFRESH     reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    COMPARISON_QUANTITY reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    CALIBRATION_ACCESS reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MATRIX_DIM      reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    end             reduce using rule 312 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)


state 1070

    (290) extended_limits -> EXTENDED_LIMITS NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1111


state 1071

    (351) calibration_access_type -> OFFLINE_CALIBRATION .

    READ_ONLY       reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    GUARD_RAILS     reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    FORMAT          reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BYTE_ORDER      reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BIT_MASK        reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    begin           reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    NUMBER          reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MAX_REFRESH     reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MATRIX_DIM      reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    end             reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DEPOSIT         reduce using rule 351 (calibration_access_type -> OFFLINE_CALIBRATION .)


state 1072

    (348) calibration_access_type -> CALIBRATION .

    READ_ONLY       reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    GUARD_RAILS     reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    FORMAT          reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    BYTE_ORDER      reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    BIT_MASK        reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    begin           reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    NUMBER          reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    MAX_REFRESH     reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    MATRIX_DIM      reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    end             reduce using rule 348 (calibration_access_type -> CALIBRATION .)
    DEPOSIT         reduce using rule 348 (calibration_access_type -> CALIBRATION .)


state 1073

    (349) calibration_access_type -> NO_CALIBRATION .

    READ_ONLY       reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    GUARD_RAILS     reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    FORMAT          reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    BYTE_ORDER      reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    BIT_MASK        reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    begin           reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    NUMBER          reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    MAX_REFRESH     reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    MATRIX_DIM      reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    end             reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)
    DEPOSIT         reduce using rule 349 (calibration_access_type -> NO_CALIBRATION .)


state 1074

    (350) calibration_access_type -> NOT_IN_MCD_SYSTEM .

    READ_ONLY       reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    GUARD_RAILS     reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DISPLAY_IDENTIFIER reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    FORMAT          reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BYTE_ORDER      reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BIT_MASK        reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    begin           reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    NUMBER          reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    EXTENDED_LIMITS reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MAX_REFRESH     reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    REF_MEMORY_SEGMENT reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    COMPARISON_QUANTITY reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    CALIBRATION_ACCESS reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MATRIX_DIM      reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    ECU_ADDRESS_EXTENSION reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    end             reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DEPOSIT         reduce using rule 350 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)


state 1075

    (347) calibration_access -> CALIBRATION_ACCESS calibration_access_type .

    READ_ONLY       reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    GUARD_RAILS     reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DISPLAY_IDENTIFIER reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    FORMAT          reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BYTE_ORDER      reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BIT_MASK        reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    begin           reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    NUMBER          reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    EXTENDED_LIMITS reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MAX_REFRESH     reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    REF_MEMORY_SEGMENT reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    COMPARISON_QUANTITY reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    CALIBRATION_ACCESS reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MATRIX_DIM      reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    end             reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DEPOSIT         reduce using rule 347 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)


state 1076

    (293) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC . STRING ident_list end DEPENDENT_CHARACTERISTIC

    STRING          shift and go to state 1112


state 1077

    (291) map_list -> begin MAP_LIST . ident_list end MAP_LIST
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 1113

state 1078

    (313) axis_descr -> begin AXIS_DESCR . axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR
    (342) axis_descr_attribute -> . STD_AXIS
    (343) axis_descr_attribute -> . FIX_AXIS
    (344) axis_descr_attribute -> . COM_AXIS
    (345) axis_descr_attribute -> . RES_AXIS
    (346) axis_descr_attribute -> . CURVE_AXIS

    STD_AXIS        shift and go to state 1119
    FIX_AXIS        shift and go to state 1116
    COM_AXIS        shift and go to state 1118
    RES_AXIS        shift and go to state 1117
    CURVE_AXIS      shift and go to state 1115

    axis_descr_attribute           shift and go to state 1114

state 1079

    (294) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC . STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC

    STRING          shift and go to state 1120


state 1080

    (289) number -> NUMBER NUMERIC .

    READ_ONLY       reduce using rule 289 (number -> NUMBER NUMERIC .)
    GUARD_RAILS     reduce using rule 289 (number -> NUMBER NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 289 (number -> NUMBER NUMERIC .)
    FORMAT          reduce using rule 289 (number -> NUMBER NUMERIC .)
    BYTE_ORDER      reduce using rule 289 (number -> NUMBER NUMERIC .)
    BIT_MASK        reduce using rule 289 (number -> NUMBER NUMERIC .)
    begin           reduce using rule 289 (number -> NUMBER NUMERIC .)
    NUMBER          reduce using rule 289 (number -> NUMBER NUMERIC .)
    EXTENDED_LIMITS reduce using rule 289 (number -> NUMBER NUMERIC .)
    MAX_REFRESH     reduce using rule 289 (number -> NUMBER NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 289 (number -> NUMBER NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 289 (number -> NUMBER NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 289 (number -> NUMBER NUMERIC .)
    MATRIX_DIM      reduce using rule 289 (number -> NUMBER NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 289 (number -> NUMBER NUMERIC .)
    end             reduce using rule 289 (number -> NUMBER NUMERIC .)


state 1081

    (377) characteristic_optional_list -> characteristic_optional characteristic_optional_list .

    end             reduce using rule 377 (characteristic_optional_list -> characteristic_optional characteristic_optional_list .)


state 1082

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end . CHARACTERISTIC

    CHARACTERISTIC  shift and go to state 1121


state 1083

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1122


state 1084

    (470) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    begin           reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COEFFS          reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COEFFS_LINEAR   reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COMPU_TAB_REF   reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 470 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 1085

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end . AXIS_PTS

    AXIS_PTS        shift and go to state 1123


state 1086

    (396) axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .

    end             reduce using rule 396 (axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .)


state 1087

    (352) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .

    READ_WRITE      reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    FORMAT          reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    READ_ONLY       reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    NUMBER          reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 352 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)


state 1088

    (425) if_data_measurement_unsupported_element -> begin . IDENT generic_parameter_list end IDENT

    IDENT           shift and go to state 1124


state 1089

    (422) if_data_measurement_optional_parameter -> dp_blob . dp_data
    (228) dp_data -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter_list         shift and go to state 1104
    generic_parameter              shift and go to state 288
    dp_data                        shift and go to state 1125

state 1090

    (430) kp_blob -> KP_BLOB .

    NUMERIC         reduce using rule 430 (kp_blob -> KP_BLOB .)
    STRING          reduce using rule 430 (kp_blob -> KP_BLOB .)
    IDENT           reduce using rule 430 (kp_blob -> KP_BLOB .)


state 1091

    (429) if_data_measurement_optional_parameter_list_optional -> if_data_measurement_optional_parameter_list .

    end             reduce using rule 429 (if_data_measurement_optional_parameter_list_optional -> if_data_measurement_optional_parameter_list .)


state 1092

    (420) if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional . end IF_DATA

    end             shift and go to state 1126


state 1093

    (426) if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter .
    (427) if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter . if_data_measurement_optional_parameter_list
    (426) if_data_measurement_optional_parameter_list -> . if_data_measurement_optional_parameter
    (427) if_data_measurement_optional_parameter_list -> . if_data_measurement_optional_parameter if_data_measurement_optional_parameter_list
    (421) if_data_measurement_optional_parameter -> . kp_blob kp_data
    (422) if_data_measurement_optional_parameter -> . dp_blob dp_data
    (423) if_data_measurement_optional_parameter -> . pa_blob pa_data
    (424) if_data_measurement_optional_parameter -> . if_data_measurement_unsupported_element
    (430) kp_blob -> . KP_BLOB
    (226) dp_blob -> . DP_BLOB
    (431) pa_blob -> . PA_BLOB
    (425) if_data_measurement_unsupported_element -> . begin IDENT generic_parameter_list end IDENT

    end             reduce using rule 426 (if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter .)
    KP_BLOB         shift and go to state 1090
    DP_BLOB         shift and go to state 1067
    PA_BLOB         shift and go to state 1094
    begin           shift and go to state 1088

    dp_blob                        shift and go to state 1089
    if_data_measurement_optional_parameter_list shift and go to state 1127
    kp_blob                        shift and go to state 1095
    if_data_measurement_unsupported_element shift and go to state 1096
    pa_blob                        shift and go to state 1097
    if_data_measurement_optional_parameter shift and go to state 1093

state 1094

    (431) pa_blob -> PA_BLOB .

    IDENT           reduce using rule 431 (pa_blob -> PA_BLOB .)
    STRING          reduce using rule 431 (pa_blob -> PA_BLOB .)
    NUMERIC         reduce using rule 431 (pa_blob -> PA_BLOB .)
    begin           reduce using rule 431 (pa_blob -> PA_BLOB .)


state 1095

    (421) if_data_measurement_optional_parameter -> kp_blob . kp_data
    (432) kp_data -> . kp_data_parameter_optional_list
    (436) kp_data_parameter_optional_list -> . kp_data_parameter_optional
    (437) kp_data_parameter_optional_list -> . kp_data_parameter_optional kp_data_parameter_optional_list
    (433) kp_data_parameter_optional -> . NUMERIC
    (434) kp_data_parameter_optional -> . STRING
    (435) kp_data_parameter_optional -> . IDENT

    NUMERIC         shift and go to state 1131
    STRING          shift and go to state 1129
    IDENT           shift and go to state 1133

    kp_data_parameter_optional_list shift and go to state 1132
    kp_data                        shift and go to state 1128
    kp_data_parameter_optional     shift and go to state 1130

state 1096

    (424) if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .

    KP_BLOB         reduce using rule 424 (if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .)
    DP_BLOB         reduce using rule 424 (if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .)
    PA_BLOB         reduce using rule 424 (if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .)
    begin           reduce using rule 424 (if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .)
    end             reduce using rule 424 (if_data_measurement_optional_parameter -> if_data_measurement_unsupported_element .)


state 1097

    (423) if_data_measurement_optional_parameter -> pa_blob . pa_data
    (229) pa_data -> . generic_parameter_list
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    pa_data                        shift and go to state 1134
    generic_parameter_list         shift and go to state 1108
    generic_parameter              shift and go to state 288

state 1098

    (428) if_data_measurement_optional_parameter_list_optional -> empty .

    end             reduce using rule 428 (if_data_measurement_optional_parameter_list_optional -> empty .)


state 1099

    (478) virtual -> begin VIRTUAL ident_list end . VIRTUAL

    VIRTUAL         shift and go to state 1135


state 1100

    (448) right_shift -> RIGHT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 448 (right_shift -> RIGHT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 448 (right_shift -> RIGHT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 448 (right_shift -> RIGHT_SHIFT NUMERIC .)
    end             reduce using rule 448 (right_shift -> RIGHT_SHIFT NUMERIC .)


state 1101

    (447) left_shift -> LEFT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 447 (left_shift -> LEFT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 447 (left_shift -> LEFT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 447 (left_shift -> LEFT_SHIFT NUMERIC .)
    end             reduce using rule 447 (left_shift -> LEFT_SHIFT NUMERIC .)


state 1102

    (443) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end . BIT_OPERATION

    BIT_OPERATION   shift and go to state 1136


state 1103

    (450) bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .

    end             reduce using rule 450 (bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .)


state 1104

    (228) dp_data -> generic_parameter_list .

    KP_BLOB         reduce using rule 228 (dp_data -> generic_parameter_list .)
    DP_BLOB         reduce using rule 228 (dp_data -> generic_parameter_list .)
    PA_BLOB         reduce using rule 228 (dp_data -> generic_parameter_list .)
    begin           reduce using rule 228 (dp_data -> generic_parameter_list .)
    end             reduce using rule 228 (dp_data -> generic_parameter_list .)
    BA_BLOB         reduce using rule 228 (dp_data -> generic_parameter_list .)


state 1105

    (220) if_data_memory_layout_optional_parameter -> dp_blob dp_data .

    DP_BLOB         reduce using rule 220 (if_data_memory_layout_optional_parameter -> dp_blob dp_data .)
    BA_BLOB         reduce using rule 220 (if_data_memory_layout_optional_parameter -> dp_blob dp_data .)
    end             reduce using rule 220 (if_data_memory_layout_optional_parameter -> dp_blob dp_data .)


state 1106

    (223) if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter if_data_memory_layout_optional_parameter_list .

    end             reduce using rule 223 (if_data_memory_layout_optional_parameter_list -> if_data_memory_layout_optional_parameter if_data_memory_layout_optional_parameter_list .)


state 1107

    (221) if_data_memory_layout_optional_parameter -> ba_blob pa_data .

    DP_BLOB         reduce using rule 221 (if_data_memory_layout_optional_parameter -> ba_blob pa_data .)
    BA_BLOB         reduce using rule 221 (if_data_memory_layout_optional_parameter -> ba_blob pa_data .)
    end             reduce using rule 221 (if_data_memory_layout_optional_parameter -> ba_blob pa_data .)


state 1108

    (229) pa_data -> generic_parameter_list .

    DP_BLOB         reduce using rule 229 (pa_data -> generic_parameter_list .)
    BA_BLOB         reduce using rule 229 (pa_data -> generic_parameter_list .)
    end             reduce using rule 229 (pa_data -> generic_parameter_list .)
    KP_BLOB         reduce using rule 229 (pa_data -> generic_parameter_list .)
    PA_BLOB         reduce using rule 229 (pa_data -> generic_parameter_list .)
    begin           reduce using rule 229 (pa_data -> generic_parameter_list .)


state 1109

    (219) if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end . IF_DATA

    IF_DATA         shift and go to state 1137


state 1110

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 1138


state 1111

    (290) extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    FORMAT          reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    begin           reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    AXIS_PTS_REF    reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MAX_GRAD        reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MONOTONY        reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    FIX_AXIS_PAR    reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    FIX_AXIS_PAR_DIST reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DEPOSIT         reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    CURVE_AXIS_REF  reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    end             reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    NUMBER          reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 290 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)


state 1112

    (293) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING . ident_list end DEPENDENT_CHARACTERISTIC
    (99) ident_list -> . IDENT
    (100) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 555

    ident_list                     shift and go to state 1139

state 1113

    (291) map_list -> begin MAP_LIST ident_list . end MAP_LIST

    end             shift and go to state 1140


state 1114

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute . IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR

    IDENT           shift and go to state 1141


state 1115

    (346) axis_descr_attribute -> CURVE_AXIS .

    IDENT           reduce using rule 346 (axis_descr_attribute -> CURVE_AXIS .)


state 1116

    (343) axis_descr_attribute -> FIX_AXIS .

    IDENT           reduce using rule 343 (axis_descr_attribute -> FIX_AXIS .)


state 1117

    (345) axis_descr_attribute -> RES_AXIS .

    IDENT           reduce using rule 345 (axis_descr_attribute -> RES_AXIS .)


state 1118

    (344) axis_descr_attribute -> COM_AXIS .

    IDENT           reduce using rule 344 (axis_descr_attribute -> COM_AXIS .)


state 1119

    (342) axis_descr_attribute -> STD_AXIS .

    IDENT           reduce using rule 342 (axis_descr_attribute -> STD_AXIS .)


state 1120

    (294) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING . virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC
    (298) virtual_characteristic_optional_list_optional -> . empty
    (299) virtual_characteristic_optional_list_optional -> . virtual_characteristic_optional_list
    (698) empty -> .
    (296) virtual_characteristic_optional_list -> . virtual_characteristic_optional
    (297) virtual_characteristic_optional_list -> . virtual_characteristic_optional virtual_characteristic_optional_list
    (295) virtual_characteristic_optional -> . IDENT

    end             reduce using rule 698 (empty -> .)
    IDENT           shift and go to state 1143

    virtual_characteristic_optional_list_optional shift and go to state 1142
    virtual_characteristic_optional shift and go to state 1144
    empty                          shift and go to state 1146
    virtual_characteristic_optional_list shift and go to state 1145

state 1121

    (275) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .

    begin           reduce using rule 275 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)
    end             reduce using rule 275 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)


state 1122

    (696) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 696 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 696 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 696 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 696 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 1123

    (380) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .

    begin           reduce using rule 380 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)
    end             reduce using rule 380 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)


state 1124

    (425) if_data_measurement_unsupported_element -> begin IDENT . generic_parameter_list end IDENT
    (93) generic_parameter_list -> . generic_parameter
    (94) generic_parameter_list -> . generic_parameter generic_parameter_list
    (89) generic_parameter -> . IDENT
    (90) generic_parameter -> . STRING
    (91) generic_parameter -> . NUMERIC
    (92) generic_parameter -> . begin IDENT generic_parameter_list_optional end IDENT

    IDENT           shift and go to state 292
    STRING          shift and go to state 293
    NUMERIC         shift and go to state 286
    begin           shift and go to state 450

    generic_parameter              shift and go to state 288
    generic_parameter_list         shift and go to state 1147

state 1125

    (422) if_data_measurement_optional_parameter -> dp_blob dp_data .

    KP_BLOB         reduce using rule 422 (if_data_measurement_optional_parameter -> dp_blob dp_data .)
    DP_BLOB         reduce using rule 422 (if_data_measurement_optional_parameter -> dp_blob dp_data .)
    PA_BLOB         reduce using rule 422 (if_data_measurement_optional_parameter -> dp_blob dp_data .)
    begin           reduce using rule 422 (if_data_measurement_optional_parameter -> dp_blob dp_data .)
    end             reduce using rule 422 (if_data_measurement_optional_parameter -> dp_blob dp_data .)


state 1126

    (420) if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end . IF_DATA

    IF_DATA         shift and go to state 1148


state 1127

    (427) if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter if_data_measurement_optional_parameter_list .

    end             reduce using rule 427 (if_data_measurement_optional_parameter_list -> if_data_measurement_optional_parameter if_data_measurement_optional_parameter_list .)


state 1128

    (421) if_data_measurement_optional_parameter -> kp_blob kp_data .

    KP_BLOB         reduce using rule 421 (if_data_measurement_optional_parameter -> kp_blob kp_data .)
    DP_BLOB         reduce using rule 421 (if_data_measurement_optional_parameter -> kp_blob kp_data .)
    PA_BLOB         reduce using rule 421 (if_data_measurement_optional_parameter -> kp_blob kp_data .)
    begin           reduce using rule 421 (if_data_measurement_optional_parameter -> kp_blob kp_data .)
    end             reduce using rule 421 (if_data_measurement_optional_parameter -> kp_blob kp_data .)


state 1129

    (434) kp_data_parameter_optional -> STRING .

    NUMERIC         reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    STRING          reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    IDENT           reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    KP_BLOB         reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    DP_BLOB         reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    PA_BLOB         reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    begin           reduce using rule 434 (kp_data_parameter_optional -> STRING .)
    end             reduce using rule 434 (kp_data_parameter_optional -> STRING .)


state 1130

    (436) kp_data_parameter_optional_list -> kp_data_parameter_optional .
    (437) kp_data_parameter_optional_list -> kp_data_parameter_optional . kp_data_parameter_optional_list
    (436) kp_data_parameter_optional_list -> . kp_data_parameter_optional
    (437) kp_data_parameter_optional_list -> . kp_data_parameter_optional kp_data_parameter_optional_list
    (433) kp_data_parameter_optional -> . NUMERIC
    (434) kp_data_parameter_optional -> . STRING
    (435) kp_data_parameter_optional -> . IDENT

    KP_BLOB         reduce using rule 436 (kp_data_parameter_optional_list -> kp_data_parameter_optional .)
    DP_BLOB         reduce using rule 436 (kp_data_parameter_optional_list -> kp_data_parameter_optional .)
    PA_BLOB         reduce using rule 436 (kp_data_parameter_optional_list -> kp_data_parameter_optional .)
    begin           reduce using rule 436 (kp_data_parameter_optional_list -> kp_data_parameter_optional .)
    end             reduce using rule 436 (kp_data_parameter_optional_list -> kp_data_parameter_optional .)
    NUMERIC         shift and go to state 1131
    STRING          shift and go to state 1129
    IDENT           shift and go to state 1133

    kp_data_parameter_optional_list shift and go to state 1149
    kp_data_parameter_optional     shift and go to state 1130

state 1131

    (433) kp_data_parameter_optional -> NUMERIC .

    NUMERIC         reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    STRING          reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    IDENT           reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    KP_BLOB         reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    DP_BLOB         reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    PA_BLOB         reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    begin           reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)
    end             reduce using rule 433 (kp_data_parameter_optional -> NUMERIC .)


state 1132

    (432) kp_data -> kp_data_parameter_optional_list .

    KP_BLOB         reduce using rule 432 (kp_data -> kp_data_parameter_optional_list .)
    DP_BLOB         reduce using rule 432 (kp_data -> kp_data_parameter_optional_list .)
    PA_BLOB         reduce using rule 432 (kp_data -> kp_data_parameter_optional_list .)
    begin           reduce using rule 432 (kp_data -> kp_data_parameter_optional_list .)
    end             reduce using rule 432 (kp_data -> kp_data_parameter_optional_list .)


state 1133

    (435) kp_data_parameter_optional -> IDENT .

    NUMERIC         reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    STRING          reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    IDENT           reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    KP_BLOB         reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    DP_BLOB         reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    PA_BLOB         reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    begin           reduce using rule 435 (kp_data_parameter_optional -> IDENT .)
    end             reduce using rule 435 (kp_data_parameter_optional -> IDENT .)


state 1134

    (423) if_data_measurement_optional_parameter -> pa_blob pa_data .

    KP_BLOB         reduce using rule 423 (if_data_measurement_optional_parameter -> pa_blob pa_data .)
    DP_BLOB         reduce using rule 423 (if_data_measurement_optional_parameter -> pa_blob pa_data .)
    PA_BLOB         reduce using rule 423 (if_data_measurement_optional_parameter -> pa_blob pa_data .)
    begin           reduce using rule 423 (if_data_measurement_optional_parameter -> pa_blob pa_data .)
    end             reduce using rule 423 (if_data_measurement_optional_parameter -> pa_blob pa_data .)


state 1135

    (478) virtual -> begin VIRTUAL ident_list end VIRTUAL .

    READ_WRITE      reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    DISPLAY_IDENTIFIER reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    FORMAT          reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ARRAY_SIZE      reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BIT_MASK        reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    begin           reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BYTE_ORDER      reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MAX_REFRESH     reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS     reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ERROR_MASK      reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    REF_MEMORY_SEGMENT reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MATRIX_DIM      reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS_EXTENSION reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    end             reduce using rule 478 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)


state 1136

    (443) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .

    READ_WRITE      reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    DISPLAY_IDENTIFIER reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    FORMAT          reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ARRAY_SIZE      reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BIT_MASK        reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    begin           reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BYTE_ORDER      reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MAX_REFRESH     reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS     reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ERROR_MASK      reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    REF_MEMORY_SEGMENT reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MATRIX_DIM      reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    end             reduce using rule 443 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)


state 1137

    (219) if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .

    READ_ONLY       reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    GUARD_RAILS     reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    DISPLAY_IDENTIFIER reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    FORMAT          reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    DEPOSIT         reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    BYTE_ORDER      reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    begin           reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    REF_MEMORY_SEGMENT reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    EXTENDED_LIMITS reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    CALIBRATION_ACCESS reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    ECU_ADDRESS_EXTENSION reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    end             reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    BIT_MASK        reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    NUMBER          reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    MAX_REFRESH     reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    COMPARISON_QUANTITY reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)
    MATRIX_DIM      reduce using rule 219 (if_data_memory_layout -> begin IF_DATA IDENT if_data_memory_layout_optional_parameter_list_optional end IF_DATA .)


state 1138

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 1150


state 1139

    (293) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list . end DEPENDENT_CHARACTERISTIC

    end             shift and go to state 1151


state 1140

    (291) map_list -> begin MAP_LIST ident_list end . MAP_LIST

    MAP_LIST        shift and go to state 1152


state 1141

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT . IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR

    IDENT           shift and go to state 1153


state 1142

    (294) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional . end VIRTUAL_CHARACTERISTIC

    end             shift and go to state 1154


state 1143

    (295) virtual_characteristic_optional -> IDENT .

    IDENT           reduce using rule 295 (virtual_characteristic_optional -> IDENT .)
    end             reduce using rule 295 (virtual_characteristic_optional -> IDENT .)


state 1144

    (296) virtual_characteristic_optional_list -> virtual_characteristic_optional .
    (297) virtual_characteristic_optional_list -> virtual_characteristic_optional . virtual_characteristic_optional_list
    (296) virtual_characteristic_optional_list -> . virtual_characteristic_optional
    (297) virtual_characteristic_optional_list -> . virtual_characteristic_optional virtual_characteristic_optional_list
    (295) virtual_characteristic_optional -> . IDENT

    end             reduce using rule 296 (virtual_characteristic_optional_list -> virtual_characteristic_optional .)
    IDENT           shift and go to state 1143

    virtual_characteristic_optional shift and go to state 1144
    virtual_characteristic_optional_list shift and go to state 1155

state 1145

    (299) virtual_characteristic_optional_list_optional -> virtual_characteristic_optional_list .

    end             reduce using rule 299 (virtual_characteristic_optional_list_optional -> virtual_characteristic_optional_list .)


state 1146

    (298) virtual_characteristic_optional_list_optional -> empty .

    end             reduce using rule 298 (virtual_characteristic_optional_list_optional -> empty .)


state 1147

    (425) if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list . end IDENT

    end             shift and go to state 1156


state 1148

    (420) if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .

    READ_WRITE      reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    DISPLAY_IDENTIFIER reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    FORMAT          reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    ARRAY_SIZE      reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    BIT_MASK        reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    begin           reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    BYTE_ORDER      reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    MAX_REFRESH     reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    ECU_ADDRESS     reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    ERROR_MASK      reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    REF_MEMORY_SEGMENT reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    MATRIX_DIM      reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    ECU_ADDRESS_EXTENSION reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)
    end             reduce using rule 420 (if_data_measurement -> begin IF_DATA IDENT if_data_measurement_optional_parameter_list_optional end IF_DATA .)


state 1149

    (437) kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .

    KP_BLOB         reduce using rule 437 (kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .)
    DP_BLOB         reduce using rule 437 (kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .)
    PA_BLOB         reduce using rule 437 (kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .)
    begin           reduce using rule 437 (kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .)
    end             reduce using rule 437 (kp_data_parameter_optional_list -> kp_data_parameter_optional kp_data_parameter_optional_list .)


state 1150

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT

    NUMERIC         shift and go to state 1157


state 1151

    (293) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end . DEPENDENT_CHARACTERISTIC

    DEPENDENT_CHARACTERISTIC shift and go to state 1158


state 1152

    (291) map_list -> begin MAP_LIST ident_list end MAP_LIST .

    READ_ONLY       reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    GUARD_RAILS     reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    FORMAT          reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BYTE_ORDER      reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BIT_MASK        reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    begin           reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    NUMBER          reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    EXTENDED_LIMITS reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MAX_REFRESH     reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    COMPARISON_QUANTITY reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    CALIBRATION_ACCESS reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MATRIX_DIM      reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    end             reduce using rule 291 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)


state 1153

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT . NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR

    NUMERIC         shift and go to state 1159


state 1154

    (294) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end . VIRTUAL_CHARACTERISTIC

    VIRTUAL_CHARACTERISTIC shift and go to state 1160


state 1155

    (297) virtual_characteristic_optional_list -> virtual_characteristic_optional virtual_characteristic_optional_list .

    end             reduce using rule 297 (virtual_characteristic_optional_list -> virtual_characteristic_optional virtual_characteristic_optional_list .)


state 1156

    (425) if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end . IDENT

    IDENT           shift and go to state 1161


state 1157

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT
    (247) memory_segment_optional_parameter_list_optional -> . empty
    (248) memory_segment_optional_parameter_list_optional -> . memory_segment_optional_parameter_list
    (698) empty -> .
    (249) memory_segment_optional_parameter_list -> . memory_segment_optional_parameter
    (250) memory_segment_optional_parameter_list -> . memory_segment_optional_parameter memory_segment_optional_parameter_list
    (251) memory_segment_optional_parameter -> . if_data_memory_segment
    (253) if_data_memory_segment -> . begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 1162

    memory_segment_optional_parameter_list shift and go to state 1165
    if_data_memory_segment         shift and go to state 1163
    memory_segment_optional_parameter_list_optional shift and go to state 1164
    memory_segment_optional_parameter shift and go to state 1166
    empty                          shift and go to state 1167

state 1158

    (293) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .

    READ_ONLY       reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    FORMAT          reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    begin           reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    NUMBER          reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    end             reduce using rule 293 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)


state 1159

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC . NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR

    NUMERIC         shift and go to state 1168


state 1160

    (294) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .

    READ_ONLY       reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    FORMAT          reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    begin           reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    NUMBER          reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)
    end             reduce using rule 294 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING virtual_characteristic_optional_list_optional end VIRTUAL_CHARACTERISTIC .)


state 1161

    (425) if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .

    KP_BLOB         reduce using rule 425 (if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .)
    DP_BLOB         reduce using rule 425 (if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .)
    PA_BLOB         reduce using rule 425 (if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .)
    begin           reduce using rule 425 (if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .)
    end             reduce using rule 425 (if_data_measurement_unsupported_element -> begin IDENT generic_parameter_list end IDENT .)


state 1162

    (253) if_data_memory_segment -> begin . IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA

    IF_DATA         shift and go to state 1169


state 1163

    (251) memory_segment_optional_parameter -> if_data_memory_segment .

    begin           reduce using rule 251 (memory_segment_optional_parameter -> if_data_memory_segment .)
    end             reduce using rule 251 (memory_segment_optional_parameter -> if_data_memory_segment .)


state 1164

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional . end MEMORY_SEGMENT

    end             shift and go to state 1170


state 1165

    (248) memory_segment_optional_parameter_list_optional -> memory_segment_optional_parameter_list .

    end             reduce using rule 248 (memory_segment_optional_parameter_list_optional -> memory_segment_optional_parameter_list .)


state 1166

    (249) memory_segment_optional_parameter_list -> memory_segment_optional_parameter .
    (250) memory_segment_optional_parameter_list -> memory_segment_optional_parameter . memory_segment_optional_parameter_list
    (249) memory_segment_optional_parameter_list -> . memory_segment_optional_parameter
    (250) memory_segment_optional_parameter_list -> . memory_segment_optional_parameter memory_segment_optional_parameter_list
    (251) memory_segment_optional_parameter -> . if_data_memory_segment
    (253) if_data_memory_segment -> . begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA

    end             reduce using rule 249 (memory_segment_optional_parameter_list -> memory_segment_optional_parameter .)
    begin           shift and go to state 1162

    if_data_memory_segment         shift and go to state 1163
    memory_segment_optional_parameter_list shift and go to state 1171
    memory_segment_optional_parameter shift and go to state 1166

state 1167

    (247) memory_segment_optional_parameter_list_optional -> empty .

    end             reduce using rule 247 (memory_segment_optional_parameter_list_optional -> empty .)


state 1168

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC . NUMERIC axis_descr_optional_list_optional end AXIS_DESCR

    NUMERIC         shift and go to state 1172


state 1169

    (253) if_data_memory_segment -> begin IF_DATA . IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA

    IDENT           shift and go to state 1173


state 1170

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end . MEMORY_SEGMENT

    MEMORY_SEGMENT  shift and go to state 1174


state 1171

    (250) memory_segment_optional_parameter_list -> memory_segment_optional_parameter memory_segment_optional_parameter_list .

    end             reduce using rule 250 (memory_segment_optional_parameter_list -> memory_segment_optional_parameter memory_segment_optional_parameter_list .)


state 1172

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC . axis_descr_optional_list_optional end AXIS_DESCR
    (340) axis_descr_optional_list_optional -> . empty
    (341) axis_descr_optional_list_optional -> . axis_descr_optional_list
    (698) empty -> .
    (338) axis_descr_optional_list -> . axis_descr_optional
    (339) axis_descr_optional_list -> . axis_descr_optional axis_descr_optional_list
    (314) axis_descr_optional -> . READ_ONLY
    (315) axis_descr_optional -> . format
    (316) axis_descr_optional -> . annotation
    (317) axis_descr_optional -> . axis_pts_ref
    (318) axis_descr_optional -> . max_grad
    (319) axis_descr_optional -> . monotony
    (320) axis_descr_optional -> . byte_order
    (321) axis_descr_optional -> . extended_limits
    (322) axis_descr_optional -> . fix_axis_par
    (323) axis_descr_optional -> . fix_axis_par_dist
    (324) axis_descr_optional -> . fix_axis_par_list
    (325) axis_descr_optional -> . deposit
    (326) axis_descr_optional -> . curve_axis_ref
    (283) format -> . FORMAT STRING
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (327) axis_pts_ref -> . AXIS_PTS_REF IDENT
    (328) max_grad -> . MAX_GRAD NUMERIC
    (329) monotony -> . MONOTONY monotony_type
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (334) fix_axis_par -> . FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC
    (335) fix_axis_par_dist -> . FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC
    (336) fix_axis_par_list -> . begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST
    (399) deposit -> . DEPOSIT deposit_mode
    (337) curve_axis_ref -> . CURVE_AXIS_REF IDENT

    end             reduce using rule 698 (empty -> .)
    READ_ONLY       shift and go to state 1179
    FORMAT          shift and go to state 934
    begin           shift and go to state 1184
    AXIS_PTS_REF    shift and go to state 1191
    MAX_GRAD        shift and go to state 1198
    MONOTONY        shift and go to state 1177
    BYTE_ORDER      shift and go to state 306
    EXTENDED_LIMITS shift and go to state 999
    FIX_AXIS_PAR    shift and go to state 1194
    FIX_AXIS_PAR_DIST shift and go to state 1186
    DEPOSIT         shift and go to state 315
    CURVE_AXIS_REF  shift and go to state 1175

    max_grad                       shift and go to state 1178
    axis_descr_optional_list       shift and go to state 1180
    axis_pts_ref                   shift and go to state 1181
    empty                          shift and go to state 1182
    deposit                        shift and go to state 1196
    byte_order                     shift and go to state 1183
    axis_descr_optional            shift and go to state 1176
    format                         shift and go to state 1185
    axis_descr_optional_list_optional shift and go to state 1187
    fix_axis_par_list              shift and go to state 1188
    monotony                       shift and go to state 1189
    annotation                     shift and go to state 1190
    extended_limits                shift and go to state 1192
    fix_axis_par                   shift and go to state 1193
    curve_axis_ref                 shift and go to state 1195
    fix_axis_par_dist              shift and go to state 1197

state 1173

    (253) if_data_memory_segment -> begin IF_DATA IDENT . if_data_memory_segment_optional_parameter_list_optional end IF_DATA
    (254) if_data_memory_segment_optional_parameter_list_optional -> . empty
    (255) if_data_memory_segment_optional_parameter_list_optional -> . if_data_memory_segment_optional_parameter_list
    (698) empty -> .
    (256) if_data_memory_segment_optional_parameter_list -> . if_data_memory_segment_optional_parameter
    (257) if_data_memory_segment_optional_parameter_list -> . if_data_memory_segment_optional_parameter if_data_memory_segment_optional_parameter_list
    (258) if_data_memory_segment_optional_parameter -> . address_mapping
    (259) if_data_memory_segment_optional_parameter -> . segment
    (274) address_mapping -> . ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC
    (260) segment -> . begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    end             reduce using rule 698 (empty -> .)
    ADDRESS_MAPPING shift and go to state 1200
    begin           shift and go to state 1201

    address_mapping                shift and go to state 1199
    if_data_memory_segment_optional_parameter shift and go to state 1203
    if_data_memory_segment_optional_parameter_list shift and go to state 1202
    if_data_memory_segment_optional_parameter_list_optional shift and go to state 1204
    segment                        shift and go to state 1205
    empty                          shift and go to state 1206

state 1174

    (230) memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .

    ADDR_EPK        reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    EPK             reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    SUPPLIER        reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    CUSTOMER        reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    CUSTOMER_NO     reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    USER            reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    PHONE_NO        reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    ECU             reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    CPU_TYPE        reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    NO_OF_INTERFACES reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    ECU_CALIBRATION_OFFSET reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    begin           reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    SYSTEM_CONSTANT reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    ASAP2_VERSION   reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    A2ML_VERSION    reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)
    end             reduce using rule 230 (memory_segment -> begin MEMORY_SEGMENT IDENT STRING memory_segment_prg_type memory_segment_memory_type memory_segment_attributes NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC memory_segment_optional_parameter_list_optional end MEMORY_SEGMENT .)


state 1175

    (337) curve_axis_ref -> CURVE_AXIS_REF . IDENT

    IDENT           shift and go to state 1207


state 1176

    (338) axis_descr_optional_list -> axis_descr_optional .
    (339) axis_descr_optional_list -> axis_descr_optional . axis_descr_optional_list
    (338) axis_descr_optional_list -> . axis_descr_optional
    (339) axis_descr_optional_list -> . axis_descr_optional axis_descr_optional_list
    (314) axis_descr_optional -> . READ_ONLY
    (315) axis_descr_optional -> . format
    (316) axis_descr_optional -> . annotation
    (317) axis_descr_optional -> . axis_pts_ref
    (318) axis_descr_optional -> . max_grad
    (319) axis_descr_optional -> . monotony
    (320) axis_descr_optional -> . byte_order
    (321) axis_descr_optional -> . extended_limits
    (322) axis_descr_optional -> . fix_axis_par
    (323) axis_descr_optional -> . fix_axis_par_dist
    (324) axis_descr_optional -> . fix_axis_par_list
    (325) axis_descr_optional -> . deposit
    (326) axis_descr_optional -> . curve_axis_ref
    (283) format -> . FORMAT STRING
    (301) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (327) axis_pts_ref -> . AXIS_PTS_REF IDENT
    (328) max_grad -> . MAX_GRAD NUMERIC
    (329) monotony -> . MONOTONY monotony_type
    (284) byte_order -> . BYTE_ORDER byte_order_type
    (290) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (334) fix_axis_par -> . FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC
    (335) fix_axis_par_dist -> . FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC
    (336) fix_axis_par_list -> . begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST
    (399) deposit -> . DEPOSIT deposit_mode
    (337) curve_axis_ref -> . CURVE_AXIS_REF IDENT

    end             reduce using rule 338 (axis_descr_optional_list -> axis_descr_optional .)
    READ_ONLY       shift and go to state 1179
    FORMAT          shift and go to state 934
    begin           shift and go to state 1184
    AXIS_PTS_REF    shift and go to state 1191
    MAX_GRAD        shift and go to state 1198
    MONOTONY        shift and go to state 1177
    BYTE_ORDER      shift and go to state 306
    EXTENDED_LIMITS shift and go to state 999
    FIX_AXIS_PAR    shift and go to state 1194
    FIX_AXIS_PAR_DIST shift and go to state 1186
    DEPOSIT         shift and go to state 315
    CURVE_AXIS_REF  shift and go to state 1175

    byte_order                     shift and go to state 1183
    axis_descr_optional            shift and go to state 1176
    extended_limits                shift and go to state 1192
    format                         shift and go to state 1185
    axis_descr_optional_list       shift and go to state 1208
    fix_axis_par                   shift and go to state 1193
    max_grad                       shift and go to state 1178
    fix_axis_par_list              shift and go to state 1188
    fix_axis_par_dist              shift and go to state 1197
    monotony                       shift and go to state 1189
    curve_axis_ref                 shift and go to state 1195
    axis_pts_ref                   shift and go to state 1181
    annotation                     shift and go to state 1190
    deposit                        shift and go to state 1196

state 1177

    (329) monotony -> MONOTONY . monotony_type
    (330) monotony_type -> . MON_INCREASE
    (331) monotony_type -> . MON_DECREASE
    (332) monotony_type -> . STRICT_INCREASE
    (333) monotony_type -> . STRICT_DECREASE

    MON_INCREASE    shift and go to state 1209
    MON_DECREASE    shift and go to state 1212
    STRICT_INCREASE shift and go to state 1211
    STRICT_DECREASE shift and go to state 1213

    monotony_type                  shift and go to state 1210

state 1178

    (318) axis_descr_optional -> max_grad .

    READ_ONLY       reduce using rule 318 (axis_descr_optional -> max_grad .)
    FORMAT          reduce using rule 318 (axis_descr_optional -> max_grad .)
    begin           reduce using rule 318 (axis_descr_optional -> max_grad .)
    AXIS_PTS_REF    reduce using rule 318 (axis_descr_optional -> max_grad .)
    MAX_GRAD        reduce using rule 318 (axis_descr_optional -> max_grad .)
    MONOTONY        reduce using rule 318 (axis_descr_optional -> max_grad .)
    BYTE_ORDER      reduce using rule 318 (axis_descr_optional -> max_grad .)
    EXTENDED_LIMITS reduce using rule 318 (axis_descr_optional -> max_grad .)
    FIX_AXIS_PAR    reduce using rule 318 (axis_descr_optional -> max_grad .)
    FIX_AXIS_PAR_DIST reduce using rule 318 (axis_descr_optional -> max_grad .)
    DEPOSIT         reduce using rule 318 (axis_descr_optional -> max_grad .)
    CURVE_AXIS_REF  reduce using rule 318 (axis_descr_optional -> max_grad .)
    end             reduce using rule 318 (axis_descr_optional -> max_grad .)


state 1179

    (314) axis_descr_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    FORMAT          reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    begin           reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    AXIS_PTS_REF    reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    MAX_GRAD        reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    MONOTONY        reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    FIX_AXIS_PAR    reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    FIX_AXIS_PAR_DIST reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    DEPOSIT         reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    CURVE_AXIS_REF  reduce using rule 314 (axis_descr_optional -> READ_ONLY .)
    end             reduce using rule 314 (axis_descr_optional -> READ_ONLY .)


state 1180

    (341) axis_descr_optional_list_optional -> axis_descr_optional_list .

    end             reduce using rule 341 (axis_descr_optional_list_optional -> axis_descr_optional_list .)


state 1181

    (317) axis_descr_optional -> axis_pts_ref .

    READ_ONLY       reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    FORMAT          reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    begin           reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    AXIS_PTS_REF    reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    MAX_GRAD        reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    MONOTONY        reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    BYTE_ORDER      reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    EXTENDED_LIMITS reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    FIX_AXIS_PAR    reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    FIX_AXIS_PAR_DIST reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    DEPOSIT         reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    CURVE_AXIS_REF  reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)
    end             reduce using rule 317 (axis_descr_optional -> axis_pts_ref .)


state 1182

    (340) axis_descr_optional_list_optional -> empty .

    end             reduce using rule 340 (axis_descr_optional_list_optional -> empty .)


state 1183

    (320) axis_descr_optional -> byte_order .

    READ_ONLY       reduce using rule 320 (axis_descr_optional -> byte_order .)
    FORMAT          reduce using rule 320 (axis_descr_optional -> byte_order .)
    begin           reduce using rule 320 (axis_descr_optional -> byte_order .)
    AXIS_PTS_REF    reduce using rule 320 (axis_descr_optional -> byte_order .)
    MAX_GRAD        reduce using rule 320 (axis_descr_optional -> byte_order .)
    MONOTONY        reduce using rule 320 (axis_descr_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 320 (axis_descr_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 320 (axis_descr_optional -> byte_order .)
    FIX_AXIS_PAR    reduce using rule 320 (axis_descr_optional -> byte_order .)
    FIX_AXIS_PAR_DIST reduce using rule 320 (axis_descr_optional -> byte_order .)
    DEPOSIT         reduce using rule 320 (axis_descr_optional -> byte_order .)
    CURVE_AXIS_REF  reduce using rule 320 (axis_descr_optional -> byte_order .)
    end             reduce using rule 320 (axis_descr_optional -> byte_order .)


state 1184

    (301) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (336) fix_axis_par_list -> begin . FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST

    ANNOTATION      shift and go to state 493
    FIX_AXIS_PAR_LIST shift and go to state 1214


state 1185

    (315) axis_descr_optional -> format .

    READ_ONLY       reduce using rule 315 (axis_descr_optional -> format .)
    FORMAT          reduce using rule 315 (axis_descr_optional -> format .)
    begin           reduce using rule 315 (axis_descr_optional -> format .)
    AXIS_PTS_REF    reduce using rule 315 (axis_descr_optional -> format .)
    MAX_GRAD        reduce using rule 315 (axis_descr_optional -> format .)
    MONOTONY        reduce using rule 315 (axis_descr_optional -> format .)
    BYTE_ORDER      reduce using rule 315 (axis_descr_optional -> format .)
    EXTENDED_LIMITS reduce using rule 315 (axis_descr_optional -> format .)
    FIX_AXIS_PAR    reduce using rule 315 (axis_descr_optional -> format .)
    FIX_AXIS_PAR_DIST reduce using rule 315 (axis_descr_optional -> format .)
    DEPOSIT         reduce using rule 315 (axis_descr_optional -> format .)
    CURVE_AXIS_REF  reduce using rule 315 (axis_descr_optional -> format .)
    end             reduce using rule 315 (axis_descr_optional -> format .)


state 1186

    (335) fix_axis_par_dist -> FIX_AXIS_PAR_DIST . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 1215


state 1187

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional . end AXIS_DESCR

    end             shift and go to state 1216


state 1188

    (324) axis_descr_optional -> fix_axis_par_list .

    READ_ONLY       reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    FORMAT          reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    begin           reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    AXIS_PTS_REF    reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    MAX_GRAD        reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    MONOTONY        reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    BYTE_ORDER      reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    EXTENDED_LIMITS reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    FIX_AXIS_PAR    reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    FIX_AXIS_PAR_DIST reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    DEPOSIT         reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    CURVE_AXIS_REF  reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)
    end             reduce using rule 324 (axis_descr_optional -> fix_axis_par_list .)


state 1189

    (319) axis_descr_optional -> monotony .

    READ_ONLY       reduce using rule 319 (axis_descr_optional -> monotony .)
    FORMAT          reduce using rule 319 (axis_descr_optional -> monotony .)
    begin           reduce using rule 319 (axis_descr_optional -> monotony .)
    AXIS_PTS_REF    reduce using rule 319 (axis_descr_optional -> monotony .)
    MAX_GRAD        reduce using rule 319 (axis_descr_optional -> monotony .)
    MONOTONY        reduce using rule 319 (axis_descr_optional -> monotony .)
    BYTE_ORDER      reduce using rule 319 (axis_descr_optional -> monotony .)
    EXTENDED_LIMITS reduce using rule 319 (axis_descr_optional -> monotony .)
    FIX_AXIS_PAR    reduce using rule 319 (axis_descr_optional -> monotony .)
    FIX_AXIS_PAR_DIST reduce using rule 319 (axis_descr_optional -> monotony .)
    DEPOSIT         reduce using rule 319 (axis_descr_optional -> monotony .)
    CURVE_AXIS_REF  reduce using rule 319 (axis_descr_optional -> monotony .)
    end             reduce using rule 319 (axis_descr_optional -> monotony .)


state 1190

    (316) axis_descr_optional -> annotation .

    READ_ONLY       reduce using rule 316 (axis_descr_optional -> annotation .)
    FORMAT          reduce using rule 316 (axis_descr_optional -> annotation .)
    begin           reduce using rule 316 (axis_descr_optional -> annotation .)
    AXIS_PTS_REF    reduce using rule 316 (axis_descr_optional -> annotation .)
    MAX_GRAD        reduce using rule 316 (axis_descr_optional -> annotation .)
    MONOTONY        reduce using rule 316 (axis_descr_optional -> annotation .)
    BYTE_ORDER      reduce using rule 316 (axis_descr_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 316 (axis_descr_optional -> annotation .)
    FIX_AXIS_PAR    reduce using rule 316 (axis_descr_optional -> annotation .)
    FIX_AXIS_PAR_DIST reduce using rule 316 (axis_descr_optional -> annotation .)
    DEPOSIT         reduce using rule 316 (axis_descr_optional -> annotation .)
    CURVE_AXIS_REF  reduce using rule 316 (axis_descr_optional -> annotation .)
    end             reduce using rule 316 (axis_descr_optional -> annotation .)


state 1191

    (327) axis_pts_ref -> AXIS_PTS_REF . IDENT

    IDENT           shift and go to state 1217


state 1192

    (321) axis_descr_optional -> extended_limits .

    READ_ONLY       reduce using rule 321 (axis_descr_optional -> extended_limits .)
    FORMAT          reduce using rule 321 (axis_descr_optional -> extended_limits .)
    begin           reduce using rule 321 (axis_descr_optional -> extended_limits .)
    AXIS_PTS_REF    reduce using rule 321 (axis_descr_optional -> extended_limits .)
    MAX_GRAD        reduce using rule 321 (axis_descr_optional -> extended_limits .)
    MONOTONY        reduce using rule 321 (axis_descr_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 321 (axis_descr_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 321 (axis_descr_optional -> extended_limits .)
    FIX_AXIS_PAR    reduce using rule 321 (axis_descr_optional -> extended_limits .)
    FIX_AXIS_PAR_DIST reduce using rule 321 (axis_descr_optional -> extended_limits .)
    DEPOSIT         reduce using rule 321 (axis_descr_optional -> extended_limits .)
    CURVE_AXIS_REF  reduce using rule 321 (axis_descr_optional -> extended_limits .)
    end             reduce using rule 321 (axis_descr_optional -> extended_limits .)


state 1193

    (322) axis_descr_optional -> fix_axis_par .

    READ_ONLY       reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    FORMAT          reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    begin           reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    AXIS_PTS_REF    reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    MAX_GRAD        reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    MONOTONY        reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    BYTE_ORDER      reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    EXTENDED_LIMITS reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    FIX_AXIS_PAR    reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    FIX_AXIS_PAR_DIST reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    DEPOSIT         reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    CURVE_AXIS_REF  reduce using rule 322 (axis_descr_optional -> fix_axis_par .)
    end             reduce using rule 322 (axis_descr_optional -> fix_axis_par .)


state 1194

    (334) fix_axis_par -> FIX_AXIS_PAR . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 1218


state 1195

    (326) axis_descr_optional -> curve_axis_ref .

    READ_ONLY       reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    FORMAT          reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    begin           reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    AXIS_PTS_REF    reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    MAX_GRAD        reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    MONOTONY        reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    BYTE_ORDER      reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    EXTENDED_LIMITS reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    FIX_AXIS_PAR    reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    FIX_AXIS_PAR_DIST reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    DEPOSIT         reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    CURVE_AXIS_REF  reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)
    end             reduce using rule 326 (axis_descr_optional -> curve_axis_ref .)


state 1196

    (325) axis_descr_optional -> deposit .

    READ_ONLY       reduce using rule 325 (axis_descr_optional -> deposit .)
    FORMAT          reduce using rule 325 (axis_descr_optional -> deposit .)
    begin           reduce using rule 325 (axis_descr_optional -> deposit .)
    AXIS_PTS_REF    reduce using rule 325 (axis_descr_optional -> deposit .)
    MAX_GRAD        reduce using rule 325 (axis_descr_optional -> deposit .)
    MONOTONY        reduce using rule 325 (axis_descr_optional -> deposit .)
    BYTE_ORDER      reduce using rule 325 (axis_descr_optional -> deposit .)
    EXTENDED_LIMITS reduce using rule 325 (axis_descr_optional -> deposit .)
    FIX_AXIS_PAR    reduce using rule 325 (axis_descr_optional -> deposit .)
    FIX_AXIS_PAR_DIST reduce using rule 325 (axis_descr_optional -> deposit .)
    DEPOSIT         reduce using rule 325 (axis_descr_optional -> deposit .)
    CURVE_AXIS_REF  reduce using rule 325 (axis_descr_optional -> deposit .)
    end             reduce using rule 325 (axis_descr_optional -> deposit .)


state 1197

    (323) axis_descr_optional -> fix_axis_par_dist .

    READ_ONLY       reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    FORMAT          reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    begin           reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    AXIS_PTS_REF    reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    MAX_GRAD        reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    MONOTONY        reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    BYTE_ORDER      reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    EXTENDED_LIMITS reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    FIX_AXIS_PAR    reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    FIX_AXIS_PAR_DIST reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    DEPOSIT         reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    CURVE_AXIS_REF  reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)
    end             reduce using rule 323 (axis_descr_optional -> fix_axis_par_dist .)


state 1198

    (328) max_grad -> MAX_GRAD . NUMERIC

    NUMERIC         shift and go to state 1219


state 1199

    (258) if_data_memory_segment_optional_parameter -> address_mapping .

    ADDRESS_MAPPING reduce using rule 258 (if_data_memory_segment_optional_parameter -> address_mapping .)
    begin           reduce using rule 258 (if_data_memory_segment_optional_parameter -> address_mapping .)
    end             reduce using rule 258 (if_data_memory_segment_optional_parameter -> address_mapping .)


state 1200

    (274) address_mapping -> ADDRESS_MAPPING . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 1220


state 1201

    (260) segment -> begin . SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    SEGMENT         shift and go to state 1221


state 1202

    (255) if_data_memory_segment_optional_parameter_list_optional -> if_data_memory_segment_optional_parameter_list .

    end             reduce using rule 255 (if_data_memory_segment_optional_parameter_list_optional -> if_data_memory_segment_optional_parameter_list .)


state 1203

    (256) if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter .
    (257) if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter . if_data_memory_segment_optional_parameter_list
    (256) if_data_memory_segment_optional_parameter_list -> . if_data_memory_segment_optional_parameter
    (257) if_data_memory_segment_optional_parameter_list -> . if_data_memory_segment_optional_parameter if_data_memory_segment_optional_parameter_list
    (258) if_data_memory_segment_optional_parameter -> . address_mapping
    (259) if_data_memory_segment_optional_parameter -> . segment
    (274) address_mapping -> . ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC
    (260) segment -> . begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    end             reduce using rule 256 (if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter .)
    ADDRESS_MAPPING shift and go to state 1200
    begin           shift and go to state 1201

    address_mapping                shift and go to state 1199
    segment                        shift and go to state 1205
    if_data_memory_segment_optional_parameter shift and go to state 1203
    if_data_memory_segment_optional_parameter_list shift and go to state 1222

state 1204

    (253) if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional . end IF_DATA

    end             shift and go to state 1223


state 1205

    (259) if_data_memory_segment_optional_parameter -> segment .

    ADDRESS_MAPPING reduce using rule 259 (if_data_memory_segment_optional_parameter -> segment .)
    begin           reduce using rule 259 (if_data_memory_segment_optional_parameter -> segment .)
    end             reduce using rule 259 (if_data_memory_segment_optional_parameter -> segment .)


state 1206

    (254) if_data_memory_segment_optional_parameter_list_optional -> empty .

    end             reduce using rule 254 (if_data_memory_segment_optional_parameter_list_optional -> empty .)


state 1207

    (337) curve_axis_ref -> CURVE_AXIS_REF IDENT .

    READ_ONLY       reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    FORMAT          reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    begin           reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    AXIS_PTS_REF    reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    MAX_GRAD        reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    MONOTONY        reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    BYTE_ORDER      reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    EXTENDED_LIMITS reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    FIX_AXIS_PAR    reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    FIX_AXIS_PAR_DIST reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    DEPOSIT         reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    CURVE_AXIS_REF  reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)
    end             reduce using rule 337 (curve_axis_ref -> CURVE_AXIS_REF IDENT .)


state 1208

    (339) axis_descr_optional_list -> axis_descr_optional axis_descr_optional_list .

    end             reduce using rule 339 (axis_descr_optional_list -> axis_descr_optional axis_descr_optional_list .)


state 1209

    (330) monotony_type -> MON_INCREASE .

    READ_ONLY       reduce using rule 330 (monotony_type -> MON_INCREASE .)
    FORMAT          reduce using rule 330 (monotony_type -> MON_INCREASE .)
    begin           reduce using rule 330 (monotony_type -> MON_INCREASE .)
    AXIS_PTS_REF    reduce using rule 330 (monotony_type -> MON_INCREASE .)
    MAX_GRAD        reduce using rule 330 (monotony_type -> MON_INCREASE .)
    MONOTONY        reduce using rule 330 (monotony_type -> MON_INCREASE .)
    BYTE_ORDER      reduce using rule 330 (monotony_type -> MON_INCREASE .)
    EXTENDED_LIMITS reduce using rule 330 (monotony_type -> MON_INCREASE .)
    FIX_AXIS_PAR    reduce using rule 330 (monotony_type -> MON_INCREASE .)
    FIX_AXIS_PAR_DIST reduce using rule 330 (monotony_type -> MON_INCREASE .)
    DEPOSIT         reduce using rule 330 (monotony_type -> MON_INCREASE .)
    CURVE_AXIS_REF  reduce using rule 330 (monotony_type -> MON_INCREASE .)
    end             reduce using rule 330 (monotony_type -> MON_INCREASE .)


state 1210

    (329) monotony -> MONOTONY monotony_type .

    READ_ONLY       reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    FORMAT          reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    begin           reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    AXIS_PTS_REF    reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    MAX_GRAD        reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    MONOTONY        reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    BYTE_ORDER      reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    EXTENDED_LIMITS reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    FIX_AXIS_PAR    reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    FIX_AXIS_PAR_DIST reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    DEPOSIT         reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    CURVE_AXIS_REF  reduce using rule 329 (monotony -> MONOTONY monotony_type .)
    end             reduce using rule 329 (monotony -> MONOTONY monotony_type .)


state 1211

    (332) monotony_type -> STRICT_INCREASE .

    READ_ONLY       reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    FORMAT          reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    begin           reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    AXIS_PTS_REF    reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    MAX_GRAD        reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    MONOTONY        reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    BYTE_ORDER      reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    EXTENDED_LIMITS reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    FIX_AXIS_PAR    reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    FIX_AXIS_PAR_DIST reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    DEPOSIT         reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    CURVE_AXIS_REF  reduce using rule 332 (monotony_type -> STRICT_INCREASE .)
    end             reduce using rule 332 (monotony_type -> STRICT_INCREASE .)


state 1212

    (331) monotony_type -> MON_DECREASE .

    READ_ONLY       reduce using rule 331 (monotony_type -> MON_DECREASE .)
    FORMAT          reduce using rule 331 (monotony_type -> MON_DECREASE .)
    begin           reduce using rule 331 (monotony_type -> MON_DECREASE .)
    AXIS_PTS_REF    reduce using rule 331 (monotony_type -> MON_DECREASE .)
    MAX_GRAD        reduce using rule 331 (monotony_type -> MON_DECREASE .)
    MONOTONY        reduce using rule 331 (monotony_type -> MON_DECREASE .)
    BYTE_ORDER      reduce using rule 331 (monotony_type -> MON_DECREASE .)
    EXTENDED_LIMITS reduce using rule 331 (monotony_type -> MON_DECREASE .)
    FIX_AXIS_PAR    reduce using rule 331 (monotony_type -> MON_DECREASE .)
    FIX_AXIS_PAR_DIST reduce using rule 331 (monotony_type -> MON_DECREASE .)
    DEPOSIT         reduce using rule 331 (monotony_type -> MON_DECREASE .)
    CURVE_AXIS_REF  reduce using rule 331 (monotony_type -> MON_DECREASE .)
    end             reduce using rule 331 (monotony_type -> MON_DECREASE .)


state 1213

    (333) monotony_type -> STRICT_DECREASE .

    READ_ONLY       reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    FORMAT          reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    begin           reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    AXIS_PTS_REF    reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    MAX_GRAD        reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    MONOTONY        reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    BYTE_ORDER      reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    EXTENDED_LIMITS reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    FIX_AXIS_PAR    reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    FIX_AXIS_PAR_DIST reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    DEPOSIT         reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    CURVE_AXIS_REF  reduce using rule 333 (monotony_type -> STRICT_DECREASE .)
    end             reduce using rule 333 (monotony_type -> STRICT_DECREASE .)


state 1214

    (336) fix_axis_par_list -> begin FIX_AXIS_PAR_LIST . number_list end FIX_AXIS_PAR_LIST
    (97) number_list -> . NUMERIC
    (98) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 1224

state 1215

    (335) fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1225


state 1216

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end . AXIS_DESCR

    AXIS_DESCR      shift and go to state 1226


state 1217

    (327) axis_pts_ref -> AXIS_PTS_REF IDENT .

    READ_ONLY       reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    FORMAT          reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    begin           reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    AXIS_PTS_REF    reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    MAX_GRAD        reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    MONOTONY        reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    BYTE_ORDER      reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    EXTENDED_LIMITS reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    FIX_AXIS_PAR    reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    FIX_AXIS_PAR_DIST reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    DEPOSIT         reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    CURVE_AXIS_REF  reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)
    end             reduce using rule 327 (axis_pts_ref -> AXIS_PTS_REF IDENT .)


state 1218

    (334) fix_axis_par -> FIX_AXIS_PAR NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1227


state 1219

    (328) max_grad -> MAX_GRAD NUMERIC .

    READ_ONLY       reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    FORMAT          reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    begin           reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    AXIS_PTS_REF    reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    MAX_GRAD        reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    MONOTONY        reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    BYTE_ORDER      reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    EXTENDED_LIMITS reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    FIX_AXIS_PAR    reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    FIX_AXIS_PAR_DIST reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    DEPOSIT         reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    CURVE_AXIS_REF  reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)
    end             reduce using rule 328 (max_grad -> MAX_GRAD NUMERIC .)


state 1220

    (274) address_mapping -> ADDRESS_MAPPING NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 1228


state 1221

    (260) segment -> begin SEGMENT . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    NUMERIC         shift and go to state 1229


state 1222

    (257) if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter if_data_memory_segment_optional_parameter_list .

    end             reduce using rule 257 (if_data_memory_segment_optional_parameter_list -> if_data_memory_segment_optional_parameter if_data_memory_segment_optional_parameter_list .)


state 1223

    (253) if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end . IF_DATA

    IF_DATA         shift and go to state 1230


state 1224

    (336) fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list . end FIX_AXIS_PAR_LIST

    end             shift and go to state 1231


state 1225

    (335) fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1232


state 1226

    (313) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .

    READ_ONLY       reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    GUARD_RAILS     reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    DISPLAY_IDENTIFIER reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    FORMAT          reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    BYTE_ORDER      reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    BIT_MASK        reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    begin           reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    NUMBER          reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    EXTENDED_LIMITS reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    MAX_REFRESH     reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    REF_MEMORY_SEGMENT reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    COMPARISON_QUANTITY reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    CALIBRATION_ACCESS reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    MATRIX_DIM      reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    ECU_ADDRESS_EXTENSION reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)
    end             reduce using rule 313 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC axis_descr_optional_list_optional end AXIS_DESCR .)


state 1227

    (334) fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1233


state 1228

    (274) address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 1234


state 1229

    (260) segment -> begin SEGMENT NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    NUMERIC         shift and go to state 1235


state 1230

    (253) if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA .

    begin           reduce using rule 253 (if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA .)
    end             reduce using rule 253 (if_data_memory_segment -> begin IF_DATA IDENT if_data_memory_segment_optional_parameter_list_optional end IF_DATA .)


state 1231

    (336) fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end . FIX_AXIS_PAR_LIST

    FIX_AXIS_PAR_LIST shift and go to state 1236


state 1232

    (335) fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    FORMAT          reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    AXIS_PTS_REF    reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    MAX_GRAD        reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    MONOTONY        reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    FIX_AXIS_PAR    reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    FIX_AXIS_PAR_DIST reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    DEPOSIT         reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    CURVE_AXIS_REF  reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 335 (fix_axis_par_dist -> FIX_AXIS_PAR_DIST NUMERIC NUMERIC NUMERIC .)


state 1233

    (334) fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    FORMAT          reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    AXIS_PTS_REF    reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    MAX_GRAD        reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    MONOTONY        reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    FIX_AXIS_PAR    reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    FIX_AXIS_PAR_DIST reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    DEPOSIT         reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    CURVE_AXIS_REF  reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 334 (fix_axis_par -> FIX_AXIS_PAR NUMERIC NUMERIC NUMERIC .)


state 1234

    (274) address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC .

    ADDRESS_MAPPING reduce using rule 274 (address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 274 (address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 274 (address_mapping -> ADDRESS_MAPPING NUMERIC NUMERIC NUMERIC .)


state 1235

    (260) segment -> begin SEGMENT NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    NUMERIC         shift and go to state 1237


state 1236

    (336) fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .

    READ_ONLY       reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    FORMAT          reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    begin           reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    AXIS_PTS_REF    reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    MAX_GRAD        reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    MONOTONY        reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    BYTE_ORDER      reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    EXTENDED_LIMITS reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    FIX_AXIS_PAR    reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    FIX_AXIS_PAR_DIST reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    DEPOSIT         reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    CURVE_AXIS_REF  reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)
    end             reduce using rule 336 (fix_axis_par_list -> begin FIX_AXIS_PAR_LIST number_list end FIX_AXIS_PAR_LIST .)


state 1237

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT

    NUMERIC         shift and go to state 1238


state 1238

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC segment_optional_parameter_list_optional end SEGMENT

    NUMERIC         shift and go to state 1239


state 1239

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . segment_optional_parameter_list_optional end SEGMENT
    (265) segment_optional_parameter_list_optional -> . empty
    (266) segment_optional_parameter_list_optional -> . segment_optional_parameter_list
    (698) empty -> .
    (263) segment_optional_parameter_list -> . segment_optional_parameter
    (264) segment_optional_parameter_list -> . segment_optional_parameter segment_optional_parameter_list
    (261) segment_optional_parameter -> . page
    (262) segment_optional_parameter -> . checksum
    (267) page -> . begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE
    (148) checksum -> . begin CHECKSUM STRING end CHECKSUM
    (149) checksum -> . begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM

    end             reduce using rule 698 (empty -> .)
    begin           shift and go to state 1241

    segment_optional_parameter_list_optional shift and go to state 1240
    checksum                       shift and go to state 1242
    empty                          shift and go to state 1246
    segment_optional_parameter     shift and go to state 1244
    page                           shift and go to state 1245
    segment_optional_parameter_list shift and go to state 1243

state 1240

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional . end SEGMENT

    end             shift and go to state 1247


state 1241

    (267) page -> begin . PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE
    (148) checksum -> begin . CHECKSUM STRING end CHECKSUM
    (149) checksum -> begin . CHECKSUM IDENT IDENT NUMERIC end CHECKSUM

    PAGE            shift and go to state 1248
    CHECKSUM        shift and go to state 454


state 1242

    (262) segment_optional_parameter -> checksum .

    begin           reduce using rule 262 (segment_optional_parameter -> checksum .)
    end             reduce using rule 262 (segment_optional_parameter -> checksum .)


state 1243

    (266) segment_optional_parameter_list_optional -> segment_optional_parameter_list .

    end             reduce using rule 266 (segment_optional_parameter_list_optional -> segment_optional_parameter_list .)


state 1244

    (263) segment_optional_parameter_list -> segment_optional_parameter .
    (264) segment_optional_parameter_list -> segment_optional_parameter . segment_optional_parameter_list
    (263) segment_optional_parameter_list -> . segment_optional_parameter
    (264) segment_optional_parameter_list -> . segment_optional_parameter segment_optional_parameter_list
    (261) segment_optional_parameter -> . page
    (262) segment_optional_parameter -> . checksum
    (267) page -> . begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE
    (148) checksum -> . begin CHECKSUM STRING end CHECKSUM
    (149) checksum -> . begin CHECKSUM IDENT IDENT NUMERIC end CHECKSUM

    end             reduce using rule 263 (segment_optional_parameter_list -> segment_optional_parameter .)
    begin           shift and go to state 1241

    segment_optional_parameter     shift and go to state 1244
    checksum                       shift and go to state 1242
    page                           shift and go to state 1245
    segment_optional_parameter_list shift and go to state 1249

state 1245

    (261) segment_optional_parameter -> page .

    begin           reduce using rule 261 (segment_optional_parameter -> page .)
    end             reduce using rule 261 (segment_optional_parameter -> page .)


state 1246

    (265) segment_optional_parameter_list_optional -> empty .

    end             reduce using rule 265 (segment_optional_parameter_list_optional -> empty .)


state 1247

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end . SEGMENT

    SEGMENT         shift and go to state 1250


state 1248

    (267) page -> begin PAGE . NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE

    NUMERIC         shift and go to state 1251


state 1249

    (264) segment_optional_parameter_list -> segment_optional_parameter segment_optional_parameter_list .

    end             reduce using rule 264 (segment_optional_parameter_list -> segment_optional_parameter segment_optional_parameter_list .)


state 1250

    (260) segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT .

    ADDRESS_MAPPING reduce using rule 260 (segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT .)
    begin           reduce using rule 260 (segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT .)
    end             reduce using rule 260 (segment -> begin SEGMENT NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC segment_optional_parameter_list_optional end SEGMENT .)


state 1251

    (267) page -> begin PAGE NUMERIC . IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE

    IDENT           shift and go to state 1252


state 1252

    (267) page -> begin PAGE NUMERIC IDENT . IDENT IDENT page_optional_parameter_list_optional end PAGE

    IDENT           shift and go to state 1253


state 1253

    (267) page -> begin PAGE NUMERIC IDENT IDENT . IDENT page_optional_parameter_list_optional end PAGE

    IDENT           shift and go to state 1254


state 1254

    (267) page -> begin PAGE NUMERIC IDENT IDENT IDENT . page_optional_parameter_list_optional end PAGE
    (271) page_optional_parameter_list_optional -> . empty
    (272) page_optional_parameter_list_optional -> . page_optional_parameter_list
    (698) empty -> .
    (269) page_optional_parameter_list -> . page_optional_parameter
    (270) page_optional_parameter_list -> . page_optional_parameter page_optional_parameter_list
    (268) page_optional_parameter -> . init_segment
    (273) init_segment -> . INIT_SEGMENT NUMERIC

    end             reduce using rule 698 (empty -> .)
    INIT_SEGMENT    shift and go to state 1258

    init_segment                   shift and go to state 1256
    page_optional_parameter_list_optional shift and go to state 1255
    page_optional_parameter        shift and go to state 1260
    empty                          shift and go to state 1259
    page_optional_parameter_list   shift and go to state 1257

state 1255

    (267) page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional . end PAGE

    end             shift and go to state 1261


state 1256

    (268) page_optional_parameter -> init_segment .

    INIT_SEGMENT    reduce using rule 268 (page_optional_parameter -> init_segment .)
    end             reduce using rule 268 (page_optional_parameter -> init_segment .)


state 1257

    (272) page_optional_parameter_list_optional -> page_optional_parameter_list .

    end             reduce using rule 272 (page_optional_parameter_list_optional -> page_optional_parameter_list .)


state 1258

    (273) init_segment -> INIT_SEGMENT . NUMERIC

    NUMERIC         shift and go to state 1262


state 1259

    (271) page_optional_parameter_list_optional -> empty .

    end             reduce using rule 271 (page_optional_parameter_list_optional -> empty .)


state 1260

    (269) page_optional_parameter_list -> page_optional_parameter .
    (270) page_optional_parameter_list -> page_optional_parameter . page_optional_parameter_list
    (269) page_optional_parameter_list -> . page_optional_parameter
    (270) page_optional_parameter_list -> . page_optional_parameter page_optional_parameter_list
    (268) page_optional_parameter -> . init_segment
    (273) init_segment -> . INIT_SEGMENT NUMERIC

    end             reduce using rule 269 (page_optional_parameter_list -> page_optional_parameter .)
    INIT_SEGMENT    shift and go to state 1258

    page_optional_parameter_list   shift and go to state 1263
    init_segment                   shift and go to state 1256
    page_optional_parameter        shift and go to state 1260

state 1261

    (267) page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end . PAGE

    PAGE            shift and go to state 1264


state 1262

    (273) init_segment -> INIT_SEGMENT NUMERIC .

    INIT_SEGMENT    reduce using rule 273 (init_segment -> INIT_SEGMENT NUMERIC .)
    end             reduce using rule 273 (init_segment -> INIT_SEGMENT NUMERIC .)


state 1263

    (270) page_optional_parameter_list -> page_optional_parameter page_optional_parameter_list .

    end             reduce using rule 270 (page_optional_parameter_list -> page_optional_parameter page_optional_parameter_list .)


state 1264

    (267) page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE .

    begin           reduce using rule 267 (page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE .)
    end             reduce using rule 267 (page -> begin PAGE NUMERIC IDENT IDENT IDENT page_optional_parameter_list_optional end PAGE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 288 resolved as shift
WARNING: shift/reduce conflict for STRING in state 288 resolved as shift
WARNING: shift/reduce conflict for NUMERIC in state 288 resolved as shift
WARNING: shift/reduce conflict for begin in state 288 resolved as shift
