Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TYPEDEF_CHARACTERISTIC
    DEFAULT_VALUE_NUMERIC
    EPK
    COEFFS_LINEAR
    SHIFT_OP_4
    CUSTOMER
    TYPEDEF_AXIS
    CPP_COMMENT
    AXIS_PTS_4
    AXIS_PTS_5
    SRC_ADDR_4
    CALIBRATION_METHOD
    AXIS_PTS_REF
    PHYS_UNIT
    CUSTOMER_NO
    USER
    NO_AXIS_PTS_5
    SHIFT_OP_5
    C_COMMENT
    STATIC_RECORD_LAYOUT
    DIST_OP_4
    DIST_OP_5
    ECU_CALIBRATION_OFFSET
    TRANSFORMER
    INSTANCE
    FORMULA_INV
    ADDR_EPK
    TYPEDEF_BLOB
    FIX_NO_AXIS_PTS_5
    FIX_NO_AXIS_PTS_4
    BLOB
    TYPEDEF_MEASUREMENT
    MEMORY_SEGMENT
    CALIBRATION_HANDLE_TEXT
    CALIBRATION_HANDLE
    FIX_AXIS_PAR_LIST
    MONOTONY
    TYPEDEF_STRUCTURE
    NO_OF_INTERFACES
    ECU
    SYSTEM_CONSTANT
    STEP_SIZE
    NO_AXIS_PTS_4
    CURVE_AXIS_REF
    CPU_TYPE
    FIX_AXIS_PAR
    STATUS_STRING_REF
    FIX_AXIS_PAR_DIST
    MEMORY_LAYOUT
    DISCRETE
    SUPPLIER
    RIP_ADDR_4
    RIP_ADDR_5
    VAR_SEPERATOR
    OFFSET_5
    SYMBOL_LINK
    LAYOUT
    PHONE_NO
    MAX_GRAD
    ALIGNMENT_INT64
    OFFSET_4
    SRC_ADDR_5
    DATA_SIZE

Grammar

Rule 0     S' -> a2l
Rule 1     a2l -> version_list project
Rule 2     a2ml_declaration -> a2ml_type_definition SEMICOLON
Rule 3     a2ml_declaration -> a2ml_block_definition SEMICOLON
Rule 4     a2ml_declaration_list -> a2ml_declaration
Rule 5     a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list
Rule 6     a2ml_type_definition -> a2ml_type_name
Rule 7     a2ml_type_name -> a2ml_predefined_type_name
Rule 8     a2ml_type_name -> a2ml_struct_type_name
Rule 9     a2ml_type_name -> a2ml_enum_type_name
Rule 10    a2ml_type_name -> a2ml_taggedstruct_type_name
Rule 11    a2ml_type_name -> a2ml_taggedunion_type_name
Rule 12    a2ml_predefined_type_name -> char
Rule 13    a2ml_predefined_type_name -> int
Rule 14    a2ml_predefined_type_name -> long
Rule 15    a2ml_predefined_type_name -> uchar
Rule 16    a2ml_predefined_type_name -> uint
Rule 17    a2ml_predefined_type_name -> ulong
Rule 18    a2ml_predefined_type_name -> double
Rule 19    a2ml_predefined_type_name -> float
Rule 20    a2ml_block_definition -> block a2ml_tag a2ml_type_name
Rule 21    a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
Rule 22    a2ml_enum_type_name -> enum a2ml_identifier
Rule 23    a2ml_enumerator_list -> a2ml_enumerator
Rule 24    a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list
Rule 25    a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant
Rule 26    a2ml_enumerator -> a2ml_keyword
Rule 27    a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
Rule 28    a2ml_struct_type_name -> struct a2ml_identifier
Rule 29    a2ml_struct_member_list_optional -> empty
Rule 30    a2ml_struct_member_list_optional -> a2ml_struct_member_list
Rule 31    a2ml_struct_member_list -> a2ml_struct_member
Rule 32    a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list
Rule 33    a2ml_struct_member -> a2ml_member SEMICOLON
Rule 34    a2ml_member -> a2ml_type_name a2ml_array_specifier_optional
Rule 35    a2ml_member_optional -> empty
Rule 36    a2ml_member_optional -> a2ml_member
Rule 37    a2ml_array_specifier_optional -> empty
Rule 38    a2ml_array_specifier_optional -> a2ml_array_specifier
Rule 39    a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE
Rule 40    a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier
Rule 41    a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
Rule 42    a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier
Rule 43    a2ml_taggedstruct_member_list_optional -> empty
Rule 44    a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list
Rule 45    a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member
Rule 46    a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list
Rule 47    a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON
Rule 48    a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
Rule 49    a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON
Rule 50    a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
Rule 51    a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional
Rule 52    a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
Rule 53    a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
Rule 54    a2ml_taggedunion_type_name -> taggedunion a2ml_identifier
Rule 55    a2ml_taggedunion_member_list -> a2ml_taggedunion_member
Rule 56    a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list
Rule 57    a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON
Rule 58    a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON
Rule 59    a2ml_tag -> STRING
Rule 60    a2ml_identifier -> IDENT
Rule 61    a2ml_identifier_optional -> empty
Rule 62    a2ml_identifier_optional -> a2ml_identifier
Rule 63    a2ml_keyword -> STRING
Rule 64    a2ml_constant -> NUMERIC
Rule 65    datatype -> UBYTE
Rule 66    datatype -> SBYTE
Rule 67    datatype -> UWORD
Rule 68    datatype -> SWORD
Rule 69    datatype -> ULONG
Rule 70    datatype -> SLONG
Rule 71    datatype -> A_UINT64
Rule 72    datatype -> A_INT64
Rule 73    datatype -> FLOAT32_IEEE
Rule 74    datatype -> FLOAT64_IEEE
Rule 75    datasize -> BYTE
Rule 76    datasize -> WORD
Rule 77    datasize -> LONG
Rule 78    addrtype -> PBYTE
Rule 79    addrtype -> PWORD
Rule 80    addrtype -> PLONG
Rule 81    addrtype -> DIRECT
Rule 82    indexorder -> INDEX_INCR
Rule 83    indexorder -> INDEX_DECR
Rule 84    version_list -> version
Rule 85    version_list -> version version_list
Rule 86    version -> version_asap2_a2ml number_list
Rule 87    version_asap2_a2ml -> ASAP2_VERSION
Rule 88    version_asap2_a2ml -> A2ML_VERSION
Rule 89    number_list -> NUMERIC
Rule 90    number_list -> NUMERIC number_list
Rule 91    ident_list -> IDENT
Rule 92    ident_list -> IDENT ident_list
Rule 93    string_list -> STRING
Rule 94    string_list -> STRING string_list
Rule 95    project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT
Rule 96    optional_header -> empty
Rule 97    optional_header -> header
Rule 98    header -> begin HEADER STRING header_version header_project_no end HEADER
Rule 99    header_version -> empty
Rule 100   header_version -> VERSION STRING
Rule 101   header_project_no -> empty
Rule 102   header_project_no -> PROJECT_NO IDENT
Rule 103   module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE
Rule 104   module_list -> module
Rule 105   module_list -> module module_list
Rule 106   a2ml -> begin A2ML a2ml_declaration_list end A2ML
Rule 107   optional_a2ml -> empty
Rule 108   optional_a2ml -> a2ml
Rule 109   module_parameter -> mod_par
Rule 110   module_parameter -> mod_common
Rule 111   module_parameter -> if_data
Rule 112   module_parameter -> characteristic
Rule 113   module_parameter -> axis_pts
Rule 114   module_parameter -> measurement
Rule 115   module_parameter -> compu_method
Rule 116   module_parameter -> compu_tab
Rule 117   module_parameter -> compu_vtab
Rule 118   module_parameter -> compu_vtab_range
Rule 119   module_parameter -> function
Rule 120   module_parameter -> group
Rule 121   module_parameter -> record_layout
Rule 122   module_parameter -> variant_coding
Rule 123   module_parameter -> frame
Rule 124   module_parameter -> user_rights
Rule 125   module_parameter -> unit
Rule 126   module_parameter_list -> module_parameter
Rule 127   module_parameter_list -> module_parameter module_parameter_list
Rule 128   optional_module_parameter_list -> empty
Rule 129   optional_module_parameter_list -> module_parameter_list
Rule 130   mod_par -> begin MOD_PAR end MOD_PAR
Rule 131   mod_common -> begin MOD_COMMON end MOD_COMMON
Rule 132   if_data -> begin IF_DATA IDENT end IF_DATA
Rule 133   characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
Rule 134   characteristic_type -> VALUE
Rule 135   characteristic_type -> CURVE
Rule 136   characteristic_type -> MAP
Rule 137   characteristic_type -> CUBOID
Rule 138   characteristic_type -> VAL_BLK
Rule 139   characteristic_type -> ASCII
Rule 140   display_identifier -> DISPLAY_IDENTIFIER IDENT
Rule 141   format -> FORMAT STRING
Rule 142   byte_order -> BYTE_ORDER byte_order_type
Rule 143   byte_order_type -> MSB_FIRST
Rule 144   byte_order_type -> MSB_LAST
Rule 145   bit_mask -> BIT_MASK NUMERIC
Rule 146   function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST
Rule 147   number -> NUMBER NUMERIC
Rule 148   extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC
Rule 149   map_list -> begin MAP_LIST ident_list end MAP_LIST
Rule 150   max_refresh -> MAX_REFRESH NUMERIC NUMERIC
Rule 151   dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
Rule 152   virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
Rule 153   ref_memory_segment -> REF_MEMORY_SEGMENT IDENT
Rule 154   annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION
Rule 155   annotation_optional -> annotation_label
Rule 156   annotation_optional -> annotation_origin
Rule 157   annotation_optional -> annotation_text
Rule 158   annotation_label -> ANNOTATION_LABEL STRING
Rule 159   annotation_origin -> ANNOTATION_ORIGIN STRING
Rule 160   annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT
Rule 161   annotation_optional_list -> annotation_optional
Rule 162   annotation_optional_list -> annotation_optional annotation_optional_list
Rule 163   annotation_optional_list_optional -> empty
Rule 164   annotation_optional_list_optional -> annotation_optional_list
Rule 165   comparison_quantity -> COMPARISON_QUANTITY IDENT
Rule 166   axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
Rule 167   axis_descr_attribute -> STD_AXIS
Rule 168   axis_descr_attribute -> FIX_AXIS
Rule 169   axis_descr_attribute -> COM_AXIS
Rule 170   axis_descr_attribute -> RES_AXIS
Rule 171   axis_descr_attribute -> CURVE_AXIS
Rule 172   calibration_access -> CALIBRATION_ACCESS calibration_access_type
Rule 173   calibration_access_type -> CALIBRATION
Rule 174   calibration_access_type -> NO_CALIBRATION
Rule 175   calibration_access_type -> NOT_IN_MCD_SYSTEM
Rule 176   calibration_access_type -> OFFLINE_CALIBRATION
Rule 177   matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC
Rule 178   ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC
Rule 179   characteristic_optional -> display_identifier
Rule 180   characteristic_optional -> format
Rule 181   characteristic_optional -> byte_order
Rule 182   characteristic_optional -> bit_mask
Rule 183   characteristic_optional -> function_list
Rule 184   characteristic_optional -> number
Rule 185   characteristic_optional -> extended_limits
Rule 186   characteristic_optional -> READ_ONLY
Rule 187   characteristic_optional -> GUARD_RAILS
Rule 188   characteristic_optional -> map_list
Rule 189   characteristic_optional -> max_refresh
Rule 190   characteristic_optional -> dependent_characteristic
Rule 191   characteristic_optional -> virtual_characteristic
Rule 192   characteristic_optional -> ref_memory_segment
Rule 193   characteristic_optional -> annotation
Rule 194   characteristic_optional -> comparison_quantity
Rule 195   characteristic_optional -> if_data
Rule 196   characteristic_optional -> axis_descr
Rule 197   characteristic_optional -> calibration_access
Rule 198   characteristic_optional -> matrix_dim
Rule 199   characteristic_optional -> ecu_address_extension
Rule 200   characteristic_optional_list -> characteristic_optional
Rule 201   characteristic_optional_list -> characteristic_optional characteristic_optional_list
Rule 202   characteristic_optional_list_optional -> empty
Rule 203   characteristic_optional_list_optional -> characteristic_optional_list
Rule 204   axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
Rule 205   axis_pts_optional -> display_identifier
Rule 206   axis_pts_optional -> READ_ONLY
Rule 207   axis_pts_optional -> format
Rule 208   axis_pts_optional -> deposit
Rule 209   axis_pts_optional -> byte_order
Rule 210   axis_pts_optional -> function_list
Rule 211   axis_pts_optional -> ref_memory_segment
Rule 212   axis_pts_optional -> GUARD_RAILS
Rule 213   axis_pts_optional -> extended_limits
Rule 214   axis_pts_optional -> annotation
Rule 215   axis_pts_optional -> if_data
Rule 216   axis_pts_optional -> calibration_access
Rule 217   axis_pts_optional -> ecu_address_extension
Rule 218   axis_pts_optional_list -> axis_pts_optional
Rule 219   axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list
Rule 220   axis_pts_optional_list_optional -> empty
Rule 221   axis_pts_optional_list_optional -> axis_pts_optional_list
Rule 222   deposit -> DEPOSIT deposit_mode
Rule 223   deposit_mode -> ABSOLUTE
Rule 224   deposit_mode -> DIFFERENCE
Rule 225   measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
Rule 226   measurement_optional -> display_identifier
Rule 227   measurement_optional -> READ_WRITE
Rule 228   measurement_optional -> format
Rule 229   measurement_optional -> array_size
Rule 230   measurement_optional -> bit_mask
Rule 231   measurement_optional -> bit_operation
Rule 232   measurement_optional -> byte_order
Rule 233   measurement_optional -> max_refresh
Rule 234   measurement_optional -> virtual
Rule 235   measurement_optional -> function_list
Rule 236   measurement_optional -> ecu_address
Rule 237   measurement_optional -> error_mask
Rule 238   measurement_optional -> ref_memory_segment
Rule 239   measurement_optional -> annotation
Rule 240   measurement_optional -> if_data
Rule 241   measurement_optional -> matrix_dim
Rule 242   measurement_optional -> ecu_address_extension
Rule 243   measurement_optional_list -> measurement_optional
Rule 244   measurement_optional_list -> measurement_optional measurement_optional_list
Rule 245   measurement_optional_list_optional -> empty
Rule 246   measurement_optional_list_optional -> measurement_optional_list
Rule 247   array_size -> ARRAY_SIZE NUMERIC
Rule 248   bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
Rule 249   bit_operation_optional -> left_shift
Rule 250   bit_operation_optional -> right_shift
Rule 251   bit_operation_optional -> SIGN_EXTEND
Rule 252   left_shift -> LEFT_SHIFT NUMERIC
Rule 253   right_shift -> RIGHT_SHIFT NUMERIC
Rule 254   bit_operation_optional_list -> bit_operation_optional
Rule 255   bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list
Rule 256   bit_operation_optional_list_optional -> empty
Rule 257   bit_operation_optional_list_optional -> bit_operation_optional_list
Rule 258   compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
Rule 259   compu_method_conversion_type -> TAB_INTP
Rule 260   compu_method_conversion_type -> TAB_NOINTP
Rule 261   compu_method_conversion_type -> TAB_VERB
Rule 262   compu_method_conversion_type -> RAT_FUNC
Rule 263   compu_method_conversion_type -> FORM
Rule 264   compu_method_conversion_type -> IDENTICAL
Rule 265   compu_method_optional -> formula
Rule 266   compu_method_optional -> coeffs
Rule 267   compu_method_optional -> compu_tab_ref
Rule 268   compu_method_optional -> ref_unit
Rule 269   formula -> begin FORMULA STRING formula_optional end FORMULA
Rule 270   formula_optional -> empty
Rule 271   formula_optional -> formula_inv
Rule 272   formula_inv -> STRING
Rule 273   coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 274   compu_tab_ref -> COMPU_TAB_REF IDENT
Rule 275   ref_unit -> REF_UNIT IDENT
Rule 276   compu_method_optional_list -> compu_method_optional
Rule 277   compu_method_optional_list -> compu_method_optional compu_method_optional_list
Rule 278   compu_method_optional_list_optional -> empty
Rule 279   compu_method_optional_list_optional -> compu_method_optional_list
Rule 280   virtual -> begin VIRTUAL ident_list end VIRTUAL
Rule 281   ecu_address -> ECU_ADDRESS NUMERIC
Rule 282   error_mask -> ERROR_MASK NUMERIC
Rule 283   compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
Rule 284   compu_tab_conversion_type -> TAB_INTP
Rule 285   compu_tab_conversion_type -> TAB_NOINTP
Rule 286   compu_tab_optional -> empty
Rule 287   compu_tab_optional -> default_value
Rule 288   default_value -> DEFAULT_VALUE STRING
Rule 289   compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
Rule 290   compu_vtab_conversion_type -> TAB_VERB
Rule 291   number_string_value_list -> number_string_value
Rule 292   number_string_value_list -> number_string_value number_string_value_list
Rule 293   number_string_value -> NUMERIC STRING
Rule 294   compu_vtab_optional -> empty
Rule 295   compu_vtab_optional -> default_value
Rule 296   compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
Rule 297   number_number_string_value_list -> number_number_string_value
Rule 298   number_number_string_value_list -> number_number_string_value number_number_string_value_list
Rule 299   number_number_string_value -> NUMERIC NUMERIC STRING
Rule 300   compu_vtab_range_optional -> empty
Rule 301   compu_vtab_range_optional -> default_value
Rule 302   function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
Rule 303   function_optional -> annotation
Rule 304   function_optional -> def_characteristic
Rule 305   function_optional -> ref_characteristic
Rule 306   function_optional -> in_measurement
Rule 307   function_optional -> out_measurement
Rule 308   function_optional -> loc_measurement
Rule 309   function_optional -> sub_function
Rule 310   function_optional -> function_version
Rule 311   function_optional_list -> function_optional
Rule 312   function_optional_list -> function_optional function_optional_list
Rule 313   function_optional_list_optional -> empty
Rule 314   function_optional_list_optional -> function_optional_list
Rule 315   def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
Rule 316   ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
Rule 317   in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
Rule 318   out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
Rule 319   loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
Rule 320   sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION
Rule 321   function_version -> FUNCTION_VERSION STRING
Rule 322   group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP
Rule 323   group_optional -> annotation
Rule 324   group_optional -> ROOT
Rule 325   group_optional -> ref_characteristic
Rule 326   group_optional -> ref_measurement
Rule 327   group_optional -> function_list
Rule 328   group_optional -> sub_group
Rule 329   group_optional_list -> group_optional
Rule 330   group_optional_list -> group_optional group_optional_list
Rule 331   group_optional_list_optional -> empty
Rule 332   group_optional_list_optional -> group_optional_list
Rule 333   ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
Rule 334   sub_group -> begin SUB_GROUP ident_list end SUB_GROUP
Rule 335   record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
Rule 336   record_layout_optional -> fnc_values
Rule 337   record_layout_optional -> identification
Rule 338   record_layout_optional -> axis_pts_x
Rule 339   record_layout_optional -> axis_pts_y
Rule 340   record_layout_optional -> axis_pts_z
Rule 341   record_layout_optional -> axis_rescale_x
Rule 342   record_layout_optional -> axis_rescale_y
Rule 343   record_layout_optional -> axis_rescale_z
Rule 344   record_layout_optional -> no_axis_pts_x
Rule 345   record_layout_optional -> no_axis_pts_y
Rule 346   record_layout_optional -> no_axis_pts_z
Rule 347   record_layout_optional -> no_rescale_x
Rule 348   record_layout_optional -> no_rescale_y
Rule 349   record_layout_optional -> no_rescale_z
Rule 350   record_layout_optional -> fix_no_axis_pts_x
Rule 351   record_layout_optional -> fix_no_axis_pts_y
Rule 352   record_layout_optional -> fix_no_axis_pts_z
Rule 353   record_layout_optional -> src_addr_x
Rule 354   record_layout_optional -> src_addr_y
Rule 355   record_layout_optional -> src_addr_z
Rule 356   record_layout_optional -> rip_addr_x
Rule 357   record_layout_optional -> rip_addr_y
Rule 358   record_layout_optional -> rip_addr_z
Rule 359   record_layout_optional -> rip_addr_w
Rule 360   record_layout_optional -> shift_op_x
Rule 361   record_layout_optional -> shift_op_y
Rule 362   record_layout_optional -> shift_op_z
Rule 363   record_layout_optional -> offset_x
Rule 364   record_layout_optional -> offset_y
Rule 365   record_layout_optional -> offset_z
Rule 366   record_layout_optional -> dist_op_x
Rule 367   record_layout_optional -> dist_op_y
Rule 368   record_layout_optional -> dist_op_z
Rule 369   record_layout_optional -> alignment_byte
Rule 370   record_layout_optional -> alignment_word
Rule 371   record_layout_optional -> alignment_long
Rule 372   record_layout_optional -> alignment_float32_ieee
Rule 373   record_layout_optional -> alignment_float64_ieee
Rule 374   record_layout_optional -> reserved
Rule 375   record_layout_optional_list -> record_layout_optional
Rule 376   record_layout_optional_list -> record_layout_optional record_layout_optional_list
Rule 377   record_layout_optional_list_optional -> empty
Rule 378   record_layout_optional_list_optional -> record_layout_optional_list
Rule 379   fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
Rule 380   fnc_values_index_mode -> COLUMN_DIR
Rule 381   fnc_values_index_mode -> ROW_DIR
Rule 382   fnc_values_index_mode -> ALTERNATE_WITH_X
Rule 383   fnc_values_index_mode -> ALTERNATE_WITH_Y
Rule 384   fnc_values_index_mode -> ALTERNATE_CURVES
Rule 385   identification -> IDENTIFICATION NUMERIC datatype
Rule 386   axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype
Rule 387   axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype
Rule 388   axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype
Rule 389   axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
Rule 390   axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
Rule 391   axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
Rule 392   no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype
Rule 393   no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype
Rule 394   no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype
Rule 395   no_rescale_x -> NO_RESCALE_X NUMERIC datatype
Rule 396   no_rescale_y -> NO_RESCALE_Y NUMERIC datatype
Rule 397   no_rescale_z -> NO_RESCALE_Z NUMERIC datatype
Rule 398   fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC
Rule 399   fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC
Rule 400   fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC
Rule 401   src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional
Rule 402   src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional
Rule 403   src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional
Rule 404   src_addr_optional -> empty
Rule 405   src_addr_optional -> datatype
Rule 406   rip_addr_x -> RIP_ADDR_X NUMERIC datatype
Rule 407   rip_addr_y -> RIP_ADDR_Y NUMERIC datatype
Rule 408   rip_addr_z -> RIP_ADDR_Z NUMERIC datatype
Rule 409   rip_addr_w -> RIP_ADDR_W NUMERIC datatype
Rule 410   shift_op_x -> SHIFT_OP_X NUMERIC datatype
Rule 411   shift_op_y -> SHIFT_OP_Y NUMERIC datatype
Rule 412   shift_op_z -> SHIFT_OP_Z NUMERIC datatype
Rule 413   offset_x -> OFFSET_X NUMERIC datatype
Rule 414   offset_y -> OFFSET_Y NUMERIC datatype
Rule 415   offset_z -> OFFSET_Z NUMERIC datatype
Rule 416   dist_op_x -> DIST_OP_X NUMERIC datatype
Rule 417   dist_op_y -> DIST_OP_Y NUMERIC datatype
Rule 418   dist_op_z -> DIST_OP_Z NUMERIC datatype
Rule 419   alignment_byte -> ALIGNMENT_BYTE NUMERIC
Rule 420   alignment_word -> ALIGNMENT_WORD NUMERIC
Rule 421   alignment_long -> ALIGNMENT_LONG NUMERIC
Rule 422   alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC
Rule 423   alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC
Rule 424   variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
Rule 425   variant_coding_optional -> var_separator
Rule 426   variant_coding_optional -> var_naming
Rule 427   variant_coding_optional -> var_criterion
Rule 428   variant_coding_optional -> var_forbidden_comb
Rule 429   variant_coding_optional -> var_characteristic
Rule 430   var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC
Rule 431   var_characteristic_optional -> var_address
Rule 432   var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS
Rule 433   var_separator -> VAR_SEPARATOR STRING
Rule 434   var_naming -> VAR_NAMING IDENT
Rule 435   var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
Rule 436   ident_ident_value_list -> ident_ident_value
Rule 437   ident_ident_value_list -> ident_ident_value ident_ident_value_list
Rule 438   ident_ident_value -> IDENT IDENT
Rule 439   var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
Rule 440   var_criterion_optional -> var_measurement
Rule 441   var_criterion_optional -> var_selection_characteristic
Rule 442   var_criterion_optional_list -> var_criterion_optional
Rule 443   var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list
Rule 444   var_criterion_optional_list_optional -> empty
Rule 445   var_criterion_optional_list_optional -> var_criterion_optional_list
Rule 446   var_measurement -> VAR_MEASUREMENT IDENT
Rule 447   var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT
Rule 448   variant_coding_optional_list -> variant_coding_optional
Rule 449   variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list
Rule 450   variant_coding_optional_list_optional -> empty
Rule 451   variant_coding_optional_list_optional -> variant_coding_optional_list
Rule 452   reserved -> RESERVED NUMERIC datasize
Rule 453   frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
Rule 454   frame_optional -> frame_measurement
Rule 455   frame_optional -> if_data
Rule 456   frame_optional_list -> frame_optional
Rule 457   frame_optional_list -> frame_optional frame_optional_list
Rule 458   frame_optional_list_optional -> empty
Rule 459   frame_optional_list_optional -> frame_optional_list
Rule 460   frame_measurement -> FRAME_MEASUREMENT ident_list
Rule 461   user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
Rule 462   user_rights_optional -> ref_group
Rule 463   user_rights_optional -> READ_ONLY
Rule 464   user_rights_optional_list -> user_rights_optional
Rule 465   user_rights_optional_list -> user_rights_optional user_rights_optional_list
Rule 466   user_rights_optional_list_optional -> empty
Rule 467   user_rights_optional_list_optional -> user_rights_optional_list
Rule 468   ref_group -> begin REF_GROUP ident_list end REF_GROUP
Rule 469   unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT
Rule 470   unit_type -> EXTENDED_SI
Rule 471   unit_type -> DERIVED
Rule 472   unit_optional -> si_exponents
Rule 473   unit_optional -> ref_unit
Rule 474   unit_optional -> unit_conversion
Rule 475   unit_optional_list -> unit_optional
Rule 476   unit_optional_list -> unit_optional unit_optional_list
Rule 477   unit_optional_list_optional -> empty
Rule 478   unit_optional_list_optional -> unit_optional_list
Rule 479   si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 480   unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC
Rule 481   empty -> <empty>

Terminals, with rules where they appear

A2ML                 : 106 106
A2ML_VERSION         : 88
ABSOLUTE             : 223
ADDR_EPK             : 
ALIGNMENT_BYTE       : 419
ALIGNMENT_FLOAT32_IEEE : 422
ALIGNMENT_FLOAT64_IEEE : 423
ALIGNMENT_INT64      : 
ALIGNMENT_LONG       : 421
ALIGNMENT_WORD       : 420
ALTERNATE_CURVES     : 384
ALTERNATE_WITH_X     : 382
ALTERNATE_WITH_Y     : 383
ANNOTATION           : 154 154
ANNOTATION_LABEL     : 158
ANNOTATION_ORIGIN    : 159
ANNOTATION_TEXT      : 160 160
ARRAY_SIZE           : 247
ASAP2_VERSION        : 87
ASCII                : 139
ASTERISK             : 48 50 52
AXIS_DESCR           : 166 166
AXIS_PTS             : 204 204
AXIS_PTS_4           : 
AXIS_PTS_5           : 
AXIS_PTS_REF         : 
AXIS_PTS_X           : 386
AXIS_PTS_Y           : 387
AXIS_PTS_Z           : 388
AXIS_RESCALE_X       : 389
AXIS_RESCALE_Y       : 390
AXIS_RESCALE_Z       : 391
A_INT64              : 72
A_UINT64             : 71
BIT_MASK             : 145
BIT_OPERATION        : 248 248
BLOB                 : 
BRACE_CLOSE          : 39 40
BRACE_OPEN           : 39 40
BYTE                 : 75
BYTE_ORDER           : 142
CALIBRATION          : 173
CALIBRATION_ACCESS   : 172
CALIBRATION_HANDLE   : 
CALIBRATION_HANDLE_TEXT : 
CALIBRATION_METHOD   : 
CHARACTERISTIC       : 133 133
COEFFS               : 273
COEFFS_LINEAR        : 
COLUMN_DIR           : 380
COMMA                : 24
COMPARISON_QUANTITY  : 165
COMPU_METHOD         : 258 258
COMPU_TAB            : 283 283
COMPU_TAB_REF        : 274
COMPU_VTAB           : 289 289
COMPU_VTAB_RANGE     : 296 296
COM_AXIS             : 169
CPP_COMMENT          : 
CPU_TYPE             : 
CUBOID               : 137
CURLY_CLOSE          : 21 27 41 53
CURLY_OPEN           : 21 27 41 53
CURVE                : 135
CURVE_AXIS           : 171
CURVE_AXIS_REF       : 
CUSTOMER             : 
CUSTOMER_NO          : 
C_COMMENT            : 
DATA_SIZE            : 
DEFAULT_VALUE        : 288
DEFAULT_VALUE_NUMERIC : 
DEF_CHARACTERISTIC   : 315 315
DEPENDENT_CHARACTERISTIC : 151 151
DEPOSIT              : 222
DERIVED              : 471
DIFFERENCE           : 224
DIRECT               : 81
DISCRETE             : 
DISPLAY_IDENTIFIER   : 140
DIST_OP_4            : 
DIST_OP_5            : 
DIST_OP_X            : 416
DIST_OP_Y            : 417
DIST_OP_Z            : 418
ECU                  : 
ECU_ADDRESS          : 281
ECU_ADDRESS_EXTENSION : 178
ECU_CALIBRATION_OFFSET : 
EPK                  : 
EQUAL                : 25
ERROR_MASK           : 282
EXTENDED_LIMITS      : 148
EXTENDED_SI          : 470
FIX_AXIS             : 168
FIX_AXIS_PAR         : 
FIX_AXIS_PAR_DIST    : 
FIX_AXIS_PAR_LIST    : 
FIX_NO_AXIS_PTS_4    : 
FIX_NO_AXIS_PTS_5    : 
FIX_NO_AXIS_PTS_X    : 398
FIX_NO_AXIS_PTS_Y    : 399
FIX_NO_AXIS_PTS_Z    : 400
FLOAT32_IEEE         : 73
FLOAT64_IEEE         : 74
FNC_VALUES           : 379
FORM                 : 263
FORMAT               : 141
FORMULA              : 269 269
FORMULA_INV          : 
FRAME                : 453 453
FRAME_MEASUREMENT    : 460
FUNCTION             : 302 302
FUNCTION_LIST        : 146 146
FUNCTION_VERSION     : 321
GROUP                : 322 322
GUARD_RAILS          : 187 212
HEADER               : 98 98
IDENT                : 60 91 92 95 102 103 132 133 133 133 140 153 165 166 166 204 204 204 204 225 225 258 274 275 283 289 296 302 322 335 430 434 438 438 439 446 447 453 461 469
IDENTICAL            : 264
IDENTIFICATION       : 385
IF_DATA              : 132 132
INDEX_DECR           : 83
INDEX_INCR           : 82
INSTANCE             : 
IN_MEASUREMENT       : 317 317
LAYOUT               : 
LEFT_SHIFT           : 252
LOC_MEASUREMENT      : 319 319
LONG                 : 77
MAP                  : 136
MAP_LIST             : 149 149
MATRIX_DIM           : 177
MAX_GRAD             : 
MAX_REFRESH          : 150
MEASUREMENT          : 225 225
MEMORY_LAYOUT        : 
MEMORY_SEGMENT       : 
MODULE               : 103 103
MOD_COMMON           : 131 131
MOD_PAR              : 130 130
MONOTONY             : 
MSB_FIRST            : 143
MSB_LAST             : 144
NOT_IN_MCD_SYSTEM    : 175
NO_AXIS_PTS_4        : 
NO_AXIS_PTS_5        : 
NO_AXIS_PTS_X        : 392
NO_AXIS_PTS_Y        : 393
NO_AXIS_PTS_Z        : 394
NO_CALIBRATION       : 174
NO_OF_INTERFACES     : 
NO_RESCALE_X         : 395
NO_RESCALE_Y         : 396
NO_RESCALE_Z         : 397
NUMBER               : 147
NUMERIC              : 64 89 90 133 133 133 133 145 147 148 148 150 150 166 166 166 177 177 177 178 204 204 204 204 204 225 225 225 225 247 252 253 273 273 273 273 273 273 281 282 283 289 293 296 299 299 379 385 386 387 388 389 389 390 390 391 391 392 393 394 395 396 397 398 399 400 401 402 403 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 452 453 453 479 479 479 479 479 479 479 480 480
OFFLINE_CALIBRATION  : 176
OFFSET_4             : 
OFFSET_5             : 
OFFSET_X             : 413
OFFSET_Y             : 414
OFFSET_Z             : 415
OUT_MEASUREMENT      : 318 318
PARENTHESE_CLOSE     : 48 50 52
PARENTHESE_OPEN      : 48 50 52
PBYTE                : 78
PHONE_NO             : 
PHYS_UNIT            : 
PLONG                : 80
PROJECT              : 95 95
PROJECT_NO           : 102
PWORD                : 79
RAT_FUNC             : 262
READ_ONLY            : 186 206 463
READ_WRITE           : 227
RECORD_LAYOUT        : 335 335
REF_CHARACTERISTIC   : 316 316
REF_GROUP            : 468 468
REF_MEASUREMENT      : 333 333
REF_MEMORY_SEGMENT   : 153
REF_UNIT             : 275
RESERVED             : 452
RES_AXIS             : 170
RIGHT_SHIFT          : 253
RIP_ADDR_4           : 
RIP_ADDR_5           : 
RIP_ADDR_W           : 409
RIP_ADDR_X           : 406
RIP_ADDR_Y           : 407
RIP_ADDR_Z           : 408
ROOT                 : 324
ROW_DIR              : 381
SBYTE                : 66
SEMICOLON            : 2 3 33 47 48 49 50 52 57 58
SHIFT_OP_4           : 
SHIFT_OP_5           : 
SHIFT_OP_X           : 410
SHIFT_OP_Y           : 411
SHIFT_OP_Z           : 412
SIGN_EXTEND          : 251
SI_EXPONENTS         : 479
SLONG                : 70
SRC_ADDR_4           : 
SRC_ADDR_5           : 
SRC_ADDR_X           : 401
SRC_ADDR_Y           : 402
SRC_ADDR_Z           : 403
STATIC_RECORD_LAYOUT : 
STATUS_STRING_REF    : 
STD_AXIS             : 167
STEP_SIZE            : 
STRING               : 59 63 93 94 95 98 100 103 133 141 151 152 158 159 204 225 258 258 258 269 272 283 288 289 293 296 299 302 321 322 433 439 453 469 469
SUB_FUNCTION         : 320 320
SUB_GROUP            : 334 334
SUPPLIER             : 
SWORD                : 68
SYMBOL_LINK          : 
SYSTEM_CONSTANT      : 
TAB_INTP             : 259 284
TAB_NOINTP           : 260 285
TAB_VERB             : 261 290
TRANSFORMER          : 
TYPEDEF_AXIS         : 
TYPEDEF_BLOB         : 
TYPEDEF_CHARACTERISTIC : 
TYPEDEF_MEASUREMENT  : 
TYPEDEF_STRUCTURE    : 
UBYTE                : 65
ULONG                : 69
UNIT                 : 469 469
UNIT_CONVERSION      : 480
USER                 : 
USER_RIGHTS          : 461 461
UWORD                : 67
VALUE                : 134
VAL_BLK              : 138
VARIANT_CODING       : 424 424
VAR_ADDRESS          : 432 432
VAR_CHARACTERISTIC   : 430 430
VAR_CRITERION        : 439 439
VAR_FORBIDDEN_COMB   : 435 435
VAR_MEASUREMENT      : 446
VAR_NAMING           : 434
VAR_SELECTION_CHARACTERISTIC : 447
VAR_SEPARATOR        : 433
VAR_SEPERATOR        : 
VERSION              : 100
VIRTUAL              : 280 280
VIRTUAL_CHARACTERISTIC : 152 152
WORD                 : 76
begin                : 95 98 103 106 130 131 132 133 146 149 151 152 154 160 166 204 225 248 258 269 280 283 289 296 302 315 316 317 318 319 320 322 333 334 335 424 430 432 435 439 453 461 468 469
block                : 20
char                 : 12
double               : 18
end                  : 95 98 103 106 130 131 132 133 146 149 151 152 154 160 166 204 225 248 258 269 280 283 289 296 302 315 316 317 318 319 320 322 333 334 335 424 430 432 435 439 453 461 468 469
enum                 : 21 22
error                : 
float                : 19
int                  : 13
long                 : 14
struct               : 27 28
taggedstruct         : 41 42
taggedunion          : 53 54
uchar                : 15
uint                 : 16
ulong                : 17

Nonterminals, with rules where they appear

a2l                  : 0
a2ml                 : 108
a2ml_array_specifier : 38 40
a2ml_array_specifier_optional : 34
a2ml_block_definition : 3 49 50 58
a2ml_constant        : 25 39 40
a2ml_declaration     : 4 5
a2ml_declaration_list : 5 106
a2ml_enum_type_name  : 9
a2ml_enumerator      : 23 24
a2ml_enumerator_list : 21 24
a2ml_identifier      : 22 28 42 54 62
a2ml_identifier_optional : 21 27 41 53
a2ml_keyword         : 25 26
a2ml_member          : 33 36 52 57
a2ml_member_optional : 51
a2ml_predefined_type_name : 7
a2ml_struct_member   : 31 32
a2ml_struct_member_list : 30 32
a2ml_struct_member_list_optional : 27
a2ml_struct_type_name : 8
a2ml_tag             : 20 51 52 57
a2ml_taggedstruct_definition : 47 48
a2ml_taggedstruct_member : 45 46
a2ml_taggedstruct_member_list : 44 46
a2ml_taggedstruct_member_list_optional : 41
a2ml_taggedstruct_type_name : 10
a2ml_taggedunion_member : 55 56
a2ml_taggedunion_member_list : 53 56
a2ml_taggedunion_type_name : 11
a2ml_type_definition : 2
a2ml_type_name       : 6 20 34
addrtype             : 379 386 387 388 389 390 391
alignment_byte       : 369
alignment_float32_ieee : 372
alignment_float64_ieee : 373
alignment_long       : 371
alignment_word       : 370
annotation           : 193 214 239 303 323
annotation_label     : 155
annotation_optional  : 161 162
annotation_optional_list : 162 164
annotation_optional_list_optional : 154
annotation_origin    : 156
annotation_text      : 157
array_size           : 229
axis_descr           : 196
axis_descr_attribute : 166
axis_pts             : 113
axis_pts_optional    : 218 219
axis_pts_optional_list : 219 221
axis_pts_optional_list_optional : 204
axis_pts_x           : 338
axis_pts_y           : 339
axis_pts_z           : 340
axis_rescale_x       : 341
axis_rescale_y       : 342
axis_rescale_z       : 343
bit_mask             : 182 230
bit_operation        : 231
bit_operation_optional : 254 255
bit_operation_optional_list : 255 257
bit_operation_optional_list_optional : 248
byte_order           : 181 209 232
byte_order_type      : 142
calibration_access   : 197 216
calibration_access_type : 172
characteristic       : 112
characteristic_optional : 200 201
characteristic_optional_list : 201 203
characteristic_optional_list_optional : 133
characteristic_type  : 133
coeffs               : 266
comparison_quantity  : 194
compu_method         : 115
compu_method_conversion_type : 258
compu_method_optional : 276 277
compu_method_optional_list : 277 279
compu_method_optional_list_optional : 258
compu_tab            : 116
compu_tab_conversion_type : 283
compu_tab_optional   : 283
compu_tab_ref        : 267
compu_vtab           : 117
compu_vtab_conversion_type : 289
compu_vtab_optional  : 289
compu_vtab_range     : 118
compu_vtab_range_optional : 296
datasize             : 452
datatype             : 225 379 385 386 387 388 389 390 391 392 393 394 395 396 397 405 406 407 408 409 410 411 412 413 414 415 416 417 418
def_characteristic   : 304
default_value        : 287 295 301
dependent_characteristic : 190
deposit              : 208
deposit_mode         : 222
display_identifier   : 179 205 226
dist_op_x            : 366
dist_op_y            : 367
dist_op_z            : 368
ecu_address          : 236
ecu_address_extension : 199 217 242
empty                : 29 35 37 43 61 96 99 101 107 128 163 202 220 245 256 270 278 286 294 300 313 331 377 404 444 450 458 466 477
error_mask           : 237
extended_limits      : 185 213
fix_no_axis_pts_x    : 350
fix_no_axis_pts_y    : 351
fix_no_axis_pts_z    : 352
fnc_values           : 336
fnc_values_index_mode : 379
format               : 180 207 228
formula              : 265
formula_inv          : 271
formula_optional     : 269
frame                : 123
frame_measurement    : 454
frame_optional       : 456 457
frame_optional_list  : 457 459
frame_optional_list_optional : 453
function             : 119
function_list        : 183 210 235 327
function_optional    : 311 312
function_optional_list : 312 314
function_optional_list_optional : 302
function_version     : 310
group                : 120
group_optional       : 329 330
group_optional_list  : 330 332
group_optional_list_optional : 322
header               : 97
header_project_no    : 98
header_version       : 98
ident_ident_value    : 436 437
ident_ident_value_list : 435 437
ident_list           : 92 146 149 151 152 280 315 316 317 318 319 320 333 334 430 439 460 468
identification       : 337
if_data              : 111 195 215 240 455
in_measurement       : 306
indexorder           : 386 387 388 389 390 391
left_shift           : 249
loc_measurement      : 308
map_list             : 188
matrix_dim           : 198 241
max_refresh          : 189 233
measurement          : 114
measurement_optional : 243 244
measurement_optional_list : 244 246
measurement_optional_list_optional : 225
mod_common           : 110
mod_par              : 109
module               : 104 105
module_list          : 95 105
module_parameter     : 126 127
module_parameter_list : 127 129
no_axis_pts_x        : 344
no_axis_pts_y        : 345
no_axis_pts_z        : 346
no_rescale_x         : 347
no_rescale_y         : 348
no_rescale_z         : 349
number               : 184
number_list          : 86 90 283 432
number_number_string_value : 297 298
number_number_string_value_list : 296 298
number_string_value  : 291 292
number_string_value_list : 289 292
offset_x             : 363
offset_y             : 364
offset_z             : 365
optional_a2ml        : 103
optional_header      : 95
optional_module_parameter_list : 103
out_measurement      : 307
project              : 1
record_layout        : 121
record_layout_optional : 375 376
record_layout_optional_list : 376 378
record_layout_optional_list_optional : 335
ref_characteristic   : 305 325
ref_group            : 462
ref_measurement      : 326
ref_memory_segment   : 192 211 238
ref_unit             : 268 473
reserved             : 374
right_shift          : 250
rip_addr_w           : 359
rip_addr_x           : 356
rip_addr_y           : 357
rip_addr_z           : 358
shift_op_x           : 360
shift_op_y           : 361
shift_op_z           : 362
si_exponents         : 472
src_addr_optional    : 401 402 403
src_addr_x           : 353
src_addr_y           : 354
src_addr_z           : 355
string_list          : 94 160
sub_function         : 309
sub_group            : 328
unit                 : 125
unit_conversion      : 474
unit_optional        : 475 476
unit_optional_list   : 476 478
unit_optional_list_optional : 469
unit_type            : 469
user_rights          : 124
user_rights_optional : 464 465
user_rights_optional_list : 465 467
user_rights_optional_list_optional : 461
var_address          : 431
var_characteristic   : 429
var_characteristic_optional : 430
var_criterion        : 427
var_criterion_optional : 442 443
var_criterion_optional_list : 443 445
var_criterion_optional_list_optional : 439
var_forbidden_comb   : 428
var_measurement      : 440
var_naming           : 426
var_selection_characteristic : 441
var_separator        : 425
variant_coding       : 122
variant_coding_optional : 448 449
variant_coding_optional_list : 449 451
variant_coding_optional_list_optional : 424
version              : 84 85
version_asap2_a2ml   : 86
version_list         : 1 85
virtual              : 234
virtual_characteristic : 191

Parsing method: LALR

state 0

    (0) S' -> . a2l
    (1) a2l -> . version_list project
    (84) version_list -> . version
    (85) version_list -> . version version_list
    (86) version -> . version_asap2_a2ml number_list
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_asap2_a2ml             shift and go to state 1
    version                        shift and go to state 3
    version_list                   shift and go to state 4
    a2l                            shift and go to state 5

state 1

    (86) version -> version_asap2_a2ml . number_list
    (89) number_list -> . NUMERIC
    (90) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 7

state 2

    (87) version_asap2_a2ml -> ASAP2_VERSION .

    NUMERIC         reduce using rule 87 (version_asap2_a2ml -> ASAP2_VERSION .)


state 3

    (84) version_list -> version .
    (85) version_list -> version . version_list
    (84) version_list -> . version
    (85) version_list -> . version version_list
    (86) version -> . version_asap2_a2ml number_list
    (87) version_asap2_a2ml -> . ASAP2_VERSION
    (88) version_asap2_a2ml -> . A2ML_VERSION

    begin           reduce using rule 84 (version_list -> version .)
    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_list                   shift and go to state 9
    version                        shift and go to state 3
    version_asap2_a2ml             shift and go to state 1

state 4

    (1) a2l -> version_list . project
    (95) project -> . begin PROJECT IDENT STRING optional_header module_list end PROJECT

    begin           shift and go to state 10

    project                        shift and go to state 11

state 5

    (0) S' -> a2l .



state 6

    (88) version_asap2_a2ml -> A2ML_VERSION .

    NUMERIC         reduce using rule 88 (version_asap2_a2ml -> A2ML_VERSION .)


state 7

    (86) version -> version_asap2_a2ml number_list .

    ASAP2_VERSION   reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    A2ML_VERSION    reduce using rule 86 (version -> version_asap2_a2ml number_list .)
    begin           reduce using rule 86 (version -> version_asap2_a2ml number_list .)


state 8

    (89) number_list -> NUMERIC .
    (90) number_list -> NUMERIC . number_list
    (89) number_list -> . NUMERIC
    (90) number_list -> . NUMERIC number_list

    end             reduce using rule 89 (number_list -> NUMERIC .)
    ASAP2_VERSION   reduce using rule 89 (number_list -> NUMERIC .)
    A2ML_VERSION    reduce using rule 89 (number_list -> NUMERIC .)
    begin           reduce using rule 89 (number_list -> NUMERIC .)
    DEFAULT_VALUE   reduce using rule 89 (number_list -> NUMERIC .)
    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 12

state 9

    (85) version_list -> version version_list .

    begin           reduce using rule 85 (version_list -> version version_list .)


state 10

    (95) project -> begin . PROJECT IDENT STRING optional_header module_list end PROJECT

    PROJECT         shift and go to state 13


state 11

    (1) a2l -> version_list project .

    $end            reduce using rule 1 (a2l -> version_list project .)


state 12

    (90) number_list -> NUMERIC number_list .

    end             reduce using rule 90 (number_list -> NUMERIC number_list .)
    ASAP2_VERSION   reduce using rule 90 (number_list -> NUMERIC number_list .)
    A2ML_VERSION    reduce using rule 90 (number_list -> NUMERIC number_list .)
    begin           reduce using rule 90 (number_list -> NUMERIC number_list .)
    DEFAULT_VALUE   reduce using rule 90 (number_list -> NUMERIC number_list .)


state 13

    (95) project -> begin PROJECT . IDENT STRING optional_header module_list end PROJECT

    IDENT           shift and go to state 14


state 14

    (95) project -> begin PROJECT IDENT . STRING optional_header module_list end PROJECT

    STRING          shift and go to state 15


state 15

    (95) project -> begin PROJECT IDENT STRING . optional_header module_list end PROJECT
    (96) optional_header -> . empty
    (97) optional_header -> . header
    (481) empty -> .
    (98) header -> . begin HEADER STRING header_version header_project_no end HEADER

  ! shift/reduce conflict for begin resolved as shift
    begin           shift and go to state 16

  ! begin           [ reduce using rule 481 (empty -> .) ]

    optional_header                shift and go to state 17
    header                         shift and go to state 18
    empty                          shift and go to state 19

state 16

    (98) header -> begin . HEADER STRING header_version header_project_no end HEADER

    HEADER          shift and go to state 20


state 17

    (95) project -> begin PROJECT IDENT STRING optional_header . module_list end PROJECT
    (104) module_list -> . module
    (105) module_list -> . module module_list
    (103) module -> . begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    begin           shift and go to state 22

    module_list                    shift and go to state 21
    module                         shift and go to state 23

state 18

    (97) optional_header -> header .

    begin           reduce using rule 97 (optional_header -> header .)


state 19

    (96) optional_header -> empty .

    begin           reduce using rule 96 (optional_header -> empty .)


state 20

    (98) header -> begin HEADER . STRING header_version header_project_no end HEADER

    STRING          shift and go to state 24


state 21

    (95) project -> begin PROJECT IDENT STRING optional_header module_list . end PROJECT

    end             shift and go to state 25


state 22

    (103) module -> begin . MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    MODULE          shift and go to state 26


state 23

    (104) module_list -> module .
    (105) module_list -> module . module_list
    (104) module_list -> . module
    (105) module_list -> . module module_list
    (103) module -> . begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    end             reduce using rule 104 (module_list -> module .)
    begin           shift and go to state 22

    module_list                    shift and go to state 27
    module                         shift and go to state 23

state 24

    (98) header -> begin HEADER STRING . header_version header_project_no end HEADER
    (99) header_version -> . empty
    (100) header_version -> . VERSION STRING
    (481) empty -> .

    VERSION         shift and go to state 28
    PROJECT_NO      reduce using rule 481 (empty -> .)
    end             reduce using rule 481 (empty -> .)

    header_version                 shift and go to state 29
    empty                          shift and go to state 30

state 25

    (95) project -> begin PROJECT IDENT STRING optional_header module_list end . PROJECT

    PROJECT         shift and go to state 31


state 26

    (103) module -> begin MODULE . IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    IDENT           shift and go to state 32


state 27

    (105) module_list -> module module_list .

    end             reduce using rule 105 (module_list -> module module_list .)


state 28

    (100) header_version -> VERSION . STRING

    STRING          shift and go to state 33


state 29

    (98) header -> begin HEADER STRING header_version . header_project_no end HEADER
    (101) header_project_no -> . empty
    (102) header_project_no -> . PROJECT_NO IDENT
    (481) empty -> .

    PROJECT_NO      shift and go to state 36
    end             reduce using rule 481 (empty -> .)

    header_project_no              shift and go to state 34
    empty                          shift and go to state 35

state 30

    (99) header_version -> empty .

    PROJECT_NO      reduce using rule 99 (header_version -> empty .)
    end             reduce using rule 99 (header_version -> empty .)


state 31

    (95) project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT .

    $end            reduce using rule 95 (project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT .)


state 32

    (103) module -> begin MODULE IDENT . STRING optional_a2ml optional_module_parameter_list end MODULE

    STRING          shift and go to state 37


state 33

    (100) header_version -> VERSION STRING .

    PROJECT_NO      reduce using rule 100 (header_version -> VERSION STRING .)
    end             reduce using rule 100 (header_version -> VERSION STRING .)


state 34

    (98) header -> begin HEADER STRING header_version header_project_no . end HEADER

    end             shift and go to state 38


state 35

    (101) header_project_no -> empty .

    end             reduce using rule 101 (header_project_no -> empty .)


state 36

    (102) header_project_no -> PROJECT_NO . IDENT

    IDENT           shift and go to state 39


state 37

    (103) module -> begin MODULE IDENT STRING . optional_a2ml optional_module_parameter_list end MODULE
    (107) optional_a2ml -> . empty
    (108) optional_a2ml -> . a2ml
    (481) empty -> .
    (106) a2ml -> . begin A2ML a2ml_declaration_list end A2ML

  ! shift/reduce conflict for begin resolved as shift
    end             reduce using rule 481 (empty -> .)
    begin           shift and go to state 40

  ! begin           [ reduce using rule 481 (empty -> .) ]

    optional_a2ml                  shift and go to state 42
    a2ml                           shift and go to state 41
    empty                          shift and go to state 43

state 38

    (98) header -> begin HEADER STRING header_version header_project_no end . HEADER

    HEADER          shift and go to state 44


state 39

    (102) header_project_no -> PROJECT_NO IDENT .

    end             reduce using rule 102 (header_project_no -> PROJECT_NO IDENT .)


state 40

    (106) a2ml -> begin . A2ML a2ml_declaration_list end A2ML

    A2ML            shift and go to state 45


state 41

    (108) optional_a2ml -> a2ml .

    begin           reduce using rule 108 (optional_a2ml -> a2ml .)
    end             reduce using rule 108 (optional_a2ml -> a2ml .)


state 42

    (103) module -> begin MODULE IDENT STRING optional_a2ml . optional_module_parameter_list end MODULE
    (128) optional_module_parameter_list -> . empty
    (129) optional_module_parameter_list -> . module_parameter_list
    (481) empty -> .
    (126) module_parameter_list -> . module_parameter
    (127) module_parameter_list -> . module_parameter module_parameter_list
    (109) module_parameter -> . mod_par
    (110) module_parameter -> . mod_common
    (111) module_parameter -> . if_data
    (112) module_parameter -> . characteristic
    (113) module_parameter -> . axis_pts
    (114) module_parameter -> . measurement
    (115) module_parameter -> . compu_method
    (116) module_parameter -> . compu_tab
    (117) module_parameter -> . compu_vtab
    (118) module_parameter -> . compu_vtab_range
    (119) module_parameter -> . function
    (120) module_parameter -> . group
    (121) module_parameter -> . record_layout
    (122) module_parameter -> . variant_coding
    (123) module_parameter -> . frame
    (124) module_parameter -> . user_rights
    (125) module_parameter -> . unit
    (130) mod_par -> . begin MOD_PAR end MOD_PAR
    (131) mod_common -> . begin MOD_COMMON end MOD_COMMON
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (133) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (204) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (225) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (258) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (283) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (289) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (296) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (302) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (322) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (335) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (424) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (453) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (461) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (469) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 481 (empty -> .)
    begin           shift and go to state 57

    mod_par                        shift and go to state 47
    record_layout                  shift and go to state 48
    frame                          shift and go to state 49
    compu_tab                      shift and go to state 51
    measurement                    shift and go to state 52
    variant_coding                 shift and go to state 53
    group                          shift and go to state 61
    unit                           shift and go to state 54
    empty                          shift and go to state 55
    function                       shift and go to state 56
    mod_common                     shift and go to state 50
    user_rights                    shift and go to state 46
    if_data                        shift and go to state 58
    module_parameter               shift and go to state 59
    axis_pts                       shift and go to state 60
    compu_vtab                     shift and go to state 62
    compu_method                   shift and go to state 63
    optional_module_parameter_list shift and go to state 64
    characteristic                 shift and go to state 65
    module_parameter_list          shift and go to state 66
    compu_vtab_range               shift and go to state 67

state 43

    (107) optional_a2ml -> empty .

    begin           reduce using rule 107 (optional_a2ml -> empty .)
    end             reduce using rule 107 (optional_a2ml -> empty .)


state 44

    (98) header -> begin HEADER STRING header_version header_project_no end HEADER .

    begin           reduce using rule 98 (header -> begin HEADER STRING header_version header_project_no end HEADER .)


state 45

    (106) a2ml -> begin A2ML . a2ml_declaration_list end A2ML
    (4) a2ml_declaration_list -> . a2ml_declaration
    (5) a2ml_declaration_list -> . a2ml_declaration a2ml_declaration_list
    (2) a2ml_declaration -> . a2ml_type_definition SEMICOLON
    (3) a2ml_declaration -> . a2ml_block_definition SEMICOLON
    (6) a2ml_type_definition -> . a2ml_type_name
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    block           shift and go to state 90
    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_block_definition          shift and go to state 87
    a2ml_declaration_list          shift and go to state 69
    a2ml_enum_type_name            shift and go to state 76
    a2ml_type_definition           shift and go to state 70
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_declaration               shift and go to state 80
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_type_name                 shift and go to state 89

state 46

    (124) module_parameter -> user_rights .

    begin           reduce using rule 124 (module_parameter -> user_rights .)
    end             reduce using rule 124 (module_parameter -> user_rights .)


state 47

    (109) module_parameter -> mod_par .

    begin           reduce using rule 109 (module_parameter -> mod_par .)
    end             reduce using rule 109 (module_parameter -> mod_par .)


state 48

    (121) module_parameter -> record_layout .

    begin           reduce using rule 121 (module_parameter -> record_layout .)
    end             reduce using rule 121 (module_parameter -> record_layout .)


state 49

    (123) module_parameter -> frame .

    begin           reduce using rule 123 (module_parameter -> frame .)
    end             reduce using rule 123 (module_parameter -> frame .)


state 50

    (110) module_parameter -> mod_common .

    begin           reduce using rule 110 (module_parameter -> mod_common .)
    end             reduce using rule 110 (module_parameter -> mod_common .)


state 51

    (116) module_parameter -> compu_tab .

    begin           reduce using rule 116 (module_parameter -> compu_tab .)
    end             reduce using rule 116 (module_parameter -> compu_tab .)


state 52

    (114) module_parameter -> measurement .

    begin           reduce using rule 114 (module_parameter -> measurement .)
    end             reduce using rule 114 (module_parameter -> measurement .)


state 53

    (122) module_parameter -> variant_coding .

    begin           reduce using rule 122 (module_parameter -> variant_coding .)
    end             reduce using rule 122 (module_parameter -> variant_coding .)


state 54

    (125) module_parameter -> unit .

    begin           reduce using rule 125 (module_parameter -> unit .)
    end             reduce using rule 125 (module_parameter -> unit .)


state 55

    (128) optional_module_parameter_list -> empty .

    end             reduce using rule 128 (optional_module_parameter_list -> empty .)


state 56

    (119) module_parameter -> function .

    begin           reduce using rule 119 (module_parameter -> function .)
    end             reduce using rule 119 (module_parameter -> function .)


state 57

    (130) mod_par -> begin . MOD_PAR end MOD_PAR
    (131) mod_common -> begin . MOD_COMMON end MOD_COMMON
    (132) if_data -> begin . IF_DATA IDENT end IF_DATA
    (133) characteristic -> begin . CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (204) axis_pts -> begin . AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (225) measurement -> begin . MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (258) compu_method -> begin . COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (283) compu_tab -> begin . COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (289) compu_vtab -> begin . COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (296) compu_vtab_range -> begin . COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (302) function -> begin . FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (322) group -> begin . GROUP IDENT STRING group_optional_list_optional end GROUP
    (335) record_layout -> begin . RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (424) variant_coding -> begin . VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (453) frame -> begin . FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (461) user_rights -> begin . USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (469) unit -> begin . UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    MOD_PAR         shift and go to state 100
    MOD_COMMON      shift and go to state 103
    IF_DATA         shift and go to state 101
    CHARACTERISTIC  shift and go to state 104
    AXIS_PTS        shift and go to state 96
    MEASUREMENT     shift and go to state 97
    COMPU_METHOD    shift and go to state 94
    COMPU_TAB       shift and go to state 102
    COMPU_VTAB      shift and go to state 91
    COMPU_VTAB_RANGE shift and go to state 98
    FUNCTION        shift and go to state 99
    GROUP           shift and go to state 92
    RECORD_LAYOUT   shift and go to state 93
    VARIANT_CODING  shift and go to state 95
    FRAME           shift and go to state 107
    USER_RIGHTS     shift and go to state 106
    UNIT            shift and go to state 105


state 58

    (111) module_parameter -> if_data .

    begin           reduce using rule 111 (module_parameter -> if_data .)
    end             reduce using rule 111 (module_parameter -> if_data .)


state 59

    (126) module_parameter_list -> module_parameter .
    (127) module_parameter_list -> module_parameter . module_parameter_list
    (126) module_parameter_list -> . module_parameter
    (127) module_parameter_list -> . module_parameter module_parameter_list
    (109) module_parameter -> . mod_par
    (110) module_parameter -> . mod_common
    (111) module_parameter -> . if_data
    (112) module_parameter -> . characteristic
    (113) module_parameter -> . axis_pts
    (114) module_parameter -> . measurement
    (115) module_parameter -> . compu_method
    (116) module_parameter -> . compu_tab
    (117) module_parameter -> . compu_vtab
    (118) module_parameter -> . compu_vtab_range
    (119) module_parameter -> . function
    (120) module_parameter -> . group
    (121) module_parameter -> . record_layout
    (122) module_parameter -> . variant_coding
    (123) module_parameter -> . frame
    (124) module_parameter -> . user_rights
    (125) module_parameter -> . unit
    (130) mod_par -> . begin MOD_PAR end MOD_PAR
    (131) mod_common -> . begin MOD_COMMON end MOD_COMMON
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (133) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (204) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (225) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (258) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (283) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (289) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (296) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (302) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (322) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (335) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (424) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (453) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (461) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (469) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 126 (module_parameter_list -> module_parameter .)
    begin           shift and go to state 57

    mod_par                        shift and go to state 47
    record_layout                  shift and go to state 48
    frame                          shift and go to state 49
    compu_tab                      shift and go to state 51
    measurement                    shift and go to state 52
    unit                           shift and go to state 54
    group                          shift and go to state 61
    variant_coding                 shift and go to state 53
    function                       shift and go to state 56
    mod_common                     shift and go to state 50
    user_rights                    shift and go to state 46
    if_data                        shift and go to state 58
    module_parameter               shift and go to state 59
    axis_pts                       shift and go to state 60
    compu_vtab                     shift and go to state 62
    compu_method                   shift and go to state 63
    characteristic                 shift and go to state 65
    module_parameter_list          shift and go to state 108
    compu_vtab_range               shift and go to state 67

state 60

    (113) module_parameter -> axis_pts .

    begin           reduce using rule 113 (module_parameter -> axis_pts .)
    end             reduce using rule 113 (module_parameter -> axis_pts .)


state 61

    (120) module_parameter -> group .

    begin           reduce using rule 120 (module_parameter -> group .)
    end             reduce using rule 120 (module_parameter -> group .)


state 62

    (117) module_parameter -> compu_vtab .

    begin           reduce using rule 117 (module_parameter -> compu_vtab .)
    end             reduce using rule 117 (module_parameter -> compu_vtab .)


state 63

    (115) module_parameter -> compu_method .

    begin           reduce using rule 115 (module_parameter -> compu_method .)
    end             reduce using rule 115 (module_parameter -> compu_method .)


state 64

    (103) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list . end MODULE

    end             shift and go to state 109


state 65

    (112) module_parameter -> characteristic .

    begin           reduce using rule 112 (module_parameter -> characteristic .)
    end             reduce using rule 112 (module_parameter -> characteristic .)


state 66

    (129) optional_module_parameter_list -> module_parameter_list .

    end             reduce using rule 129 (optional_module_parameter_list -> module_parameter_list .)


state 67

    (118) module_parameter -> compu_vtab_range .

    begin           reduce using rule 118 (module_parameter -> compu_vtab_range .)
    end             reduce using rule 118 (module_parameter -> compu_vtab_range .)


state 68

    (13) a2ml_predefined_type_name -> int .

    SEMICOLON       reduce using rule 13 (a2ml_predefined_type_name -> int .)
    BRACE_OPEN      reduce using rule 13 (a2ml_predefined_type_name -> int .)
    PARENTHESE_CLOSE reduce using rule 13 (a2ml_predefined_type_name -> int .)


state 69

    (106) a2ml -> begin A2ML a2ml_declaration_list . end A2ML

    end             shift and go to state 110


state 70

    (2) a2ml_declaration -> a2ml_type_definition . SEMICOLON

    SEMICOLON       shift and go to state 111


state 71

    (12) a2ml_predefined_type_name -> char .

    SEMICOLON       reduce using rule 12 (a2ml_predefined_type_name -> char .)
    BRACE_OPEN      reduce using rule 12 (a2ml_predefined_type_name -> char .)
    PARENTHESE_CLOSE reduce using rule 12 (a2ml_predefined_type_name -> char .)


state 72

    (14) a2ml_predefined_type_name -> long .

    SEMICOLON       reduce using rule 14 (a2ml_predefined_type_name -> long .)
    BRACE_OPEN      reduce using rule 14 (a2ml_predefined_type_name -> long .)
    PARENTHESE_CLOSE reduce using rule 14 (a2ml_predefined_type_name -> long .)


state 73

    (8) a2ml_type_name -> a2ml_struct_type_name .

    BRACE_OPEN      reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)
    SEMICOLON       reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)
    PARENTHESE_CLOSE reduce using rule 8 (a2ml_type_name -> a2ml_struct_type_name .)


state 74

    (27) a2ml_struct_type_name -> struct . a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> struct . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (481) empty -> .

    IDENT           shift and go to state 112
    CURLY_OPEN      reduce using rule 481 (empty -> .)

    a2ml_identifier                shift and go to state 114
    empty                          shift and go to state 115
    a2ml_identifier_optional       shift and go to state 113

state 75

    (15) a2ml_predefined_type_name -> uchar .

    SEMICOLON       reduce using rule 15 (a2ml_predefined_type_name -> uchar .)
    BRACE_OPEN      reduce using rule 15 (a2ml_predefined_type_name -> uchar .)
    PARENTHESE_CLOSE reduce using rule 15 (a2ml_predefined_type_name -> uchar .)


state 76

    (9) a2ml_type_name -> a2ml_enum_type_name .

    BRACE_OPEN      reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)
    SEMICOLON       reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)
    PARENTHESE_CLOSE reduce using rule 9 (a2ml_type_name -> a2ml_enum_type_name .)


state 77

    (53) a2ml_taggedunion_type_name -> taggedunion . a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> taggedunion . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (481) empty -> .

    IDENT           shift and go to state 112
    CURLY_OPEN      reduce using rule 481 (empty -> .)

    a2ml_identifier                shift and go to state 117
    empty                          shift and go to state 115
    a2ml_identifier_optional       shift and go to state 116

state 78

    (10) a2ml_type_name -> a2ml_taggedstruct_type_name .

    BRACE_OPEN      reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)
    SEMICOLON       reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)
    PARENTHESE_CLOSE reduce using rule 10 (a2ml_type_name -> a2ml_taggedstruct_type_name .)


state 79

    (7) a2ml_type_name -> a2ml_predefined_type_name .

    BRACE_OPEN      reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)
    SEMICOLON       reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)
    PARENTHESE_CLOSE reduce using rule 7 (a2ml_type_name -> a2ml_predefined_type_name .)


state 80

    (4) a2ml_declaration_list -> a2ml_declaration .
    (5) a2ml_declaration_list -> a2ml_declaration . a2ml_declaration_list
    (4) a2ml_declaration_list -> . a2ml_declaration
    (5) a2ml_declaration_list -> . a2ml_declaration a2ml_declaration_list
    (2) a2ml_declaration -> . a2ml_type_definition SEMICOLON
    (3) a2ml_declaration -> . a2ml_block_definition SEMICOLON
    (6) a2ml_type_definition -> . a2ml_type_name
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    end             reduce using rule 4 (a2ml_declaration_list -> a2ml_declaration .)
    block           shift and go to state 90
    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_block_definition          shift and go to state 87
    a2ml_declaration_list          shift and go to state 118
    a2ml_enum_type_name            shift and go to state 76
    a2ml_type_definition           shift and go to state 70
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_declaration               shift and go to state 80
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_type_name                 shift and go to state 89

state 81

    (11) a2ml_type_name -> a2ml_taggedunion_type_name .

    BRACE_OPEN      reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)
    SEMICOLON       reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)
    PARENTHESE_CLOSE reduce using rule 11 (a2ml_type_name -> a2ml_taggedunion_type_name .)


state 82

    (19) a2ml_predefined_type_name -> float .

    SEMICOLON       reduce using rule 19 (a2ml_predefined_type_name -> float .)
    BRACE_OPEN      reduce using rule 19 (a2ml_predefined_type_name -> float .)
    PARENTHESE_CLOSE reduce using rule 19 (a2ml_predefined_type_name -> float .)


state 83

    (17) a2ml_predefined_type_name -> ulong .

    SEMICOLON       reduce using rule 17 (a2ml_predefined_type_name -> ulong .)
    BRACE_OPEN      reduce using rule 17 (a2ml_predefined_type_name -> ulong .)
    PARENTHESE_CLOSE reduce using rule 17 (a2ml_predefined_type_name -> ulong .)


state 84

    (21) a2ml_enum_type_name -> enum . a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> enum . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (481) empty -> .

    IDENT           shift and go to state 112
    CURLY_OPEN      reduce using rule 481 (empty -> .)

    a2ml_identifier                shift and go to state 120
    empty                          shift and go to state 115
    a2ml_identifier_optional       shift and go to state 119

state 85

    (16) a2ml_predefined_type_name -> uint .

    SEMICOLON       reduce using rule 16 (a2ml_predefined_type_name -> uint .)
    BRACE_OPEN      reduce using rule 16 (a2ml_predefined_type_name -> uint .)
    PARENTHESE_CLOSE reduce using rule 16 (a2ml_predefined_type_name -> uint .)


state 86

    (41) a2ml_taggedstruct_type_name -> taggedstruct . a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> taggedstruct . a2ml_identifier
    (61) a2ml_identifier_optional -> . empty
    (62) a2ml_identifier_optional -> . a2ml_identifier
    (60) a2ml_identifier -> . IDENT
    (481) empty -> .

    IDENT           shift and go to state 112
    CURLY_OPEN      reduce using rule 481 (empty -> .)

    a2ml_identifier                shift and go to state 122
    empty                          shift and go to state 115
    a2ml_identifier_optional       shift and go to state 121

state 87

    (3) a2ml_declaration -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 123


state 88

    (18) a2ml_predefined_type_name -> double .

    SEMICOLON       reduce using rule 18 (a2ml_predefined_type_name -> double .)
    BRACE_OPEN      reduce using rule 18 (a2ml_predefined_type_name -> double .)
    PARENTHESE_CLOSE reduce using rule 18 (a2ml_predefined_type_name -> double .)


state 89

    (6) a2ml_type_definition -> a2ml_type_name .

    SEMICOLON       reduce using rule 6 (a2ml_type_definition -> a2ml_type_name .)


state 90

    (20) a2ml_block_definition -> block . a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    STRING          shift and go to state 124

    a2ml_tag                       shift and go to state 125

state 91

    (289) compu_vtab -> begin COMPU_VTAB . IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    IDENT           shift and go to state 126


state 92

    (322) group -> begin GROUP . IDENT STRING group_optional_list_optional end GROUP

    IDENT           shift and go to state 127


state 93

    (335) record_layout -> begin RECORD_LAYOUT . IDENT record_layout_optional_list_optional end RECORD_LAYOUT

    IDENT           shift and go to state 128


state 94

    (258) compu_method -> begin COMPU_METHOD . IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    IDENT           shift and go to state 129


state 95

    (424) variant_coding -> begin VARIANT_CODING . variant_coding_optional_list_optional end VARIANT_CODING
    (450) variant_coding_optional_list_optional -> . empty
    (451) variant_coding_optional_list_optional -> . variant_coding_optional_list
    (481) empty -> .
    (448) variant_coding_optional_list -> . variant_coding_optional
    (449) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (425) variant_coding_optional -> . var_separator
    (426) variant_coding_optional -> . var_naming
    (427) variant_coding_optional -> . var_criterion
    (428) variant_coding_optional -> . var_forbidden_comb
    (429) variant_coding_optional -> . var_characteristic
    (433) var_separator -> . VAR_SEPARATOR STRING
    (434) var_naming -> . VAR_NAMING IDENT
    (439) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (435) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (430) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 481 (empty -> .)
    VAR_SEPARATOR   shift and go to state 140
    VAR_NAMING      shift and go to state 141
    begin           shift and go to state 139

    var_characteristic             shift and go to state 135
    var_naming                     shift and go to state 132
    variant_coding_optional_list_optional shift and go to state 136
    var_separator                  shift and go to state 133
    empty                          shift and go to state 138
    var_criterion                  shift and go to state 130
    var_forbidden_comb             shift and go to state 131
    variant_coding_optional        shift and go to state 137
    variant_coding_optional_list   shift and go to state 134

state 96

    (204) axis_pts -> begin AXIS_PTS . IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 142


state 97

    (225) measurement -> begin MEASUREMENT . IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 143


state 98

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE . IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    IDENT           shift and go to state 144


state 99

    (302) function -> begin FUNCTION . IDENT STRING function_optional_list_optional end FUNCTION

    IDENT           shift and go to state 145


state 100

    (130) mod_par -> begin MOD_PAR . end MOD_PAR

    end             shift and go to state 146


state 101

    (132) if_data -> begin IF_DATA . IDENT end IF_DATA

    IDENT           shift and go to state 147


state 102

    (283) compu_tab -> begin COMPU_TAB . IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    IDENT           shift and go to state 148


state 103

    (131) mod_common -> begin MOD_COMMON . end MOD_COMMON

    end             shift and go to state 149


state 104

    (133) characteristic -> begin CHARACTERISTIC . IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 150


state 105

    (469) unit -> begin UNIT . IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    IDENT           shift and go to state 151


state 106

    (461) user_rights -> begin USER_RIGHTS . IDENT user_rights_optional_list_optional end USER_RIGHTS

    IDENT           shift and go to state 152


state 107

    (453) frame -> begin FRAME . IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    IDENT           shift and go to state 153


state 108

    (127) module_parameter_list -> module_parameter module_parameter_list .

    end             reduce using rule 127 (module_parameter_list -> module_parameter module_parameter_list .)


state 109

    (103) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end . MODULE

    MODULE          shift and go to state 154


state 110

    (106) a2ml -> begin A2ML a2ml_declaration_list end . A2ML

    A2ML            shift and go to state 155


state 111

    (2) a2ml_declaration -> a2ml_type_definition SEMICOLON .

    block           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    char            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    int             reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    long            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    uchar           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    uint            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    ulong           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    double          reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    float           reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    struct          reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    enum            reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    taggedstruct    reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    taggedunion     reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)
    end             reduce using rule 2 (a2ml_declaration -> a2ml_type_definition SEMICOLON .)


state 112

    (60) a2ml_identifier -> IDENT .

    SEMICOLON       reduce using rule 60 (a2ml_identifier -> IDENT .)
    CURLY_OPEN      reduce using rule 60 (a2ml_identifier -> IDENT .)
    PARENTHESE_CLOSE reduce using rule 60 (a2ml_identifier -> IDENT .)
    BRACE_OPEN      reduce using rule 60 (a2ml_identifier -> IDENT .)


state 113

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional . CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE

    CURLY_OPEN      shift and go to state 156


state 114

    (28) a2ml_struct_type_name -> struct a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    SEMICOLON       reduce using rule 28 (a2ml_struct_type_name -> struct a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 115

    (61) a2ml_identifier_optional -> empty .

    CURLY_OPEN      reduce using rule 61 (a2ml_identifier_optional -> empty .)


state 116

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional . CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE

    CURLY_OPEN      shift and go to state 157


state 117

    (54) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    SEMICOLON       reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    BRACE_OPEN      reduce using rule 54 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 118

    (5) a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list .

    end             reduce using rule 5 (a2ml_declaration_list -> a2ml_declaration a2ml_declaration_list .)


state 119

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional . CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE

    CURLY_OPEN      shift and go to state 158


state 120

    (22) a2ml_enum_type_name -> enum a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    SEMICOLON       reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 22 (a2ml_enum_type_name -> enum a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 121

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional . CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE

    CURLY_OPEN      shift and go to state 159


state 122

    (42) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .
    (62) a2ml_identifier_optional -> a2ml_identifier .

    BRACE_OPEN      reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    SEMICOLON       reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    PARENTHESE_CLOSE reduce using rule 42 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier .)
    CURLY_OPEN      reduce using rule 62 (a2ml_identifier_optional -> a2ml_identifier .)


state 123

    (3) a2ml_declaration -> a2ml_block_definition SEMICOLON .

    block           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    char            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    int             reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    long            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    uchar           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    uint            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    ulong           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    double          reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    float           reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    struct          reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    enum            reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    taggedstruct    reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    taggedunion     reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)
    end             reduce using rule 3 (a2ml_declaration -> a2ml_block_definition SEMICOLON .)


state 124

    (59) a2ml_tag -> STRING .

    char            reduce using rule 59 (a2ml_tag -> STRING .)
    int             reduce using rule 59 (a2ml_tag -> STRING .)
    long            reduce using rule 59 (a2ml_tag -> STRING .)
    uchar           reduce using rule 59 (a2ml_tag -> STRING .)
    uint            reduce using rule 59 (a2ml_tag -> STRING .)
    ulong           reduce using rule 59 (a2ml_tag -> STRING .)
    double          reduce using rule 59 (a2ml_tag -> STRING .)
    float           reduce using rule 59 (a2ml_tag -> STRING .)
    struct          reduce using rule 59 (a2ml_tag -> STRING .)
    enum            reduce using rule 59 (a2ml_tag -> STRING .)
    taggedstruct    reduce using rule 59 (a2ml_tag -> STRING .)
    taggedunion     reduce using rule 59 (a2ml_tag -> STRING .)
    PARENTHESE_OPEN reduce using rule 59 (a2ml_tag -> STRING .)
    SEMICOLON       reduce using rule 59 (a2ml_tag -> STRING .)
    PARENTHESE_CLOSE reduce using rule 59 (a2ml_tag -> STRING .)


state 125

    (20) a2ml_block_definition -> block a2ml_tag . a2ml_type_name
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_type_name                 shift and go to state 160

state 126

    (289) compu_vtab -> begin COMPU_VTAB IDENT . STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    STRING          shift and go to state 161


state 127

    (322) group -> begin GROUP IDENT . STRING group_optional_list_optional end GROUP

    STRING          shift and go to state 162


state 128

    (335) record_layout -> begin RECORD_LAYOUT IDENT . record_layout_optional_list_optional end RECORD_LAYOUT
    (377) record_layout_optional_list_optional -> . empty
    (378) record_layout_optional_list_optional -> . record_layout_optional_list
    (481) empty -> .
    (375) record_layout_optional_list -> . record_layout_optional
    (376) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (336) record_layout_optional -> . fnc_values
    (337) record_layout_optional -> . identification
    (338) record_layout_optional -> . axis_pts_x
    (339) record_layout_optional -> . axis_pts_y
    (340) record_layout_optional -> . axis_pts_z
    (341) record_layout_optional -> . axis_rescale_x
    (342) record_layout_optional -> . axis_rescale_y
    (343) record_layout_optional -> . axis_rescale_z
    (344) record_layout_optional -> . no_axis_pts_x
    (345) record_layout_optional -> . no_axis_pts_y
    (346) record_layout_optional -> . no_axis_pts_z
    (347) record_layout_optional -> . no_rescale_x
    (348) record_layout_optional -> . no_rescale_y
    (349) record_layout_optional -> . no_rescale_z
    (350) record_layout_optional -> . fix_no_axis_pts_x
    (351) record_layout_optional -> . fix_no_axis_pts_y
    (352) record_layout_optional -> . fix_no_axis_pts_z
    (353) record_layout_optional -> . src_addr_x
    (354) record_layout_optional -> . src_addr_y
    (355) record_layout_optional -> . src_addr_z
    (356) record_layout_optional -> . rip_addr_x
    (357) record_layout_optional -> . rip_addr_y
    (358) record_layout_optional -> . rip_addr_z
    (359) record_layout_optional -> . rip_addr_w
    (360) record_layout_optional -> . shift_op_x
    (361) record_layout_optional -> . shift_op_y
    (362) record_layout_optional -> . shift_op_z
    (363) record_layout_optional -> . offset_x
    (364) record_layout_optional -> . offset_y
    (365) record_layout_optional -> . offset_z
    (366) record_layout_optional -> . dist_op_x
    (367) record_layout_optional -> . dist_op_y
    (368) record_layout_optional -> . dist_op_z
    (369) record_layout_optional -> . alignment_byte
    (370) record_layout_optional -> . alignment_word
    (371) record_layout_optional -> . alignment_long
    (372) record_layout_optional -> . alignment_float32_ieee
    (373) record_layout_optional -> . alignment_float64_ieee
    (374) record_layout_optional -> . reserved
    (379) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (385) identification -> . IDENTIFICATION NUMERIC datatype
    (386) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (387) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (388) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (389) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (390) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (391) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (392) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (393) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (394) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (395) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (396) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (397) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (398) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (399) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (400) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (401) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (402) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (403) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (406) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (407) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (408) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (409) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (410) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (411) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (412) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (413) offset_x -> . OFFSET_X NUMERIC datatype
    (414) offset_y -> . OFFSET_Y NUMERIC datatype
    (415) offset_z -> . OFFSET_Z NUMERIC datatype
    (416) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (417) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (418) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (419) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (420) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (421) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (422) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (423) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (452) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 481 (empty -> .)
    FNC_VALUES      shift and go to state 238
    IDENTIFICATION  shift and go to state 220
    AXIS_PTS_X      shift and go to state 170
    AXIS_PTS_Y      shift and go to state 171
    AXIS_PTS_Z      shift and go to state 169
    AXIS_RESCALE_X  shift and go to state 227
    AXIS_RESCALE_Y  shift and go to state 228
    AXIS_RESCALE_Z  shift and go to state 226
    NO_AXIS_PTS_X   shift and go to state 164
    NO_AXIS_PTS_Y   shift and go to state 163
    NO_AXIS_PTS_Z   shift and go to state 165
    NO_RESCALE_X    shift and go to state 192
    NO_RESCALE_Y    shift and go to state 193
    NO_RESCALE_Z    shift and go to state 191
    FIX_NO_AXIS_PTS_X shift and go to state 186
    FIX_NO_AXIS_PTS_Y shift and go to state 185
    FIX_NO_AXIS_PTS_Z shift and go to state 187
    SRC_ADDR_X      shift and go to state 168
    SRC_ADDR_Y      shift and go to state 167
    SRC_ADDR_Z      shift and go to state 166
    RIP_ADDR_X      shift and go to state 232
    RIP_ADDR_Y      shift and go to state 233
    RIP_ADDR_Z      shift and go to state 231
    RIP_ADDR_W      shift and go to state 229
    SHIFT_OP_X      shift and go to state 177
    SHIFT_OP_Y      shift and go to state 176
    SHIFT_OP_Z      shift and go to state 179
    OFFSET_X        shift and go to state 223
    OFFSET_Y        shift and go to state 224
    OFFSET_Z        shift and go to state 225
    DIST_OP_X       shift and go to state 197
    DIST_OP_Y       shift and go to state 198
    DIST_OP_Z       shift and go to state 196
    ALIGNMENT_BYTE  shift and go to state 221
    ALIGNMENT_WORD  shift and go to state 219
    ALIGNMENT_LONG  shift and go to state 172
    ALIGNMENT_FLOAT32_IEEE shift and go to state 200
    ALIGNMENT_FLOAT64_IEEE shift and go to state 183
    RESERVED        shift and go to state 237

    reserved                       shift and go to state 222
    record_layout_optional         shift and go to state 204
    record_layout_optional_list    shift and go to state 205
    src_addr_z                     shift and go to state 239
    src_addr_y                     shift and go to state 188
    src_addr_x                     shift and go to state 189
    record_layout_optional_list_optional shift and go to state 206
    axis_rescale_z                 shift and go to state 173
    shift_op_z                     shift and go to state 242
    identification                 shift and go to state 194
    offset_y                       shift and go to state 235
    offset_z                       shift and go to state 236
    offset_x                       shift and go to state 234
    axis_rescale_y                 shift and go to state 175
    empty                          shift and go to state 207
    alignment_long                 shift and go to state 243
    alignment_float64_ieee         shift and go to state 190
    alignment_byte                 shift and go to state 230
    alignment_word                 shift and go to state 195
    shift_op_y                     shift and go to state 240
    no_axis_pts_y                  shift and go to state 208
    no_axis_pts_x                  shift and go to state 209
    axis_rescale_x                 shift and go to state 174
    no_axis_pts_z                  shift and go to state 210
    rip_addr_w                     shift and go to state 211
    fnc_values                     shift and go to state 212
    axis_pts_z                     shift and go to state 213
    alignment_float32_ieee         shift and go to state 244
    axis_pts_x                     shift and go to state 214
    axis_pts_y                     shift and go to state 215
    rip_addr_z                     shift and go to state 216
    rip_addr_x                     shift and go to state 217
    rip_addr_y                     shift and go to state 218
    no_rescale_z                   shift and go to state 184
    shift_op_x                     shift and go to state 241
    no_rescale_x                   shift and go to state 178
    no_rescale_y                   shift and go to state 199
    dist_op_z                      shift and go to state 201
    dist_op_x                      shift and go to state 202
    dist_op_y                      shift and go to state 203
    fix_no_axis_pts_y              shift and go to state 180
    fix_no_axis_pts_x              shift and go to state 181
    fix_no_axis_pts_z              shift and go to state 182

state 129

    (258) compu_method -> begin COMPU_METHOD IDENT . STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 245


state 130

    (427) variant_coding_optional -> var_criterion .

    VAR_SEPARATOR   reduce using rule 427 (variant_coding_optional -> var_criterion .)
    VAR_NAMING      reduce using rule 427 (variant_coding_optional -> var_criterion .)
    begin           reduce using rule 427 (variant_coding_optional -> var_criterion .)
    end             reduce using rule 427 (variant_coding_optional -> var_criterion .)


state 131

    (428) variant_coding_optional -> var_forbidden_comb .

    VAR_SEPARATOR   reduce using rule 428 (variant_coding_optional -> var_forbidden_comb .)
    VAR_NAMING      reduce using rule 428 (variant_coding_optional -> var_forbidden_comb .)
    begin           reduce using rule 428 (variant_coding_optional -> var_forbidden_comb .)
    end             reduce using rule 428 (variant_coding_optional -> var_forbidden_comb .)


state 132

    (426) variant_coding_optional -> var_naming .

    VAR_SEPARATOR   reduce using rule 426 (variant_coding_optional -> var_naming .)
    VAR_NAMING      reduce using rule 426 (variant_coding_optional -> var_naming .)
    begin           reduce using rule 426 (variant_coding_optional -> var_naming .)
    end             reduce using rule 426 (variant_coding_optional -> var_naming .)


state 133

    (425) variant_coding_optional -> var_separator .

    VAR_SEPARATOR   reduce using rule 425 (variant_coding_optional -> var_separator .)
    VAR_NAMING      reduce using rule 425 (variant_coding_optional -> var_separator .)
    begin           reduce using rule 425 (variant_coding_optional -> var_separator .)
    end             reduce using rule 425 (variant_coding_optional -> var_separator .)


state 134

    (451) variant_coding_optional_list_optional -> variant_coding_optional_list .

    end             reduce using rule 451 (variant_coding_optional_list_optional -> variant_coding_optional_list .)


state 135

    (429) variant_coding_optional -> var_characteristic .

    VAR_SEPARATOR   reduce using rule 429 (variant_coding_optional -> var_characteristic .)
    VAR_NAMING      reduce using rule 429 (variant_coding_optional -> var_characteristic .)
    begin           reduce using rule 429 (variant_coding_optional -> var_characteristic .)
    end             reduce using rule 429 (variant_coding_optional -> var_characteristic .)


state 136

    (424) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional . end VARIANT_CODING

    end             shift and go to state 246


state 137

    (448) variant_coding_optional_list -> variant_coding_optional .
    (449) variant_coding_optional_list -> variant_coding_optional . variant_coding_optional_list
    (448) variant_coding_optional_list -> . variant_coding_optional
    (449) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (425) variant_coding_optional -> . var_separator
    (426) variant_coding_optional -> . var_naming
    (427) variant_coding_optional -> . var_criterion
    (428) variant_coding_optional -> . var_forbidden_comb
    (429) variant_coding_optional -> . var_characteristic
    (433) var_separator -> . VAR_SEPARATOR STRING
    (434) var_naming -> . VAR_NAMING IDENT
    (439) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (435) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (430) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 448 (variant_coding_optional_list -> variant_coding_optional .)
    VAR_SEPARATOR   shift and go to state 140
    VAR_NAMING      shift and go to state 141
    begin           shift and go to state 139

    var_characteristic             shift and go to state 135
    var_forbidden_comb             shift and go to state 131
    var_naming                     shift and go to state 132
    var_separator                  shift and go to state 133
    var_criterion                  shift and go to state 130
    variant_coding_optional        shift and go to state 137
    variant_coding_optional_list   shift and go to state 247

state 138

    (450) variant_coding_optional_list_optional -> empty .

    end             reduce using rule 450 (variant_coding_optional_list_optional -> empty .)


state 139

    (439) var_criterion -> begin . VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (435) var_forbidden_comb -> begin . VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (430) var_characteristic -> begin . VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    VAR_CRITERION   shift and go to state 250
    VAR_FORBIDDEN_COMB shift and go to state 249
    VAR_CHARACTERISTIC shift and go to state 248


state 140

    (433) var_separator -> VAR_SEPARATOR . STRING

    STRING          shift and go to state 251


state 141

    (434) var_naming -> VAR_NAMING . IDENT

    IDENT           shift and go to state 252


state 142

    (204) axis_pts -> begin AXIS_PTS IDENT . STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    STRING          shift and go to state 253


state 143

    (225) measurement -> begin MEASUREMENT IDENT . STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    STRING          shift and go to state 254


state 144

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT . STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    STRING          shift and go to state 255


state 145

    (302) function -> begin FUNCTION IDENT . STRING function_optional_list_optional end FUNCTION

    STRING          shift and go to state 256


state 146

    (130) mod_par -> begin MOD_PAR end . MOD_PAR

    MOD_PAR         shift and go to state 257


state 147

    (132) if_data -> begin IF_DATA IDENT . end IF_DATA

    end             shift and go to state 258


state 148

    (283) compu_tab -> begin COMPU_TAB IDENT . STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    STRING          shift and go to state 259


state 149

    (131) mod_common -> begin MOD_COMMON end . MOD_COMMON

    MOD_COMMON      shift and go to state 260


state 150

    (133) characteristic -> begin CHARACTERISTIC IDENT . STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    STRING          shift and go to state 261


state 151

    (469) unit -> begin UNIT IDENT . STRING STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 262


state 152

    (461) user_rights -> begin USER_RIGHTS IDENT . user_rights_optional_list_optional end USER_RIGHTS
    (466) user_rights_optional_list_optional -> . empty
    (467) user_rights_optional_list_optional -> . user_rights_optional_list
    (481) empty -> .
    (464) user_rights_optional_list -> . user_rights_optional
    (465) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (462) user_rights_optional -> . ref_group
    (463) user_rights_optional -> . READ_ONLY
    (468) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 481 (empty -> .)
    READ_ONLY       shift and go to state 263
    begin           shift and go to state 264

    user_rights_optional_list_optional shift and go to state 266
    user_rights_optional_list      shift and go to state 265
    user_rights_optional           shift and go to state 267
    ref_group                      shift and go to state 268
    empty                          shift and go to state 269

state 153

    (453) frame -> begin FRAME IDENT . STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    STRING          shift and go to state 270


state 154

    (103) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .

    begin           reduce using rule 103 (module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .)
    end             reduce using rule 103 (module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .)


state 155

    (106) a2ml -> begin A2ML a2ml_declaration_list end A2ML .

    begin           reduce using rule 106 (a2ml -> begin A2ML a2ml_declaration_list end A2ML .)
    end             reduce using rule 106 (a2ml -> begin A2ML a2ml_declaration_list end A2ML .)


state 156

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN . a2ml_struct_member_list_optional CURLY_CLOSE
    (29) a2ml_struct_member_list_optional -> . empty
    (30) a2ml_struct_member_list_optional -> . a2ml_struct_member_list
    (481) empty -> .
    (31) a2ml_struct_member_list -> . a2ml_struct_member
    (32) a2ml_struct_member_list -> . a2ml_struct_member a2ml_struct_member_list
    (33) a2ml_struct_member -> . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    CURLY_CLOSE     reduce using rule 481 (empty -> .)
    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_struct_member_list_optional shift and go to state 271
    a2ml_struct_member             shift and go to state 272
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_member                    shift and go to state 273
    a2ml_struct_member_list        shift and go to state 276
    empty                          shift and go to state 274
    a2ml_type_name                 shift and go to state 275

state 157

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN . a2ml_taggedunion_member_list CURLY_CLOSE
    (55) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member
    (56) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member a2ml_taggedunion_member_list
    (57) a2ml_taggedunion_member -> . a2ml_tag a2ml_member SEMICOLON
    (58) a2ml_taggedunion_member -> . a2ml_block_definition SEMICOLON
    (59) a2ml_tag -> . STRING
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name

    STRING          shift and go to state 124
    block           shift and go to state 90

    a2ml_block_definition          shift and go to state 280
    a2ml_taggedunion_member_list   shift and go to state 277
    a2ml_taggedunion_member        shift and go to state 278
    a2ml_tag                       shift and go to state 279

state 158

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN . a2ml_enumerator_list CURLY_CLOSE
    (23) a2ml_enumerator_list -> . a2ml_enumerator
    (24) a2ml_enumerator_list -> . a2ml_enumerator COMMA a2ml_enumerator_list
    (25) a2ml_enumerator -> . a2ml_keyword EQUAL a2ml_constant
    (26) a2ml_enumerator -> . a2ml_keyword
    (63) a2ml_keyword -> . STRING

    STRING          shift and go to state 282

    a2ml_keyword                   shift and go to state 281
    a2ml_enumerator                shift and go to state 283
    a2ml_enumerator_list           shift and go to state 284

state 159

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN . a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (43) a2ml_taggedstruct_member_list_optional -> . empty
    (44) a2ml_taggedstruct_member_list_optional -> . a2ml_taggedstruct_member_list
    (481) empty -> .
    (45) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member
    (46) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member a2ml_taggedstruct_member_list
    (47) a2ml_taggedstruct_member -> . a2ml_taggedstruct_definition SEMICOLON
    (48) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (49) a2ml_taggedstruct_member -> . a2ml_block_definition SEMICOLON
    (50) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    CURLY_CLOSE     reduce using rule 481 (empty -> .)
    PARENTHESE_OPEN shift and go to state 286
    block           shift and go to state 90
    STRING          shift and go to state 124

    a2ml_taggedstruct_member       shift and go to state 287
    a2ml_block_definition          shift and go to state 285
    a2ml_taggedstruct_member_list  shift and go to state 290
    a2ml_taggedstruct_definition   shift and go to state 288
    a2ml_tag                       shift and go to state 289
    empty                          shift and go to state 291
    a2ml_taggedstruct_member_list_optional shift and go to state 292

state 160

    (20) a2ml_block_definition -> block a2ml_tag a2ml_type_name .

    SEMICOLON       reduce using rule 20 (a2ml_block_definition -> block a2ml_tag a2ml_type_name .)
    PARENTHESE_CLOSE reduce using rule 20 (a2ml_block_definition -> block a2ml_tag a2ml_type_name .)


state 161

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING . compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (290) compu_vtab_conversion_type -> . TAB_VERB

    TAB_VERB        shift and go to state 294

    compu_vtab_conversion_type     shift and go to state 293

state 162

    (322) group -> begin GROUP IDENT STRING . group_optional_list_optional end GROUP
    (331) group_optional_list_optional -> . empty
    (332) group_optional_list_optional -> . group_optional_list
    (481) empty -> .
    (329) group_optional_list -> . group_optional
    (330) group_optional_list -> . group_optional group_optional_list
    (323) group_optional -> . annotation
    (324) group_optional -> . ROOT
    (325) group_optional -> . ref_characteristic
    (326) group_optional -> . ref_measurement
    (327) group_optional -> . function_list
    (328) group_optional -> . sub_group
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (316) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (333) ref_measurement -> . begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (334) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 481 (empty -> .)
    ROOT            shift and go to state 298
    begin           shift and go to state 300

    sub_group                      shift and go to state 301
    function_list                  shift and go to state 304
    group_optional                 shift and go to state 303
    group_optional_list_optional   shift and go to state 295
    ref_measurement                shift and go to state 296
    ref_characteristic             shift and go to state 305
    group_optional_list            shift and go to state 302
    annotation                     shift and go to state 297
    empty                          shift and go to state 299

state 163

    (393) no_axis_pts_y -> NO_AXIS_PTS_Y . NUMERIC datatype

    NUMERIC         shift and go to state 306


state 164

    (392) no_axis_pts_x -> NO_AXIS_PTS_X . NUMERIC datatype

    NUMERIC         shift and go to state 307


state 165

    (394) no_axis_pts_z -> NO_AXIS_PTS_Z . NUMERIC datatype

    NUMERIC         shift and go to state 308


state 166

    (403) src_addr_z -> SRC_ADDR_Z . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 309


state 167

    (402) src_addr_y -> SRC_ADDR_Y . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 310


state 168

    (401) src_addr_x -> SRC_ADDR_X . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 311


state 169

    (388) axis_pts_z -> AXIS_PTS_Z . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 312


state 170

    (386) axis_pts_x -> AXIS_PTS_X . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 313


state 171

    (387) axis_pts_y -> AXIS_PTS_Y . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 314


state 172

    (421) alignment_long -> ALIGNMENT_LONG . NUMERIC

    NUMERIC         shift and go to state 315


state 173

    (343) record_layout_optional -> axis_rescale_z .

    FNC_VALUES      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    IDENTIFICATION  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_X      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Y      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Z      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_X    reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Y    reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Z    reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_X      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Y      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Z      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_X      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Y      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Z      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_W      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_X      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Y      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Z      reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    OFFSET_X        reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Y        reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Z        reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_X       reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Y       reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Z       reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    RESERVED        reduce using rule 343 (record_layout_optional -> axis_rescale_z .)
    end             reduce using rule 343 (record_layout_optional -> axis_rescale_z .)


state 174

    (341) record_layout_optional -> axis_rescale_x .

    FNC_VALUES      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    IDENTIFICATION  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_X      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Y      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Z      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_X    reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Y    reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Z    reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_X      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Y      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Z      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_X      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Y      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Z      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_W      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_X      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Y      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Z      reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    OFFSET_X        reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Y        reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Z        reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_X       reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Y       reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Z       reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    RESERVED        reduce using rule 341 (record_layout_optional -> axis_rescale_x .)
    end             reduce using rule 341 (record_layout_optional -> axis_rescale_x .)


state 175

    (342) record_layout_optional -> axis_rescale_y .

    FNC_VALUES      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    IDENTIFICATION  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_X      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Y      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Z      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_X    reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Y    reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Z    reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_X      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Y      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Z      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_X      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Y      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Z      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_W      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_X      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Y      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Z      reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    OFFSET_X        reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Y        reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Z        reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_X       reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Y       reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Z       reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    RESERVED        reduce using rule 342 (record_layout_optional -> axis_rescale_y .)
    end             reduce using rule 342 (record_layout_optional -> axis_rescale_y .)


state 176

    (411) shift_op_y -> SHIFT_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 316


state 177

    (410) shift_op_x -> SHIFT_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 317


state 178

    (347) record_layout_optional -> no_rescale_x .

    FNC_VALUES      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    IDENTIFICATION  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_X      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Y      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Z      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_X    reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Y    reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Z    reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_X      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Y      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Z      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_X      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Y      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Z      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_W      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_X      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Y      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Z      reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    OFFSET_X        reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    OFFSET_Y        reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    OFFSET_Z        reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    DIST_OP_X       reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Y       reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Z       reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    RESERVED        reduce using rule 347 (record_layout_optional -> no_rescale_x .)
    end             reduce using rule 347 (record_layout_optional -> no_rescale_x .)


state 179

    (412) shift_op_z -> SHIFT_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 318


state 180

    (351) record_layout_optional -> fix_no_axis_pts_y .

    FNC_VALUES      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_X        reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Y        reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Z        reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_X       reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    RESERVED        reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)
    end             reduce using rule 351 (record_layout_optional -> fix_no_axis_pts_y .)


state 181

    (350) record_layout_optional -> fix_no_axis_pts_x .

    FNC_VALUES      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_X        reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Y        reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Z        reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_X       reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    RESERVED        reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)
    end             reduce using rule 350 (record_layout_optional -> fix_no_axis_pts_x .)


state 182

    (352) record_layout_optional -> fix_no_axis_pts_z .

    FNC_VALUES      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_X        reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Y        reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Z        reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_X       reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    RESERVED        reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)
    end             reduce using rule 352 (record_layout_optional -> fix_no_axis_pts_z .)


state 183

    (423) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE . NUMERIC

    NUMERIC         shift and go to state 319


state 184

    (349) record_layout_optional -> no_rescale_z .

    FNC_VALUES      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    IDENTIFICATION  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_X      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Y      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Z      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_X    reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Y    reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Z    reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_X      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Y      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Z      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_X      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Y      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Z      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_W      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_X      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Y      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Z      reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    OFFSET_X        reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    OFFSET_Y        reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    OFFSET_Z        reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    DIST_OP_X       reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Y       reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Z       reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    RESERVED        reduce using rule 349 (record_layout_optional -> no_rescale_z .)
    end             reduce using rule 349 (record_layout_optional -> no_rescale_z .)


state 185

    (399) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y . NUMERIC

    NUMERIC         shift and go to state 320


state 186

    (398) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X . NUMERIC

    NUMERIC         shift and go to state 321


state 187

    (400) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z . NUMERIC

    NUMERIC         shift and go to state 322


state 188

    (354) record_layout_optional -> src_addr_y .

    FNC_VALUES      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    IDENTIFICATION  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_X      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Y      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Z      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_X  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_X    reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Y    reduce using rule 354 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Z    reduce using rule 354 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 354 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 354 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_X      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Y      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Z      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_X      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Y      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Z      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_W      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_X      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Y      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Z      reduce using rule 354 (record_layout_optional -> src_addr_y .)
    OFFSET_X        reduce using rule 354 (record_layout_optional -> src_addr_y .)
    OFFSET_Y        reduce using rule 354 (record_layout_optional -> src_addr_y .)
    OFFSET_Z        reduce using rule 354 (record_layout_optional -> src_addr_y .)
    DIST_OP_X       reduce using rule 354 (record_layout_optional -> src_addr_y .)
    DIST_OP_Y       reduce using rule 354 (record_layout_optional -> src_addr_y .)
    DIST_OP_Z       reduce using rule 354 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_WORD  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_LONG  reduce using rule 354 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 354 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 354 (record_layout_optional -> src_addr_y .)
    RESERVED        reduce using rule 354 (record_layout_optional -> src_addr_y .)
    end             reduce using rule 354 (record_layout_optional -> src_addr_y .)


state 189

    (353) record_layout_optional -> src_addr_x .

    FNC_VALUES      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    IDENTIFICATION  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_X      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Y      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Z      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_X  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_X    reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Y    reduce using rule 353 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Z    reduce using rule 353 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 353 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 353 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_X      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Y      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Z      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_X      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Y      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Z      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_W      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_X      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Y      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Z      reduce using rule 353 (record_layout_optional -> src_addr_x .)
    OFFSET_X        reduce using rule 353 (record_layout_optional -> src_addr_x .)
    OFFSET_Y        reduce using rule 353 (record_layout_optional -> src_addr_x .)
    OFFSET_Z        reduce using rule 353 (record_layout_optional -> src_addr_x .)
    DIST_OP_X       reduce using rule 353 (record_layout_optional -> src_addr_x .)
    DIST_OP_Y       reduce using rule 353 (record_layout_optional -> src_addr_x .)
    DIST_OP_Z       reduce using rule 353 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_WORD  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_LONG  reduce using rule 353 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 353 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 353 (record_layout_optional -> src_addr_x .)
    RESERVED        reduce using rule 353 (record_layout_optional -> src_addr_x .)
    end             reduce using rule 353 (record_layout_optional -> src_addr_x .)


state 190

    (373) record_layout_optional -> alignment_float64_ieee .

    FNC_VALUES      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    IDENTIFICATION  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_X      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Y      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Z      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_X  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Y  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Z  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_X   reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_X    reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Y    reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Z    reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_X      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Y      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Z      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_X      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Y      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Z      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_W      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_X      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Y      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Z      reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_X        reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Y        reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Z        reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_X       reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Y       reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Z       reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_BYTE  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_WORD  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_LONG  reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    RESERVED        reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)
    end             reduce using rule 373 (record_layout_optional -> alignment_float64_ieee .)


state 191

    (397) no_rescale_z -> NO_RESCALE_Z . NUMERIC datatype

    NUMERIC         shift and go to state 323


state 192

    (395) no_rescale_x -> NO_RESCALE_X . NUMERIC datatype

    NUMERIC         shift and go to state 324


state 193

    (396) no_rescale_y -> NO_RESCALE_Y . NUMERIC datatype

    NUMERIC         shift and go to state 325


state 194

    (337) record_layout_optional -> identification .

    FNC_VALUES      reduce using rule 337 (record_layout_optional -> identification .)
    IDENTIFICATION  reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_PTS_X      reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_PTS_Y      reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_PTS_Z      reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_RESCALE_X  reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_RESCALE_Y  reduce using rule 337 (record_layout_optional -> identification .)
    AXIS_RESCALE_Z  reduce using rule 337 (record_layout_optional -> identification .)
    NO_AXIS_PTS_X   reduce using rule 337 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Y   reduce using rule 337 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Z   reduce using rule 337 (record_layout_optional -> identification .)
    NO_RESCALE_X    reduce using rule 337 (record_layout_optional -> identification .)
    NO_RESCALE_Y    reduce using rule 337 (record_layout_optional -> identification .)
    NO_RESCALE_Z    reduce using rule 337 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_X reduce using rule 337 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Y reduce using rule 337 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Z reduce using rule 337 (record_layout_optional -> identification .)
    SRC_ADDR_X      reduce using rule 337 (record_layout_optional -> identification .)
    SRC_ADDR_Y      reduce using rule 337 (record_layout_optional -> identification .)
    SRC_ADDR_Z      reduce using rule 337 (record_layout_optional -> identification .)
    RIP_ADDR_X      reduce using rule 337 (record_layout_optional -> identification .)
    RIP_ADDR_Y      reduce using rule 337 (record_layout_optional -> identification .)
    RIP_ADDR_Z      reduce using rule 337 (record_layout_optional -> identification .)
    RIP_ADDR_W      reduce using rule 337 (record_layout_optional -> identification .)
    SHIFT_OP_X      reduce using rule 337 (record_layout_optional -> identification .)
    SHIFT_OP_Y      reduce using rule 337 (record_layout_optional -> identification .)
    SHIFT_OP_Z      reduce using rule 337 (record_layout_optional -> identification .)
    OFFSET_X        reduce using rule 337 (record_layout_optional -> identification .)
    OFFSET_Y        reduce using rule 337 (record_layout_optional -> identification .)
    OFFSET_Z        reduce using rule 337 (record_layout_optional -> identification .)
    DIST_OP_X       reduce using rule 337 (record_layout_optional -> identification .)
    DIST_OP_Y       reduce using rule 337 (record_layout_optional -> identification .)
    DIST_OP_Z       reduce using rule 337 (record_layout_optional -> identification .)
    ALIGNMENT_BYTE  reduce using rule 337 (record_layout_optional -> identification .)
    ALIGNMENT_WORD  reduce using rule 337 (record_layout_optional -> identification .)
    ALIGNMENT_LONG  reduce using rule 337 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 337 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 337 (record_layout_optional -> identification .)
    RESERVED        reduce using rule 337 (record_layout_optional -> identification .)
    end             reduce using rule 337 (record_layout_optional -> identification .)


state 195

    (370) record_layout_optional -> alignment_word .

    FNC_VALUES      reduce using rule 370 (record_layout_optional -> alignment_word .)
    IDENTIFICATION  reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_PTS_X      reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Y      reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Z      reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_X  reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Y  reduce using rule 370 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Z  reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_X   reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Y   reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Z   reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_RESCALE_X    reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Y    reduce using rule 370 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Z    reduce using rule 370 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_X reduce using rule 370 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Y reduce using rule 370 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Z reduce using rule 370 (record_layout_optional -> alignment_word .)
    SRC_ADDR_X      reduce using rule 370 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Y      reduce using rule 370 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Z      reduce using rule 370 (record_layout_optional -> alignment_word .)
    RIP_ADDR_X      reduce using rule 370 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Y      reduce using rule 370 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Z      reduce using rule 370 (record_layout_optional -> alignment_word .)
    RIP_ADDR_W      reduce using rule 370 (record_layout_optional -> alignment_word .)
    SHIFT_OP_X      reduce using rule 370 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Y      reduce using rule 370 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Z      reduce using rule 370 (record_layout_optional -> alignment_word .)
    OFFSET_X        reduce using rule 370 (record_layout_optional -> alignment_word .)
    OFFSET_Y        reduce using rule 370 (record_layout_optional -> alignment_word .)
    OFFSET_Z        reduce using rule 370 (record_layout_optional -> alignment_word .)
    DIST_OP_X       reduce using rule 370 (record_layout_optional -> alignment_word .)
    DIST_OP_Y       reduce using rule 370 (record_layout_optional -> alignment_word .)
    DIST_OP_Z       reduce using rule 370 (record_layout_optional -> alignment_word .)
    ALIGNMENT_BYTE  reduce using rule 370 (record_layout_optional -> alignment_word .)
    ALIGNMENT_WORD  reduce using rule 370 (record_layout_optional -> alignment_word .)
    ALIGNMENT_LONG  reduce using rule 370 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 370 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 370 (record_layout_optional -> alignment_word .)
    RESERVED        reduce using rule 370 (record_layout_optional -> alignment_word .)
    end             reduce using rule 370 (record_layout_optional -> alignment_word .)


state 196

    (418) dist_op_z -> DIST_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 326


state 197

    (416) dist_op_x -> DIST_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 327


state 198

    (417) dist_op_y -> DIST_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 328


state 199

    (348) record_layout_optional -> no_rescale_y .

    FNC_VALUES      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    IDENTIFICATION  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_X      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Y      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Z      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_X    reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Y    reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Z    reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_X      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Y      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Z      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_X      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Y      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Z      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_W      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_X      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Y      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Z      reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    OFFSET_X        reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    OFFSET_Y        reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    OFFSET_Z        reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    DIST_OP_X       reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Y       reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Z       reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    RESERVED        reduce using rule 348 (record_layout_optional -> no_rescale_y .)
    end             reduce using rule 348 (record_layout_optional -> no_rescale_y .)


state 200

    (422) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE . NUMERIC

    NUMERIC         shift and go to state 329


state 201

    (368) record_layout_optional -> dist_op_z .

    FNC_VALUES      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    IDENTIFICATION  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_X      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Y      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Z      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_X  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Y  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Z  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_X   reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_X    reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Y    reduce using rule 368 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Z    reduce using rule 368 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 368 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 368 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_X      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Y      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Z      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_X      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Y      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Z      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_W      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_X      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Y      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Z      reduce using rule 368 (record_layout_optional -> dist_op_z .)
    OFFSET_X        reduce using rule 368 (record_layout_optional -> dist_op_z .)
    OFFSET_Y        reduce using rule 368 (record_layout_optional -> dist_op_z .)
    OFFSET_Z        reduce using rule 368 (record_layout_optional -> dist_op_z .)
    DIST_OP_X       reduce using rule 368 (record_layout_optional -> dist_op_z .)
    DIST_OP_Y       reduce using rule 368 (record_layout_optional -> dist_op_z .)
    DIST_OP_Z       reduce using rule 368 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_BYTE  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_WORD  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_LONG  reduce using rule 368 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 368 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 368 (record_layout_optional -> dist_op_z .)
    RESERVED        reduce using rule 368 (record_layout_optional -> dist_op_z .)
    end             reduce using rule 368 (record_layout_optional -> dist_op_z .)


state 202

    (366) record_layout_optional -> dist_op_x .

    FNC_VALUES      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    IDENTIFICATION  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_X      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Y      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Z      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_X  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Y  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Z  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_X   reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_X    reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Y    reduce using rule 366 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Z    reduce using rule 366 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 366 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 366 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_X      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Y      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Z      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_X      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Y      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Z      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_W      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_X      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Y      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Z      reduce using rule 366 (record_layout_optional -> dist_op_x .)
    OFFSET_X        reduce using rule 366 (record_layout_optional -> dist_op_x .)
    OFFSET_Y        reduce using rule 366 (record_layout_optional -> dist_op_x .)
    OFFSET_Z        reduce using rule 366 (record_layout_optional -> dist_op_x .)
    DIST_OP_X       reduce using rule 366 (record_layout_optional -> dist_op_x .)
    DIST_OP_Y       reduce using rule 366 (record_layout_optional -> dist_op_x .)
    DIST_OP_Z       reduce using rule 366 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_BYTE  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_WORD  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_LONG  reduce using rule 366 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 366 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 366 (record_layout_optional -> dist_op_x .)
    RESERVED        reduce using rule 366 (record_layout_optional -> dist_op_x .)
    end             reduce using rule 366 (record_layout_optional -> dist_op_x .)


state 203

    (367) record_layout_optional -> dist_op_y .

    FNC_VALUES      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    IDENTIFICATION  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_X      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Y      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Z      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_X  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Y  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Z  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_X   reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_X    reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Y    reduce using rule 367 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Z    reduce using rule 367 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 367 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 367 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_X      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Y      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Z      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_X      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Y      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Z      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_W      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_X      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Y      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Z      reduce using rule 367 (record_layout_optional -> dist_op_y .)
    OFFSET_X        reduce using rule 367 (record_layout_optional -> dist_op_y .)
    OFFSET_Y        reduce using rule 367 (record_layout_optional -> dist_op_y .)
    OFFSET_Z        reduce using rule 367 (record_layout_optional -> dist_op_y .)
    DIST_OP_X       reduce using rule 367 (record_layout_optional -> dist_op_y .)
    DIST_OP_Y       reduce using rule 367 (record_layout_optional -> dist_op_y .)
    DIST_OP_Z       reduce using rule 367 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_BYTE  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_WORD  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_LONG  reduce using rule 367 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 367 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 367 (record_layout_optional -> dist_op_y .)
    RESERVED        reduce using rule 367 (record_layout_optional -> dist_op_y .)
    end             reduce using rule 367 (record_layout_optional -> dist_op_y .)


state 204

    (375) record_layout_optional_list -> record_layout_optional .
    (376) record_layout_optional_list -> record_layout_optional . record_layout_optional_list
    (375) record_layout_optional_list -> . record_layout_optional
    (376) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (336) record_layout_optional -> . fnc_values
    (337) record_layout_optional -> . identification
    (338) record_layout_optional -> . axis_pts_x
    (339) record_layout_optional -> . axis_pts_y
    (340) record_layout_optional -> . axis_pts_z
    (341) record_layout_optional -> . axis_rescale_x
    (342) record_layout_optional -> . axis_rescale_y
    (343) record_layout_optional -> . axis_rescale_z
    (344) record_layout_optional -> . no_axis_pts_x
    (345) record_layout_optional -> . no_axis_pts_y
    (346) record_layout_optional -> . no_axis_pts_z
    (347) record_layout_optional -> . no_rescale_x
    (348) record_layout_optional -> . no_rescale_y
    (349) record_layout_optional -> . no_rescale_z
    (350) record_layout_optional -> . fix_no_axis_pts_x
    (351) record_layout_optional -> . fix_no_axis_pts_y
    (352) record_layout_optional -> . fix_no_axis_pts_z
    (353) record_layout_optional -> . src_addr_x
    (354) record_layout_optional -> . src_addr_y
    (355) record_layout_optional -> . src_addr_z
    (356) record_layout_optional -> . rip_addr_x
    (357) record_layout_optional -> . rip_addr_y
    (358) record_layout_optional -> . rip_addr_z
    (359) record_layout_optional -> . rip_addr_w
    (360) record_layout_optional -> . shift_op_x
    (361) record_layout_optional -> . shift_op_y
    (362) record_layout_optional -> . shift_op_z
    (363) record_layout_optional -> . offset_x
    (364) record_layout_optional -> . offset_y
    (365) record_layout_optional -> . offset_z
    (366) record_layout_optional -> . dist_op_x
    (367) record_layout_optional -> . dist_op_y
    (368) record_layout_optional -> . dist_op_z
    (369) record_layout_optional -> . alignment_byte
    (370) record_layout_optional -> . alignment_word
    (371) record_layout_optional -> . alignment_long
    (372) record_layout_optional -> . alignment_float32_ieee
    (373) record_layout_optional -> . alignment_float64_ieee
    (374) record_layout_optional -> . reserved
    (379) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (385) identification -> . IDENTIFICATION NUMERIC datatype
    (386) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (387) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (388) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (389) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (390) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (391) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (392) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (393) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (394) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (395) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (396) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (397) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (398) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (399) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (400) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (401) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (402) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (403) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (406) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (407) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (408) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (409) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (410) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (411) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (412) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (413) offset_x -> . OFFSET_X NUMERIC datatype
    (414) offset_y -> . OFFSET_Y NUMERIC datatype
    (415) offset_z -> . OFFSET_Z NUMERIC datatype
    (416) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (417) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (418) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (419) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (420) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (421) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (422) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (423) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (452) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 375 (record_layout_optional_list -> record_layout_optional .)
    FNC_VALUES      shift and go to state 238
    IDENTIFICATION  shift and go to state 220
    AXIS_PTS_X      shift and go to state 170
    AXIS_PTS_Y      shift and go to state 171
    AXIS_PTS_Z      shift and go to state 169
    AXIS_RESCALE_X  shift and go to state 227
    AXIS_RESCALE_Y  shift and go to state 228
    AXIS_RESCALE_Z  shift and go to state 226
    NO_AXIS_PTS_X   shift and go to state 164
    NO_AXIS_PTS_Y   shift and go to state 163
    NO_AXIS_PTS_Z   shift and go to state 165
    NO_RESCALE_X    shift and go to state 192
    NO_RESCALE_Y    shift and go to state 193
    NO_RESCALE_Z    shift and go to state 191
    FIX_NO_AXIS_PTS_X shift and go to state 186
    FIX_NO_AXIS_PTS_Y shift and go to state 185
    FIX_NO_AXIS_PTS_Z shift and go to state 187
    SRC_ADDR_X      shift and go to state 168
    SRC_ADDR_Y      shift and go to state 167
    SRC_ADDR_Z      shift and go to state 166
    RIP_ADDR_X      shift and go to state 232
    RIP_ADDR_Y      shift and go to state 233
    RIP_ADDR_Z      shift and go to state 231
    RIP_ADDR_W      shift and go to state 229
    SHIFT_OP_X      shift and go to state 177
    SHIFT_OP_Y      shift and go to state 176
    SHIFT_OP_Z      shift and go to state 179
    OFFSET_X        shift and go to state 223
    OFFSET_Y        shift and go to state 224
    OFFSET_Z        shift and go to state 225
    DIST_OP_X       shift and go to state 197
    DIST_OP_Y       shift and go to state 198
    DIST_OP_Z       shift and go to state 196
    ALIGNMENT_BYTE  shift and go to state 221
    ALIGNMENT_WORD  shift and go to state 219
    ALIGNMENT_LONG  shift and go to state 172
    ALIGNMENT_FLOAT32_IEEE shift and go to state 200
    ALIGNMENT_FLOAT64_IEEE shift and go to state 183
    RESERVED        shift and go to state 237

    reserved                       shift and go to state 222
    record_layout_optional         shift and go to state 204
    record_layout_optional_list    shift and go to state 330
    src_addr_z                     shift and go to state 239
    src_addr_y                     shift and go to state 188
    src_addr_x                     shift and go to state 189
    axis_rescale_z                 shift and go to state 173
    shift_op_z                     shift and go to state 242
    identification                 shift and go to state 194
    offset_y                       shift and go to state 235
    offset_z                       shift and go to state 236
    offset_x                       shift and go to state 234
    axis_rescale_y                 shift and go to state 175
    alignment_long                 shift and go to state 243
    alignment_float64_ieee         shift and go to state 190
    alignment_byte                 shift and go to state 230
    alignment_word                 shift and go to state 195
    shift_op_y                     shift and go to state 240
    no_axis_pts_y                  shift and go to state 208
    no_axis_pts_x                  shift and go to state 209
    axis_rescale_x                 shift and go to state 174
    no_axis_pts_z                  shift and go to state 210
    rip_addr_w                     shift and go to state 211
    fnc_values                     shift and go to state 212
    axis_pts_z                     shift and go to state 213
    alignment_float32_ieee         shift and go to state 244
    axis_pts_x                     shift and go to state 214
    axis_pts_y                     shift and go to state 215
    rip_addr_z                     shift and go to state 216
    rip_addr_x                     shift and go to state 217
    rip_addr_y                     shift and go to state 218
    no_rescale_z                   shift and go to state 184
    shift_op_x                     shift and go to state 241
    no_rescale_x                   shift and go to state 178
    no_rescale_y                   shift and go to state 199
    dist_op_z                      shift and go to state 201
    dist_op_x                      shift and go to state 202
    dist_op_y                      shift and go to state 203
    fix_no_axis_pts_y              shift and go to state 180
    fix_no_axis_pts_x              shift and go to state 181
    fix_no_axis_pts_z              shift and go to state 182

state 205

    (378) record_layout_optional_list_optional -> record_layout_optional_list .

    end             reduce using rule 378 (record_layout_optional_list_optional -> record_layout_optional_list .)


state 206

    (335) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional . end RECORD_LAYOUT

    end             shift and go to state 331


state 207

    (377) record_layout_optional_list_optional -> empty .

    end             reduce using rule 377 (record_layout_optional_list_optional -> empty .)


state 208

    (345) record_layout_optional -> no_axis_pts_y .

    FNC_VALUES      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_X        reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Y        reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Z        reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_X       reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    RESERVED        reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)
    end             reduce using rule 345 (record_layout_optional -> no_axis_pts_y .)


state 209

    (344) record_layout_optional -> no_axis_pts_x .

    FNC_VALUES      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_X        reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Y        reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Z        reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_X       reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    RESERVED        reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)
    end             reduce using rule 344 (record_layout_optional -> no_axis_pts_x .)


state 210

    (346) record_layout_optional -> no_axis_pts_z .

    FNC_VALUES      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_X        reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Y        reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Z        reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_X       reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    RESERVED        reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)
    end             reduce using rule 346 (record_layout_optional -> no_axis_pts_z .)


state 211

    (359) record_layout_optional -> rip_addr_w .

    FNC_VALUES      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    IDENTIFICATION  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_X      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Y      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Z      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_X  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Y  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Z  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_X   reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Y   reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Z   reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_X    reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Y    reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Z    reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_X reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Y reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Z reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_X      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Y      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Z      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_X      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Y      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Z      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_W      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_X      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Y      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Z      reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    OFFSET_X        reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    OFFSET_Y        reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    OFFSET_Z        reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    DIST_OP_X       reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Y       reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Z       reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_BYTE  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_WORD  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_LONG  reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    RESERVED        reduce using rule 359 (record_layout_optional -> rip_addr_w .)
    end             reduce using rule 359 (record_layout_optional -> rip_addr_w .)


state 212

    (336) record_layout_optional -> fnc_values .

    FNC_VALUES      reduce using rule 336 (record_layout_optional -> fnc_values .)
    IDENTIFICATION  reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_PTS_X      reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Y      reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Z      reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_X  reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Y  reduce using rule 336 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Z  reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_X   reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Y   reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Z   reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_RESCALE_X    reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Y    reduce using rule 336 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Z    reduce using rule 336 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_X reduce using rule 336 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Y reduce using rule 336 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Z reduce using rule 336 (record_layout_optional -> fnc_values .)
    SRC_ADDR_X      reduce using rule 336 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Y      reduce using rule 336 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Z      reduce using rule 336 (record_layout_optional -> fnc_values .)
    RIP_ADDR_X      reduce using rule 336 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Y      reduce using rule 336 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Z      reduce using rule 336 (record_layout_optional -> fnc_values .)
    RIP_ADDR_W      reduce using rule 336 (record_layout_optional -> fnc_values .)
    SHIFT_OP_X      reduce using rule 336 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Y      reduce using rule 336 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Z      reduce using rule 336 (record_layout_optional -> fnc_values .)
    OFFSET_X        reduce using rule 336 (record_layout_optional -> fnc_values .)
    OFFSET_Y        reduce using rule 336 (record_layout_optional -> fnc_values .)
    OFFSET_Z        reduce using rule 336 (record_layout_optional -> fnc_values .)
    DIST_OP_X       reduce using rule 336 (record_layout_optional -> fnc_values .)
    DIST_OP_Y       reduce using rule 336 (record_layout_optional -> fnc_values .)
    DIST_OP_Z       reduce using rule 336 (record_layout_optional -> fnc_values .)
    ALIGNMENT_BYTE  reduce using rule 336 (record_layout_optional -> fnc_values .)
    ALIGNMENT_WORD  reduce using rule 336 (record_layout_optional -> fnc_values .)
    ALIGNMENT_LONG  reduce using rule 336 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 336 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 336 (record_layout_optional -> fnc_values .)
    RESERVED        reduce using rule 336 (record_layout_optional -> fnc_values .)
    end             reduce using rule 336 (record_layout_optional -> fnc_values .)


state 213

    (340) record_layout_optional -> axis_pts_z .

    FNC_VALUES      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    IDENTIFICATION  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_X      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_X    reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_X      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_X      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_W      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_X      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    OFFSET_X        reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    OFFSET_Y        reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    OFFSET_Z        reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    DIST_OP_X       reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Y       reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Z       reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    RESERVED        reduce using rule 340 (record_layout_optional -> axis_pts_z .)
    end             reduce using rule 340 (record_layout_optional -> axis_pts_z .)


state 214

    (338) record_layout_optional -> axis_pts_x .

    FNC_VALUES      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    IDENTIFICATION  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_X      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_X    reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_X      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_X      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_W      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_X      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    OFFSET_X        reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    OFFSET_Y        reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    OFFSET_Z        reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    DIST_OP_X       reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Y       reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Z       reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    RESERVED        reduce using rule 338 (record_layout_optional -> axis_pts_x .)
    end             reduce using rule 338 (record_layout_optional -> axis_pts_x .)


state 215

    (339) record_layout_optional -> axis_pts_y .

    FNC_VALUES      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    IDENTIFICATION  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_X      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_X    reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_X      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_X      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_W      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_X      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    OFFSET_X        reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    OFFSET_Y        reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    OFFSET_Z        reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    DIST_OP_X       reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Y       reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Z       reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    RESERVED        reduce using rule 339 (record_layout_optional -> axis_pts_y .)
    end             reduce using rule 339 (record_layout_optional -> axis_pts_y .)


state 216

    (358) record_layout_optional -> rip_addr_z .

    FNC_VALUES      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    IDENTIFICATION  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_X      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Y      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Z      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_X  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_X    reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Y    reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Z    reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_X      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Y      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Z      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_X      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Y      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Z      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_W      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_X      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Y      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Z      reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    OFFSET_X        reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    OFFSET_Y        reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    OFFSET_Z        reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    DIST_OP_X       reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Y       reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Z       reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_WORD  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_LONG  reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    RESERVED        reduce using rule 358 (record_layout_optional -> rip_addr_z .)
    end             reduce using rule 358 (record_layout_optional -> rip_addr_z .)


state 217

    (356) record_layout_optional -> rip_addr_x .

    FNC_VALUES      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    IDENTIFICATION  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_X      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Y      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Z      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_X  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_X    reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Y    reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Z    reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_X      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Y      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Z      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_X      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Y      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Z      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_W      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_X      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Y      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Z      reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    OFFSET_X        reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    OFFSET_Y        reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    OFFSET_Z        reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    DIST_OP_X       reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Y       reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Z       reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_WORD  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_LONG  reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    RESERVED        reduce using rule 356 (record_layout_optional -> rip_addr_x .)
    end             reduce using rule 356 (record_layout_optional -> rip_addr_x .)


state 218

    (357) record_layout_optional -> rip_addr_y .

    FNC_VALUES      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    IDENTIFICATION  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_X      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Y      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Z      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_X  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_X    reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Y    reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Z    reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_X      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Y      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Z      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_X      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Y      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Z      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_W      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_X      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Y      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Z      reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    OFFSET_X        reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    OFFSET_Y        reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    OFFSET_Z        reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    DIST_OP_X       reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Y       reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Z       reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_WORD  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_LONG  reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    RESERVED        reduce using rule 357 (record_layout_optional -> rip_addr_y .)
    end             reduce using rule 357 (record_layout_optional -> rip_addr_y .)


state 219

    (420) alignment_word -> ALIGNMENT_WORD . NUMERIC

    NUMERIC         shift and go to state 332


state 220

    (385) identification -> IDENTIFICATION . NUMERIC datatype

    NUMERIC         shift and go to state 333


state 221

    (419) alignment_byte -> ALIGNMENT_BYTE . NUMERIC

    NUMERIC         shift and go to state 334


state 222

    (374) record_layout_optional -> reserved .

    FNC_VALUES      reduce using rule 374 (record_layout_optional -> reserved .)
    IDENTIFICATION  reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_PTS_X      reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_PTS_Y      reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_PTS_Z      reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_RESCALE_X  reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Y  reduce using rule 374 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Z  reduce using rule 374 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_X   reduce using rule 374 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Y   reduce using rule 374 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Z   reduce using rule 374 (record_layout_optional -> reserved .)
    NO_RESCALE_X    reduce using rule 374 (record_layout_optional -> reserved .)
    NO_RESCALE_Y    reduce using rule 374 (record_layout_optional -> reserved .)
    NO_RESCALE_Z    reduce using rule 374 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_X reduce using rule 374 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Y reduce using rule 374 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Z reduce using rule 374 (record_layout_optional -> reserved .)
    SRC_ADDR_X      reduce using rule 374 (record_layout_optional -> reserved .)
    SRC_ADDR_Y      reduce using rule 374 (record_layout_optional -> reserved .)
    SRC_ADDR_Z      reduce using rule 374 (record_layout_optional -> reserved .)
    RIP_ADDR_X      reduce using rule 374 (record_layout_optional -> reserved .)
    RIP_ADDR_Y      reduce using rule 374 (record_layout_optional -> reserved .)
    RIP_ADDR_Z      reduce using rule 374 (record_layout_optional -> reserved .)
    RIP_ADDR_W      reduce using rule 374 (record_layout_optional -> reserved .)
    SHIFT_OP_X      reduce using rule 374 (record_layout_optional -> reserved .)
    SHIFT_OP_Y      reduce using rule 374 (record_layout_optional -> reserved .)
    SHIFT_OP_Z      reduce using rule 374 (record_layout_optional -> reserved .)
    OFFSET_X        reduce using rule 374 (record_layout_optional -> reserved .)
    OFFSET_Y        reduce using rule 374 (record_layout_optional -> reserved .)
    OFFSET_Z        reduce using rule 374 (record_layout_optional -> reserved .)
    DIST_OP_X       reduce using rule 374 (record_layout_optional -> reserved .)
    DIST_OP_Y       reduce using rule 374 (record_layout_optional -> reserved .)
    DIST_OP_Z       reduce using rule 374 (record_layout_optional -> reserved .)
    ALIGNMENT_BYTE  reduce using rule 374 (record_layout_optional -> reserved .)
    ALIGNMENT_WORD  reduce using rule 374 (record_layout_optional -> reserved .)
    ALIGNMENT_LONG  reduce using rule 374 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 374 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 374 (record_layout_optional -> reserved .)
    RESERVED        reduce using rule 374 (record_layout_optional -> reserved .)
    end             reduce using rule 374 (record_layout_optional -> reserved .)


state 223

    (413) offset_x -> OFFSET_X . NUMERIC datatype

    NUMERIC         shift and go to state 335


state 224

    (414) offset_y -> OFFSET_Y . NUMERIC datatype

    NUMERIC         shift and go to state 336


state 225

    (415) offset_z -> OFFSET_Z . NUMERIC datatype

    NUMERIC         shift and go to state 337


state 226

    (391) axis_rescale_z -> AXIS_RESCALE_Z . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 338


state 227

    (389) axis_rescale_x -> AXIS_RESCALE_X . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 339


state 228

    (390) axis_rescale_y -> AXIS_RESCALE_Y . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 340


state 229

    (409) rip_addr_w -> RIP_ADDR_W . NUMERIC datatype

    NUMERIC         shift and go to state 341


state 230

    (369) record_layout_optional -> alignment_byte .

    FNC_VALUES      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    IDENTIFICATION  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_X      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Y      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Z      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_X  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Y  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Z  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_X   reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Y   reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Z   reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_X    reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Y    reduce using rule 369 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Z    reduce using rule 369 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_X reduce using rule 369 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Y reduce using rule 369 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Z reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_X      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Y      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Z      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_X      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Y      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Z      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_W      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_X      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Y      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Z      reduce using rule 369 (record_layout_optional -> alignment_byte .)
    OFFSET_X        reduce using rule 369 (record_layout_optional -> alignment_byte .)
    OFFSET_Y        reduce using rule 369 (record_layout_optional -> alignment_byte .)
    OFFSET_Z        reduce using rule 369 (record_layout_optional -> alignment_byte .)
    DIST_OP_X       reduce using rule 369 (record_layout_optional -> alignment_byte .)
    DIST_OP_Y       reduce using rule 369 (record_layout_optional -> alignment_byte .)
    DIST_OP_Z       reduce using rule 369 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_BYTE  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_WORD  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_LONG  reduce using rule 369 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 369 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 369 (record_layout_optional -> alignment_byte .)
    RESERVED        reduce using rule 369 (record_layout_optional -> alignment_byte .)
    end             reduce using rule 369 (record_layout_optional -> alignment_byte .)


state 231

    (408) rip_addr_z -> RIP_ADDR_Z . NUMERIC datatype

    NUMERIC         shift and go to state 342


state 232

    (406) rip_addr_x -> RIP_ADDR_X . NUMERIC datatype

    NUMERIC         shift and go to state 343


state 233

    (407) rip_addr_y -> RIP_ADDR_Y . NUMERIC datatype

    NUMERIC         shift and go to state 344


state 234

    (363) record_layout_optional -> offset_x .

    FNC_VALUES      reduce using rule 363 (record_layout_optional -> offset_x .)
    IDENTIFICATION  reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_PTS_X      reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_PTS_Y      reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_PTS_Z      reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_X  reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Y  reduce using rule 363 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Z  reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_X   reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Y   reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Z   reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_RESCALE_X    reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_RESCALE_Y    reduce using rule 363 (record_layout_optional -> offset_x .)
    NO_RESCALE_Z    reduce using rule 363 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 363 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 363 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 363 (record_layout_optional -> offset_x .)
    SRC_ADDR_X      reduce using rule 363 (record_layout_optional -> offset_x .)
    SRC_ADDR_Y      reduce using rule 363 (record_layout_optional -> offset_x .)
    SRC_ADDR_Z      reduce using rule 363 (record_layout_optional -> offset_x .)
    RIP_ADDR_X      reduce using rule 363 (record_layout_optional -> offset_x .)
    RIP_ADDR_Y      reduce using rule 363 (record_layout_optional -> offset_x .)
    RIP_ADDR_Z      reduce using rule 363 (record_layout_optional -> offset_x .)
    RIP_ADDR_W      reduce using rule 363 (record_layout_optional -> offset_x .)
    SHIFT_OP_X      reduce using rule 363 (record_layout_optional -> offset_x .)
    SHIFT_OP_Y      reduce using rule 363 (record_layout_optional -> offset_x .)
    SHIFT_OP_Z      reduce using rule 363 (record_layout_optional -> offset_x .)
    OFFSET_X        reduce using rule 363 (record_layout_optional -> offset_x .)
    OFFSET_Y        reduce using rule 363 (record_layout_optional -> offset_x .)
    OFFSET_Z        reduce using rule 363 (record_layout_optional -> offset_x .)
    DIST_OP_X       reduce using rule 363 (record_layout_optional -> offset_x .)
    DIST_OP_Y       reduce using rule 363 (record_layout_optional -> offset_x .)
    DIST_OP_Z       reduce using rule 363 (record_layout_optional -> offset_x .)
    ALIGNMENT_BYTE  reduce using rule 363 (record_layout_optional -> offset_x .)
    ALIGNMENT_WORD  reduce using rule 363 (record_layout_optional -> offset_x .)
    ALIGNMENT_LONG  reduce using rule 363 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 363 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 363 (record_layout_optional -> offset_x .)
    RESERVED        reduce using rule 363 (record_layout_optional -> offset_x .)
    end             reduce using rule 363 (record_layout_optional -> offset_x .)


state 235

    (364) record_layout_optional -> offset_y .

    FNC_VALUES      reduce using rule 364 (record_layout_optional -> offset_y .)
    IDENTIFICATION  reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_PTS_X      reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_PTS_Y      reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_PTS_Z      reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_X  reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Y  reduce using rule 364 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Z  reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_X   reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Y   reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Z   reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_RESCALE_X    reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_RESCALE_Y    reduce using rule 364 (record_layout_optional -> offset_y .)
    NO_RESCALE_Z    reduce using rule 364 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 364 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 364 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 364 (record_layout_optional -> offset_y .)
    SRC_ADDR_X      reduce using rule 364 (record_layout_optional -> offset_y .)
    SRC_ADDR_Y      reduce using rule 364 (record_layout_optional -> offset_y .)
    SRC_ADDR_Z      reduce using rule 364 (record_layout_optional -> offset_y .)
    RIP_ADDR_X      reduce using rule 364 (record_layout_optional -> offset_y .)
    RIP_ADDR_Y      reduce using rule 364 (record_layout_optional -> offset_y .)
    RIP_ADDR_Z      reduce using rule 364 (record_layout_optional -> offset_y .)
    RIP_ADDR_W      reduce using rule 364 (record_layout_optional -> offset_y .)
    SHIFT_OP_X      reduce using rule 364 (record_layout_optional -> offset_y .)
    SHIFT_OP_Y      reduce using rule 364 (record_layout_optional -> offset_y .)
    SHIFT_OP_Z      reduce using rule 364 (record_layout_optional -> offset_y .)
    OFFSET_X        reduce using rule 364 (record_layout_optional -> offset_y .)
    OFFSET_Y        reduce using rule 364 (record_layout_optional -> offset_y .)
    OFFSET_Z        reduce using rule 364 (record_layout_optional -> offset_y .)
    DIST_OP_X       reduce using rule 364 (record_layout_optional -> offset_y .)
    DIST_OP_Y       reduce using rule 364 (record_layout_optional -> offset_y .)
    DIST_OP_Z       reduce using rule 364 (record_layout_optional -> offset_y .)
    ALIGNMENT_BYTE  reduce using rule 364 (record_layout_optional -> offset_y .)
    ALIGNMENT_WORD  reduce using rule 364 (record_layout_optional -> offset_y .)
    ALIGNMENT_LONG  reduce using rule 364 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 364 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 364 (record_layout_optional -> offset_y .)
    RESERVED        reduce using rule 364 (record_layout_optional -> offset_y .)
    end             reduce using rule 364 (record_layout_optional -> offset_y .)


state 236

    (365) record_layout_optional -> offset_z .

    FNC_VALUES      reduce using rule 365 (record_layout_optional -> offset_z .)
    IDENTIFICATION  reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_PTS_X      reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_PTS_Y      reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_PTS_Z      reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_X  reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Y  reduce using rule 365 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Z  reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_X   reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Y   reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Z   reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_RESCALE_X    reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_RESCALE_Y    reduce using rule 365 (record_layout_optional -> offset_z .)
    NO_RESCALE_Z    reduce using rule 365 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 365 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 365 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 365 (record_layout_optional -> offset_z .)
    SRC_ADDR_X      reduce using rule 365 (record_layout_optional -> offset_z .)
    SRC_ADDR_Y      reduce using rule 365 (record_layout_optional -> offset_z .)
    SRC_ADDR_Z      reduce using rule 365 (record_layout_optional -> offset_z .)
    RIP_ADDR_X      reduce using rule 365 (record_layout_optional -> offset_z .)
    RIP_ADDR_Y      reduce using rule 365 (record_layout_optional -> offset_z .)
    RIP_ADDR_Z      reduce using rule 365 (record_layout_optional -> offset_z .)
    RIP_ADDR_W      reduce using rule 365 (record_layout_optional -> offset_z .)
    SHIFT_OP_X      reduce using rule 365 (record_layout_optional -> offset_z .)
    SHIFT_OP_Y      reduce using rule 365 (record_layout_optional -> offset_z .)
    SHIFT_OP_Z      reduce using rule 365 (record_layout_optional -> offset_z .)
    OFFSET_X        reduce using rule 365 (record_layout_optional -> offset_z .)
    OFFSET_Y        reduce using rule 365 (record_layout_optional -> offset_z .)
    OFFSET_Z        reduce using rule 365 (record_layout_optional -> offset_z .)
    DIST_OP_X       reduce using rule 365 (record_layout_optional -> offset_z .)
    DIST_OP_Y       reduce using rule 365 (record_layout_optional -> offset_z .)
    DIST_OP_Z       reduce using rule 365 (record_layout_optional -> offset_z .)
    ALIGNMENT_BYTE  reduce using rule 365 (record_layout_optional -> offset_z .)
    ALIGNMENT_WORD  reduce using rule 365 (record_layout_optional -> offset_z .)
    ALIGNMENT_LONG  reduce using rule 365 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 365 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 365 (record_layout_optional -> offset_z .)
    RESERVED        reduce using rule 365 (record_layout_optional -> offset_z .)
    end             reduce using rule 365 (record_layout_optional -> offset_z .)


state 237

    (452) reserved -> RESERVED . NUMERIC datasize

    NUMERIC         shift and go to state 345


state 238

    (379) fnc_values -> FNC_VALUES . NUMERIC datatype fnc_values_index_mode addrtype

    NUMERIC         shift and go to state 346


state 239

    (355) record_layout_optional -> src_addr_z .

    FNC_VALUES      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    IDENTIFICATION  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_X      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Y      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Z      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_X  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_X    reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Y    reduce using rule 355 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Z    reduce using rule 355 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 355 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 355 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_X      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Y      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Z      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_X      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Y      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Z      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_W      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_X      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Y      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Z      reduce using rule 355 (record_layout_optional -> src_addr_z .)
    OFFSET_X        reduce using rule 355 (record_layout_optional -> src_addr_z .)
    OFFSET_Y        reduce using rule 355 (record_layout_optional -> src_addr_z .)
    OFFSET_Z        reduce using rule 355 (record_layout_optional -> src_addr_z .)
    DIST_OP_X       reduce using rule 355 (record_layout_optional -> src_addr_z .)
    DIST_OP_Y       reduce using rule 355 (record_layout_optional -> src_addr_z .)
    DIST_OP_Z       reduce using rule 355 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_WORD  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_LONG  reduce using rule 355 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 355 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 355 (record_layout_optional -> src_addr_z .)
    RESERVED        reduce using rule 355 (record_layout_optional -> src_addr_z .)
    end             reduce using rule 355 (record_layout_optional -> src_addr_z .)


state 240

    (361) record_layout_optional -> shift_op_y .

    FNC_VALUES      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    IDENTIFICATION  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_X      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Y      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Z      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_X  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Y  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Z  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_X   reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_X    reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Y    reduce using rule 361 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Z    reduce using rule 361 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 361 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 361 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_X      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Y      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Z      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_X      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Y      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Z      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_W      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_X      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Y      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Z      reduce using rule 361 (record_layout_optional -> shift_op_y .)
    OFFSET_X        reduce using rule 361 (record_layout_optional -> shift_op_y .)
    OFFSET_Y        reduce using rule 361 (record_layout_optional -> shift_op_y .)
    OFFSET_Z        reduce using rule 361 (record_layout_optional -> shift_op_y .)
    DIST_OP_X       reduce using rule 361 (record_layout_optional -> shift_op_y .)
    DIST_OP_Y       reduce using rule 361 (record_layout_optional -> shift_op_y .)
    DIST_OP_Z       reduce using rule 361 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_BYTE  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_WORD  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_LONG  reduce using rule 361 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 361 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 361 (record_layout_optional -> shift_op_y .)
    RESERVED        reduce using rule 361 (record_layout_optional -> shift_op_y .)
    end             reduce using rule 361 (record_layout_optional -> shift_op_y .)


state 241

    (360) record_layout_optional -> shift_op_x .

    FNC_VALUES      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    IDENTIFICATION  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_X      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Y      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Z      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_X  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Y  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Z  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_X   reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_X    reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Y    reduce using rule 360 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Z    reduce using rule 360 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 360 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 360 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_X      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Y      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Z      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_X      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Y      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Z      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_W      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_X      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Y      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Z      reduce using rule 360 (record_layout_optional -> shift_op_x .)
    OFFSET_X        reduce using rule 360 (record_layout_optional -> shift_op_x .)
    OFFSET_Y        reduce using rule 360 (record_layout_optional -> shift_op_x .)
    OFFSET_Z        reduce using rule 360 (record_layout_optional -> shift_op_x .)
    DIST_OP_X       reduce using rule 360 (record_layout_optional -> shift_op_x .)
    DIST_OP_Y       reduce using rule 360 (record_layout_optional -> shift_op_x .)
    DIST_OP_Z       reduce using rule 360 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_BYTE  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_WORD  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_LONG  reduce using rule 360 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 360 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 360 (record_layout_optional -> shift_op_x .)
    RESERVED        reduce using rule 360 (record_layout_optional -> shift_op_x .)
    end             reduce using rule 360 (record_layout_optional -> shift_op_x .)


state 242

    (362) record_layout_optional -> shift_op_z .

    FNC_VALUES      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    IDENTIFICATION  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_X      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Y      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Z      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_X  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Y  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Z  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_X   reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_X    reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Y    reduce using rule 362 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Z    reduce using rule 362 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 362 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 362 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_X      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Y      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Z      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_X      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Y      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Z      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_W      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_X      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Y      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Z      reduce using rule 362 (record_layout_optional -> shift_op_z .)
    OFFSET_X        reduce using rule 362 (record_layout_optional -> shift_op_z .)
    OFFSET_Y        reduce using rule 362 (record_layout_optional -> shift_op_z .)
    OFFSET_Z        reduce using rule 362 (record_layout_optional -> shift_op_z .)
    DIST_OP_X       reduce using rule 362 (record_layout_optional -> shift_op_z .)
    DIST_OP_Y       reduce using rule 362 (record_layout_optional -> shift_op_z .)
    DIST_OP_Z       reduce using rule 362 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_BYTE  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_WORD  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_LONG  reduce using rule 362 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 362 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 362 (record_layout_optional -> shift_op_z .)
    RESERVED        reduce using rule 362 (record_layout_optional -> shift_op_z .)
    end             reduce using rule 362 (record_layout_optional -> shift_op_z .)


state 243

    (371) record_layout_optional -> alignment_long .

    FNC_VALUES      reduce using rule 371 (record_layout_optional -> alignment_long .)
    IDENTIFICATION  reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_PTS_X      reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Y      reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Z      reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_X  reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Y  reduce using rule 371 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Z  reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_X   reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Y   reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Z   reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_RESCALE_X    reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Y    reduce using rule 371 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Z    reduce using rule 371 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_X reduce using rule 371 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Y reduce using rule 371 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Z reduce using rule 371 (record_layout_optional -> alignment_long .)
    SRC_ADDR_X      reduce using rule 371 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Y      reduce using rule 371 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Z      reduce using rule 371 (record_layout_optional -> alignment_long .)
    RIP_ADDR_X      reduce using rule 371 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Y      reduce using rule 371 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Z      reduce using rule 371 (record_layout_optional -> alignment_long .)
    RIP_ADDR_W      reduce using rule 371 (record_layout_optional -> alignment_long .)
    SHIFT_OP_X      reduce using rule 371 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Y      reduce using rule 371 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Z      reduce using rule 371 (record_layout_optional -> alignment_long .)
    OFFSET_X        reduce using rule 371 (record_layout_optional -> alignment_long .)
    OFFSET_Y        reduce using rule 371 (record_layout_optional -> alignment_long .)
    OFFSET_Z        reduce using rule 371 (record_layout_optional -> alignment_long .)
    DIST_OP_X       reduce using rule 371 (record_layout_optional -> alignment_long .)
    DIST_OP_Y       reduce using rule 371 (record_layout_optional -> alignment_long .)
    DIST_OP_Z       reduce using rule 371 (record_layout_optional -> alignment_long .)
    ALIGNMENT_BYTE  reduce using rule 371 (record_layout_optional -> alignment_long .)
    ALIGNMENT_WORD  reduce using rule 371 (record_layout_optional -> alignment_long .)
    ALIGNMENT_LONG  reduce using rule 371 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 371 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 371 (record_layout_optional -> alignment_long .)
    RESERVED        reduce using rule 371 (record_layout_optional -> alignment_long .)
    end             reduce using rule 371 (record_layout_optional -> alignment_long .)


state 244

    (372) record_layout_optional -> alignment_float32_ieee .

    FNC_VALUES      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    IDENTIFICATION  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_X      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Y      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Z      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_X  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Y  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Z  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_X   reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_X    reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Y    reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Z    reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_X      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Y      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Z      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_X      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Y      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Z      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_W      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_X      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Y      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Z      reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_X        reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Y        reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Z        reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_X       reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Y       reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Z       reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_BYTE  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_WORD  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_LONG  reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    RESERVED        reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)
    end             reduce using rule 372 (record_layout_optional -> alignment_float32_ieee .)


state 245

    (258) compu_method -> begin COMPU_METHOD IDENT STRING . compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (259) compu_method_conversion_type -> . TAB_INTP
    (260) compu_method_conversion_type -> . TAB_NOINTP
    (261) compu_method_conversion_type -> . TAB_VERB
    (262) compu_method_conversion_type -> . RAT_FUNC
    (263) compu_method_conversion_type -> . FORM
    (264) compu_method_conversion_type -> . IDENTICAL

    TAB_INTP        shift and go to state 351
    TAB_NOINTP      shift and go to state 352
    TAB_VERB        shift and go to state 353
    RAT_FUNC        shift and go to state 349
    FORM            shift and go to state 348
    IDENTICAL       shift and go to state 347

    compu_method_conversion_type   shift and go to state 350

state 246

    (424) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end . VARIANT_CODING

    VARIANT_CODING  shift and go to state 354


state 247

    (449) variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .

    end             reduce using rule 449 (variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .)


state 248

    (430) var_characteristic -> begin VAR_CHARACTERISTIC . IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    IDENT           shift and go to state 355


state 249

    (435) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB . ident_ident_value_list end VAR_FORBIDDEN_COMB
    (436) ident_ident_value_list -> . ident_ident_value
    (437) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (438) ident_ident_value -> . IDENT IDENT

    IDENT           shift and go to state 356

    ident_ident_value              shift and go to state 357
    ident_ident_value_list         shift and go to state 358

state 250

    (439) var_criterion -> begin VAR_CRITERION . IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    IDENT           shift and go to state 359


state 251

    (433) var_separator -> VAR_SEPARATOR STRING .

    VAR_SEPARATOR   reduce using rule 433 (var_separator -> VAR_SEPARATOR STRING .)
    VAR_NAMING      reduce using rule 433 (var_separator -> VAR_SEPARATOR STRING .)
    begin           reduce using rule 433 (var_separator -> VAR_SEPARATOR STRING .)
    end             reduce using rule 433 (var_separator -> VAR_SEPARATOR STRING .)


state 252

    (434) var_naming -> VAR_NAMING IDENT .

    VAR_SEPARATOR   reduce using rule 434 (var_naming -> VAR_NAMING IDENT .)
    VAR_NAMING      reduce using rule 434 (var_naming -> VAR_NAMING IDENT .)
    begin           reduce using rule 434 (var_naming -> VAR_NAMING IDENT .)
    end             reduce using rule 434 (var_naming -> VAR_NAMING IDENT .)


state 253

    (204) axis_pts -> begin AXIS_PTS IDENT STRING . NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 360


state 254

    (225) measurement -> begin MEASUREMENT IDENT STRING . datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 362

state 255

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING . NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    NUMERIC         shift and go to state 372


state 256

    (302) function -> begin FUNCTION IDENT STRING . function_optional_list_optional end FUNCTION
    (313) function_optional_list_optional -> . empty
    (314) function_optional_list_optional -> . function_optional_list
    (481) empty -> .
    (311) function_optional_list -> . function_optional
    (312) function_optional_list -> . function_optional function_optional_list
    (303) function_optional -> . annotation
    (304) function_optional -> . def_characteristic
    (305) function_optional -> . ref_characteristic
    (306) function_optional -> . in_measurement
    (307) function_optional -> . out_measurement
    (308) function_optional -> . loc_measurement
    (309) function_optional -> . sub_function
    (310) function_optional -> . function_version
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (315) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (316) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (317) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (318) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (319) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (320) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (321) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 481 (empty -> .)
    begin           shift and go to state 379
    FUNCTION_VERSION shift and go to state 374

    function_optional              shift and go to state 373
    out_measurement                shift and go to state 384
    loc_measurement                shift and go to state 375
    def_characteristic             shift and go to state 380
    function_version               shift and go to state 386
    sub_function                   shift and go to state 381
    in_measurement                 shift and go to state 377
    ref_characteristic             shift and go to state 385
    function_optional_list_optional shift and go to state 383
    function_optional_list         shift and go to state 382
    annotation                     shift and go to state 376
    empty                          shift and go to state 378

state 257

    (130) mod_par -> begin MOD_PAR end MOD_PAR .

    begin           reduce using rule 130 (mod_par -> begin MOD_PAR end MOD_PAR .)
    end             reduce using rule 130 (mod_par -> begin MOD_PAR end MOD_PAR .)


state 258

    (132) if_data -> begin IF_DATA IDENT end . IF_DATA

    IF_DATA         shift and go to state 387


state 259

    (283) compu_tab -> begin COMPU_TAB IDENT STRING . compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (284) compu_tab_conversion_type -> . TAB_INTP
    (285) compu_tab_conversion_type -> . TAB_NOINTP

    TAB_INTP        shift and go to state 388
    TAB_NOINTP      shift and go to state 390

    compu_tab_conversion_type      shift and go to state 389

state 260

    (131) mod_common -> begin MOD_COMMON end MOD_COMMON .

    begin           reduce using rule 131 (mod_common -> begin MOD_COMMON end MOD_COMMON .)
    end             reduce using rule 131 (mod_common -> begin MOD_COMMON end MOD_COMMON .)


state 261

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING . characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (134) characteristic_type -> . VALUE
    (135) characteristic_type -> . CURVE
    (136) characteristic_type -> . MAP
    (137) characteristic_type -> . CUBOID
    (138) characteristic_type -> . VAL_BLK
    (139) characteristic_type -> . ASCII

    VALUE           shift and go to state 392
    CURVE           shift and go to state 393
    MAP             shift and go to state 391
    CUBOID          shift and go to state 395
    VAL_BLK         shift and go to state 394
    ASCII           shift and go to state 397

    characteristic_type            shift and go to state 396

state 262

    (469) unit -> begin UNIT IDENT STRING . STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 398


state 263

    (463) user_rights_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 463 (user_rights_optional -> READ_ONLY .)
    begin           reduce using rule 463 (user_rights_optional -> READ_ONLY .)
    end             reduce using rule 463 (user_rights_optional -> READ_ONLY .)


state 264

    (468) ref_group -> begin . REF_GROUP ident_list end REF_GROUP

    REF_GROUP       shift and go to state 399


state 265

    (467) user_rights_optional_list_optional -> user_rights_optional_list .

    end             reduce using rule 467 (user_rights_optional_list_optional -> user_rights_optional_list .)


state 266

    (461) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional . end USER_RIGHTS

    end             shift and go to state 400


state 267

    (464) user_rights_optional_list -> user_rights_optional .
    (465) user_rights_optional_list -> user_rights_optional . user_rights_optional_list
    (464) user_rights_optional_list -> . user_rights_optional
    (465) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (462) user_rights_optional -> . ref_group
    (463) user_rights_optional -> . READ_ONLY
    (468) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 464 (user_rights_optional_list -> user_rights_optional .)
    READ_ONLY       shift and go to state 263
    begin           shift and go to state 264

    user_rights_optional           shift and go to state 267
    ref_group                      shift and go to state 268
    user_rights_optional_list      shift and go to state 401

state 268

    (462) user_rights_optional -> ref_group .

    READ_ONLY       reduce using rule 462 (user_rights_optional -> ref_group .)
    begin           reduce using rule 462 (user_rights_optional -> ref_group .)
    end             reduce using rule 462 (user_rights_optional -> ref_group .)


state 269

    (466) user_rights_optional_list_optional -> empty .

    end             reduce using rule 466 (user_rights_optional_list_optional -> empty .)


state 270

    (453) frame -> begin FRAME IDENT STRING . NUMERIC NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 402


state 271

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 403


state 272

    (31) a2ml_struct_member_list -> a2ml_struct_member .
    (32) a2ml_struct_member_list -> a2ml_struct_member . a2ml_struct_member_list
    (31) a2ml_struct_member_list -> . a2ml_struct_member
    (32) a2ml_struct_member_list -> . a2ml_struct_member a2ml_struct_member_list
    (33) a2ml_struct_member -> . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    CURLY_CLOSE     reduce using rule 31 (a2ml_struct_member_list -> a2ml_struct_member .)
    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_struct_member             shift and go to state 272
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_member                    shift and go to state 273
    a2ml_struct_member_list        shift and go to state 404
    a2ml_type_name                 shift and go to state 275

state 273

    (33) a2ml_struct_member -> a2ml_member . SEMICOLON

    SEMICOLON       shift and go to state 405


state 274

    (29) a2ml_struct_member_list_optional -> empty .

    CURLY_CLOSE     reduce using rule 29 (a2ml_struct_member_list_optional -> empty .)


state 275

    (34) a2ml_member -> a2ml_type_name . a2ml_array_specifier_optional
    (37) a2ml_array_specifier_optional -> . empty
    (38) a2ml_array_specifier_optional -> . a2ml_array_specifier
    (481) empty -> .
    (39) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier

    SEMICOLON       reduce using rule 481 (empty -> .)
    PARENTHESE_CLOSE reduce using rule 481 (empty -> .)
    BRACE_OPEN      shift and go to state 408

    a2ml_array_specifier           shift and go to state 407
    a2ml_array_specifier_optional  shift and go to state 409
    empty                          shift and go to state 406

state 276

    (30) a2ml_struct_member_list_optional -> a2ml_struct_member_list .

    CURLY_CLOSE     reduce using rule 30 (a2ml_struct_member_list_optional -> a2ml_struct_member_list .)


state 277

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 410


state 278

    (55) a2ml_taggedunion_member_list -> a2ml_taggedunion_member .
    (56) a2ml_taggedunion_member_list -> a2ml_taggedunion_member . a2ml_taggedunion_member_list
    (55) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member
    (56) a2ml_taggedunion_member_list -> . a2ml_taggedunion_member a2ml_taggedunion_member_list
    (57) a2ml_taggedunion_member -> . a2ml_tag a2ml_member SEMICOLON
    (58) a2ml_taggedunion_member -> . a2ml_block_definition SEMICOLON
    (59) a2ml_tag -> . STRING
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name

    CURLY_CLOSE     reduce using rule 55 (a2ml_taggedunion_member_list -> a2ml_taggedunion_member .)
    STRING          shift and go to state 124
    block           shift and go to state 90

    a2ml_block_definition          shift and go to state 280
    a2ml_taggedunion_member_list   shift and go to state 411
    a2ml_taggedunion_member        shift and go to state 278
    a2ml_tag                       shift and go to state 279

state 279

    (57) a2ml_taggedunion_member -> a2ml_tag . a2ml_member SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_member                    shift and go to state 412
    a2ml_type_name                 shift and go to state 275

state 280

    (58) a2ml_taggedunion_member -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 413


state 281

    (25) a2ml_enumerator -> a2ml_keyword . EQUAL a2ml_constant
    (26) a2ml_enumerator -> a2ml_keyword .

    EQUAL           shift and go to state 414
    COMMA           reduce using rule 26 (a2ml_enumerator -> a2ml_keyword .)
    CURLY_CLOSE     reduce using rule 26 (a2ml_enumerator -> a2ml_keyword .)


state 282

    (63) a2ml_keyword -> STRING .

    EQUAL           reduce using rule 63 (a2ml_keyword -> STRING .)
    COMMA           reduce using rule 63 (a2ml_keyword -> STRING .)
    CURLY_CLOSE     reduce using rule 63 (a2ml_keyword -> STRING .)


state 283

    (23) a2ml_enumerator_list -> a2ml_enumerator .
    (24) a2ml_enumerator_list -> a2ml_enumerator . COMMA a2ml_enumerator_list

    CURLY_CLOSE     reduce using rule 23 (a2ml_enumerator_list -> a2ml_enumerator .)
    COMMA           shift and go to state 415


state 284

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 416


state 285

    (49) a2ml_taggedstruct_member -> a2ml_block_definition . SEMICOLON

    SEMICOLON       shift and go to state 417


state 286

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN . a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN . a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    block           shift and go to state 90
    STRING          shift and go to state 124

    a2ml_block_definition          shift and go to state 418
    a2ml_taggedstruct_definition   shift and go to state 419
    a2ml_tag                       shift and go to state 289

state 287

    (45) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member .
    (46) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member . a2ml_taggedstruct_member_list
    (45) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member
    (46) a2ml_taggedstruct_member_list -> . a2ml_taggedstruct_member a2ml_taggedstruct_member_list
    (47) a2ml_taggedstruct_member -> . a2ml_taggedstruct_definition SEMICOLON
    (48) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (49) a2ml_taggedstruct_member -> . a2ml_block_definition SEMICOLON
    (50) a2ml_taggedstruct_member -> . PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON
    (51) a2ml_taggedstruct_definition -> . a2ml_tag a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> . a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
    (20) a2ml_block_definition -> . block a2ml_tag a2ml_type_name
    (59) a2ml_tag -> . STRING

    CURLY_CLOSE     reduce using rule 45 (a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member .)
    PARENTHESE_OPEN shift and go to state 286
    block           shift and go to state 90
    STRING          shift and go to state 124

    a2ml_taggedstruct_member       shift and go to state 287
    a2ml_block_definition          shift and go to state 285
    a2ml_taggedstruct_member_list  shift and go to state 420
    a2ml_taggedstruct_definition   shift and go to state 288
    a2ml_tag                       shift and go to state 289

state 288

    (47) a2ml_taggedstruct_member -> a2ml_taggedstruct_definition . SEMICOLON

    SEMICOLON       shift and go to state 421


state 289

    (51) a2ml_taggedstruct_definition -> a2ml_tag . a2ml_member_optional
    (52) a2ml_taggedstruct_definition -> a2ml_tag . PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
    (35) a2ml_member_optional -> . empty
    (36) a2ml_member_optional -> . a2ml_member
    (481) empty -> .
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    PARENTHESE_OPEN shift and go to state 422
    SEMICOLON       reduce using rule 481 (empty -> .)
    PARENTHESE_CLOSE reduce using rule 481 (empty -> .)
    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_member_optional           shift and go to state 425
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_member                    shift and go to state 423
    empty                          shift and go to state 424
    a2ml_type_name                 shift and go to state 275

state 290

    (44) a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list .

    CURLY_CLOSE     reduce using rule 44 (a2ml_taggedstruct_member_list_optional -> a2ml_taggedstruct_member_list .)


state 291

    (43) a2ml_taggedstruct_member_list_optional -> empty .

    CURLY_CLOSE     reduce using rule 43 (a2ml_taggedstruct_member_list_optional -> empty .)


state 292

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional . CURLY_CLOSE

    CURLY_CLOSE     shift and go to state 426


state 293

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type . NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    NUMERIC         shift and go to state 427


state 294

    (290) compu_vtab_conversion_type -> TAB_VERB .

    NUMERIC         reduce using rule 290 (compu_vtab_conversion_type -> TAB_VERB .)


state 295

    (322) group -> begin GROUP IDENT STRING group_optional_list_optional . end GROUP

    end             shift and go to state 428


state 296

    (326) group_optional -> ref_measurement .

    ROOT            reduce using rule 326 (group_optional -> ref_measurement .)
    begin           reduce using rule 326 (group_optional -> ref_measurement .)
    end             reduce using rule 326 (group_optional -> ref_measurement .)


state 297

    (323) group_optional -> annotation .

    ROOT            reduce using rule 323 (group_optional -> annotation .)
    begin           reduce using rule 323 (group_optional -> annotation .)
    end             reduce using rule 323 (group_optional -> annotation .)


state 298

    (324) group_optional -> ROOT .

    ROOT            reduce using rule 324 (group_optional -> ROOT .)
    begin           reduce using rule 324 (group_optional -> ROOT .)
    end             reduce using rule 324 (group_optional -> ROOT .)


state 299

    (331) group_optional_list_optional -> empty .

    end             reduce using rule 331 (group_optional_list_optional -> empty .)


state 300

    (154) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (316) ref_characteristic -> begin . REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (333) ref_measurement -> begin . REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (146) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (334) sub_group -> begin . SUB_GROUP ident_list end SUB_GROUP

    ANNOTATION      shift and go to state 433
    REF_CHARACTERISTIC shift and go to state 432
    REF_MEASUREMENT shift and go to state 431
    FUNCTION_LIST   shift and go to state 430
    SUB_GROUP       shift and go to state 429


state 301

    (328) group_optional -> sub_group .

    ROOT            reduce using rule 328 (group_optional -> sub_group .)
    begin           reduce using rule 328 (group_optional -> sub_group .)
    end             reduce using rule 328 (group_optional -> sub_group .)


state 302

    (332) group_optional_list_optional -> group_optional_list .

    end             reduce using rule 332 (group_optional_list_optional -> group_optional_list .)


state 303

    (329) group_optional_list -> group_optional .
    (330) group_optional_list -> group_optional . group_optional_list
    (329) group_optional_list -> . group_optional
    (330) group_optional_list -> . group_optional group_optional_list
    (323) group_optional -> . annotation
    (324) group_optional -> . ROOT
    (325) group_optional -> . ref_characteristic
    (326) group_optional -> . ref_measurement
    (327) group_optional -> . function_list
    (328) group_optional -> . sub_group
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (316) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (333) ref_measurement -> . begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (334) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 329 (group_optional_list -> group_optional .)
    ROOT            shift and go to state 298
    begin           shift and go to state 300

    sub_group                      shift and go to state 301
    function_list                  shift and go to state 304
    group_optional                 shift and go to state 303
    ref_measurement                shift and go to state 296
    ref_characteristic             shift and go to state 305
    group_optional_list            shift and go to state 434
    annotation                     shift and go to state 297

state 304

    (327) group_optional -> function_list .

    ROOT            reduce using rule 327 (group_optional -> function_list .)
    begin           reduce using rule 327 (group_optional -> function_list .)
    end             reduce using rule 327 (group_optional -> function_list .)


state 305

    (325) group_optional -> ref_characteristic .

    ROOT            reduce using rule 325 (group_optional -> ref_characteristic .)
    begin           reduce using rule 325 (group_optional -> ref_characteristic .)
    end             reduce using rule 325 (group_optional -> ref_characteristic .)


state 306

    (393) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 435

state 307

    (392) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 436

state 308

    (394) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 437

state 309

    (403) src_addr_z -> SRC_ADDR_Z NUMERIC . src_addr_optional
    (404) src_addr_optional -> . empty
    (405) src_addr_optional -> . datatype
    (481) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 481 (empty -> .)
    IDENTIFICATION  reduce using rule 481 (empty -> .)
    AXIS_PTS_X      reduce using rule 481 (empty -> .)
    AXIS_PTS_Y      reduce using rule 481 (empty -> .)
    AXIS_PTS_Z      reduce using rule 481 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 481 (empty -> .)
    NO_RESCALE_X    reduce using rule 481 (empty -> .)
    NO_RESCALE_Y    reduce using rule 481 (empty -> .)
    NO_RESCALE_Z    reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 481 (empty -> .)
    SRC_ADDR_X      reduce using rule 481 (empty -> .)
    SRC_ADDR_Y      reduce using rule 481 (empty -> .)
    SRC_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_X      reduce using rule 481 (empty -> .)
    RIP_ADDR_Y      reduce using rule 481 (empty -> .)
    RIP_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_W      reduce using rule 481 (empty -> .)
    SHIFT_OP_X      reduce using rule 481 (empty -> .)
    SHIFT_OP_Y      reduce using rule 481 (empty -> .)
    SHIFT_OP_Z      reduce using rule 481 (empty -> .)
    OFFSET_X        reduce using rule 481 (empty -> .)
    OFFSET_Y        reduce using rule 481 (empty -> .)
    OFFSET_Z        reduce using rule 481 (empty -> .)
    DIST_OP_X       reduce using rule 481 (empty -> .)
    DIST_OP_Y       reduce using rule 481 (empty -> .)
    DIST_OP_Z       reduce using rule 481 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 481 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 481 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 481 (empty -> .)
    RESERVED        reduce using rule 481 (empty -> .)
    end             reduce using rule 481 (empty -> .)
    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 438
    empty                          shift and go to state 440
    src_addr_optional              shift and go to state 439

state 310

    (402) src_addr_y -> SRC_ADDR_Y NUMERIC . src_addr_optional
    (404) src_addr_optional -> . empty
    (405) src_addr_optional -> . datatype
    (481) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 481 (empty -> .)
    IDENTIFICATION  reduce using rule 481 (empty -> .)
    AXIS_PTS_X      reduce using rule 481 (empty -> .)
    AXIS_PTS_Y      reduce using rule 481 (empty -> .)
    AXIS_PTS_Z      reduce using rule 481 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 481 (empty -> .)
    NO_RESCALE_X    reduce using rule 481 (empty -> .)
    NO_RESCALE_Y    reduce using rule 481 (empty -> .)
    NO_RESCALE_Z    reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 481 (empty -> .)
    SRC_ADDR_X      reduce using rule 481 (empty -> .)
    SRC_ADDR_Y      reduce using rule 481 (empty -> .)
    SRC_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_X      reduce using rule 481 (empty -> .)
    RIP_ADDR_Y      reduce using rule 481 (empty -> .)
    RIP_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_W      reduce using rule 481 (empty -> .)
    SHIFT_OP_X      reduce using rule 481 (empty -> .)
    SHIFT_OP_Y      reduce using rule 481 (empty -> .)
    SHIFT_OP_Z      reduce using rule 481 (empty -> .)
    OFFSET_X        reduce using rule 481 (empty -> .)
    OFFSET_Y        reduce using rule 481 (empty -> .)
    OFFSET_Z        reduce using rule 481 (empty -> .)
    DIST_OP_X       reduce using rule 481 (empty -> .)
    DIST_OP_Y       reduce using rule 481 (empty -> .)
    DIST_OP_Z       reduce using rule 481 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 481 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 481 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 481 (empty -> .)
    RESERVED        reduce using rule 481 (empty -> .)
    end             reduce using rule 481 (empty -> .)
    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 438
    empty                          shift and go to state 440
    src_addr_optional              shift and go to state 441

state 311

    (401) src_addr_x -> SRC_ADDR_X NUMERIC . src_addr_optional
    (404) src_addr_optional -> . empty
    (405) src_addr_optional -> . datatype
    (481) empty -> .
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 481 (empty -> .)
    IDENTIFICATION  reduce using rule 481 (empty -> .)
    AXIS_PTS_X      reduce using rule 481 (empty -> .)
    AXIS_PTS_Y      reduce using rule 481 (empty -> .)
    AXIS_PTS_Z      reduce using rule 481 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 481 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 481 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 481 (empty -> .)
    NO_RESCALE_X    reduce using rule 481 (empty -> .)
    NO_RESCALE_Y    reduce using rule 481 (empty -> .)
    NO_RESCALE_Z    reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 481 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 481 (empty -> .)
    SRC_ADDR_X      reduce using rule 481 (empty -> .)
    SRC_ADDR_Y      reduce using rule 481 (empty -> .)
    SRC_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_X      reduce using rule 481 (empty -> .)
    RIP_ADDR_Y      reduce using rule 481 (empty -> .)
    RIP_ADDR_Z      reduce using rule 481 (empty -> .)
    RIP_ADDR_W      reduce using rule 481 (empty -> .)
    SHIFT_OP_X      reduce using rule 481 (empty -> .)
    SHIFT_OP_Y      reduce using rule 481 (empty -> .)
    SHIFT_OP_Z      reduce using rule 481 (empty -> .)
    OFFSET_X        reduce using rule 481 (empty -> .)
    OFFSET_Y        reduce using rule 481 (empty -> .)
    OFFSET_Z        reduce using rule 481 (empty -> .)
    DIST_OP_X       reduce using rule 481 (empty -> .)
    DIST_OP_Y       reduce using rule 481 (empty -> .)
    DIST_OP_Z       reduce using rule 481 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 481 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 481 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 481 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 481 (empty -> .)
    RESERVED        reduce using rule 481 (empty -> .)
    end             reduce using rule 481 (empty -> .)
    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 438
    empty                          shift and go to state 440
    src_addr_optional              shift and go to state 442

state 312

    (388) axis_pts_z -> AXIS_PTS_Z NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 443

state 313

    (386) axis_pts_x -> AXIS_PTS_X NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 444

state 314

    (387) axis_pts_y -> AXIS_PTS_Y NUMERIC . datatype indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 445

state 315

    (421) alignment_long -> ALIGNMENT_LONG NUMERIC .

    FNC_VALUES      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    IDENTIFICATION  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_X      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Y      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Z      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_X    reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Y    reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Z    reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_X      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Y      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Z      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_X      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Y      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Z      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_W      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_X      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Y      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Z      reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_X        reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Y        reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Z        reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_X       reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Y       reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Z       reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RESERVED        reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    end             reduce using rule 421 (alignment_long -> ALIGNMENT_LONG NUMERIC .)


state 316

    (411) shift_op_y -> SHIFT_OP_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 446

state 317

    (410) shift_op_x -> SHIFT_OP_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 447

state 318

    (412) shift_op_z -> SHIFT_OP_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 448

state 319

    (423) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .

    FNC_VALUES      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RESERVED        reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    end             reduce using rule 423 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)


state 320

    (399) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .

    FNC_VALUES      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    IDENTIFICATION  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_X      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Y      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Z      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_X    reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Y    reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Z    reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_X      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Y      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Z      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_X      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Y      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Z      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_W      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_X      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Y      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Z      reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_X        reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Y        reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Z        reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_X       reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Y       reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Z       reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RESERVED        reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    end             reduce using rule 399 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)


state 321

    (398) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .

    FNC_VALUES      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    IDENTIFICATION  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_X      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Y      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Z      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_X    reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Y    reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Z    reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_X      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Y      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Z      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_X      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Y      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Z      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_W      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_X      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Y      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Z      reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_X        reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Y        reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Z        reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_X       reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Y       reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Z       reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RESERVED        reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    end             reduce using rule 398 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)


state 322

    (400) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .

    FNC_VALUES      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    IDENTIFICATION  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_X      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Y      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Z      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_X    reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Y    reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Z    reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_X      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Y      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Z      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_X      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Y      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Z      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_W      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_X      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Y      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Z      reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_X        reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Y        reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Z        reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_X       reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Y       reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Z       reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RESERVED        reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    end             reduce using rule 400 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)


state 323

    (397) no_rescale_z -> NO_RESCALE_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 449

state 324

    (395) no_rescale_x -> NO_RESCALE_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 450

state 325

    (396) no_rescale_y -> NO_RESCALE_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 451

state 326

    (418) dist_op_z -> DIST_OP_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 452

state 327

    (416) dist_op_x -> DIST_OP_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 453

state 328

    (417) dist_op_y -> DIST_OP_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 454

state 329

    (422) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .

    FNC_VALUES      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RESERVED        reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    end             reduce using rule 422 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)


state 330

    (376) record_layout_optional_list -> record_layout_optional record_layout_optional_list .

    end             reduce using rule 376 (record_layout_optional_list -> record_layout_optional record_layout_optional_list .)


state 331

    (335) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end . RECORD_LAYOUT

    RECORD_LAYOUT   shift and go to state 455


state 332

    (420) alignment_word -> ALIGNMENT_WORD NUMERIC .

    FNC_VALUES      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    IDENTIFICATION  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_X      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Y      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Z      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_X    reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Y    reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Z    reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_X      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Y      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Z      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_X      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Y      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Z      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_W      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_X      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Y      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Z      reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_X        reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Y        reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Z        reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_X       reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Y       reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Z       reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RESERVED        reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    end             reduce using rule 420 (alignment_word -> ALIGNMENT_WORD NUMERIC .)


state 333

    (385) identification -> IDENTIFICATION NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 456

state 334

    (419) alignment_byte -> ALIGNMENT_BYTE NUMERIC .

    FNC_VALUES      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    IDENTIFICATION  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_X      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_X    reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_X      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_X      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_W      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_X      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_X        reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Y        reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Z        reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_X       reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Y       reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Z       reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RESERVED        reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    end             reduce using rule 419 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)


state 335

    (413) offset_x -> OFFSET_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 457

state 336

    (414) offset_y -> OFFSET_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 458

state 337

    (415) offset_z -> OFFSET_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 459

state 338

    (391) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 460

state 339

    (389) axis_rescale_x -> AXIS_RESCALE_X NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 461

state 340

    (390) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC . datatype NUMERIC indexorder addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 462

state 341

    (409) rip_addr_w -> RIP_ADDR_W NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 463

state 342

    (408) rip_addr_z -> RIP_ADDR_Z NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 464

state 343

    (406) rip_addr_x -> RIP_ADDR_X NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 465

state 344

    (407) rip_addr_y -> RIP_ADDR_Y NUMERIC . datatype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 466

state 345

    (452) reserved -> RESERVED NUMERIC . datasize
    (75) datasize -> . BYTE
    (76) datasize -> . WORD
    (77) datasize -> . LONG

    BYTE            shift and go to state 469
    WORD            shift and go to state 467
    LONG            shift and go to state 468

    datasize                       shift and go to state 470

state 346

    (379) fnc_values -> FNC_VALUES NUMERIC . datatype fnc_values_index_mode addrtype
    (65) datatype -> . UBYTE
    (66) datatype -> . SBYTE
    (67) datatype -> . UWORD
    (68) datatype -> . SWORD
    (69) datatype -> . ULONG
    (70) datatype -> . SLONG
    (71) datatype -> . A_UINT64
    (72) datatype -> . A_INT64
    (73) datatype -> . FLOAT32_IEEE
    (74) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 371
    SBYTE           shift and go to state 370
    UWORD           shift and go to state 367
    SWORD           shift and go to state 368
    ULONG           shift and go to state 361
    SLONG           shift and go to state 369
    A_UINT64        shift and go to state 365
    A_INT64         shift and go to state 363
    FLOAT32_IEEE    shift and go to state 364
    FLOAT64_IEEE    shift and go to state 366

    datatype                       shift and go to state 471

state 347

    (264) compu_method_conversion_type -> IDENTICAL .

    STRING          reduce using rule 264 (compu_method_conversion_type -> IDENTICAL .)


state 348

    (263) compu_method_conversion_type -> FORM .

    STRING          reduce using rule 263 (compu_method_conversion_type -> FORM .)


state 349

    (262) compu_method_conversion_type -> RAT_FUNC .

    STRING          reduce using rule 262 (compu_method_conversion_type -> RAT_FUNC .)


state 350

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type . STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 472


state 351

    (259) compu_method_conversion_type -> TAB_INTP .

    STRING          reduce using rule 259 (compu_method_conversion_type -> TAB_INTP .)


state 352

    (260) compu_method_conversion_type -> TAB_NOINTP .

    STRING          reduce using rule 260 (compu_method_conversion_type -> TAB_NOINTP .)


state 353

    (261) compu_method_conversion_type -> TAB_VERB .

    STRING          reduce using rule 261 (compu_method_conversion_type -> TAB_VERB .)


state 354

    (424) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .

    begin           reduce using rule 424 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)
    end             reduce using rule 424 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)


state 355

    (430) var_characteristic -> begin VAR_CHARACTERISTIC IDENT . ident_list var_characteristic_optional end VAR_CHARACTERISTIC
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 474

state 356

    (438) ident_ident_value -> IDENT . IDENT

    IDENT           shift and go to state 475


state 357

    (436) ident_ident_value_list -> ident_ident_value .
    (437) ident_ident_value_list -> ident_ident_value . ident_ident_value_list
    (436) ident_ident_value_list -> . ident_ident_value
    (437) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (438) ident_ident_value -> . IDENT IDENT

    end             reduce using rule 436 (ident_ident_value_list -> ident_ident_value .)
    IDENT           shift and go to state 356

    ident_ident_value              shift and go to state 357
    ident_ident_value_list         shift and go to state 476

state 358

    (435) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list . end VAR_FORBIDDEN_COMB

    end             shift and go to state 477


state 359

    (439) var_criterion -> begin VAR_CRITERION IDENT . STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    STRING          shift and go to state 478


state 360

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC . IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 479


state 361

    (69) datatype -> ULONG .

    FNC_VALUES      reduce using rule 69 (datatype -> ULONG .)
    IDENTIFICATION  reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_X      reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_Y      reduce using rule 69 (datatype -> ULONG .)
    AXIS_PTS_Z      reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_X  reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_Y  reduce using rule 69 (datatype -> ULONG .)
    AXIS_RESCALE_Z  reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_X   reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_Y   reduce using rule 69 (datatype -> ULONG .)
    NO_AXIS_PTS_Z   reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_X    reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_Y    reduce using rule 69 (datatype -> ULONG .)
    NO_RESCALE_Z    reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 69 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_X      reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_Y      reduce using rule 69 (datatype -> ULONG .)
    SRC_ADDR_Z      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_X      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_Y      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_Z      reduce using rule 69 (datatype -> ULONG .)
    RIP_ADDR_W      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_X      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_Y      reduce using rule 69 (datatype -> ULONG .)
    SHIFT_OP_Z      reduce using rule 69 (datatype -> ULONG .)
    OFFSET_X        reduce using rule 69 (datatype -> ULONG .)
    OFFSET_Y        reduce using rule 69 (datatype -> ULONG .)
    OFFSET_Z        reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_X       reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_Y       reduce using rule 69 (datatype -> ULONG .)
    DIST_OP_Z       reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_BYTE  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_WORD  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_LONG  reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 69 (datatype -> ULONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 69 (datatype -> ULONG .)
    RESERVED        reduce using rule 69 (datatype -> ULONG .)
    end             reduce using rule 69 (datatype -> ULONG .)
    INDEX_INCR      reduce using rule 69 (datatype -> ULONG .)
    INDEX_DECR      reduce using rule 69 (datatype -> ULONG .)
    NUMERIC         reduce using rule 69 (datatype -> ULONG .)
    COLUMN_DIR      reduce using rule 69 (datatype -> ULONG .)
    ROW_DIR         reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_WITH_X reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_WITH_Y reduce using rule 69 (datatype -> ULONG .)
    ALTERNATE_CURVES reduce using rule 69 (datatype -> ULONG .)
    IDENT           reduce using rule 69 (datatype -> ULONG .)


state 362

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype . IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 480


state 363

    (72) datatype -> A_INT64 .

    FNC_VALUES      reduce using rule 72 (datatype -> A_INT64 .)
    IDENTIFICATION  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_X      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_Y      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_PTS_Z      reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_X  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_Y  reduce using rule 72 (datatype -> A_INT64 .)
    AXIS_RESCALE_Z  reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_X   reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Y   reduce using rule 72 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Z   reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_X    reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_Y    reduce using rule 72 (datatype -> A_INT64 .)
    NO_RESCALE_Z    reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 72 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_X      reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_Y      reduce using rule 72 (datatype -> A_INT64 .)
    SRC_ADDR_Z      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_X      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_Y      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_Z      reduce using rule 72 (datatype -> A_INT64 .)
    RIP_ADDR_W      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_X      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_Y      reduce using rule 72 (datatype -> A_INT64 .)
    SHIFT_OP_Z      reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_X        reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_Y        reduce using rule 72 (datatype -> A_INT64 .)
    OFFSET_Z        reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_X       reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_Y       reduce using rule 72 (datatype -> A_INT64 .)
    DIST_OP_Z       reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_BYTE  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_WORD  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_LONG  reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 72 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 72 (datatype -> A_INT64 .)
    RESERVED        reduce using rule 72 (datatype -> A_INT64 .)
    end             reduce using rule 72 (datatype -> A_INT64 .)
    INDEX_INCR      reduce using rule 72 (datatype -> A_INT64 .)
    INDEX_DECR      reduce using rule 72 (datatype -> A_INT64 .)
    NUMERIC         reduce using rule 72 (datatype -> A_INT64 .)
    COLUMN_DIR      reduce using rule 72 (datatype -> A_INT64 .)
    ROW_DIR         reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_WITH_X reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_WITH_Y reduce using rule 72 (datatype -> A_INT64 .)
    ALTERNATE_CURVES reduce using rule 72 (datatype -> A_INT64 .)
    IDENT           reduce using rule 72 (datatype -> A_INT64 .)


state 364

    (73) datatype -> FLOAT32_IEEE .

    FNC_VALUES      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    IDENTIFICATION  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_X  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_X    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Y    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Z    reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_W      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_X      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Y      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Z      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_X        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_Y        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    OFFSET_Z        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_X       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Y       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Z       reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_WORD  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_LONG  reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    RESERVED        reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    end             reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    INDEX_INCR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    INDEX_DECR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    NUMERIC         reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    COLUMN_DIR      reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ROW_DIR         reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_X reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_CURVES reduce using rule 73 (datatype -> FLOAT32_IEEE .)
    IDENT           reduce using rule 73 (datatype -> FLOAT32_IEEE .)


state 365

    (71) datatype -> A_UINT64 .

    FNC_VALUES      reduce using rule 71 (datatype -> A_UINT64 .)
    IDENTIFICATION  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_X      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_PTS_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_X  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Y  reduce using rule 71 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Z  reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_X   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Y   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Z   reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_X    reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_Y    reduce using rule 71 (datatype -> A_UINT64 .)
    NO_RESCALE_Z    reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 71 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_X      reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    SRC_ADDR_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_X      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    RIP_ADDR_W      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_X      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_Y      reduce using rule 71 (datatype -> A_UINT64 .)
    SHIFT_OP_Z      reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_X        reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_Y        reduce using rule 71 (datatype -> A_UINT64 .)
    OFFSET_Z        reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_X       reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_Y       reduce using rule 71 (datatype -> A_UINT64 .)
    DIST_OP_Z       reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_BYTE  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_WORD  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_LONG  reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 71 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 71 (datatype -> A_UINT64 .)
    RESERVED        reduce using rule 71 (datatype -> A_UINT64 .)
    end             reduce using rule 71 (datatype -> A_UINT64 .)
    INDEX_INCR      reduce using rule 71 (datatype -> A_UINT64 .)
    INDEX_DECR      reduce using rule 71 (datatype -> A_UINT64 .)
    NUMERIC         reduce using rule 71 (datatype -> A_UINT64 .)
    COLUMN_DIR      reduce using rule 71 (datatype -> A_UINT64 .)
    ROW_DIR         reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_X reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_Y reduce using rule 71 (datatype -> A_UINT64 .)
    ALTERNATE_CURVES reduce using rule 71 (datatype -> A_UINT64 .)
    IDENT           reduce using rule 71 (datatype -> A_UINT64 .)


state 366

    (74) datatype -> FLOAT64_IEEE .

    FNC_VALUES      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    IDENTIFICATION  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_X  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_X    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Y    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Z    reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_W      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_X      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Y      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Z      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_X        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_Y        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    OFFSET_Z        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_X       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Y       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Z       reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_WORD  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_LONG  reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    RESERVED        reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    end             reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    INDEX_INCR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    INDEX_DECR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    NUMERIC         reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    COLUMN_DIR      reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ROW_DIR         reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_X reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_CURVES reduce using rule 74 (datatype -> FLOAT64_IEEE .)
    IDENT           reduce using rule 74 (datatype -> FLOAT64_IEEE .)


state 367

    (67) datatype -> UWORD .

    FNC_VALUES      reduce using rule 67 (datatype -> UWORD .)
    IDENTIFICATION  reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_X      reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_Y      reduce using rule 67 (datatype -> UWORD .)
    AXIS_PTS_Z      reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_X  reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_Y  reduce using rule 67 (datatype -> UWORD .)
    AXIS_RESCALE_Z  reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_X   reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_Y   reduce using rule 67 (datatype -> UWORD .)
    NO_AXIS_PTS_Z   reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_X    reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_Y    reduce using rule 67 (datatype -> UWORD .)
    NO_RESCALE_Z    reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 67 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_X      reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_Y      reduce using rule 67 (datatype -> UWORD .)
    SRC_ADDR_Z      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_X      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_Y      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_Z      reduce using rule 67 (datatype -> UWORD .)
    RIP_ADDR_W      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_X      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_Y      reduce using rule 67 (datatype -> UWORD .)
    SHIFT_OP_Z      reduce using rule 67 (datatype -> UWORD .)
    OFFSET_X        reduce using rule 67 (datatype -> UWORD .)
    OFFSET_Y        reduce using rule 67 (datatype -> UWORD .)
    OFFSET_Z        reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_X       reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_Y       reduce using rule 67 (datatype -> UWORD .)
    DIST_OP_Z       reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_BYTE  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_WORD  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_LONG  reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 67 (datatype -> UWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 67 (datatype -> UWORD .)
    RESERVED        reduce using rule 67 (datatype -> UWORD .)
    end             reduce using rule 67 (datatype -> UWORD .)
    INDEX_INCR      reduce using rule 67 (datatype -> UWORD .)
    INDEX_DECR      reduce using rule 67 (datatype -> UWORD .)
    NUMERIC         reduce using rule 67 (datatype -> UWORD .)
    COLUMN_DIR      reduce using rule 67 (datatype -> UWORD .)
    ROW_DIR         reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_WITH_X reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_WITH_Y reduce using rule 67 (datatype -> UWORD .)
    ALTERNATE_CURVES reduce using rule 67 (datatype -> UWORD .)
    IDENT           reduce using rule 67 (datatype -> UWORD .)


state 368

    (68) datatype -> SWORD .

    FNC_VALUES      reduce using rule 68 (datatype -> SWORD .)
    IDENTIFICATION  reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_X      reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_Y      reduce using rule 68 (datatype -> SWORD .)
    AXIS_PTS_Z      reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_X  reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_Y  reduce using rule 68 (datatype -> SWORD .)
    AXIS_RESCALE_Z  reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_X   reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_Y   reduce using rule 68 (datatype -> SWORD .)
    NO_AXIS_PTS_Z   reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_X    reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_Y    reduce using rule 68 (datatype -> SWORD .)
    NO_RESCALE_Z    reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 68 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_X      reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_Y      reduce using rule 68 (datatype -> SWORD .)
    SRC_ADDR_Z      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_X      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_Y      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_Z      reduce using rule 68 (datatype -> SWORD .)
    RIP_ADDR_W      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_X      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_Y      reduce using rule 68 (datatype -> SWORD .)
    SHIFT_OP_Z      reduce using rule 68 (datatype -> SWORD .)
    OFFSET_X        reduce using rule 68 (datatype -> SWORD .)
    OFFSET_Y        reduce using rule 68 (datatype -> SWORD .)
    OFFSET_Z        reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_X       reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_Y       reduce using rule 68 (datatype -> SWORD .)
    DIST_OP_Z       reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_BYTE  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_WORD  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_LONG  reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 68 (datatype -> SWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 68 (datatype -> SWORD .)
    RESERVED        reduce using rule 68 (datatype -> SWORD .)
    end             reduce using rule 68 (datatype -> SWORD .)
    INDEX_INCR      reduce using rule 68 (datatype -> SWORD .)
    INDEX_DECR      reduce using rule 68 (datatype -> SWORD .)
    NUMERIC         reduce using rule 68 (datatype -> SWORD .)
    COLUMN_DIR      reduce using rule 68 (datatype -> SWORD .)
    ROW_DIR         reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_WITH_X reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_WITH_Y reduce using rule 68 (datatype -> SWORD .)
    ALTERNATE_CURVES reduce using rule 68 (datatype -> SWORD .)
    IDENT           reduce using rule 68 (datatype -> SWORD .)


state 369

    (70) datatype -> SLONG .

    FNC_VALUES      reduce using rule 70 (datatype -> SLONG .)
    IDENTIFICATION  reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_X      reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_Y      reduce using rule 70 (datatype -> SLONG .)
    AXIS_PTS_Z      reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_X  reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_Y  reduce using rule 70 (datatype -> SLONG .)
    AXIS_RESCALE_Z  reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_X   reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_Y   reduce using rule 70 (datatype -> SLONG .)
    NO_AXIS_PTS_Z   reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_X    reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_Y    reduce using rule 70 (datatype -> SLONG .)
    NO_RESCALE_Z    reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 70 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_X      reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_Y      reduce using rule 70 (datatype -> SLONG .)
    SRC_ADDR_Z      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_X      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_Y      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_Z      reduce using rule 70 (datatype -> SLONG .)
    RIP_ADDR_W      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_X      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_Y      reduce using rule 70 (datatype -> SLONG .)
    SHIFT_OP_Z      reduce using rule 70 (datatype -> SLONG .)
    OFFSET_X        reduce using rule 70 (datatype -> SLONG .)
    OFFSET_Y        reduce using rule 70 (datatype -> SLONG .)
    OFFSET_Z        reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_X       reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_Y       reduce using rule 70 (datatype -> SLONG .)
    DIST_OP_Z       reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_BYTE  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_WORD  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_LONG  reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 70 (datatype -> SLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 70 (datatype -> SLONG .)
    RESERVED        reduce using rule 70 (datatype -> SLONG .)
    end             reduce using rule 70 (datatype -> SLONG .)
    INDEX_INCR      reduce using rule 70 (datatype -> SLONG .)
    INDEX_DECR      reduce using rule 70 (datatype -> SLONG .)
    NUMERIC         reduce using rule 70 (datatype -> SLONG .)
    COLUMN_DIR      reduce using rule 70 (datatype -> SLONG .)
    ROW_DIR         reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_WITH_X reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_WITH_Y reduce using rule 70 (datatype -> SLONG .)
    ALTERNATE_CURVES reduce using rule 70 (datatype -> SLONG .)
    IDENT           reduce using rule 70 (datatype -> SLONG .)


state 370

    (66) datatype -> SBYTE .

    FNC_VALUES      reduce using rule 66 (datatype -> SBYTE .)
    IDENTIFICATION  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_X      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_Y      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_PTS_Z      reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_X  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_Y  reduce using rule 66 (datatype -> SBYTE .)
    AXIS_RESCALE_Z  reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_X   reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 66 (datatype -> SBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_X    reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_Y    reduce using rule 66 (datatype -> SBYTE .)
    NO_RESCALE_Z    reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 66 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_X      reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_Y      reduce using rule 66 (datatype -> SBYTE .)
    SRC_ADDR_Z      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_X      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_Y      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_Z      reduce using rule 66 (datatype -> SBYTE .)
    RIP_ADDR_W      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_X      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_Y      reduce using rule 66 (datatype -> SBYTE .)
    SHIFT_OP_Z      reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_X        reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_Y        reduce using rule 66 (datatype -> SBYTE .)
    OFFSET_Z        reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_X       reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_Y       reduce using rule 66 (datatype -> SBYTE .)
    DIST_OP_Z       reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_BYTE  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_WORD  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_LONG  reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 66 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 66 (datatype -> SBYTE .)
    RESERVED        reduce using rule 66 (datatype -> SBYTE .)
    end             reduce using rule 66 (datatype -> SBYTE .)
    INDEX_INCR      reduce using rule 66 (datatype -> SBYTE .)
    INDEX_DECR      reduce using rule 66 (datatype -> SBYTE .)
    NUMERIC         reduce using rule 66 (datatype -> SBYTE .)
    COLUMN_DIR      reduce using rule 66 (datatype -> SBYTE .)
    ROW_DIR         reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_WITH_X reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_WITH_Y reduce using rule 66 (datatype -> SBYTE .)
    ALTERNATE_CURVES reduce using rule 66 (datatype -> SBYTE .)
    IDENT           reduce using rule 66 (datatype -> SBYTE .)


state 371

    (65) datatype -> UBYTE .

    FNC_VALUES      reduce using rule 65 (datatype -> UBYTE .)
    IDENTIFICATION  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_X      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_Y      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_PTS_Z      reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_X  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_Y  reduce using rule 65 (datatype -> UBYTE .)
    AXIS_RESCALE_Z  reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_X   reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 65 (datatype -> UBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_X    reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_Y    reduce using rule 65 (datatype -> UBYTE .)
    NO_RESCALE_Z    reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 65 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_X      reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_Y      reduce using rule 65 (datatype -> UBYTE .)
    SRC_ADDR_Z      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_X      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_Y      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_Z      reduce using rule 65 (datatype -> UBYTE .)
    RIP_ADDR_W      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_X      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_Y      reduce using rule 65 (datatype -> UBYTE .)
    SHIFT_OP_Z      reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_X        reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_Y        reduce using rule 65 (datatype -> UBYTE .)
    OFFSET_Z        reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_X       reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_Y       reduce using rule 65 (datatype -> UBYTE .)
    DIST_OP_Z       reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_BYTE  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_WORD  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_LONG  reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 65 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 65 (datatype -> UBYTE .)
    RESERVED        reduce using rule 65 (datatype -> UBYTE .)
    end             reduce using rule 65 (datatype -> UBYTE .)
    INDEX_INCR      reduce using rule 65 (datatype -> UBYTE .)
    INDEX_DECR      reduce using rule 65 (datatype -> UBYTE .)
    NUMERIC         reduce using rule 65 (datatype -> UBYTE .)
    COLUMN_DIR      reduce using rule 65 (datatype -> UBYTE .)
    ROW_DIR         reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_WITH_X reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_WITH_Y reduce using rule 65 (datatype -> UBYTE .)
    ALTERNATE_CURVES reduce using rule 65 (datatype -> UBYTE .)
    IDENT           reduce using rule 65 (datatype -> UBYTE .)


state 372

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC . number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (297) number_number_string_value_list -> . number_number_string_value
    (298) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (299) number_number_string_value -> . NUMERIC NUMERIC STRING

    NUMERIC         shift and go to state 483

    number_number_string_value_list shift and go to state 482
    number_number_string_value     shift and go to state 481

state 373

    (311) function_optional_list -> function_optional .
    (312) function_optional_list -> function_optional . function_optional_list
    (311) function_optional_list -> . function_optional
    (312) function_optional_list -> . function_optional function_optional_list
    (303) function_optional -> . annotation
    (304) function_optional -> . def_characteristic
    (305) function_optional -> . ref_characteristic
    (306) function_optional -> . in_measurement
    (307) function_optional -> . out_measurement
    (308) function_optional -> . loc_measurement
    (309) function_optional -> . sub_function
    (310) function_optional -> . function_version
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (315) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (316) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (317) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (318) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (319) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (320) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (321) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 311 (function_optional_list -> function_optional .)
    begin           shift and go to state 379
    FUNCTION_VERSION shift and go to state 374

    function_optional              shift and go to state 373
    out_measurement                shift and go to state 384
    loc_measurement                shift and go to state 375
    def_characteristic             shift and go to state 380
    function_version               shift and go to state 386
    sub_function                   shift and go to state 381
    in_measurement                 shift and go to state 377
    ref_characteristic             shift and go to state 385
    function_optional_list         shift and go to state 484
    annotation                     shift and go to state 376

state 374

    (321) function_version -> FUNCTION_VERSION . STRING

    STRING          shift and go to state 485


state 375

    (308) function_optional -> loc_measurement .

    begin           reduce using rule 308 (function_optional -> loc_measurement .)
    FUNCTION_VERSION reduce using rule 308 (function_optional -> loc_measurement .)
    end             reduce using rule 308 (function_optional -> loc_measurement .)


state 376

    (303) function_optional -> annotation .

    begin           reduce using rule 303 (function_optional -> annotation .)
    FUNCTION_VERSION reduce using rule 303 (function_optional -> annotation .)
    end             reduce using rule 303 (function_optional -> annotation .)


state 377

    (306) function_optional -> in_measurement .

    begin           reduce using rule 306 (function_optional -> in_measurement .)
    FUNCTION_VERSION reduce using rule 306 (function_optional -> in_measurement .)
    end             reduce using rule 306 (function_optional -> in_measurement .)


state 378

    (313) function_optional_list_optional -> empty .

    end             reduce using rule 313 (function_optional_list_optional -> empty .)


state 379

    (154) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (315) def_characteristic -> begin . DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (316) ref_characteristic -> begin . REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (317) in_measurement -> begin . IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (318) out_measurement -> begin . OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (319) loc_measurement -> begin . LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (320) sub_function -> begin . SUB_FUNCTION ident_list end SUB_FUNCTION

    ANNOTATION      shift and go to state 433
    DEF_CHARACTERISTIC shift and go to state 487
    REF_CHARACTERISTIC shift and go to state 432
    IN_MEASUREMENT  shift and go to state 489
    OUT_MEASUREMENT shift and go to state 490
    LOC_MEASUREMENT shift and go to state 486
    SUB_FUNCTION    shift and go to state 488


state 380

    (304) function_optional -> def_characteristic .

    begin           reduce using rule 304 (function_optional -> def_characteristic .)
    FUNCTION_VERSION reduce using rule 304 (function_optional -> def_characteristic .)
    end             reduce using rule 304 (function_optional -> def_characteristic .)


state 381

    (309) function_optional -> sub_function .

    begin           reduce using rule 309 (function_optional -> sub_function .)
    FUNCTION_VERSION reduce using rule 309 (function_optional -> sub_function .)
    end             reduce using rule 309 (function_optional -> sub_function .)


state 382

    (314) function_optional_list_optional -> function_optional_list .

    end             reduce using rule 314 (function_optional_list_optional -> function_optional_list .)


state 383

    (302) function -> begin FUNCTION IDENT STRING function_optional_list_optional . end FUNCTION

    end             shift and go to state 491


state 384

    (307) function_optional -> out_measurement .

    begin           reduce using rule 307 (function_optional -> out_measurement .)
    FUNCTION_VERSION reduce using rule 307 (function_optional -> out_measurement .)
    end             reduce using rule 307 (function_optional -> out_measurement .)


state 385

    (305) function_optional -> ref_characteristic .

    begin           reduce using rule 305 (function_optional -> ref_characteristic .)
    FUNCTION_VERSION reduce using rule 305 (function_optional -> ref_characteristic .)
    end             reduce using rule 305 (function_optional -> ref_characteristic .)


state 386

    (310) function_optional -> function_version .

    begin           reduce using rule 310 (function_optional -> function_version .)
    FUNCTION_VERSION reduce using rule 310 (function_optional -> function_version .)
    end             reduce using rule 310 (function_optional -> function_version .)


state 387

    (132) if_data -> begin IF_DATA IDENT end IF_DATA .

    READ_ONLY       reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    GUARD_RAILS     reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    DISPLAY_IDENTIFIER reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    FORMAT          reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    BYTE_ORDER      reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    BIT_MASK        reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    begin           reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    NUMBER          reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    EXTENDED_LIMITS reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    MAX_REFRESH     reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    REF_MEMORY_SEGMENT reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    COMPARISON_QUANTITY reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    CALIBRATION_ACCESS reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    MATRIX_DIM      reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ECU_ADDRESS_EXTENSION reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    end             reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    READ_WRITE      reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ARRAY_SIZE      reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ECU_ADDRESS     reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ERROR_MASK      reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    FRAME_MEASUREMENT reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    DEPOSIT         reduce using rule 132 (if_data -> begin IF_DATA IDENT end IF_DATA .)


state 388

    (284) compu_tab_conversion_type -> TAB_INTP .

    NUMERIC         reduce using rule 284 (compu_tab_conversion_type -> TAB_INTP .)


state 389

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type . NUMERIC number_list compu_tab_optional end COMPU_TAB

    NUMERIC         shift and go to state 492


state 390

    (285) compu_tab_conversion_type -> TAB_NOINTP .

    NUMERIC         reduce using rule 285 (compu_tab_conversion_type -> TAB_NOINTP .)


state 391

    (136) characteristic_type -> MAP .

    NUMERIC         reduce using rule 136 (characteristic_type -> MAP .)


state 392

    (134) characteristic_type -> VALUE .

    NUMERIC         reduce using rule 134 (characteristic_type -> VALUE .)


state 393

    (135) characteristic_type -> CURVE .

    NUMERIC         reduce using rule 135 (characteristic_type -> CURVE .)


state 394

    (138) characteristic_type -> VAL_BLK .

    NUMERIC         reduce using rule 138 (characteristic_type -> VAL_BLK .)


state 395

    (137) characteristic_type -> CUBOID .

    NUMERIC         reduce using rule 137 (characteristic_type -> CUBOID .)


state 396

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type . NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 493


state 397

    (139) characteristic_type -> ASCII .

    NUMERIC         reduce using rule 139 (characteristic_type -> ASCII .)


state 398

    (469) unit -> begin UNIT IDENT STRING STRING . unit_type unit_optional_list_optional end UNIT
    (470) unit_type -> . EXTENDED_SI
    (471) unit_type -> . DERIVED

    EXTENDED_SI     shift and go to state 496
    DERIVED         shift and go to state 494

    unit_type                      shift and go to state 495

state 399

    (468) ref_group -> begin REF_GROUP . ident_list end REF_GROUP
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 497

state 400

    (461) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end . USER_RIGHTS

    USER_RIGHTS     shift and go to state 498


state 401

    (465) user_rights_optional_list -> user_rights_optional user_rights_optional_list .

    end             reduce using rule 465 (user_rights_optional_list -> user_rights_optional user_rights_optional_list .)


state 402

    (453) frame -> begin FRAME IDENT STRING NUMERIC . NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 499


state 403

    (27) a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)
    SEMICOLON       reduce using rule 27 (a2ml_struct_type_name -> struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE .)


state 404

    (32) a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list .

    CURLY_CLOSE     reduce using rule 32 (a2ml_struct_member_list -> a2ml_struct_member a2ml_struct_member_list .)


state 405

    (33) a2ml_struct_member -> a2ml_member SEMICOLON .

    char            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    int             reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    long            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    uchar           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    uint            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    ulong           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    double          reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    float           reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    struct          reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    enum            reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    taggedstruct    reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    taggedunion     reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)
    CURLY_CLOSE     reduce using rule 33 (a2ml_struct_member -> a2ml_member SEMICOLON .)


state 406

    (37) a2ml_array_specifier_optional -> empty .

    SEMICOLON       reduce using rule 37 (a2ml_array_specifier_optional -> empty .)
    PARENTHESE_CLOSE reduce using rule 37 (a2ml_array_specifier_optional -> empty .)


state 407

    (38) a2ml_array_specifier_optional -> a2ml_array_specifier .

    SEMICOLON       reduce using rule 38 (a2ml_array_specifier_optional -> a2ml_array_specifier .)
    PARENTHESE_CLOSE reduce using rule 38 (a2ml_array_specifier_optional -> a2ml_array_specifier .)


state 408

    (39) a2ml_array_specifier -> BRACE_OPEN . a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> BRACE_OPEN . a2ml_constant BRACE_CLOSE a2ml_array_specifier
    (64) a2ml_constant -> . NUMERIC

    NUMERIC         shift and go to state 500

    a2ml_constant                  shift and go to state 501

state 409

    (34) a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .

    PARENTHESE_CLOSE reduce using rule 34 (a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .)
    SEMICOLON       reduce using rule 34 (a2ml_member -> a2ml_type_name a2ml_array_specifier_optional .)


state 410

    (53) a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .

    SEMICOLON       reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)
    BRACE_OPEN      reduce using rule 53 (a2ml_taggedunion_type_name -> taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE .)


state 411

    (56) a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list .

    CURLY_CLOSE     reduce using rule 56 (a2ml_taggedunion_member_list -> a2ml_taggedunion_member a2ml_taggedunion_member_list .)


state 412

    (57) a2ml_taggedunion_member -> a2ml_tag a2ml_member . SEMICOLON

    SEMICOLON       shift and go to state 502


state 413

    (58) a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .

    STRING          reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)
    block           reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 58 (a2ml_taggedunion_member -> a2ml_block_definition SEMICOLON .)


state 414

    (25) a2ml_enumerator -> a2ml_keyword EQUAL . a2ml_constant
    (64) a2ml_constant -> . NUMERIC

    NUMERIC         shift and go to state 500

    a2ml_constant                  shift and go to state 503

state 415

    (24) a2ml_enumerator_list -> a2ml_enumerator COMMA . a2ml_enumerator_list
    (23) a2ml_enumerator_list -> . a2ml_enumerator
    (24) a2ml_enumerator_list -> . a2ml_enumerator COMMA a2ml_enumerator_list
    (25) a2ml_enumerator -> . a2ml_keyword EQUAL a2ml_constant
    (26) a2ml_enumerator -> . a2ml_keyword
    (63) a2ml_keyword -> . STRING

    STRING          shift and go to state 282

    a2ml_keyword                   shift and go to state 281
    a2ml_enumerator                shift and go to state 283
    a2ml_enumerator_list           shift and go to state 504

state 416

    (21) a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)
    SEMICOLON       reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 21 (a2ml_enum_type_name -> enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE .)


state 417

    (49) a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .

    PARENTHESE_OPEN reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    block           reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    STRING          reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 49 (a2ml_taggedstruct_member -> a2ml_block_definition SEMICOLON .)


state 418

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition . PARENTHESE_CLOSE ASTERISK SEMICOLON

    PARENTHESE_CLOSE shift and go to state 505


state 419

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition . PARENTHESE_CLOSE ASTERISK SEMICOLON

    PARENTHESE_CLOSE shift and go to state 506


state 420

    (46) a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list .

    CURLY_CLOSE     reduce using rule 46 (a2ml_taggedstruct_member_list -> a2ml_taggedstruct_member a2ml_taggedstruct_member_list .)


state 421

    (47) a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .

    PARENTHESE_OPEN reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    block           reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    STRING          reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)
    CURLY_CLOSE     reduce using rule 47 (a2ml_taggedstruct_member -> a2ml_taggedstruct_definition SEMICOLON .)


state 422

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN . a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON
    (34) a2ml_member -> . a2ml_type_name a2ml_array_specifier_optional
    (7) a2ml_type_name -> . a2ml_predefined_type_name
    (8) a2ml_type_name -> . a2ml_struct_type_name
    (9) a2ml_type_name -> . a2ml_enum_type_name
    (10) a2ml_type_name -> . a2ml_taggedstruct_type_name
    (11) a2ml_type_name -> . a2ml_taggedunion_type_name
    (12) a2ml_predefined_type_name -> . char
    (13) a2ml_predefined_type_name -> . int
    (14) a2ml_predefined_type_name -> . long
    (15) a2ml_predefined_type_name -> . uchar
    (16) a2ml_predefined_type_name -> . uint
    (17) a2ml_predefined_type_name -> . ulong
    (18) a2ml_predefined_type_name -> . double
    (19) a2ml_predefined_type_name -> . float
    (27) a2ml_struct_type_name -> . struct a2ml_identifier_optional CURLY_OPEN a2ml_struct_member_list_optional CURLY_CLOSE
    (28) a2ml_struct_type_name -> . struct a2ml_identifier
    (21) a2ml_enum_type_name -> . enum a2ml_identifier_optional CURLY_OPEN a2ml_enumerator_list CURLY_CLOSE
    (22) a2ml_enum_type_name -> . enum a2ml_identifier
    (41) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE
    (42) a2ml_taggedstruct_type_name -> . taggedstruct a2ml_identifier
    (53) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier_optional CURLY_OPEN a2ml_taggedunion_member_list CURLY_CLOSE
    (54) a2ml_taggedunion_type_name -> . taggedunion a2ml_identifier

    char            shift and go to state 71
    int             shift and go to state 68
    long            shift and go to state 72
    uchar           shift and go to state 75
    uint            shift and go to state 85
    ulong           shift and go to state 83
    double          shift and go to state 88
    float           shift and go to state 82
    struct          shift and go to state 74
    enum            shift and go to state 84
    taggedstruct    shift and go to state 86
    taggedunion     shift and go to state 77

    a2ml_struct_type_name          shift and go to state 73
    a2ml_enum_type_name            shift and go to state 76
    a2ml_taggedstruct_type_name    shift and go to state 78
    a2ml_predefined_type_name      shift and go to state 79
    a2ml_taggedunion_type_name     shift and go to state 81
    a2ml_member                    shift and go to state 507
    a2ml_type_name                 shift and go to state 275

state 423

    (36) a2ml_member_optional -> a2ml_member .

    SEMICOLON       reduce using rule 36 (a2ml_member_optional -> a2ml_member .)
    PARENTHESE_CLOSE reduce using rule 36 (a2ml_member_optional -> a2ml_member .)


state 424

    (35) a2ml_member_optional -> empty .

    SEMICOLON       reduce using rule 35 (a2ml_member_optional -> empty .)
    PARENTHESE_CLOSE reduce using rule 35 (a2ml_member_optional -> empty .)


state 425

    (51) a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .

    SEMICOLON       reduce using rule 51 (a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .)
    PARENTHESE_CLOSE reduce using rule 51 (a2ml_taggedstruct_definition -> a2ml_tag a2ml_member_optional .)


state 426

    (41) a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .

    BRACE_OPEN      reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)
    SEMICOLON       reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 41 (a2ml_taggedstruct_type_name -> taggedstruct a2ml_identifier_optional CURLY_OPEN a2ml_taggedstruct_member_list_optional CURLY_CLOSE .)


state 427

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC . number_string_value_list compu_vtab_optional end COMPU_VTAB
    (291) number_string_value_list -> . number_string_value
    (292) number_string_value_list -> . number_string_value number_string_value_list
    (293) number_string_value -> . NUMERIC STRING

    NUMERIC         shift and go to state 508

    number_string_value            shift and go to state 510
    number_string_value_list       shift and go to state 509

state 428

    (322) group -> begin GROUP IDENT STRING group_optional_list_optional end . GROUP

    GROUP           shift and go to state 511


state 429

    (334) sub_group -> begin SUB_GROUP . ident_list end SUB_GROUP
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 512

state 430

    (146) function_list -> begin FUNCTION_LIST . ident_list end FUNCTION_LIST
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 513

state 431

    (333) ref_measurement -> begin REF_MEASUREMENT . ident_list end REF_MEASUREMENT
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 514

state 432

    (316) ref_characteristic -> begin REF_CHARACTERISTIC . ident_list end REF_CHARACTERISTIC
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 515

state 433

    (154) annotation -> begin ANNOTATION . annotation_optional_list_optional end ANNOTATION
    (163) annotation_optional_list_optional -> . empty
    (164) annotation_optional_list_optional -> . annotation_optional_list
    (481) empty -> .
    (161) annotation_optional_list -> . annotation_optional
    (162) annotation_optional_list -> . annotation_optional annotation_optional_list
    (155) annotation_optional -> . annotation_label
    (156) annotation_optional -> . annotation_origin
    (157) annotation_optional -> . annotation_text
    (158) annotation_label -> . ANNOTATION_LABEL STRING
    (159) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (160) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 481 (empty -> .)
    ANNOTATION_LABEL shift and go to state 519
    ANNOTATION_ORIGIN shift and go to state 522
    begin           shift and go to state 517

    annotation_optional_list_optional shift and go to state 516
    annotation_origin              shift and go to state 518
    annotation_text                shift and go to state 520
    annotation_optional_list       shift and go to state 521
    annotation_optional            shift and go to state 523
    annotation_label               shift and go to state 524
    empty                          shift and go to state 525

state 434

    (330) group_optional_list -> group_optional group_optional_list .

    end             reduce using rule 330 (group_optional_list -> group_optional group_optional_list .)


state 435

    (393) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RESERVED        reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    end             reduce using rule 393 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)


state 436

    (392) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RESERVED        reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    end             reduce using rule 392 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)


state 437

    (394) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RESERVED        reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    end             reduce using rule 394 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)


state 438

    (405) src_addr_optional -> datatype .

    FNC_VALUES      reduce using rule 405 (src_addr_optional -> datatype .)
    IDENTIFICATION  reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_PTS_X      reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_PTS_Y      reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_PTS_Z      reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_RESCALE_X  reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Y  reduce using rule 405 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Z  reduce using rule 405 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_X   reduce using rule 405 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Y   reduce using rule 405 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Z   reduce using rule 405 (src_addr_optional -> datatype .)
    NO_RESCALE_X    reduce using rule 405 (src_addr_optional -> datatype .)
    NO_RESCALE_Y    reduce using rule 405 (src_addr_optional -> datatype .)
    NO_RESCALE_Z    reduce using rule 405 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 405 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 405 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 405 (src_addr_optional -> datatype .)
    SRC_ADDR_X      reduce using rule 405 (src_addr_optional -> datatype .)
    SRC_ADDR_Y      reduce using rule 405 (src_addr_optional -> datatype .)
    SRC_ADDR_Z      reduce using rule 405 (src_addr_optional -> datatype .)
    RIP_ADDR_X      reduce using rule 405 (src_addr_optional -> datatype .)
    RIP_ADDR_Y      reduce using rule 405 (src_addr_optional -> datatype .)
    RIP_ADDR_Z      reduce using rule 405 (src_addr_optional -> datatype .)
    RIP_ADDR_W      reduce using rule 405 (src_addr_optional -> datatype .)
    SHIFT_OP_X      reduce using rule 405 (src_addr_optional -> datatype .)
    SHIFT_OP_Y      reduce using rule 405 (src_addr_optional -> datatype .)
    SHIFT_OP_Z      reduce using rule 405 (src_addr_optional -> datatype .)
    OFFSET_X        reduce using rule 405 (src_addr_optional -> datatype .)
    OFFSET_Y        reduce using rule 405 (src_addr_optional -> datatype .)
    OFFSET_Z        reduce using rule 405 (src_addr_optional -> datatype .)
    DIST_OP_X       reduce using rule 405 (src_addr_optional -> datatype .)
    DIST_OP_Y       reduce using rule 405 (src_addr_optional -> datatype .)
    DIST_OP_Z       reduce using rule 405 (src_addr_optional -> datatype .)
    ALIGNMENT_BYTE  reduce using rule 405 (src_addr_optional -> datatype .)
    ALIGNMENT_WORD  reduce using rule 405 (src_addr_optional -> datatype .)
    ALIGNMENT_LONG  reduce using rule 405 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 405 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 405 (src_addr_optional -> datatype .)
    RESERVED        reduce using rule 405 (src_addr_optional -> datatype .)
    end             reduce using rule 405 (src_addr_optional -> datatype .)


state 439

    (403) src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    end             reduce using rule 403 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)


state 440

    (404) src_addr_optional -> empty .

    FNC_VALUES      reduce using rule 404 (src_addr_optional -> empty .)
    IDENTIFICATION  reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_PTS_X      reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_PTS_Y      reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_PTS_Z      reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_RESCALE_X  reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_RESCALE_Y  reduce using rule 404 (src_addr_optional -> empty .)
    AXIS_RESCALE_Z  reduce using rule 404 (src_addr_optional -> empty .)
    NO_AXIS_PTS_X   reduce using rule 404 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Y   reduce using rule 404 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Z   reduce using rule 404 (src_addr_optional -> empty .)
    NO_RESCALE_X    reduce using rule 404 (src_addr_optional -> empty .)
    NO_RESCALE_Y    reduce using rule 404 (src_addr_optional -> empty .)
    NO_RESCALE_Z    reduce using rule 404 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_X reduce using rule 404 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Y reduce using rule 404 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Z reduce using rule 404 (src_addr_optional -> empty .)
    SRC_ADDR_X      reduce using rule 404 (src_addr_optional -> empty .)
    SRC_ADDR_Y      reduce using rule 404 (src_addr_optional -> empty .)
    SRC_ADDR_Z      reduce using rule 404 (src_addr_optional -> empty .)
    RIP_ADDR_X      reduce using rule 404 (src_addr_optional -> empty .)
    RIP_ADDR_Y      reduce using rule 404 (src_addr_optional -> empty .)
    RIP_ADDR_Z      reduce using rule 404 (src_addr_optional -> empty .)
    RIP_ADDR_W      reduce using rule 404 (src_addr_optional -> empty .)
    SHIFT_OP_X      reduce using rule 404 (src_addr_optional -> empty .)
    SHIFT_OP_Y      reduce using rule 404 (src_addr_optional -> empty .)
    SHIFT_OP_Z      reduce using rule 404 (src_addr_optional -> empty .)
    OFFSET_X        reduce using rule 404 (src_addr_optional -> empty .)
    OFFSET_Y        reduce using rule 404 (src_addr_optional -> empty .)
    OFFSET_Z        reduce using rule 404 (src_addr_optional -> empty .)
    DIST_OP_X       reduce using rule 404 (src_addr_optional -> empty .)
    DIST_OP_Y       reduce using rule 404 (src_addr_optional -> empty .)
    DIST_OP_Z       reduce using rule 404 (src_addr_optional -> empty .)
    ALIGNMENT_BYTE  reduce using rule 404 (src_addr_optional -> empty .)
    ALIGNMENT_WORD  reduce using rule 404 (src_addr_optional -> empty .)
    ALIGNMENT_LONG  reduce using rule 404 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 404 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 404 (src_addr_optional -> empty .)
    RESERVED        reduce using rule 404 (src_addr_optional -> empty .)
    end             reduce using rule 404 (src_addr_optional -> empty .)


state 441

    (402) src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    end             reduce using rule 402 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)


state 442

    (401) src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    end             reduce using rule 401 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)


state 443

    (388) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 528

state 444

    (386) axis_pts_x -> AXIS_PTS_X NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 529

state 445

    (387) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 530

state 446

    (411) shift_op_y -> SHIFT_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    end             reduce using rule 411 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)


state 447

    (410) shift_op_x -> SHIFT_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    end             reduce using rule 410 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)


state 448

    (412) shift_op_z -> SHIFT_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    end             reduce using rule 412 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)


state 449

    (397) no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RESERVED        reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    end             reduce using rule 397 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)


state 450

    (395) no_rescale_x -> NO_RESCALE_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RESERVED        reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    end             reduce using rule 395 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)


state 451

    (396) no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RESERVED        reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    end             reduce using rule 396 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)


state 452

    (418) dist_op_z -> DIST_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    end             reduce using rule 418 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)


state 453

    (416) dist_op_x -> DIST_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    end             reduce using rule 416 (dist_op_x -> DIST_OP_X NUMERIC datatype .)


state 454

    (417) dist_op_y -> DIST_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    end             reduce using rule 417 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)


state 455

    (335) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .

    begin           reduce using rule 335 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)
    end             reduce using rule 335 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)


state 456

    (385) identification -> IDENTIFICATION NUMERIC datatype .

    FNC_VALUES      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_X        reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Y        reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Z        reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_X       reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    RESERVED        reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)
    end             reduce using rule 385 (identification -> IDENTIFICATION NUMERIC datatype .)


state 457

    (413) offset_x -> OFFSET_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    RESERVED        reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)
    end             reduce using rule 413 (offset_x -> OFFSET_X NUMERIC datatype .)


state 458

    (414) offset_y -> OFFSET_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RESERVED        reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)
    end             reduce using rule 414 (offset_y -> OFFSET_Y NUMERIC datatype .)


state 459

    (415) offset_z -> OFFSET_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RESERVED        reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)
    end             reduce using rule 415 (offset_z -> OFFSET_Z NUMERIC datatype .)


state 460

    (391) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 531


state 461

    (389) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 532


state 462

    (390) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 533


state 463

    (409) rip_addr_w -> RIP_ADDR_W NUMERIC datatype .

    FNC_VALUES      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_X        reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Y        reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Z        reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_X       reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RESERVED        reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    end             reduce using rule 409 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)


state 464

    (408) rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RESERVED        reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    end             reduce using rule 408 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)


state 465

    (406) rip_addr_x -> RIP_ADDR_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RESERVED        reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    end             reduce using rule 406 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)


state 466

    (407) rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RESERVED        reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    end             reduce using rule 407 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)


state 467

    (76) datasize -> WORD .

    FNC_VALUES      reduce using rule 76 (datasize -> WORD .)
    IDENTIFICATION  reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_X      reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_Y      reduce using rule 76 (datasize -> WORD .)
    AXIS_PTS_Z      reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_X  reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_Y  reduce using rule 76 (datasize -> WORD .)
    AXIS_RESCALE_Z  reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_X   reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_Y   reduce using rule 76 (datasize -> WORD .)
    NO_AXIS_PTS_Z   reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_X    reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_Y    reduce using rule 76 (datasize -> WORD .)
    NO_RESCALE_Z    reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 76 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_X      reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_Y      reduce using rule 76 (datasize -> WORD .)
    SRC_ADDR_Z      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_X      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_Y      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_Z      reduce using rule 76 (datasize -> WORD .)
    RIP_ADDR_W      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_X      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_Y      reduce using rule 76 (datasize -> WORD .)
    SHIFT_OP_Z      reduce using rule 76 (datasize -> WORD .)
    OFFSET_X        reduce using rule 76 (datasize -> WORD .)
    OFFSET_Y        reduce using rule 76 (datasize -> WORD .)
    OFFSET_Z        reduce using rule 76 (datasize -> WORD .)
    DIST_OP_X       reduce using rule 76 (datasize -> WORD .)
    DIST_OP_Y       reduce using rule 76 (datasize -> WORD .)
    DIST_OP_Z       reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_BYTE  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_WORD  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_LONG  reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 76 (datasize -> WORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 76 (datasize -> WORD .)
    RESERVED        reduce using rule 76 (datasize -> WORD .)
    end             reduce using rule 76 (datasize -> WORD .)


state 468

    (77) datasize -> LONG .

    FNC_VALUES      reduce using rule 77 (datasize -> LONG .)
    IDENTIFICATION  reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_X      reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_Y      reduce using rule 77 (datasize -> LONG .)
    AXIS_PTS_Z      reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_X  reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_Y  reduce using rule 77 (datasize -> LONG .)
    AXIS_RESCALE_Z  reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_X   reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_Y   reduce using rule 77 (datasize -> LONG .)
    NO_AXIS_PTS_Z   reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_X    reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_Y    reduce using rule 77 (datasize -> LONG .)
    NO_RESCALE_Z    reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 77 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_X      reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_Y      reduce using rule 77 (datasize -> LONG .)
    SRC_ADDR_Z      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_X      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_Y      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_Z      reduce using rule 77 (datasize -> LONG .)
    RIP_ADDR_W      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_X      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_Y      reduce using rule 77 (datasize -> LONG .)
    SHIFT_OP_Z      reduce using rule 77 (datasize -> LONG .)
    OFFSET_X        reduce using rule 77 (datasize -> LONG .)
    OFFSET_Y        reduce using rule 77 (datasize -> LONG .)
    OFFSET_Z        reduce using rule 77 (datasize -> LONG .)
    DIST_OP_X       reduce using rule 77 (datasize -> LONG .)
    DIST_OP_Y       reduce using rule 77 (datasize -> LONG .)
    DIST_OP_Z       reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_BYTE  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_WORD  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_LONG  reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 77 (datasize -> LONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 77 (datasize -> LONG .)
    RESERVED        reduce using rule 77 (datasize -> LONG .)
    end             reduce using rule 77 (datasize -> LONG .)


state 469

    (75) datasize -> BYTE .

    FNC_VALUES      reduce using rule 75 (datasize -> BYTE .)
    IDENTIFICATION  reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_X      reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_Y      reduce using rule 75 (datasize -> BYTE .)
    AXIS_PTS_Z      reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_X  reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_Y  reduce using rule 75 (datasize -> BYTE .)
    AXIS_RESCALE_Z  reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_X   reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_Y   reduce using rule 75 (datasize -> BYTE .)
    NO_AXIS_PTS_Z   reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_X    reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_Y    reduce using rule 75 (datasize -> BYTE .)
    NO_RESCALE_Z    reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 75 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_X      reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_Y      reduce using rule 75 (datasize -> BYTE .)
    SRC_ADDR_Z      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_X      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_Y      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_Z      reduce using rule 75 (datasize -> BYTE .)
    RIP_ADDR_W      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_X      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_Y      reduce using rule 75 (datasize -> BYTE .)
    SHIFT_OP_Z      reduce using rule 75 (datasize -> BYTE .)
    OFFSET_X        reduce using rule 75 (datasize -> BYTE .)
    OFFSET_Y        reduce using rule 75 (datasize -> BYTE .)
    OFFSET_Z        reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_X       reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_Y       reduce using rule 75 (datasize -> BYTE .)
    DIST_OP_Z       reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_BYTE  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_WORD  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_LONG  reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 75 (datasize -> BYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 75 (datasize -> BYTE .)
    RESERVED        reduce using rule 75 (datasize -> BYTE .)
    end             reduce using rule 75 (datasize -> BYTE .)


state 470

    (452) reserved -> RESERVED NUMERIC datasize .

    FNC_VALUES      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    IDENTIFICATION  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_X      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Y      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Z      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_X  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Y  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Z  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_X   reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Y   reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Z   reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_X    reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Y    reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Z    reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_X reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Y reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Z reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_X      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Y      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Z      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_X      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Y      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Z      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_W      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_X      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Y      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Z      reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_X        reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Y        reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Z        reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_X       reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Y       reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Z       reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_BYTE  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_WORD  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_LONG  reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    RESERVED        reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)
    end             reduce using rule 452 (reserved -> RESERVED NUMERIC datasize .)


state 471

    (379) fnc_values -> FNC_VALUES NUMERIC datatype . fnc_values_index_mode addrtype
    (380) fnc_values_index_mode -> . COLUMN_DIR
    (381) fnc_values_index_mode -> . ROW_DIR
    (382) fnc_values_index_mode -> . ALTERNATE_WITH_X
    (383) fnc_values_index_mode -> . ALTERNATE_WITH_Y
    (384) fnc_values_index_mode -> . ALTERNATE_CURVES

    COLUMN_DIR      shift and go to state 536
    ROW_DIR         shift and go to state 534
    ALTERNATE_WITH_X shift and go to state 535
    ALTERNATE_WITH_Y shift and go to state 539
    ALTERNATE_CURVES shift and go to state 537

    fnc_values_index_mode          shift and go to state 538

state 472

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING . STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 540


state 473

    (91) ident_list -> IDENT .
    (92) ident_list -> IDENT . ident_list
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    end             reduce using rule 91 (ident_list -> IDENT .)
    begin           reduce using rule 91 (ident_list -> IDENT .)
    FRAME_MEASUREMENT reduce using rule 91 (ident_list -> IDENT .)
    VAR_MEASUREMENT reduce using rule 91 (ident_list -> IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 91 (ident_list -> IDENT .)
    IDENT           shift and go to state 473

    ident_list                     shift and go to state 541

state 474

    (430) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list . var_characteristic_optional end VAR_CHARACTERISTIC
    (431) var_characteristic_optional -> . var_address
    (432) var_address -> . begin VAR_ADDRESS number_list end VAR_ADDRESS

    begin           shift and go to state 542

    var_characteristic_optional    shift and go to state 544
    var_address                    shift and go to state 543

state 475

    (438) ident_ident_value -> IDENT IDENT .

    IDENT           reduce using rule 438 (ident_ident_value -> IDENT IDENT .)
    end             reduce using rule 438 (ident_ident_value -> IDENT IDENT .)


state 476

    (437) ident_ident_value_list -> ident_ident_value ident_ident_value_list .

    end             reduce using rule 437 (ident_ident_value_list -> ident_ident_value ident_ident_value_list .)


state 477

    (435) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end . VAR_FORBIDDEN_COMB

    VAR_FORBIDDEN_COMB shift and go to state 545


state 478

    (439) var_criterion -> begin VAR_CRITERION IDENT STRING . ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 546

state 479

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT . IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 547


state 480

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT . NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 548


state 481

    (297) number_number_string_value_list -> number_number_string_value .
    (298) number_number_string_value_list -> number_number_string_value . number_number_string_value_list
    (297) number_number_string_value_list -> . number_number_string_value
    (298) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (299) number_number_string_value -> . NUMERIC NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 297 (number_number_string_value_list -> number_number_string_value .)
    end             reduce using rule 297 (number_number_string_value_list -> number_number_string_value .)
    NUMERIC         shift and go to state 483

    number_number_string_value_list shift and go to state 549
    number_number_string_value     shift and go to state 481

state 482

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list . compu_vtab_range_optional end COMPU_VTAB_RANGE
    (300) compu_vtab_range_optional -> . empty
    (301) compu_vtab_range_optional -> . default_value
    (481) empty -> .
    (288) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 481 (empty -> .)
    DEFAULT_VALUE   shift and go to state 551

    default_value                  shift and go to state 550
    compu_vtab_range_optional      shift and go to state 552
    empty                          shift and go to state 553

state 483

    (299) number_number_string_value -> NUMERIC . NUMERIC STRING

    NUMERIC         shift and go to state 554


state 484

    (312) function_optional_list -> function_optional function_optional_list .

    end             reduce using rule 312 (function_optional_list -> function_optional function_optional_list .)


state 485

    (321) function_version -> FUNCTION_VERSION STRING .

    begin           reduce using rule 321 (function_version -> FUNCTION_VERSION STRING .)
    FUNCTION_VERSION reduce using rule 321 (function_version -> FUNCTION_VERSION STRING .)
    end             reduce using rule 321 (function_version -> FUNCTION_VERSION STRING .)


state 486

    (319) loc_measurement -> begin LOC_MEASUREMENT . ident_list end LOC_MEASUREMENT
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 555

state 487

    (315) def_characteristic -> begin DEF_CHARACTERISTIC . ident_list end DEF_CHARACTERISTIC
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 556

state 488

    (320) sub_function -> begin SUB_FUNCTION . ident_list end SUB_FUNCTION
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 557

state 489

    (317) in_measurement -> begin IN_MEASUREMENT . ident_list end IN_MEASUREMENT
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 558

state 490

    (318) out_measurement -> begin OUT_MEASUREMENT . ident_list end OUT_MEASUREMENT
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 559

state 491

    (302) function -> begin FUNCTION IDENT STRING function_optional_list_optional end . FUNCTION

    FUNCTION        shift and go to state 560


state 492

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC . number_list compu_tab_optional end COMPU_TAB
    (89) number_list -> . NUMERIC
    (90) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 561

state 493

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC . IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 562


state 494

    (471) unit_type -> DERIVED .

    SI_EXPONENTS    reduce using rule 471 (unit_type -> DERIVED .)
    REF_UNIT        reduce using rule 471 (unit_type -> DERIVED .)
    UNIT_CONVERSION reduce using rule 471 (unit_type -> DERIVED .)
    end             reduce using rule 471 (unit_type -> DERIVED .)


state 495

    (469) unit -> begin UNIT IDENT STRING STRING unit_type . unit_optional_list_optional end UNIT
    (477) unit_optional_list_optional -> . empty
    (478) unit_optional_list_optional -> . unit_optional_list
    (481) empty -> .
    (475) unit_optional_list -> . unit_optional
    (476) unit_optional_list -> . unit_optional unit_optional_list
    (472) unit_optional -> . si_exponents
    (473) unit_optional -> . ref_unit
    (474) unit_optional -> . unit_conversion
    (479) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (275) ref_unit -> . REF_UNIT IDENT
    (480) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 481 (empty -> .)
    SI_EXPONENTS    shift and go to state 564
    REF_UNIT        shift and go to state 565
    UNIT_CONVERSION shift and go to state 571

    unit_optional_list             shift and go to state 563
    unit_optional_list_optional    shift and go to state 566
    unit_conversion                shift and go to state 567
    si_exponents                   shift and go to state 568
    ref_unit                       shift and go to state 570
    unit_optional                  shift and go to state 572
    empty                          shift and go to state 569

state 496

    (470) unit_type -> EXTENDED_SI .

    SI_EXPONENTS    reduce using rule 470 (unit_type -> EXTENDED_SI .)
    REF_UNIT        reduce using rule 470 (unit_type -> EXTENDED_SI .)
    UNIT_CONVERSION reduce using rule 470 (unit_type -> EXTENDED_SI .)
    end             reduce using rule 470 (unit_type -> EXTENDED_SI .)


state 497

    (468) ref_group -> begin REF_GROUP ident_list . end REF_GROUP

    end             shift and go to state 573


state 498

    (461) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .

    begin           reduce using rule 461 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)
    end             reduce using rule 461 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)


state 499

    (453) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC . frame_optional_list_optional end FRAME
    (458) frame_optional_list_optional -> . empty
    (459) frame_optional_list_optional -> . frame_optional_list
    (481) empty -> .
    (456) frame_optional_list -> . frame_optional
    (457) frame_optional_list -> . frame_optional frame_optional_list
    (454) frame_optional -> . frame_measurement
    (455) frame_optional -> . if_data
    (460) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA

    end             reduce using rule 481 (empty -> .)
    FRAME_MEASUREMENT shift and go to state 578
    begin           shift and go to state 574

    frame_optional_list            shift and go to state 577
    frame_optional_list_optional   shift and go to state 575
    if_data                        shift and go to state 576
    frame_optional                 shift and go to state 579
    empty                          shift and go to state 580
    frame_measurement              shift and go to state 581

state 500

    (64) a2ml_constant -> NUMERIC .

    COMMA           reduce using rule 64 (a2ml_constant -> NUMERIC .)
    CURLY_CLOSE     reduce using rule 64 (a2ml_constant -> NUMERIC .)
    BRACE_CLOSE     reduce using rule 64 (a2ml_constant -> NUMERIC .)


state 501

    (39) a2ml_array_specifier -> BRACE_OPEN a2ml_constant . BRACE_CLOSE
    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant . BRACE_CLOSE a2ml_array_specifier

    BRACE_CLOSE     shift and go to state 582


state 502

    (57) a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .

    STRING          reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)
    block           reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)
    CURLY_CLOSE     reduce using rule 57 (a2ml_taggedunion_member -> a2ml_tag a2ml_member SEMICOLON .)


state 503

    (25) a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .

    COMMA           reduce using rule 25 (a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .)
    CURLY_CLOSE     reduce using rule 25 (a2ml_enumerator -> a2ml_keyword EQUAL a2ml_constant .)


state 504

    (24) a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list .

    CURLY_CLOSE     reduce using rule 24 (a2ml_enumerator_list -> a2ml_enumerator COMMA a2ml_enumerator_list .)


state 505

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE . ASTERISK SEMICOLON

    ASTERISK        shift and go to state 583


state 506

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE . ASTERISK SEMICOLON

    ASTERISK        shift and go to state 584


state 507

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member . PARENTHESE_CLOSE ASTERISK SEMICOLON

    PARENTHESE_CLOSE shift and go to state 585


state 508

    (293) number_string_value -> NUMERIC . STRING

    STRING          shift and go to state 586


state 509

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list . compu_vtab_optional end COMPU_VTAB
    (294) compu_vtab_optional -> . empty
    (295) compu_vtab_optional -> . default_value
    (481) empty -> .
    (288) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 481 (empty -> .)
    DEFAULT_VALUE   shift and go to state 551

    default_value                  shift and go to state 587
    compu_vtab_optional            shift and go to state 588
    empty                          shift and go to state 589

state 510

    (291) number_string_value_list -> number_string_value .
    (292) number_string_value_list -> number_string_value . number_string_value_list
    (291) number_string_value_list -> . number_string_value
    (292) number_string_value_list -> . number_string_value number_string_value_list
    (293) number_string_value -> . NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 291 (number_string_value_list -> number_string_value .)
    end             reduce using rule 291 (number_string_value_list -> number_string_value .)
    NUMERIC         shift and go to state 508

    number_string_value            shift and go to state 510
    number_string_value_list       shift and go to state 590

state 511

    (322) group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .

    begin           reduce using rule 322 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)
    end             reduce using rule 322 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)


state 512

    (334) sub_group -> begin SUB_GROUP ident_list . end SUB_GROUP

    end             shift and go to state 591


state 513

    (146) function_list -> begin FUNCTION_LIST ident_list . end FUNCTION_LIST

    end             shift and go to state 592


state 514

    (333) ref_measurement -> begin REF_MEASUREMENT ident_list . end REF_MEASUREMENT

    end             shift and go to state 593


state 515

    (316) ref_characteristic -> begin REF_CHARACTERISTIC ident_list . end REF_CHARACTERISTIC

    end             shift and go to state 594


state 516

    (154) annotation -> begin ANNOTATION annotation_optional_list_optional . end ANNOTATION

    end             shift and go to state 595


state 517

    (160) annotation_text -> begin . ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 596


state 518

    (156) annotation_optional -> annotation_origin .

    ANNOTATION_LABEL reduce using rule 156 (annotation_optional -> annotation_origin .)
    ANNOTATION_ORIGIN reduce using rule 156 (annotation_optional -> annotation_origin .)
    begin           reduce using rule 156 (annotation_optional -> annotation_origin .)
    end             reduce using rule 156 (annotation_optional -> annotation_origin .)


state 519

    (158) annotation_label -> ANNOTATION_LABEL . STRING

    STRING          shift and go to state 597


state 520

    (157) annotation_optional -> annotation_text .

    ANNOTATION_LABEL reduce using rule 157 (annotation_optional -> annotation_text .)
    ANNOTATION_ORIGIN reduce using rule 157 (annotation_optional -> annotation_text .)
    begin           reduce using rule 157 (annotation_optional -> annotation_text .)
    end             reduce using rule 157 (annotation_optional -> annotation_text .)


state 521

    (164) annotation_optional_list_optional -> annotation_optional_list .

    end             reduce using rule 164 (annotation_optional_list_optional -> annotation_optional_list .)


state 522

    (159) annotation_origin -> ANNOTATION_ORIGIN . STRING

    STRING          shift and go to state 598


state 523

    (161) annotation_optional_list -> annotation_optional .
    (162) annotation_optional_list -> annotation_optional . annotation_optional_list
    (161) annotation_optional_list -> . annotation_optional
    (162) annotation_optional_list -> . annotation_optional annotation_optional_list
    (155) annotation_optional -> . annotation_label
    (156) annotation_optional -> . annotation_origin
    (157) annotation_optional -> . annotation_text
    (158) annotation_label -> . ANNOTATION_LABEL STRING
    (159) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (160) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 161 (annotation_optional_list -> annotation_optional .)
    ANNOTATION_LABEL shift and go to state 519
    ANNOTATION_ORIGIN shift and go to state 522
    begin           shift and go to state 517

    annotation_optional_list       shift and go to state 599
    annotation_origin              shift and go to state 518
    annotation_text                shift and go to state 520
    annotation_optional            shift and go to state 523
    annotation_label               shift and go to state 524

state 524

    (155) annotation_optional -> annotation_label .

    ANNOTATION_LABEL reduce using rule 155 (annotation_optional -> annotation_label .)
    ANNOTATION_ORIGIN reduce using rule 155 (annotation_optional -> annotation_label .)
    begin           reduce using rule 155 (annotation_optional -> annotation_label .)
    end             reduce using rule 155 (annotation_optional -> annotation_label .)


state 525

    (163) annotation_optional_list_optional -> empty .

    end             reduce using rule 163 (annotation_optional_list_optional -> empty .)


state 526

    (83) indexorder -> INDEX_DECR .

    PBYTE           reduce using rule 83 (indexorder -> INDEX_DECR .)
    PWORD           reduce using rule 83 (indexorder -> INDEX_DECR .)
    PLONG           reduce using rule 83 (indexorder -> INDEX_DECR .)
    DIRECT          reduce using rule 83 (indexorder -> INDEX_DECR .)


state 527

    (82) indexorder -> INDEX_INCR .

    PBYTE           reduce using rule 82 (indexorder -> INDEX_INCR .)
    PWORD           reduce using rule 82 (indexorder -> INDEX_INCR .)
    PLONG           reduce using rule 82 (indexorder -> INDEX_INCR .)
    DIRECT          reduce using rule 82 (indexorder -> INDEX_INCR .)


state 528

    (388) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 600

state 529

    (386) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 605

state 530

    (387) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 606

state 531

    (391) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 607

state 532

    (389) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 608

state 533

    (390) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC . indexorder addrtype
    (82) indexorder -> . INDEX_INCR
    (83) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 527
    INDEX_DECR      shift and go to state 526

    indexorder                     shift and go to state 609

state 534

    (381) fnc_values_index_mode -> ROW_DIR .

    PBYTE           reduce using rule 381 (fnc_values_index_mode -> ROW_DIR .)
    PWORD           reduce using rule 381 (fnc_values_index_mode -> ROW_DIR .)
    PLONG           reduce using rule 381 (fnc_values_index_mode -> ROW_DIR .)
    DIRECT          reduce using rule 381 (fnc_values_index_mode -> ROW_DIR .)


state 535

    (382) fnc_values_index_mode -> ALTERNATE_WITH_X .

    PBYTE           reduce using rule 382 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PWORD           reduce using rule 382 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PLONG           reduce using rule 382 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    DIRECT          reduce using rule 382 (fnc_values_index_mode -> ALTERNATE_WITH_X .)


state 536

    (380) fnc_values_index_mode -> COLUMN_DIR .

    PBYTE           reduce using rule 380 (fnc_values_index_mode -> COLUMN_DIR .)
    PWORD           reduce using rule 380 (fnc_values_index_mode -> COLUMN_DIR .)
    PLONG           reduce using rule 380 (fnc_values_index_mode -> COLUMN_DIR .)
    DIRECT          reduce using rule 380 (fnc_values_index_mode -> COLUMN_DIR .)


state 537

    (384) fnc_values_index_mode -> ALTERNATE_CURVES .

    PBYTE           reduce using rule 384 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PWORD           reduce using rule 384 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PLONG           reduce using rule 384 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    DIRECT          reduce using rule 384 (fnc_values_index_mode -> ALTERNATE_CURVES .)


state 538

    (379) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 610

state 539

    (383) fnc_values_index_mode -> ALTERNATE_WITH_Y .

    PBYTE           reduce using rule 383 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PWORD           reduce using rule 383 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PLONG           reduce using rule 383 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    DIRECT          reduce using rule 383 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)


state 540

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING . compu_method_optional_list_optional end COMPU_METHOD
    (278) compu_method_optional_list_optional -> . empty
    (279) compu_method_optional_list_optional -> . compu_method_optional_list
    (481) empty -> .
    (276) compu_method_optional_list -> . compu_method_optional
    (277) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (265) compu_method_optional -> . formula
    (266) compu_method_optional -> . coeffs
    (267) compu_method_optional -> . compu_tab_ref
    (268) compu_method_optional -> . ref_unit
    (269) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (273) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (274) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (275) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 481 (empty -> .)
    begin           shift and go to state 612
    COEFFS          shift and go to state 614
    COMPU_TAB_REF   shift and go to state 611
    REF_UNIT        shift and go to state 565

    ref_unit                       shift and go to state 617
    compu_tab_ref                  shift and go to state 621
    compu_method_optional_list_optional shift and go to state 613
    compu_method_optional_list     shift and go to state 615
    compu_method_optional          shift and go to state 616
    coeffs                         shift and go to state 618
    formula                        shift and go to state 619
    empty                          shift and go to state 620

state 541

    (92) ident_list -> IDENT ident_list .

    end             reduce using rule 92 (ident_list -> IDENT ident_list .)
    begin           reduce using rule 92 (ident_list -> IDENT ident_list .)
    FRAME_MEASUREMENT reduce using rule 92 (ident_list -> IDENT ident_list .)
    VAR_MEASUREMENT reduce using rule 92 (ident_list -> IDENT ident_list .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 92 (ident_list -> IDENT ident_list .)


state 542

    (432) var_address -> begin . VAR_ADDRESS number_list end VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 622


state 543

    (431) var_characteristic_optional -> var_address .

    end             reduce using rule 431 (var_characteristic_optional -> var_address .)


state 544

    (430) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional . end VAR_CHARACTERISTIC

    end             shift and go to state 623


state 545

    (435) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .

    VAR_SEPARATOR   reduce using rule 435 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    VAR_NAMING      reduce using rule 435 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    begin           reduce using rule 435 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    end             reduce using rule 435 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)


state 546

    (439) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list . var_criterion_optional_list_optional end VAR_CRITERION
    (444) var_criterion_optional_list_optional -> . empty
    (445) var_criterion_optional_list_optional -> . var_criterion_optional_list
    (481) empty -> .
    (442) var_criterion_optional_list -> . var_criterion_optional
    (443) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (440) var_criterion_optional -> . var_measurement
    (441) var_criterion_optional -> . var_selection_characteristic
    (446) var_measurement -> . VAR_MEASUREMENT IDENT
    (447) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 481 (empty -> .)
    VAR_MEASUREMENT shift and go to state 626
    VAR_SELECTION_CHARACTERISTIC shift and go to state 629

    var_criterion_optional         shift and go to state 624
    var_criterion_optional_list    shift and go to state 625
    var_criterion_optional_list_optional shift and go to state 627
    var_selection_characteristic   shift and go to state 628
    var_measurement                shift and go to state 630
    empty                          shift and go to state 631

state 547

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT . NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 632


state 548

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC . NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 633


state 549

    (298) number_number_string_value_list -> number_number_string_value number_number_string_value_list .

    DEFAULT_VALUE   reduce using rule 298 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)
    end             reduce using rule 298 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)


state 550

    (301) compu_vtab_range_optional -> default_value .

    end             reduce using rule 301 (compu_vtab_range_optional -> default_value .)


state 551

    (288) default_value -> DEFAULT_VALUE . STRING

    STRING          shift and go to state 634


state 552

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional . end COMPU_VTAB_RANGE

    end             shift and go to state 635


state 553

    (300) compu_vtab_range_optional -> empty .

    end             reduce using rule 300 (compu_vtab_range_optional -> empty .)


state 554

    (299) number_number_string_value -> NUMERIC NUMERIC . STRING

    STRING          shift and go to state 636


state 555

    (319) loc_measurement -> begin LOC_MEASUREMENT ident_list . end LOC_MEASUREMENT

    end             shift and go to state 637


state 556

    (315) def_characteristic -> begin DEF_CHARACTERISTIC ident_list . end DEF_CHARACTERISTIC

    end             shift and go to state 638


state 557

    (320) sub_function -> begin SUB_FUNCTION ident_list . end SUB_FUNCTION

    end             shift and go to state 639


state 558

    (317) in_measurement -> begin IN_MEASUREMENT ident_list . end IN_MEASUREMENT

    end             shift and go to state 640


state 559

    (318) out_measurement -> begin OUT_MEASUREMENT ident_list . end OUT_MEASUREMENT

    end             shift and go to state 641


state 560

    (302) function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .

    begin           reduce using rule 302 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)
    end             reduce using rule 302 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)


state 561

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list . compu_tab_optional end COMPU_TAB
    (286) compu_tab_optional -> . empty
    (287) compu_tab_optional -> . default_value
    (481) empty -> .
    (288) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 481 (empty -> .)
    DEFAULT_VALUE   shift and go to state 551

    default_value                  shift and go to state 642
    compu_tab_optional             shift and go to state 643
    empty                          shift and go to state 644

state 562

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT . NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 645


state 563

    (478) unit_optional_list_optional -> unit_optional_list .

    end             reduce using rule 478 (unit_optional_list_optional -> unit_optional_list .)


state 564

    (479) si_exponents -> SI_EXPONENTS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 646


state 565

    (275) ref_unit -> REF_UNIT . IDENT

    IDENT           shift and go to state 647


state 566

    (469) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional . end UNIT

    end             shift and go to state 648


state 567

    (474) unit_optional -> unit_conversion .

    SI_EXPONENTS    reduce using rule 474 (unit_optional -> unit_conversion .)
    REF_UNIT        reduce using rule 474 (unit_optional -> unit_conversion .)
    UNIT_CONVERSION reduce using rule 474 (unit_optional -> unit_conversion .)
    end             reduce using rule 474 (unit_optional -> unit_conversion .)


state 568

    (472) unit_optional -> si_exponents .

    SI_EXPONENTS    reduce using rule 472 (unit_optional -> si_exponents .)
    REF_UNIT        reduce using rule 472 (unit_optional -> si_exponents .)
    UNIT_CONVERSION reduce using rule 472 (unit_optional -> si_exponents .)
    end             reduce using rule 472 (unit_optional -> si_exponents .)


state 569

    (477) unit_optional_list_optional -> empty .

    end             reduce using rule 477 (unit_optional_list_optional -> empty .)


state 570

    (473) unit_optional -> ref_unit .

    SI_EXPONENTS    reduce using rule 473 (unit_optional -> ref_unit .)
    REF_UNIT        reduce using rule 473 (unit_optional -> ref_unit .)
    UNIT_CONVERSION reduce using rule 473 (unit_optional -> ref_unit .)
    end             reduce using rule 473 (unit_optional -> ref_unit .)


state 571

    (480) unit_conversion -> UNIT_CONVERSION . NUMERIC NUMERIC

    NUMERIC         shift and go to state 649


state 572

    (475) unit_optional_list -> unit_optional .
    (476) unit_optional_list -> unit_optional . unit_optional_list
    (475) unit_optional_list -> . unit_optional
    (476) unit_optional_list -> . unit_optional unit_optional_list
    (472) unit_optional -> . si_exponents
    (473) unit_optional -> . ref_unit
    (474) unit_optional -> . unit_conversion
    (479) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (275) ref_unit -> . REF_UNIT IDENT
    (480) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 475 (unit_optional_list -> unit_optional .)
    SI_EXPONENTS    shift and go to state 564
    REF_UNIT        shift and go to state 565
    UNIT_CONVERSION shift and go to state 571

    ref_unit                       shift and go to state 570
    si_exponents                   shift and go to state 568
    unit_optional                  shift and go to state 572
    unit_conversion                shift and go to state 567
    unit_optional_list             shift and go to state 650

state 573

    (468) ref_group -> begin REF_GROUP ident_list end . REF_GROUP

    REF_GROUP       shift and go to state 651


state 574

    (132) if_data -> begin . IF_DATA IDENT end IF_DATA

    IF_DATA         shift and go to state 101


state 575

    (453) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional . end FRAME

    end             shift and go to state 652


state 576

    (455) frame_optional -> if_data .

    FRAME_MEASUREMENT reduce using rule 455 (frame_optional -> if_data .)
    begin           reduce using rule 455 (frame_optional -> if_data .)
    end             reduce using rule 455 (frame_optional -> if_data .)


state 577

    (459) frame_optional_list_optional -> frame_optional_list .

    end             reduce using rule 459 (frame_optional_list_optional -> frame_optional_list .)


state 578

    (460) frame_measurement -> FRAME_MEASUREMENT . ident_list
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 653

state 579

    (456) frame_optional_list -> frame_optional .
    (457) frame_optional_list -> frame_optional . frame_optional_list
    (456) frame_optional_list -> . frame_optional
    (457) frame_optional_list -> . frame_optional frame_optional_list
    (454) frame_optional -> . frame_measurement
    (455) frame_optional -> . if_data
    (460) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA

    end             reduce using rule 456 (frame_optional_list -> frame_optional .)
    FRAME_MEASUREMENT shift and go to state 578
    begin           shift and go to state 574

    frame_optional_list            shift and go to state 654
    if_data                        shift and go to state 576
    frame_optional                 shift and go to state 579
    frame_measurement              shift and go to state 581

state 580

    (458) frame_optional_list_optional -> empty .

    end             reduce using rule 458 (frame_optional_list_optional -> empty .)


state 581

    (454) frame_optional -> frame_measurement .

    FRAME_MEASUREMENT reduce using rule 454 (frame_optional -> frame_measurement .)
    begin           reduce using rule 454 (frame_optional -> frame_measurement .)
    end             reduce using rule 454 (frame_optional -> frame_measurement .)


state 582

    (39) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .
    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE . a2ml_array_specifier
    (39) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE
    (40) a2ml_array_specifier -> . BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier

    SEMICOLON       reduce using rule 39 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .)
    PARENTHESE_CLOSE reduce using rule 39 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE .)
    BRACE_OPEN      shift and go to state 408

    a2ml_array_specifier           shift and go to state 655

state 583

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK . SEMICOLON

    SEMICOLON       shift and go to state 656


state 584

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK . SEMICOLON

    SEMICOLON       shift and go to state 657


state 585

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE . ASTERISK SEMICOLON

    ASTERISK        shift and go to state 658


state 586

    (293) number_string_value -> NUMERIC STRING .

    NUMERIC         reduce using rule 293 (number_string_value -> NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 293 (number_string_value -> NUMERIC STRING .)
    end             reduce using rule 293 (number_string_value -> NUMERIC STRING .)


state 587

    (295) compu_vtab_optional -> default_value .

    end             reduce using rule 295 (compu_vtab_optional -> default_value .)


state 588

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional . end COMPU_VTAB

    end             shift and go to state 659


state 589

    (294) compu_vtab_optional -> empty .

    end             reduce using rule 294 (compu_vtab_optional -> empty .)


state 590

    (292) number_string_value_list -> number_string_value number_string_value_list .

    DEFAULT_VALUE   reduce using rule 292 (number_string_value_list -> number_string_value number_string_value_list .)
    end             reduce using rule 292 (number_string_value_list -> number_string_value number_string_value_list .)


state 591

    (334) sub_group -> begin SUB_GROUP ident_list end . SUB_GROUP

    SUB_GROUP       shift and go to state 660


state 592

    (146) function_list -> begin FUNCTION_LIST ident_list end . FUNCTION_LIST

    FUNCTION_LIST   shift and go to state 661


state 593

    (333) ref_measurement -> begin REF_MEASUREMENT ident_list end . REF_MEASUREMENT

    REF_MEASUREMENT shift and go to state 662


state 594

    (316) ref_characteristic -> begin REF_CHARACTERISTIC ident_list end . REF_CHARACTERISTIC

    REF_CHARACTERISTIC shift and go to state 663


state 595

    (154) annotation -> begin ANNOTATION annotation_optional_list_optional end . ANNOTATION

    ANNOTATION      shift and go to state 664


state 596

    (160) annotation_text -> begin ANNOTATION_TEXT . string_list end ANNOTATION_TEXT
    (93) string_list -> . STRING
    (94) string_list -> . STRING string_list

    STRING          shift and go to state 666

    string_list                    shift and go to state 665

state 597

    (158) annotation_label -> ANNOTATION_LABEL STRING .

    ANNOTATION_LABEL reduce using rule 158 (annotation_label -> ANNOTATION_LABEL STRING .)
    ANNOTATION_ORIGIN reduce using rule 158 (annotation_label -> ANNOTATION_LABEL STRING .)
    begin           reduce using rule 158 (annotation_label -> ANNOTATION_LABEL STRING .)
    end             reduce using rule 158 (annotation_label -> ANNOTATION_LABEL STRING .)


state 598

    (159) annotation_origin -> ANNOTATION_ORIGIN STRING .

    ANNOTATION_LABEL reduce using rule 159 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    ANNOTATION_ORIGIN reduce using rule 159 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    begin           reduce using rule 159 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    end             reduce using rule 159 (annotation_origin -> ANNOTATION_ORIGIN STRING .)


state 599

    (162) annotation_optional_list -> annotation_optional annotation_optional_list .

    end             reduce using rule 162 (annotation_optional_list -> annotation_optional annotation_optional_list .)


state 600

    (388) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 388 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)


state 601

    (78) addrtype -> PBYTE .

    FNC_VALUES      reduce using rule 78 (addrtype -> PBYTE .)
    IDENTIFICATION  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_X      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_Y      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_PTS_Z      reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_X  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_Y  reduce using rule 78 (addrtype -> PBYTE .)
    AXIS_RESCALE_Z  reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_X   reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 78 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_X    reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_Y    reduce using rule 78 (addrtype -> PBYTE .)
    NO_RESCALE_Z    reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 78 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_X      reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_Y      reduce using rule 78 (addrtype -> PBYTE .)
    SRC_ADDR_Z      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_X      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_Y      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_Z      reduce using rule 78 (addrtype -> PBYTE .)
    RIP_ADDR_W      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_X      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_Y      reduce using rule 78 (addrtype -> PBYTE .)
    SHIFT_OP_Z      reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_X        reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_Y        reduce using rule 78 (addrtype -> PBYTE .)
    OFFSET_Z        reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_X       reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_Y       reduce using rule 78 (addrtype -> PBYTE .)
    DIST_OP_Z       reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_BYTE  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_WORD  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_LONG  reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 78 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 78 (addrtype -> PBYTE .)
    RESERVED        reduce using rule 78 (addrtype -> PBYTE .)
    end             reduce using rule 78 (addrtype -> PBYTE .)


state 602

    (81) addrtype -> DIRECT .

    FNC_VALUES      reduce using rule 81 (addrtype -> DIRECT .)
    IDENTIFICATION  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_X      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_Y      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_PTS_Z      reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_X  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_Y  reduce using rule 81 (addrtype -> DIRECT .)
    AXIS_RESCALE_Z  reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_X   reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Y   reduce using rule 81 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Z   reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_X    reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_Y    reduce using rule 81 (addrtype -> DIRECT .)
    NO_RESCALE_Z    reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_X reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Y reduce using rule 81 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Z reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_X      reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_Y      reduce using rule 81 (addrtype -> DIRECT .)
    SRC_ADDR_Z      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_X      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_Y      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_Z      reduce using rule 81 (addrtype -> DIRECT .)
    RIP_ADDR_W      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_X      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_Y      reduce using rule 81 (addrtype -> DIRECT .)
    SHIFT_OP_Z      reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_X        reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_Y        reduce using rule 81 (addrtype -> DIRECT .)
    OFFSET_Z        reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_X       reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_Y       reduce using rule 81 (addrtype -> DIRECT .)
    DIST_OP_Z       reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_BYTE  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_WORD  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_LONG  reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 81 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 81 (addrtype -> DIRECT .)
    RESERVED        reduce using rule 81 (addrtype -> DIRECT .)
    end             reduce using rule 81 (addrtype -> DIRECT .)


state 603

    (79) addrtype -> PWORD .

    FNC_VALUES      reduce using rule 79 (addrtype -> PWORD .)
    IDENTIFICATION  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_X      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_Y      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_PTS_Z      reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_X  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_Y  reduce using rule 79 (addrtype -> PWORD .)
    AXIS_RESCALE_Z  reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_X   reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_Y   reduce using rule 79 (addrtype -> PWORD .)
    NO_AXIS_PTS_Z   reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_X    reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_Y    reduce using rule 79 (addrtype -> PWORD .)
    NO_RESCALE_Z    reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 79 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_X      reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_Y      reduce using rule 79 (addrtype -> PWORD .)
    SRC_ADDR_Z      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_X      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_Y      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_Z      reduce using rule 79 (addrtype -> PWORD .)
    RIP_ADDR_W      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_X      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_Y      reduce using rule 79 (addrtype -> PWORD .)
    SHIFT_OP_Z      reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_X        reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_Y        reduce using rule 79 (addrtype -> PWORD .)
    OFFSET_Z        reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_X       reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_Y       reduce using rule 79 (addrtype -> PWORD .)
    DIST_OP_Z       reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_BYTE  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_WORD  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_LONG  reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 79 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 79 (addrtype -> PWORD .)
    RESERVED        reduce using rule 79 (addrtype -> PWORD .)
    end             reduce using rule 79 (addrtype -> PWORD .)


state 604

    (80) addrtype -> PLONG .

    FNC_VALUES      reduce using rule 80 (addrtype -> PLONG .)
    IDENTIFICATION  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_X      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_Y      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_PTS_Z      reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_X  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_Y  reduce using rule 80 (addrtype -> PLONG .)
    AXIS_RESCALE_Z  reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_X   reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_Y   reduce using rule 80 (addrtype -> PLONG .)
    NO_AXIS_PTS_Z   reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_X    reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_Y    reduce using rule 80 (addrtype -> PLONG .)
    NO_RESCALE_Z    reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 80 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_X      reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_Y      reduce using rule 80 (addrtype -> PLONG .)
    SRC_ADDR_Z      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_X      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_Y      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_Z      reduce using rule 80 (addrtype -> PLONG .)
    RIP_ADDR_W      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_X      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_Y      reduce using rule 80 (addrtype -> PLONG .)
    SHIFT_OP_Z      reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_X        reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_Y        reduce using rule 80 (addrtype -> PLONG .)
    OFFSET_Z        reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_X       reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_Y       reduce using rule 80 (addrtype -> PLONG .)
    DIST_OP_Z       reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_BYTE  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_WORD  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_LONG  reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 80 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 80 (addrtype -> PLONG .)
    RESERVED        reduce using rule 80 (addrtype -> PLONG .)
    end             reduce using rule 80 (addrtype -> PLONG .)


state 605

    (386) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 386 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)


state 606

    (387) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 387 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)


state 607

    (391) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 667

state 608

    (389) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 668

state 609

    (390) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder . addrtype
    (78) addrtype -> . PBYTE
    (79) addrtype -> . PWORD
    (80) addrtype -> . PLONG
    (81) addrtype -> . DIRECT

    PBYTE           shift and go to state 601
    PWORD           shift and go to state 603
    PLONG           shift and go to state 604
    DIRECT          shift and go to state 602

    addrtype                       shift and go to state 669

state 610

    (379) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .

    FNC_VALUES      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    IDENTIFICATION  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_X      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Y      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Z      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_X  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Y  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Z  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_X   reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_X    reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Y    reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Z    reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_X      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Y      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Z      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_X      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Y      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Z      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_W      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_X      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Y      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Z      reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_X        reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Y        reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Z        reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_X       reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Y       reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Z       reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_BYTE  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_WORD  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_LONG  reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RESERVED        reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    end             reduce using rule 379 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)


state 611

    (274) compu_tab_ref -> COMPU_TAB_REF . IDENT

    IDENT           shift and go to state 670


state 612

    (269) formula -> begin . FORMULA STRING formula_optional end FORMULA

    FORMULA         shift and go to state 671


state 613

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional . end COMPU_METHOD

    end             shift and go to state 672


state 614

    (273) coeffs -> COEFFS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 673


state 615

    (279) compu_method_optional_list_optional -> compu_method_optional_list .

    end             reduce using rule 279 (compu_method_optional_list_optional -> compu_method_optional_list .)


state 616

    (276) compu_method_optional_list -> compu_method_optional .
    (277) compu_method_optional_list -> compu_method_optional . compu_method_optional_list
    (276) compu_method_optional_list -> . compu_method_optional
    (277) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (265) compu_method_optional -> . formula
    (266) compu_method_optional -> . coeffs
    (267) compu_method_optional -> . compu_tab_ref
    (268) compu_method_optional -> . ref_unit
    (269) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (273) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (274) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (275) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 276 (compu_method_optional_list -> compu_method_optional .)
    begin           shift and go to state 612
    COEFFS          shift and go to state 614
    COMPU_TAB_REF   shift and go to state 611
    REF_UNIT        shift and go to state 565

    compu_tab_ref                  shift and go to state 621
    compu_method_optional          shift and go to state 616
    compu_method_optional_list     shift and go to state 674
    ref_unit                       shift and go to state 617
    coeffs                         shift and go to state 618
    formula                        shift and go to state 619

state 617

    (268) compu_method_optional -> ref_unit .

    begin           reduce using rule 268 (compu_method_optional -> ref_unit .)
    COEFFS          reduce using rule 268 (compu_method_optional -> ref_unit .)
    COMPU_TAB_REF   reduce using rule 268 (compu_method_optional -> ref_unit .)
    REF_UNIT        reduce using rule 268 (compu_method_optional -> ref_unit .)
    end             reduce using rule 268 (compu_method_optional -> ref_unit .)


state 618

    (266) compu_method_optional -> coeffs .

    begin           reduce using rule 266 (compu_method_optional -> coeffs .)
    COEFFS          reduce using rule 266 (compu_method_optional -> coeffs .)
    COMPU_TAB_REF   reduce using rule 266 (compu_method_optional -> coeffs .)
    REF_UNIT        reduce using rule 266 (compu_method_optional -> coeffs .)
    end             reduce using rule 266 (compu_method_optional -> coeffs .)


state 619

    (265) compu_method_optional -> formula .

    begin           reduce using rule 265 (compu_method_optional -> formula .)
    COEFFS          reduce using rule 265 (compu_method_optional -> formula .)
    COMPU_TAB_REF   reduce using rule 265 (compu_method_optional -> formula .)
    REF_UNIT        reduce using rule 265 (compu_method_optional -> formula .)
    end             reduce using rule 265 (compu_method_optional -> formula .)


state 620

    (278) compu_method_optional_list_optional -> empty .

    end             reduce using rule 278 (compu_method_optional_list_optional -> empty .)


state 621

    (267) compu_method_optional -> compu_tab_ref .

    begin           reduce using rule 267 (compu_method_optional -> compu_tab_ref .)
    COEFFS          reduce using rule 267 (compu_method_optional -> compu_tab_ref .)
    COMPU_TAB_REF   reduce using rule 267 (compu_method_optional -> compu_tab_ref .)
    REF_UNIT        reduce using rule 267 (compu_method_optional -> compu_tab_ref .)
    end             reduce using rule 267 (compu_method_optional -> compu_tab_ref .)


state 622

    (432) var_address -> begin VAR_ADDRESS . number_list end VAR_ADDRESS
    (89) number_list -> . NUMERIC
    (90) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 675

state 623

    (430) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end . VAR_CHARACTERISTIC

    VAR_CHARACTERISTIC shift and go to state 676


state 624

    (442) var_criterion_optional_list -> var_criterion_optional .
    (443) var_criterion_optional_list -> var_criterion_optional . var_criterion_optional_list
    (442) var_criterion_optional_list -> . var_criterion_optional
    (443) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (440) var_criterion_optional -> . var_measurement
    (441) var_criterion_optional -> . var_selection_characteristic
    (446) var_measurement -> . VAR_MEASUREMENT IDENT
    (447) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 442 (var_criterion_optional_list -> var_criterion_optional .)
    VAR_MEASUREMENT shift and go to state 626
    VAR_SELECTION_CHARACTERISTIC shift and go to state 629

    var_criterion_optional         shift and go to state 624
    var_selection_characteristic   shift and go to state 628
    var_measurement                shift and go to state 630
    var_criterion_optional_list    shift and go to state 677

state 625

    (445) var_criterion_optional_list_optional -> var_criterion_optional_list .

    end             reduce using rule 445 (var_criterion_optional_list_optional -> var_criterion_optional_list .)


state 626

    (446) var_measurement -> VAR_MEASUREMENT . IDENT

    IDENT           shift and go to state 678


state 627

    (439) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional . end VAR_CRITERION

    end             shift and go to state 679


state 628

    (441) var_criterion_optional -> var_selection_characteristic .

    VAR_MEASUREMENT reduce using rule 441 (var_criterion_optional -> var_selection_characteristic .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 441 (var_criterion_optional -> var_selection_characteristic .)
    end             reduce using rule 441 (var_criterion_optional -> var_selection_characteristic .)


state 629

    (447) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC . IDENT

    IDENT           shift and go to state 680


state 630

    (440) var_criterion_optional -> var_measurement .

    VAR_MEASUREMENT reduce using rule 440 (var_criterion_optional -> var_measurement .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 440 (var_criterion_optional -> var_measurement .)
    end             reduce using rule 440 (var_criterion_optional -> var_measurement .)


state 631

    (444) var_criterion_optional_list_optional -> empty .

    end             reduce using rule 444 (var_criterion_optional_list_optional -> empty .)


state 632

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC . IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 681


state 633

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC . NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 682


state 634

    (288) default_value -> DEFAULT_VALUE STRING .

    end             reduce using rule 288 (default_value -> DEFAULT_VALUE STRING .)


state 635

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end . COMPU_VTAB_RANGE

    COMPU_VTAB_RANGE shift and go to state 683


state 636

    (299) number_number_string_value -> NUMERIC NUMERIC STRING .

    NUMERIC         reduce using rule 299 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 299 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    end             reduce using rule 299 (number_number_string_value -> NUMERIC NUMERIC STRING .)


state 637

    (319) loc_measurement -> begin LOC_MEASUREMENT ident_list end . LOC_MEASUREMENT

    LOC_MEASUREMENT shift and go to state 684


state 638

    (315) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end . DEF_CHARACTERISTIC

    DEF_CHARACTERISTIC shift and go to state 685


state 639

    (320) sub_function -> begin SUB_FUNCTION ident_list end . SUB_FUNCTION

    SUB_FUNCTION    shift and go to state 686


state 640

    (317) in_measurement -> begin IN_MEASUREMENT ident_list end . IN_MEASUREMENT

    IN_MEASUREMENT  shift and go to state 687


state 641

    (318) out_measurement -> begin OUT_MEASUREMENT ident_list end . OUT_MEASUREMENT

    OUT_MEASUREMENT shift and go to state 688


state 642

    (287) compu_tab_optional -> default_value .

    end             reduce using rule 287 (compu_tab_optional -> default_value .)


state 643

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional . end COMPU_TAB

    end             shift and go to state 689


state 644

    (286) compu_tab_optional -> empty .

    end             reduce using rule 286 (compu_tab_optional -> empty .)


state 645

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC . IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 690


state 646

    (479) si_exponents -> SI_EXPONENTS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 691


state 647

    (275) ref_unit -> REF_UNIT IDENT .

    begin           reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    COEFFS          reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    COMPU_TAB_REF   reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    REF_UNIT        reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    end             reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    SI_EXPONENTS    reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)
    UNIT_CONVERSION reduce using rule 275 (ref_unit -> REF_UNIT IDENT .)


state 648

    (469) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end . UNIT

    UNIT            shift and go to state 692


state 649

    (480) unit_conversion -> UNIT_CONVERSION NUMERIC . NUMERIC

    NUMERIC         shift and go to state 693


state 650

    (476) unit_optional_list -> unit_optional unit_optional_list .

    end             reduce using rule 476 (unit_optional_list -> unit_optional unit_optional_list .)


state 651

    (468) ref_group -> begin REF_GROUP ident_list end REF_GROUP .

    READ_ONLY       reduce using rule 468 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    begin           reduce using rule 468 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    end             reduce using rule 468 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)


state 652

    (453) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end . FRAME

    FRAME           shift and go to state 694


state 653

    (460) frame_measurement -> FRAME_MEASUREMENT ident_list .

    FRAME_MEASUREMENT reduce using rule 460 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    begin           reduce using rule 460 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    end             reduce using rule 460 (frame_measurement -> FRAME_MEASUREMENT ident_list .)


state 654

    (457) frame_optional_list -> frame_optional frame_optional_list .

    end             reduce using rule 457 (frame_optional_list -> frame_optional frame_optional_list .)


state 655

    (40) a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .

    SEMICOLON       reduce using rule 40 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .)
    PARENTHESE_CLOSE reduce using rule 40 (a2ml_array_specifier -> BRACE_OPEN a2ml_constant BRACE_CLOSE a2ml_array_specifier .)


state 656

    (50) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .

    PARENTHESE_OPEN reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    block           reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    STRING          reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    CURLY_CLOSE     reduce using rule 50 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_block_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)


state 657

    (48) a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .

    PARENTHESE_OPEN reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    block           reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    STRING          reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    CURLY_CLOSE     reduce using rule 48 (a2ml_taggedstruct_member -> PARENTHESE_OPEN a2ml_taggedstruct_definition PARENTHESE_CLOSE ASTERISK SEMICOLON .)


state 658

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK . SEMICOLON

    SEMICOLON       shift and go to state 695


state 659

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end . COMPU_VTAB

    COMPU_VTAB      shift and go to state 696


state 660

    (334) sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .

    ROOT            reduce using rule 334 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    begin           reduce using rule 334 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    end             reduce using rule 334 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)


state 661

    (146) function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .

    READ_ONLY       reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    GUARD_RAILS     reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    FORMAT          reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BYTE_ORDER      reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BIT_MASK        reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    begin           reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    NUMBER          reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    EXTENDED_LIMITS reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MAX_REFRESH     reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    COMPARISON_QUANTITY reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    CALIBRATION_ACCESS reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MATRIX_DIM      reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    end             reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    READ_WRITE      reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ARRAY_SIZE      reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS     reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ERROR_MASK      reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ROOT            reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DEPOSIT         reduce using rule 146 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)


state 662

    (333) ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .

    ROOT            reduce using rule 333 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)
    begin           reduce using rule 333 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)
    end             reduce using rule 333 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)


state 663

    (316) ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .

    begin           reduce using rule 316 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 316 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    end             reduce using rule 316 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    ROOT            reduce using rule 316 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)


state 664

    (154) annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .

    ROOT            reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    begin           reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    end             reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    READ_ONLY       reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    GUARD_RAILS     reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DISPLAY_IDENTIFIER reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FORMAT          reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BYTE_ORDER      reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BIT_MASK        reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    NUMBER          reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    EXTENDED_LIMITS reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MAX_REFRESH     reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    REF_MEMORY_SEGMENT reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    COMPARISON_QUANTITY reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    CALIBRATION_ACCESS reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MATRIX_DIM      reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    READ_WRITE      reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ARRAY_SIZE      reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS     reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ERROR_MASK      reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FUNCTION_VERSION reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DEPOSIT         reduce using rule 154 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)


state 665

    (160) annotation_text -> begin ANNOTATION_TEXT string_list . end ANNOTATION_TEXT

    end             shift and go to state 697


state 666

    (93) string_list -> STRING .
    (94) string_list -> STRING . string_list
    (93) string_list -> . STRING
    (94) string_list -> . STRING string_list

    end             reduce using rule 93 (string_list -> STRING .)
    STRING          shift and go to state 666

    string_list                    shift and go to state 698

state 667

    (391) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 391 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)


state 668

    (389) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 389 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)


state 669

    (390) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 390 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)


state 670

    (274) compu_tab_ref -> COMPU_TAB_REF IDENT .

    begin           reduce using rule 274 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COEFFS          reduce using rule 274 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COMPU_TAB_REF   reduce using rule 274 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    REF_UNIT        reduce using rule 274 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    end             reduce using rule 274 (compu_tab_ref -> COMPU_TAB_REF IDENT .)


state 671

    (269) formula -> begin FORMULA . STRING formula_optional end FORMULA

    STRING          shift and go to state 699


state 672

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end . COMPU_METHOD

    COMPU_METHOD    shift and go to state 700


state 673

    (273) coeffs -> COEFFS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 701


state 674

    (277) compu_method_optional_list -> compu_method_optional compu_method_optional_list .

    end             reduce using rule 277 (compu_method_optional_list -> compu_method_optional compu_method_optional_list .)


state 675

    (432) var_address -> begin VAR_ADDRESS number_list . end VAR_ADDRESS

    end             shift and go to state 702


state 676

    (430) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .

    VAR_SEPARATOR   reduce using rule 430 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    VAR_NAMING      reduce using rule 430 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    begin           reduce using rule 430 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    end             reduce using rule 430 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)


state 677

    (443) var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .

    end             reduce using rule 443 (var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .)


state 678

    (446) var_measurement -> VAR_MEASUREMENT IDENT .

    VAR_MEASUREMENT reduce using rule 446 (var_measurement -> VAR_MEASUREMENT IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 446 (var_measurement -> VAR_MEASUREMENT IDENT .)
    end             reduce using rule 446 (var_measurement -> VAR_MEASUREMENT IDENT .)


state 679

    (439) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end . VAR_CRITERION

    VAR_CRITERION   shift and go to state 703


state 680

    (447) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .

    VAR_MEASUREMENT reduce using rule 447 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 447 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    end             reduce using rule 447 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)


state 681

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT . NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 704


state 682

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC . NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 705


state 683

    (296) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .

    begin           reduce using rule 296 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)
    end             reduce using rule 296 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)


state 684

    (319) loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .

    begin           reduce using rule 319 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 319 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    end             reduce using rule 319 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)


state 685

    (315) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .

    begin           reduce using rule 315 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 315 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    end             reduce using rule 315 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)


state 686

    (320) sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .

    begin           reduce using rule 320 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    FUNCTION_VERSION reduce using rule 320 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    end             reduce using rule 320 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)


state 687

    (317) in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .

    begin           reduce using rule 317 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 317 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    end             reduce using rule 317 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)


state 688

    (318) out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .

    begin           reduce using rule 318 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 318 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    end             reduce using rule 318 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)


state 689

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end . COMPU_TAB

    COMPU_TAB       shift and go to state 706


state 690

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT . NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 707


state 691

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 708


state 692

    (469) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .

    begin           reduce using rule 469 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)
    end             reduce using rule 469 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)


state 693

    (480) unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 480 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 480 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 480 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    end             reduce using rule 480 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)


state 694

    (453) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .

    begin           reduce using rule 453 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)
    end             reduce using rule 453 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)


state 695

    (52) a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON .

    SEMICOLON       reduce using rule 52 (a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON .)
    PARENTHESE_CLOSE reduce using rule 52 (a2ml_taggedstruct_definition -> a2ml_tag PARENTHESE_OPEN a2ml_member PARENTHESE_CLOSE ASTERISK SEMICOLON .)


state 696

    (289) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .

    begin           reduce using rule 289 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)
    end             reduce using rule 289 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)


state 697

    (160) annotation_text -> begin ANNOTATION_TEXT string_list end . ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 709


state 698

    (94) string_list -> STRING string_list .

    end             reduce using rule 94 (string_list -> STRING string_list .)


state 699

    (269) formula -> begin FORMULA STRING . formula_optional end FORMULA
    (270) formula_optional -> . empty
    (271) formula_optional -> . formula_inv
    (481) empty -> .
    (272) formula_inv -> . STRING

    end             reduce using rule 481 (empty -> .)
    STRING          shift and go to state 710

    formula_inv                    shift and go to state 711
    formula_optional               shift and go to state 712
    empty                          shift and go to state 713

state 700

    (258) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .

    begin           reduce using rule 258 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)
    end             reduce using rule 258 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)


state 701

    (273) coeffs -> COEFFS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 714


state 702

    (432) var_address -> begin VAR_ADDRESS number_list end . VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 715


state 703

    (439) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .

    VAR_SEPARATOR   reduce using rule 439 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    VAR_NAMING      reduce using rule 439 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    begin           reduce using rule 439 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    end             reduce using rule 439 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)


state 704

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC . NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 716


state 705

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC . measurement_optional_list_optional end MEASUREMENT
    (245) measurement_optional_list_optional -> . empty
    (246) measurement_optional_list_optional -> . measurement_optional_list
    (481) empty -> .
    (243) measurement_optional_list -> . measurement_optional
    (244) measurement_optional_list -> . measurement_optional measurement_optional_list
    (226) measurement_optional -> . display_identifier
    (227) measurement_optional -> . READ_WRITE
    (228) measurement_optional -> . format
    (229) measurement_optional -> . array_size
    (230) measurement_optional -> . bit_mask
    (231) measurement_optional -> . bit_operation
    (232) measurement_optional -> . byte_order
    (233) measurement_optional -> . max_refresh
    (234) measurement_optional -> . virtual
    (235) measurement_optional -> . function_list
    (236) measurement_optional -> . ecu_address
    (237) measurement_optional -> . error_mask
    (238) measurement_optional -> . ref_memory_segment
    (239) measurement_optional -> . annotation
    (240) measurement_optional -> . if_data
    (241) measurement_optional -> . matrix_dim
    (242) measurement_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (247) array_size -> . ARRAY_SIZE NUMERIC
    (145) bit_mask -> . BIT_MASK NUMERIC
    (248) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (150) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (280) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (281) ecu_address -> . ECU_ADDRESS NUMERIC
    (282) error_mask -> . ERROR_MASK NUMERIC
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (177) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 481 (empty -> .)
    READ_WRITE      shift and go to state 717
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    ARRAY_SIZE      shift and go to state 746
    BIT_MASK        shift and go to state 719
    begin           shift and go to state 732
    BYTE_ORDER      shift and go to state 722
    MAX_REFRESH     shift and go to state 747
    ECU_ADDRESS     shift and go to state 741
    ERROR_MASK      shift and go to state 726
    REF_MEMORY_SEGMENT shift and go to state 742
    MATRIX_DIM      shift and go to state 727
    ECU_ADDRESS_EXTENSION shift and go to state 736

    measurement_optional_list_optional shift and go to state 718
    error_mask                     shift and go to state 720
    display_identifier             shift and go to state 723
    if_data                        shift and go to state 724
    bit_mask                       shift and go to state 725
    virtual                        shift and go to state 721
    ecu_address                    shift and go to state 735
    empty                          shift and go to state 729
    ecu_address_extension          shift and go to state 730
    byte_order                     shift and go to state 731
    format                         shift and go to state 733
    matrix_dim                     shift and go to state 737
    measurement_optional           shift and go to state 738
    annotation                     shift and go to state 739
    measurement_optional_list      shift and go to state 740
    function_list                  shift and go to state 743
    array_size                     shift and go to state 744
    max_refresh                    shift and go to state 745
    bit_operation                  shift and go to state 748
    ref_memory_segment             shift and go to state 749

state 706

    (283) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .

    begin           reduce using rule 283 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)
    end             reduce using rule 283 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)


state 707

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC . NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 750


state 708

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 751


state 709

    (160) annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .

    ANNOTATION_LABEL reduce using rule 160 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    ANNOTATION_ORIGIN reduce using rule 160 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    begin           reduce using rule 160 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    end             reduce using rule 160 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)


state 710

    (272) formula_inv -> STRING .

    end             reduce using rule 272 (formula_inv -> STRING .)


state 711

    (271) formula_optional -> formula_inv .

    end             reduce using rule 271 (formula_optional -> formula_inv .)


state 712

    (269) formula -> begin FORMULA STRING formula_optional . end FORMULA

    end             shift and go to state 752


state 713

    (270) formula_optional -> empty .

    end             reduce using rule 270 (formula_optional -> empty .)


state 714

    (273) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 753


state 715

    (432) var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .

    end             reduce using rule 432 (var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .)


state 716

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC . NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 754


state 717

    (227) measurement_optional -> READ_WRITE .

    READ_WRITE      reduce using rule 227 (measurement_optional -> READ_WRITE .)
    DISPLAY_IDENTIFIER reduce using rule 227 (measurement_optional -> READ_WRITE .)
    FORMAT          reduce using rule 227 (measurement_optional -> READ_WRITE .)
    ARRAY_SIZE      reduce using rule 227 (measurement_optional -> READ_WRITE .)
    BIT_MASK        reduce using rule 227 (measurement_optional -> READ_WRITE .)
    begin           reduce using rule 227 (measurement_optional -> READ_WRITE .)
    BYTE_ORDER      reduce using rule 227 (measurement_optional -> READ_WRITE .)
    MAX_REFRESH     reduce using rule 227 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS     reduce using rule 227 (measurement_optional -> READ_WRITE .)
    ERROR_MASK      reduce using rule 227 (measurement_optional -> READ_WRITE .)
    REF_MEMORY_SEGMENT reduce using rule 227 (measurement_optional -> READ_WRITE .)
    MATRIX_DIM      reduce using rule 227 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS_EXTENSION reduce using rule 227 (measurement_optional -> READ_WRITE .)
    end             reduce using rule 227 (measurement_optional -> READ_WRITE .)


state 718

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional . end MEASUREMENT

    end             shift and go to state 755


state 719

    (145) bit_mask -> BIT_MASK . NUMERIC

    NUMERIC         shift and go to state 756


state 720

    (237) measurement_optional -> error_mask .

    READ_WRITE      reduce using rule 237 (measurement_optional -> error_mask .)
    DISPLAY_IDENTIFIER reduce using rule 237 (measurement_optional -> error_mask .)
    FORMAT          reduce using rule 237 (measurement_optional -> error_mask .)
    ARRAY_SIZE      reduce using rule 237 (measurement_optional -> error_mask .)
    BIT_MASK        reduce using rule 237 (measurement_optional -> error_mask .)
    begin           reduce using rule 237 (measurement_optional -> error_mask .)
    BYTE_ORDER      reduce using rule 237 (measurement_optional -> error_mask .)
    MAX_REFRESH     reduce using rule 237 (measurement_optional -> error_mask .)
    ECU_ADDRESS     reduce using rule 237 (measurement_optional -> error_mask .)
    ERROR_MASK      reduce using rule 237 (measurement_optional -> error_mask .)
    REF_MEMORY_SEGMENT reduce using rule 237 (measurement_optional -> error_mask .)
    MATRIX_DIM      reduce using rule 237 (measurement_optional -> error_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 237 (measurement_optional -> error_mask .)
    end             reduce using rule 237 (measurement_optional -> error_mask .)


state 721

    (234) measurement_optional -> virtual .

    READ_WRITE      reduce using rule 234 (measurement_optional -> virtual .)
    DISPLAY_IDENTIFIER reduce using rule 234 (measurement_optional -> virtual .)
    FORMAT          reduce using rule 234 (measurement_optional -> virtual .)
    ARRAY_SIZE      reduce using rule 234 (measurement_optional -> virtual .)
    BIT_MASK        reduce using rule 234 (measurement_optional -> virtual .)
    begin           reduce using rule 234 (measurement_optional -> virtual .)
    BYTE_ORDER      reduce using rule 234 (measurement_optional -> virtual .)
    MAX_REFRESH     reduce using rule 234 (measurement_optional -> virtual .)
    ECU_ADDRESS     reduce using rule 234 (measurement_optional -> virtual .)
    ERROR_MASK      reduce using rule 234 (measurement_optional -> virtual .)
    REF_MEMORY_SEGMENT reduce using rule 234 (measurement_optional -> virtual .)
    MATRIX_DIM      reduce using rule 234 (measurement_optional -> virtual .)
    ECU_ADDRESS_EXTENSION reduce using rule 234 (measurement_optional -> virtual .)
    end             reduce using rule 234 (measurement_optional -> virtual .)


state 722

    (142) byte_order -> BYTE_ORDER . byte_order_type
    (143) byte_order_type -> . MSB_FIRST
    (144) byte_order_type -> . MSB_LAST

    MSB_FIRST       shift and go to state 757
    MSB_LAST        shift and go to state 758

    byte_order_type                shift and go to state 759

state 723

    (226) measurement_optional -> display_identifier .

    READ_WRITE      reduce using rule 226 (measurement_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 226 (measurement_optional -> display_identifier .)
    FORMAT          reduce using rule 226 (measurement_optional -> display_identifier .)
    ARRAY_SIZE      reduce using rule 226 (measurement_optional -> display_identifier .)
    BIT_MASK        reduce using rule 226 (measurement_optional -> display_identifier .)
    begin           reduce using rule 226 (measurement_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 226 (measurement_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 226 (measurement_optional -> display_identifier .)
    ECU_ADDRESS     reduce using rule 226 (measurement_optional -> display_identifier .)
    ERROR_MASK      reduce using rule 226 (measurement_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 226 (measurement_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 226 (measurement_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 226 (measurement_optional -> display_identifier .)
    end             reduce using rule 226 (measurement_optional -> display_identifier .)


state 724

    (240) measurement_optional -> if_data .

    READ_WRITE      reduce using rule 240 (measurement_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 240 (measurement_optional -> if_data .)
    FORMAT          reduce using rule 240 (measurement_optional -> if_data .)
    ARRAY_SIZE      reduce using rule 240 (measurement_optional -> if_data .)
    BIT_MASK        reduce using rule 240 (measurement_optional -> if_data .)
    begin           reduce using rule 240 (measurement_optional -> if_data .)
    BYTE_ORDER      reduce using rule 240 (measurement_optional -> if_data .)
    MAX_REFRESH     reduce using rule 240 (measurement_optional -> if_data .)
    ECU_ADDRESS     reduce using rule 240 (measurement_optional -> if_data .)
    ERROR_MASK      reduce using rule 240 (measurement_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 240 (measurement_optional -> if_data .)
    MATRIX_DIM      reduce using rule 240 (measurement_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 240 (measurement_optional -> if_data .)
    end             reduce using rule 240 (measurement_optional -> if_data .)


state 725

    (230) measurement_optional -> bit_mask .

    READ_WRITE      reduce using rule 230 (measurement_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 230 (measurement_optional -> bit_mask .)
    FORMAT          reduce using rule 230 (measurement_optional -> bit_mask .)
    ARRAY_SIZE      reduce using rule 230 (measurement_optional -> bit_mask .)
    BIT_MASK        reduce using rule 230 (measurement_optional -> bit_mask .)
    begin           reduce using rule 230 (measurement_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 230 (measurement_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 230 (measurement_optional -> bit_mask .)
    ECU_ADDRESS     reduce using rule 230 (measurement_optional -> bit_mask .)
    ERROR_MASK      reduce using rule 230 (measurement_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 230 (measurement_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 230 (measurement_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 230 (measurement_optional -> bit_mask .)
    end             reduce using rule 230 (measurement_optional -> bit_mask .)


state 726

    (282) error_mask -> ERROR_MASK . NUMERIC

    NUMERIC         shift and go to state 760


state 727

    (177) matrix_dim -> MATRIX_DIM . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 761


state 728

    (141) format -> FORMAT . STRING

    STRING          shift and go to state 762


state 729

    (245) measurement_optional_list_optional -> empty .

    end             reduce using rule 245 (measurement_optional_list_optional -> empty .)


state 730

    (242) measurement_optional -> ecu_address_extension .

    READ_WRITE      reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    ARRAY_SIZE      reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    begin           reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS     reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    ERROR_MASK      reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 242 (measurement_optional -> ecu_address_extension .)
    end             reduce using rule 242 (measurement_optional -> ecu_address_extension .)


state 731

    (232) measurement_optional -> byte_order .

    READ_WRITE      reduce using rule 232 (measurement_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 232 (measurement_optional -> byte_order .)
    FORMAT          reduce using rule 232 (measurement_optional -> byte_order .)
    ARRAY_SIZE      reduce using rule 232 (measurement_optional -> byte_order .)
    BIT_MASK        reduce using rule 232 (measurement_optional -> byte_order .)
    begin           reduce using rule 232 (measurement_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 232 (measurement_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 232 (measurement_optional -> byte_order .)
    ECU_ADDRESS     reduce using rule 232 (measurement_optional -> byte_order .)
    ERROR_MASK      reduce using rule 232 (measurement_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 232 (measurement_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 232 (measurement_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 232 (measurement_optional -> byte_order .)
    end             reduce using rule 232 (measurement_optional -> byte_order .)


state 732

    (248) bit_operation -> begin . BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (280) virtual -> begin . VIRTUAL ident_list end VIRTUAL
    (146) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (154) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> begin . IF_DATA IDENT end IF_DATA

    BIT_OPERATION   shift and go to state 764
    VIRTUAL         shift and go to state 763
    FUNCTION_LIST   shift and go to state 430
    ANNOTATION      shift and go to state 433
    IF_DATA         shift and go to state 101


state 733

    (228) measurement_optional -> format .

    READ_WRITE      reduce using rule 228 (measurement_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 228 (measurement_optional -> format .)
    FORMAT          reduce using rule 228 (measurement_optional -> format .)
    ARRAY_SIZE      reduce using rule 228 (measurement_optional -> format .)
    BIT_MASK        reduce using rule 228 (measurement_optional -> format .)
    begin           reduce using rule 228 (measurement_optional -> format .)
    BYTE_ORDER      reduce using rule 228 (measurement_optional -> format .)
    MAX_REFRESH     reduce using rule 228 (measurement_optional -> format .)
    ECU_ADDRESS     reduce using rule 228 (measurement_optional -> format .)
    ERROR_MASK      reduce using rule 228 (measurement_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 228 (measurement_optional -> format .)
    MATRIX_DIM      reduce using rule 228 (measurement_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 228 (measurement_optional -> format .)
    end             reduce using rule 228 (measurement_optional -> format .)


state 734

    (140) display_identifier -> DISPLAY_IDENTIFIER . IDENT

    IDENT           shift and go to state 765


state 735

    (236) measurement_optional -> ecu_address .

    READ_WRITE      reduce using rule 236 (measurement_optional -> ecu_address .)
    DISPLAY_IDENTIFIER reduce using rule 236 (measurement_optional -> ecu_address .)
    FORMAT          reduce using rule 236 (measurement_optional -> ecu_address .)
    ARRAY_SIZE      reduce using rule 236 (measurement_optional -> ecu_address .)
    BIT_MASK        reduce using rule 236 (measurement_optional -> ecu_address .)
    begin           reduce using rule 236 (measurement_optional -> ecu_address .)
    BYTE_ORDER      reduce using rule 236 (measurement_optional -> ecu_address .)
    MAX_REFRESH     reduce using rule 236 (measurement_optional -> ecu_address .)
    ECU_ADDRESS     reduce using rule 236 (measurement_optional -> ecu_address .)
    ERROR_MASK      reduce using rule 236 (measurement_optional -> ecu_address .)
    REF_MEMORY_SEGMENT reduce using rule 236 (measurement_optional -> ecu_address .)
    MATRIX_DIM      reduce using rule 236 (measurement_optional -> ecu_address .)
    ECU_ADDRESS_EXTENSION reduce using rule 236 (measurement_optional -> ecu_address .)
    end             reduce using rule 236 (measurement_optional -> ecu_address .)


state 736

    (178) ecu_address_extension -> ECU_ADDRESS_EXTENSION . NUMERIC

    NUMERIC         shift and go to state 766


state 737

    (241) measurement_optional -> matrix_dim .

    READ_WRITE      reduce using rule 241 (measurement_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 241 (measurement_optional -> matrix_dim .)
    FORMAT          reduce using rule 241 (measurement_optional -> matrix_dim .)
    ARRAY_SIZE      reduce using rule 241 (measurement_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 241 (measurement_optional -> matrix_dim .)
    begin           reduce using rule 241 (measurement_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 241 (measurement_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 241 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS     reduce using rule 241 (measurement_optional -> matrix_dim .)
    ERROR_MASK      reduce using rule 241 (measurement_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 241 (measurement_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 241 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 241 (measurement_optional -> matrix_dim .)
    end             reduce using rule 241 (measurement_optional -> matrix_dim .)


state 738

    (243) measurement_optional_list -> measurement_optional .
    (244) measurement_optional_list -> measurement_optional . measurement_optional_list
    (243) measurement_optional_list -> . measurement_optional
    (244) measurement_optional_list -> . measurement_optional measurement_optional_list
    (226) measurement_optional -> . display_identifier
    (227) measurement_optional -> . READ_WRITE
    (228) measurement_optional -> . format
    (229) measurement_optional -> . array_size
    (230) measurement_optional -> . bit_mask
    (231) measurement_optional -> . bit_operation
    (232) measurement_optional -> . byte_order
    (233) measurement_optional -> . max_refresh
    (234) measurement_optional -> . virtual
    (235) measurement_optional -> . function_list
    (236) measurement_optional -> . ecu_address
    (237) measurement_optional -> . error_mask
    (238) measurement_optional -> . ref_memory_segment
    (239) measurement_optional -> . annotation
    (240) measurement_optional -> . if_data
    (241) measurement_optional -> . matrix_dim
    (242) measurement_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (247) array_size -> . ARRAY_SIZE NUMERIC
    (145) bit_mask -> . BIT_MASK NUMERIC
    (248) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (150) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (280) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (281) ecu_address -> . ECU_ADDRESS NUMERIC
    (282) error_mask -> . ERROR_MASK NUMERIC
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (177) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 243 (measurement_optional_list -> measurement_optional .)
    READ_WRITE      shift and go to state 717
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    ARRAY_SIZE      shift and go to state 746
    BIT_MASK        shift and go to state 719
    begin           shift and go to state 732
    BYTE_ORDER      shift and go to state 722
    MAX_REFRESH     shift and go to state 747
    ECU_ADDRESS     shift and go to state 741
    ERROR_MASK      shift and go to state 726
    REF_MEMORY_SEGMENT shift and go to state 742
    MATRIX_DIM      shift and go to state 727
    ECU_ADDRESS_EXTENSION shift and go to state 736

    error_mask                     shift and go to state 720
    display_identifier             shift and go to state 723
    if_data                        shift and go to state 724
    bit_mask                       shift and go to state 725
    virtual                        shift and go to state 721
    ecu_address                    shift and go to state 735
    measurement_optional_list      shift and go to state 767
    ecu_address_extension          shift and go to state 730
    byte_order                     shift and go to state 731
    format                         shift and go to state 733
    matrix_dim                     shift and go to state 737
    measurement_optional           shift and go to state 738
    annotation                     shift and go to state 739
    function_list                  shift and go to state 743
    array_size                     shift and go to state 744
    max_refresh                    shift and go to state 745
    bit_operation                  shift and go to state 748
    ref_memory_segment             shift and go to state 749

state 739

    (239) measurement_optional -> annotation .

    READ_WRITE      reduce using rule 239 (measurement_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 239 (measurement_optional -> annotation .)
    FORMAT          reduce using rule 239 (measurement_optional -> annotation .)
    ARRAY_SIZE      reduce using rule 239 (measurement_optional -> annotation .)
    BIT_MASK        reduce using rule 239 (measurement_optional -> annotation .)
    begin           reduce using rule 239 (measurement_optional -> annotation .)
    BYTE_ORDER      reduce using rule 239 (measurement_optional -> annotation .)
    MAX_REFRESH     reduce using rule 239 (measurement_optional -> annotation .)
    ECU_ADDRESS     reduce using rule 239 (measurement_optional -> annotation .)
    ERROR_MASK      reduce using rule 239 (measurement_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 239 (measurement_optional -> annotation .)
    MATRIX_DIM      reduce using rule 239 (measurement_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 239 (measurement_optional -> annotation .)
    end             reduce using rule 239 (measurement_optional -> annotation .)


state 740

    (246) measurement_optional_list_optional -> measurement_optional_list .

    end             reduce using rule 246 (measurement_optional_list_optional -> measurement_optional_list .)


state 741

    (281) ecu_address -> ECU_ADDRESS . NUMERIC

    NUMERIC         shift and go to state 768


state 742

    (153) ref_memory_segment -> REF_MEMORY_SEGMENT . IDENT

    IDENT           shift and go to state 769


state 743

    (235) measurement_optional -> function_list .

    READ_WRITE      reduce using rule 235 (measurement_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 235 (measurement_optional -> function_list .)
    FORMAT          reduce using rule 235 (measurement_optional -> function_list .)
    ARRAY_SIZE      reduce using rule 235 (measurement_optional -> function_list .)
    BIT_MASK        reduce using rule 235 (measurement_optional -> function_list .)
    begin           reduce using rule 235 (measurement_optional -> function_list .)
    BYTE_ORDER      reduce using rule 235 (measurement_optional -> function_list .)
    MAX_REFRESH     reduce using rule 235 (measurement_optional -> function_list .)
    ECU_ADDRESS     reduce using rule 235 (measurement_optional -> function_list .)
    ERROR_MASK      reduce using rule 235 (measurement_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 235 (measurement_optional -> function_list .)
    MATRIX_DIM      reduce using rule 235 (measurement_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 235 (measurement_optional -> function_list .)
    end             reduce using rule 235 (measurement_optional -> function_list .)


state 744

    (229) measurement_optional -> array_size .

    READ_WRITE      reduce using rule 229 (measurement_optional -> array_size .)
    DISPLAY_IDENTIFIER reduce using rule 229 (measurement_optional -> array_size .)
    FORMAT          reduce using rule 229 (measurement_optional -> array_size .)
    ARRAY_SIZE      reduce using rule 229 (measurement_optional -> array_size .)
    BIT_MASK        reduce using rule 229 (measurement_optional -> array_size .)
    begin           reduce using rule 229 (measurement_optional -> array_size .)
    BYTE_ORDER      reduce using rule 229 (measurement_optional -> array_size .)
    MAX_REFRESH     reduce using rule 229 (measurement_optional -> array_size .)
    ECU_ADDRESS     reduce using rule 229 (measurement_optional -> array_size .)
    ERROR_MASK      reduce using rule 229 (measurement_optional -> array_size .)
    REF_MEMORY_SEGMENT reduce using rule 229 (measurement_optional -> array_size .)
    MATRIX_DIM      reduce using rule 229 (measurement_optional -> array_size .)
    ECU_ADDRESS_EXTENSION reduce using rule 229 (measurement_optional -> array_size .)
    end             reduce using rule 229 (measurement_optional -> array_size .)


state 745

    (233) measurement_optional -> max_refresh .

    READ_WRITE      reduce using rule 233 (measurement_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 233 (measurement_optional -> max_refresh .)
    FORMAT          reduce using rule 233 (measurement_optional -> max_refresh .)
    ARRAY_SIZE      reduce using rule 233 (measurement_optional -> max_refresh .)
    BIT_MASK        reduce using rule 233 (measurement_optional -> max_refresh .)
    begin           reduce using rule 233 (measurement_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 233 (measurement_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 233 (measurement_optional -> max_refresh .)
    ECU_ADDRESS     reduce using rule 233 (measurement_optional -> max_refresh .)
    ERROR_MASK      reduce using rule 233 (measurement_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 233 (measurement_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 233 (measurement_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 233 (measurement_optional -> max_refresh .)
    end             reduce using rule 233 (measurement_optional -> max_refresh .)


state 746

    (247) array_size -> ARRAY_SIZE . NUMERIC

    NUMERIC         shift and go to state 770


state 747

    (150) max_refresh -> MAX_REFRESH . NUMERIC NUMERIC

    NUMERIC         shift and go to state 771


state 748

    (231) measurement_optional -> bit_operation .

    READ_WRITE      reduce using rule 231 (measurement_optional -> bit_operation .)
    DISPLAY_IDENTIFIER reduce using rule 231 (measurement_optional -> bit_operation .)
    FORMAT          reduce using rule 231 (measurement_optional -> bit_operation .)
    ARRAY_SIZE      reduce using rule 231 (measurement_optional -> bit_operation .)
    BIT_MASK        reduce using rule 231 (measurement_optional -> bit_operation .)
    begin           reduce using rule 231 (measurement_optional -> bit_operation .)
    BYTE_ORDER      reduce using rule 231 (measurement_optional -> bit_operation .)
    MAX_REFRESH     reduce using rule 231 (measurement_optional -> bit_operation .)
    ECU_ADDRESS     reduce using rule 231 (measurement_optional -> bit_operation .)
    ERROR_MASK      reduce using rule 231 (measurement_optional -> bit_operation .)
    REF_MEMORY_SEGMENT reduce using rule 231 (measurement_optional -> bit_operation .)
    MATRIX_DIM      reduce using rule 231 (measurement_optional -> bit_operation .)
    ECU_ADDRESS_EXTENSION reduce using rule 231 (measurement_optional -> bit_operation .)
    end             reduce using rule 231 (measurement_optional -> bit_operation .)


state 749

    (238) measurement_optional -> ref_memory_segment .

    READ_WRITE      reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    ARRAY_SIZE      reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    begin           reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS     reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    ERROR_MASK      reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 238 (measurement_optional -> ref_memory_segment .)
    end             reduce using rule 238 (measurement_optional -> ref_memory_segment .)


state 750

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC . characteristic_optional_list_optional end CHARACTERISTIC
    (202) characteristic_optional_list_optional -> . empty
    (203) characteristic_optional_list_optional -> . characteristic_optional_list
    (481) empty -> .
    (200) characteristic_optional_list -> . characteristic_optional
    (201) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (179) characteristic_optional -> . display_identifier
    (180) characteristic_optional -> . format
    (181) characteristic_optional -> . byte_order
    (182) characteristic_optional -> . bit_mask
    (183) characteristic_optional -> . function_list
    (184) characteristic_optional -> . number
    (185) characteristic_optional -> . extended_limits
    (186) characteristic_optional -> . READ_ONLY
    (187) characteristic_optional -> . GUARD_RAILS
    (188) characteristic_optional -> . map_list
    (189) characteristic_optional -> . max_refresh
    (190) characteristic_optional -> . dependent_characteristic
    (191) characteristic_optional -> . virtual_characteristic
    (192) characteristic_optional -> . ref_memory_segment
    (193) characteristic_optional -> . annotation
    (194) characteristic_optional -> . comparison_quantity
    (195) characteristic_optional -> . if_data
    (196) characteristic_optional -> . axis_descr
    (197) characteristic_optional -> . calibration_access
    (198) characteristic_optional -> . matrix_dim
    (199) characteristic_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (145) bit_mask -> . BIT_MASK NUMERIC
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (147) number -> . NUMBER NUMERIC
    (148) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (149) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (150) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (151) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (152) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (165) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (166) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (172) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (177) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 481 (empty -> .)
    READ_ONLY       shift and go to state 776
    GUARD_RAILS     shift and go to state 798
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    BYTE_ORDER      shift and go to state 722
    BIT_MASK        shift and go to state 719
    begin           shift and go to state 786
    NUMBER          shift and go to state 789
    EXTENDED_LIMITS shift and go to state 777
    MAX_REFRESH     shift and go to state 747
    REF_MEMORY_SEGMENT shift and go to state 742
    COMPARISON_QUANTITY shift and go to state 774
    CALIBRATION_ACCESS shift and go to state 782
    MATRIX_DIM      shift and go to state 727
    ECU_ADDRESS_EXTENSION shift and go to state 736

    number                         shift and go to state 772
    display_identifier             shift and go to state 778
    if_data                        shift and go to state 779
    bit_mask                       shift and go to state 780
    empty                          shift and go to state 783
    ecu_address_extension          shift and go to state 784
    byte_order                     shift and go to state 785
    dependent_characteristic       shift and go to state 773
    characteristic_optional_list   shift and go to state 775
    format                         shift and go to state 787
    map_list                       shift and go to state 788
    axis_descr                     shift and go to state 790
    matrix_dim                     shift and go to state 791
    calibration_access             shift and go to state 792
    annotation                     shift and go to state 793
    extended_limits                shift and go to state 795
    virtual_characteristic         shift and go to state 794
    function_list                  shift and go to state 796
    max_refresh                    shift and go to state 800
    characteristic_optional        shift and go to state 797
    comparison_quantity            shift and go to state 781
    characteristic_optional_list_optional shift and go to state 799
    ref_memory_segment             shift and go to state 801

state 751

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 802


state 752

    (269) formula -> begin FORMULA STRING formula_optional end . FORMULA

    FORMULA         shift and go to state 803


state 753

    (273) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 804


state 754

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC . axis_pts_optional_list_optional end AXIS_PTS
    (220) axis_pts_optional_list_optional -> . empty
    (221) axis_pts_optional_list_optional -> . axis_pts_optional_list
    (481) empty -> .
    (218) axis_pts_optional_list -> . axis_pts_optional
    (219) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (205) axis_pts_optional -> . display_identifier
    (206) axis_pts_optional -> . READ_ONLY
    (207) axis_pts_optional -> . format
    (208) axis_pts_optional -> . deposit
    (209) axis_pts_optional -> . byte_order
    (210) axis_pts_optional -> . function_list
    (211) axis_pts_optional -> . ref_memory_segment
    (212) axis_pts_optional -> . GUARD_RAILS
    (213) axis_pts_optional -> . extended_limits
    (214) axis_pts_optional -> . annotation
    (215) axis_pts_optional -> . if_data
    (216) axis_pts_optional -> . calibration_access
    (217) axis_pts_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (222) deposit -> . DEPOSIT deposit_mode
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (148) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (172) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 481 (empty -> .)
    READ_ONLY       shift and go to state 806
    GUARD_RAILS     shift and go to state 820
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    DEPOSIT         shift and go to state 815
    BYTE_ORDER      shift and go to state 722
    begin           shift and go to state 812
    REF_MEMORY_SEGMENT shift and go to state 742
    EXTENDED_LIMITS shift and go to state 777
    CALIBRATION_ACCESS shift and go to state 782
    ECU_ADDRESS_EXTENSION shift and go to state 736

    byte_order                     shift and go to state 811
    extended_limits                shift and go to state 818
    function_list                  shift and go to state 819
    format                         shift and go to state 813
    display_identifier             shift and go to state 807
    if_data                        shift and go to state 808
    axis_pts_optional_list_optional shift and go to state 814
    annotation                     shift and go to state 817
    deposit                        shift and go to state 821
    calibration_access             shift and go to state 816
    axis_pts_optional_list         shift and go to state 805
    ref_memory_segment             shift and go to state 822
    axis_pts_optional              shift and go to state 823
    empty                          shift and go to state 809
    ecu_address_extension          shift and go to state 810

state 755

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end . MEASUREMENT

    MEASUREMENT     shift and go to state 824


state 756

    (145) bit_mask -> BIT_MASK NUMERIC .

    READ_ONLY       reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    GUARD_RAILS     reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    FORMAT          reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    BIT_MASK        reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    begin           reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    NUMBER          reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    EXTENDED_LIMITS reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    end             reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    READ_WRITE      reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 145 (bit_mask -> BIT_MASK NUMERIC .)


state 757

    (143) byte_order_type -> MSB_FIRST .

    READ_WRITE      reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    DISPLAY_IDENTIFIER reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    FORMAT          reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    ARRAY_SIZE      reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    BIT_MASK        reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    begin           reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    BYTE_ORDER      reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    MAX_REFRESH     reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS     reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    ERROR_MASK      reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    REF_MEMORY_SEGMENT reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    MATRIX_DIM      reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS_EXTENSION reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    end             reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    READ_ONLY       reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    GUARD_RAILS     reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    NUMBER          reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    EXTENDED_LIMITS reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    COMPARISON_QUANTITY reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    CALIBRATION_ACCESS reduce using rule 143 (byte_order_type -> MSB_FIRST .)
    DEPOSIT         reduce using rule 143 (byte_order_type -> MSB_FIRST .)


state 758

    (144) byte_order_type -> MSB_LAST .

    READ_WRITE      reduce using rule 144 (byte_order_type -> MSB_LAST .)
    DISPLAY_IDENTIFIER reduce using rule 144 (byte_order_type -> MSB_LAST .)
    FORMAT          reduce using rule 144 (byte_order_type -> MSB_LAST .)
    ARRAY_SIZE      reduce using rule 144 (byte_order_type -> MSB_LAST .)
    BIT_MASK        reduce using rule 144 (byte_order_type -> MSB_LAST .)
    begin           reduce using rule 144 (byte_order_type -> MSB_LAST .)
    BYTE_ORDER      reduce using rule 144 (byte_order_type -> MSB_LAST .)
    MAX_REFRESH     reduce using rule 144 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS     reduce using rule 144 (byte_order_type -> MSB_LAST .)
    ERROR_MASK      reduce using rule 144 (byte_order_type -> MSB_LAST .)
    REF_MEMORY_SEGMENT reduce using rule 144 (byte_order_type -> MSB_LAST .)
    MATRIX_DIM      reduce using rule 144 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS_EXTENSION reduce using rule 144 (byte_order_type -> MSB_LAST .)
    end             reduce using rule 144 (byte_order_type -> MSB_LAST .)
    READ_ONLY       reduce using rule 144 (byte_order_type -> MSB_LAST .)
    GUARD_RAILS     reduce using rule 144 (byte_order_type -> MSB_LAST .)
    NUMBER          reduce using rule 144 (byte_order_type -> MSB_LAST .)
    EXTENDED_LIMITS reduce using rule 144 (byte_order_type -> MSB_LAST .)
    COMPARISON_QUANTITY reduce using rule 144 (byte_order_type -> MSB_LAST .)
    CALIBRATION_ACCESS reduce using rule 144 (byte_order_type -> MSB_LAST .)
    DEPOSIT         reduce using rule 144 (byte_order_type -> MSB_LAST .)


state 759

    (142) byte_order -> BYTE_ORDER byte_order_type .

    READ_ONLY       reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    GUARD_RAILS     reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    DISPLAY_IDENTIFIER reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    FORMAT          reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    BYTE_ORDER      reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    BIT_MASK        reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    begin           reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    NUMBER          reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    EXTENDED_LIMITS reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    MAX_REFRESH     reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    REF_MEMORY_SEGMENT reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    COMPARISON_QUANTITY reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    CALIBRATION_ACCESS reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    MATRIX_DIM      reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    end             reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    READ_WRITE      reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    ARRAY_SIZE      reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS     reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    ERROR_MASK      reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)
    DEPOSIT         reduce using rule 142 (byte_order -> BYTE_ORDER byte_order_type .)


state 760

    (282) error_mask -> ERROR_MASK NUMERIC .

    READ_WRITE      reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    FORMAT          reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    BIT_MASK        reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    begin           reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)
    end             reduce using rule 282 (error_mask -> ERROR_MASK NUMERIC .)


state 761

    (177) matrix_dim -> MATRIX_DIM NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 825


state 762

    (141) format -> FORMAT STRING .

    READ_ONLY       reduce using rule 141 (format -> FORMAT STRING .)
    GUARD_RAILS     reduce using rule 141 (format -> FORMAT STRING .)
    DISPLAY_IDENTIFIER reduce using rule 141 (format -> FORMAT STRING .)
    FORMAT          reduce using rule 141 (format -> FORMAT STRING .)
    BYTE_ORDER      reduce using rule 141 (format -> FORMAT STRING .)
    BIT_MASK        reduce using rule 141 (format -> FORMAT STRING .)
    begin           reduce using rule 141 (format -> FORMAT STRING .)
    NUMBER          reduce using rule 141 (format -> FORMAT STRING .)
    EXTENDED_LIMITS reduce using rule 141 (format -> FORMAT STRING .)
    MAX_REFRESH     reduce using rule 141 (format -> FORMAT STRING .)
    REF_MEMORY_SEGMENT reduce using rule 141 (format -> FORMAT STRING .)
    COMPARISON_QUANTITY reduce using rule 141 (format -> FORMAT STRING .)
    CALIBRATION_ACCESS reduce using rule 141 (format -> FORMAT STRING .)
    MATRIX_DIM      reduce using rule 141 (format -> FORMAT STRING .)
    ECU_ADDRESS_EXTENSION reduce using rule 141 (format -> FORMAT STRING .)
    end             reduce using rule 141 (format -> FORMAT STRING .)
    DEPOSIT         reduce using rule 141 (format -> FORMAT STRING .)
    READ_WRITE      reduce using rule 141 (format -> FORMAT STRING .)
    ARRAY_SIZE      reduce using rule 141 (format -> FORMAT STRING .)
    ECU_ADDRESS     reduce using rule 141 (format -> FORMAT STRING .)
    ERROR_MASK      reduce using rule 141 (format -> FORMAT STRING .)


state 763

    (280) virtual -> begin VIRTUAL . ident_list end VIRTUAL
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 826

state 764

    (248) bit_operation -> begin BIT_OPERATION . bit_operation_optional_list_optional end BIT_OPERATION
    (256) bit_operation_optional_list_optional -> . empty
    (257) bit_operation_optional_list_optional -> . bit_operation_optional_list
    (481) empty -> .
    (254) bit_operation_optional_list -> . bit_operation_optional
    (255) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (249) bit_operation_optional -> . left_shift
    (250) bit_operation_optional -> . right_shift
    (251) bit_operation_optional -> . SIGN_EXTEND
    (252) left_shift -> . LEFT_SHIFT NUMERIC
    (253) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 481 (empty -> .)
    SIGN_EXTEND     shift and go to state 832
    LEFT_SHIFT      shift and go to state 828
    RIGHT_SHIFT     shift and go to state 827

    bit_operation_optional_list_optional shift and go to state 833
    left_shift                     shift and go to state 829
    bit_operation_optional_list    shift and go to state 830
    right_shift                    shift and go to state 831
    bit_operation_optional         shift and go to state 834
    empty                          shift and go to state 835

state 765

    (140) display_identifier -> DISPLAY_IDENTIFIER IDENT .

    READ_WRITE      reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    FORMAT          reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ARRAY_SIZE      reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BIT_MASK        reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    begin           reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BYTE_ORDER      reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MAX_REFRESH     reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS     reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ERROR_MASK      reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MATRIX_DIM      reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    end             reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    READ_ONLY       reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    GUARD_RAILS     reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    NUMBER          reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    EXTENDED_LIMITS reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    COMPARISON_QUANTITY reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    CALIBRATION_ACCESS reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    DEPOSIT         reduce using rule 140 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)


state 766

    (178) ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .

    READ_ONLY       reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    GUARD_RAILS     reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    FORMAT          reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DEPOSIT         reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BYTE_ORDER      reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    begin           reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    EXTENDED_LIMITS reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    end             reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    READ_WRITE      reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ARRAY_SIZE      reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BIT_MASK        reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MAX_REFRESH     reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS     reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ERROR_MASK      reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MATRIX_DIM      reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    NUMBER          reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 178 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)


state 767

    (244) measurement_optional_list -> measurement_optional measurement_optional_list .

    end             reduce using rule 244 (measurement_optional_list -> measurement_optional measurement_optional_list .)


state 768

    (281) ecu_address -> ECU_ADDRESS NUMERIC .

    READ_WRITE      reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    FORMAT          reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ARRAY_SIZE      reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BIT_MASK        reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    begin           reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BYTE_ORDER      reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MAX_REFRESH     reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS     reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ERROR_MASK      reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MATRIX_DIM      reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)
    end             reduce using rule 281 (ecu_address -> ECU_ADDRESS NUMERIC .)


state 769

    (153) ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .

    READ_ONLY       reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    GUARD_RAILS     reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    FORMAT          reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DEPOSIT         reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BYTE_ORDER      reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    begin           reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    EXTENDED_LIMITS reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    CALIBRATION_ACCESS reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    end             reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BIT_MASK        reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    NUMBER          reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MAX_REFRESH     reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    COMPARISON_QUANTITY reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MATRIX_DIM      reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    READ_WRITE      reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ARRAY_SIZE      reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS     reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ERROR_MASK      reduce using rule 153 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)


state 770

    (247) array_size -> ARRAY_SIZE NUMERIC .

    READ_WRITE      reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    FORMAT          reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    ARRAY_SIZE      reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    BIT_MASK        reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    begin           reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    BYTE_ORDER      reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    MAX_REFRESH     reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS     reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    ERROR_MASK      reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    MATRIX_DIM      reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)
    end             reduce using rule 247 (array_size -> ARRAY_SIZE NUMERIC .)


state 771

    (150) max_refresh -> MAX_REFRESH NUMERIC . NUMERIC

    NUMERIC         shift and go to state 836


state 772

    (184) characteristic_optional -> number .

    READ_ONLY       reduce using rule 184 (characteristic_optional -> number .)
    GUARD_RAILS     reduce using rule 184 (characteristic_optional -> number .)
    DISPLAY_IDENTIFIER reduce using rule 184 (characteristic_optional -> number .)
    FORMAT          reduce using rule 184 (characteristic_optional -> number .)
    BYTE_ORDER      reduce using rule 184 (characteristic_optional -> number .)
    BIT_MASK        reduce using rule 184 (characteristic_optional -> number .)
    begin           reduce using rule 184 (characteristic_optional -> number .)
    NUMBER          reduce using rule 184 (characteristic_optional -> number .)
    EXTENDED_LIMITS reduce using rule 184 (characteristic_optional -> number .)
    MAX_REFRESH     reduce using rule 184 (characteristic_optional -> number .)
    REF_MEMORY_SEGMENT reduce using rule 184 (characteristic_optional -> number .)
    COMPARISON_QUANTITY reduce using rule 184 (characteristic_optional -> number .)
    CALIBRATION_ACCESS reduce using rule 184 (characteristic_optional -> number .)
    MATRIX_DIM      reduce using rule 184 (characteristic_optional -> number .)
    ECU_ADDRESS_EXTENSION reduce using rule 184 (characteristic_optional -> number .)
    end             reduce using rule 184 (characteristic_optional -> number .)


state 773

    (190) characteristic_optional -> dependent_characteristic .

    READ_ONLY       reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    GUARD_RAILS     reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    FORMAT          reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    BYTE_ORDER      reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    BIT_MASK        reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    begin           reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    NUMBER          reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    EXTENDED_LIMITS reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    MAX_REFRESH     reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    COMPARISON_QUANTITY reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    CALIBRATION_ACCESS reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    MATRIX_DIM      reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 190 (characteristic_optional -> dependent_characteristic .)
    end             reduce using rule 190 (characteristic_optional -> dependent_characteristic .)


state 774

    (165) comparison_quantity -> COMPARISON_QUANTITY . IDENT

    IDENT           shift and go to state 837


state 775

    (203) characteristic_optional_list_optional -> characteristic_optional_list .

    end             reduce using rule 203 (characteristic_optional_list_optional -> characteristic_optional_list .)


state 776

    (186) characteristic_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    FORMAT          reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    BIT_MASK        reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    begin           reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    NUMBER          reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    MAX_REFRESH     reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    COMPARISON_QUANTITY reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    MATRIX_DIM      reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 186 (characteristic_optional -> READ_ONLY .)
    end             reduce using rule 186 (characteristic_optional -> READ_ONLY .)


state 777

    (148) extended_limits -> EXTENDED_LIMITS . NUMERIC NUMERIC

    NUMERIC         shift and go to state 838


state 778

    (179) characteristic_optional -> display_identifier .

    READ_ONLY       reduce using rule 179 (characteristic_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 179 (characteristic_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 179 (characteristic_optional -> display_identifier .)
    FORMAT          reduce using rule 179 (characteristic_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 179 (characteristic_optional -> display_identifier .)
    BIT_MASK        reduce using rule 179 (characteristic_optional -> display_identifier .)
    begin           reduce using rule 179 (characteristic_optional -> display_identifier .)
    NUMBER          reduce using rule 179 (characteristic_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 179 (characteristic_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 179 (characteristic_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 179 (characteristic_optional -> display_identifier .)
    COMPARISON_QUANTITY reduce using rule 179 (characteristic_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 179 (characteristic_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 179 (characteristic_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 179 (characteristic_optional -> display_identifier .)
    end             reduce using rule 179 (characteristic_optional -> display_identifier .)


state 779

    (195) characteristic_optional -> if_data .

    READ_ONLY       reduce using rule 195 (characteristic_optional -> if_data .)
    GUARD_RAILS     reduce using rule 195 (characteristic_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 195 (characteristic_optional -> if_data .)
    FORMAT          reduce using rule 195 (characteristic_optional -> if_data .)
    BYTE_ORDER      reduce using rule 195 (characteristic_optional -> if_data .)
    BIT_MASK        reduce using rule 195 (characteristic_optional -> if_data .)
    begin           reduce using rule 195 (characteristic_optional -> if_data .)
    NUMBER          reduce using rule 195 (characteristic_optional -> if_data .)
    EXTENDED_LIMITS reduce using rule 195 (characteristic_optional -> if_data .)
    MAX_REFRESH     reduce using rule 195 (characteristic_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 195 (characteristic_optional -> if_data .)
    COMPARISON_QUANTITY reduce using rule 195 (characteristic_optional -> if_data .)
    CALIBRATION_ACCESS reduce using rule 195 (characteristic_optional -> if_data .)
    MATRIX_DIM      reduce using rule 195 (characteristic_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 195 (characteristic_optional -> if_data .)
    end             reduce using rule 195 (characteristic_optional -> if_data .)


state 780

    (182) characteristic_optional -> bit_mask .

    READ_ONLY       reduce using rule 182 (characteristic_optional -> bit_mask .)
    GUARD_RAILS     reduce using rule 182 (characteristic_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 182 (characteristic_optional -> bit_mask .)
    FORMAT          reduce using rule 182 (characteristic_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 182 (characteristic_optional -> bit_mask .)
    BIT_MASK        reduce using rule 182 (characteristic_optional -> bit_mask .)
    begin           reduce using rule 182 (characteristic_optional -> bit_mask .)
    NUMBER          reduce using rule 182 (characteristic_optional -> bit_mask .)
    EXTENDED_LIMITS reduce using rule 182 (characteristic_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 182 (characteristic_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 182 (characteristic_optional -> bit_mask .)
    COMPARISON_QUANTITY reduce using rule 182 (characteristic_optional -> bit_mask .)
    CALIBRATION_ACCESS reduce using rule 182 (characteristic_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 182 (characteristic_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 182 (characteristic_optional -> bit_mask .)
    end             reduce using rule 182 (characteristic_optional -> bit_mask .)


state 781

    (194) characteristic_optional -> comparison_quantity .

    READ_ONLY       reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    GUARD_RAILS     reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    DISPLAY_IDENTIFIER reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    FORMAT          reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    BYTE_ORDER      reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    BIT_MASK        reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    begin           reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    NUMBER          reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    EXTENDED_LIMITS reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    MAX_REFRESH     reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    REF_MEMORY_SEGMENT reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    COMPARISON_QUANTITY reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    CALIBRATION_ACCESS reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    MATRIX_DIM      reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    ECU_ADDRESS_EXTENSION reduce using rule 194 (characteristic_optional -> comparison_quantity .)
    end             reduce using rule 194 (characteristic_optional -> comparison_quantity .)


state 782

    (172) calibration_access -> CALIBRATION_ACCESS . calibration_access_type
    (173) calibration_access_type -> . CALIBRATION
    (174) calibration_access_type -> . NO_CALIBRATION
    (175) calibration_access_type -> . NOT_IN_MCD_SYSTEM
    (176) calibration_access_type -> . OFFLINE_CALIBRATION

    CALIBRATION     shift and go to state 840
    NO_CALIBRATION  shift and go to state 841
    NOT_IN_MCD_SYSTEM shift and go to state 842
    OFFLINE_CALIBRATION shift and go to state 839

    calibration_access_type        shift and go to state 843

state 783

    (202) characteristic_optional_list_optional -> empty .

    end             reduce using rule 202 (characteristic_optional_list_optional -> empty .)


state 784

    (199) characteristic_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    begin           reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    NUMBER          reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    COMPARISON_QUANTITY reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 199 (characteristic_optional -> ecu_address_extension .)
    end             reduce using rule 199 (characteristic_optional -> ecu_address_extension .)


state 785

    (181) characteristic_optional -> byte_order .

    READ_ONLY       reduce using rule 181 (characteristic_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 181 (characteristic_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 181 (characteristic_optional -> byte_order .)
    FORMAT          reduce using rule 181 (characteristic_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 181 (characteristic_optional -> byte_order .)
    BIT_MASK        reduce using rule 181 (characteristic_optional -> byte_order .)
    begin           reduce using rule 181 (characteristic_optional -> byte_order .)
    NUMBER          reduce using rule 181 (characteristic_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 181 (characteristic_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 181 (characteristic_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 181 (characteristic_optional -> byte_order .)
    COMPARISON_QUANTITY reduce using rule 181 (characteristic_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 181 (characteristic_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 181 (characteristic_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 181 (characteristic_optional -> byte_order .)
    end             reduce using rule 181 (characteristic_optional -> byte_order .)


state 786

    (146) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (149) map_list -> begin . MAP_LIST ident_list end MAP_LIST
    (151) dependent_characteristic -> begin . DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (152) virtual_characteristic -> begin . VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (154) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> begin . IF_DATA IDENT end IF_DATA
    (166) axis_descr -> begin . AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    FUNCTION_LIST   shift and go to state 430
    MAP_LIST        shift and go to state 845
    DEPENDENT_CHARACTERISTIC shift and go to state 844
    VIRTUAL_CHARACTERISTIC shift and go to state 847
    ANNOTATION      shift and go to state 433
    IF_DATA         shift and go to state 101
    AXIS_DESCR      shift and go to state 846


state 787

    (180) characteristic_optional -> format .

    READ_ONLY       reduce using rule 180 (characteristic_optional -> format .)
    GUARD_RAILS     reduce using rule 180 (characteristic_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 180 (characteristic_optional -> format .)
    FORMAT          reduce using rule 180 (characteristic_optional -> format .)
    BYTE_ORDER      reduce using rule 180 (characteristic_optional -> format .)
    BIT_MASK        reduce using rule 180 (characteristic_optional -> format .)
    begin           reduce using rule 180 (characteristic_optional -> format .)
    NUMBER          reduce using rule 180 (characteristic_optional -> format .)
    EXTENDED_LIMITS reduce using rule 180 (characteristic_optional -> format .)
    MAX_REFRESH     reduce using rule 180 (characteristic_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 180 (characteristic_optional -> format .)
    COMPARISON_QUANTITY reduce using rule 180 (characteristic_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 180 (characteristic_optional -> format .)
    MATRIX_DIM      reduce using rule 180 (characteristic_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 180 (characteristic_optional -> format .)
    end             reduce using rule 180 (characteristic_optional -> format .)


state 788

    (188) characteristic_optional -> map_list .

    READ_ONLY       reduce using rule 188 (characteristic_optional -> map_list .)
    GUARD_RAILS     reduce using rule 188 (characteristic_optional -> map_list .)
    DISPLAY_IDENTIFIER reduce using rule 188 (characteristic_optional -> map_list .)
    FORMAT          reduce using rule 188 (characteristic_optional -> map_list .)
    BYTE_ORDER      reduce using rule 188 (characteristic_optional -> map_list .)
    BIT_MASK        reduce using rule 188 (characteristic_optional -> map_list .)
    begin           reduce using rule 188 (characteristic_optional -> map_list .)
    NUMBER          reduce using rule 188 (characteristic_optional -> map_list .)
    EXTENDED_LIMITS reduce using rule 188 (characteristic_optional -> map_list .)
    MAX_REFRESH     reduce using rule 188 (characteristic_optional -> map_list .)
    REF_MEMORY_SEGMENT reduce using rule 188 (characteristic_optional -> map_list .)
    COMPARISON_QUANTITY reduce using rule 188 (characteristic_optional -> map_list .)
    CALIBRATION_ACCESS reduce using rule 188 (characteristic_optional -> map_list .)
    MATRIX_DIM      reduce using rule 188 (characteristic_optional -> map_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 188 (characteristic_optional -> map_list .)
    end             reduce using rule 188 (characteristic_optional -> map_list .)


state 789

    (147) number -> NUMBER . NUMERIC

    NUMERIC         shift and go to state 848


state 790

    (196) characteristic_optional -> axis_descr .

    READ_ONLY       reduce using rule 196 (characteristic_optional -> axis_descr .)
    GUARD_RAILS     reduce using rule 196 (characteristic_optional -> axis_descr .)
    DISPLAY_IDENTIFIER reduce using rule 196 (characteristic_optional -> axis_descr .)
    FORMAT          reduce using rule 196 (characteristic_optional -> axis_descr .)
    BYTE_ORDER      reduce using rule 196 (characteristic_optional -> axis_descr .)
    BIT_MASK        reduce using rule 196 (characteristic_optional -> axis_descr .)
    begin           reduce using rule 196 (characteristic_optional -> axis_descr .)
    NUMBER          reduce using rule 196 (characteristic_optional -> axis_descr .)
    EXTENDED_LIMITS reduce using rule 196 (characteristic_optional -> axis_descr .)
    MAX_REFRESH     reduce using rule 196 (characteristic_optional -> axis_descr .)
    REF_MEMORY_SEGMENT reduce using rule 196 (characteristic_optional -> axis_descr .)
    COMPARISON_QUANTITY reduce using rule 196 (characteristic_optional -> axis_descr .)
    CALIBRATION_ACCESS reduce using rule 196 (characteristic_optional -> axis_descr .)
    MATRIX_DIM      reduce using rule 196 (characteristic_optional -> axis_descr .)
    ECU_ADDRESS_EXTENSION reduce using rule 196 (characteristic_optional -> axis_descr .)
    end             reduce using rule 196 (characteristic_optional -> axis_descr .)


state 791

    (198) characteristic_optional -> matrix_dim .

    READ_ONLY       reduce using rule 198 (characteristic_optional -> matrix_dim .)
    GUARD_RAILS     reduce using rule 198 (characteristic_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 198 (characteristic_optional -> matrix_dim .)
    FORMAT          reduce using rule 198 (characteristic_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 198 (characteristic_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 198 (characteristic_optional -> matrix_dim .)
    begin           reduce using rule 198 (characteristic_optional -> matrix_dim .)
    NUMBER          reduce using rule 198 (characteristic_optional -> matrix_dim .)
    EXTENDED_LIMITS reduce using rule 198 (characteristic_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 198 (characteristic_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 198 (characteristic_optional -> matrix_dim .)
    COMPARISON_QUANTITY reduce using rule 198 (characteristic_optional -> matrix_dim .)
    CALIBRATION_ACCESS reduce using rule 198 (characteristic_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 198 (characteristic_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 198 (characteristic_optional -> matrix_dim .)
    end             reduce using rule 198 (characteristic_optional -> matrix_dim .)


state 792

    (197) characteristic_optional -> calibration_access .

    READ_ONLY       reduce using rule 197 (characteristic_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 197 (characteristic_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 197 (characteristic_optional -> calibration_access .)
    FORMAT          reduce using rule 197 (characteristic_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 197 (characteristic_optional -> calibration_access .)
    BIT_MASK        reduce using rule 197 (characteristic_optional -> calibration_access .)
    begin           reduce using rule 197 (characteristic_optional -> calibration_access .)
    NUMBER          reduce using rule 197 (characteristic_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 197 (characteristic_optional -> calibration_access .)
    MAX_REFRESH     reduce using rule 197 (characteristic_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 197 (characteristic_optional -> calibration_access .)
    COMPARISON_QUANTITY reduce using rule 197 (characteristic_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 197 (characteristic_optional -> calibration_access .)
    MATRIX_DIM      reduce using rule 197 (characteristic_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 197 (characteristic_optional -> calibration_access .)
    end             reduce using rule 197 (characteristic_optional -> calibration_access .)


state 793

    (193) characteristic_optional -> annotation .

    READ_ONLY       reduce using rule 193 (characteristic_optional -> annotation .)
    GUARD_RAILS     reduce using rule 193 (characteristic_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 193 (characteristic_optional -> annotation .)
    FORMAT          reduce using rule 193 (characteristic_optional -> annotation .)
    BYTE_ORDER      reduce using rule 193 (characteristic_optional -> annotation .)
    BIT_MASK        reduce using rule 193 (characteristic_optional -> annotation .)
    begin           reduce using rule 193 (characteristic_optional -> annotation .)
    NUMBER          reduce using rule 193 (characteristic_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 193 (characteristic_optional -> annotation .)
    MAX_REFRESH     reduce using rule 193 (characteristic_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 193 (characteristic_optional -> annotation .)
    COMPARISON_QUANTITY reduce using rule 193 (characteristic_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 193 (characteristic_optional -> annotation .)
    MATRIX_DIM      reduce using rule 193 (characteristic_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 193 (characteristic_optional -> annotation .)
    end             reduce using rule 193 (characteristic_optional -> annotation .)


state 794

    (191) characteristic_optional -> virtual_characteristic .

    READ_ONLY       reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    GUARD_RAILS     reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    FORMAT          reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    BYTE_ORDER      reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    BIT_MASK        reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    begin           reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    NUMBER          reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    EXTENDED_LIMITS reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    MAX_REFRESH     reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    COMPARISON_QUANTITY reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    CALIBRATION_ACCESS reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    MATRIX_DIM      reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 191 (characteristic_optional -> virtual_characteristic .)
    end             reduce using rule 191 (characteristic_optional -> virtual_characteristic .)


state 795

    (185) characteristic_optional -> extended_limits .

    READ_ONLY       reduce using rule 185 (characteristic_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 185 (characteristic_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 185 (characteristic_optional -> extended_limits .)
    FORMAT          reduce using rule 185 (characteristic_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 185 (characteristic_optional -> extended_limits .)
    BIT_MASK        reduce using rule 185 (characteristic_optional -> extended_limits .)
    begin           reduce using rule 185 (characteristic_optional -> extended_limits .)
    NUMBER          reduce using rule 185 (characteristic_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 185 (characteristic_optional -> extended_limits .)
    MAX_REFRESH     reduce using rule 185 (characteristic_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 185 (characteristic_optional -> extended_limits .)
    COMPARISON_QUANTITY reduce using rule 185 (characteristic_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 185 (characteristic_optional -> extended_limits .)
    MATRIX_DIM      reduce using rule 185 (characteristic_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 185 (characteristic_optional -> extended_limits .)
    end             reduce using rule 185 (characteristic_optional -> extended_limits .)


state 796

    (183) characteristic_optional -> function_list .

    READ_ONLY       reduce using rule 183 (characteristic_optional -> function_list .)
    GUARD_RAILS     reduce using rule 183 (characteristic_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 183 (characteristic_optional -> function_list .)
    FORMAT          reduce using rule 183 (characteristic_optional -> function_list .)
    BYTE_ORDER      reduce using rule 183 (characteristic_optional -> function_list .)
    BIT_MASK        reduce using rule 183 (characteristic_optional -> function_list .)
    begin           reduce using rule 183 (characteristic_optional -> function_list .)
    NUMBER          reduce using rule 183 (characteristic_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 183 (characteristic_optional -> function_list .)
    MAX_REFRESH     reduce using rule 183 (characteristic_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 183 (characteristic_optional -> function_list .)
    COMPARISON_QUANTITY reduce using rule 183 (characteristic_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 183 (characteristic_optional -> function_list .)
    MATRIX_DIM      reduce using rule 183 (characteristic_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 183 (characteristic_optional -> function_list .)
    end             reduce using rule 183 (characteristic_optional -> function_list .)


state 797

    (200) characteristic_optional_list -> characteristic_optional .
    (201) characteristic_optional_list -> characteristic_optional . characteristic_optional_list
    (200) characteristic_optional_list -> . characteristic_optional
    (201) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (179) characteristic_optional -> . display_identifier
    (180) characteristic_optional -> . format
    (181) characteristic_optional -> . byte_order
    (182) characteristic_optional -> . bit_mask
    (183) characteristic_optional -> . function_list
    (184) characteristic_optional -> . number
    (185) characteristic_optional -> . extended_limits
    (186) characteristic_optional -> . READ_ONLY
    (187) characteristic_optional -> . GUARD_RAILS
    (188) characteristic_optional -> . map_list
    (189) characteristic_optional -> . max_refresh
    (190) characteristic_optional -> . dependent_characteristic
    (191) characteristic_optional -> . virtual_characteristic
    (192) characteristic_optional -> . ref_memory_segment
    (193) characteristic_optional -> . annotation
    (194) characteristic_optional -> . comparison_quantity
    (195) characteristic_optional -> . if_data
    (196) characteristic_optional -> . axis_descr
    (197) characteristic_optional -> . calibration_access
    (198) characteristic_optional -> . matrix_dim
    (199) characteristic_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (145) bit_mask -> . BIT_MASK NUMERIC
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (147) number -> . NUMBER NUMERIC
    (148) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (149) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (150) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (151) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (152) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (165) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (166) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (172) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (177) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 200 (characteristic_optional_list -> characteristic_optional .)
    READ_ONLY       shift and go to state 776
    GUARD_RAILS     shift and go to state 798
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    BYTE_ORDER      shift and go to state 722
    BIT_MASK        shift and go to state 719
    begin           shift and go to state 786
    NUMBER          shift and go to state 789
    EXTENDED_LIMITS shift and go to state 777
    MAX_REFRESH     shift and go to state 747
    REF_MEMORY_SEGMENT shift and go to state 742
    COMPARISON_QUANTITY shift and go to state 774
    CALIBRATION_ACCESS shift and go to state 782
    MATRIX_DIM      shift and go to state 727
    ECU_ADDRESS_EXTENSION shift and go to state 736

    number                         shift and go to state 772
    display_identifier             shift and go to state 778
    if_data                        shift and go to state 779
    bit_mask                       shift and go to state 780
    ecu_address_extension          shift and go to state 784
    byte_order                     shift and go to state 785
    dependent_characteristic       shift and go to state 773
    characteristic_optional_list   shift and go to state 849
    format                         shift and go to state 787
    map_list                       shift and go to state 788
    axis_descr                     shift and go to state 790
    matrix_dim                     shift and go to state 791
    calibration_access             shift and go to state 792
    annotation                     shift and go to state 793
    extended_limits                shift and go to state 795
    virtual_characteristic         shift and go to state 794
    function_list                  shift and go to state 796
    max_refresh                    shift and go to state 800
    characteristic_optional        shift and go to state 797
    comparison_quantity            shift and go to state 781
    ref_memory_segment             shift and go to state 801

state 798

    (187) characteristic_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    BIT_MASK        reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    begin           reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    NUMBER          reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    MAX_REFRESH     reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    COMPARISON_QUANTITY reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    MATRIX_DIM      reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)
    end             reduce using rule 187 (characteristic_optional -> GUARD_RAILS .)


state 799

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional . end CHARACTERISTIC

    end             shift and go to state 850


state 800

    (189) characteristic_optional -> max_refresh .

    READ_ONLY       reduce using rule 189 (characteristic_optional -> max_refresh .)
    GUARD_RAILS     reduce using rule 189 (characteristic_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 189 (characteristic_optional -> max_refresh .)
    FORMAT          reduce using rule 189 (characteristic_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 189 (characteristic_optional -> max_refresh .)
    BIT_MASK        reduce using rule 189 (characteristic_optional -> max_refresh .)
    begin           reduce using rule 189 (characteristic_optional -> max_refresh .)
    NUMBER          reduce using rule 189 (characteristic_optional -> max_refresh .)
    EXTENDED_LIMITS reduce using rule 189 (characteristic_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 189 (characteristic_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 189 (characteristic_optional -> max_refresh .)
    COMPARISON_QUANTITY reduce using rule 189 (characteristic_optional -> max_refresh .)
    CALIBRATION_ACCESS reduce using rule 189 (characteristic_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 189 (characteristic_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 189 (characteristic_optional -> max_refresh .)
    end             reduce using rule 189 (characteristic_optional -> max_refresh .)


state 801

    (192) characteristic_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    begin           reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    NUMBER          reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    COMPARISON_QUANTITY reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 192 (characteristic_optional -> ref_memory_segment .)
    end             reduce using rule 192 (characteristic_optional -> ref_memory_segment .)


state 802

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 851


state 803

    (269) formula -> begin FORMULA STRING formula_optional end FORMULA .

    begin           reduce using rule 269 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COEFFS          reduce using rule 269 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COMPU_TAB_REF   reduce using rule 269 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    REF_UNIT        reduce using rule 269 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    end             reduce using rule 269 (formula -> begin FORMULA STRING formula_optional end FORMULA .)


state 804

    (273) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 852


state 805

    (221) axis_pts_optional_list_optional -> axis_pts_optional_list .

    end             reduce using rule 221 (axis_pts_optional_list_optional -> axis_pts_optional_list .)


state 806

    (206) axis_pts_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    FORMAT          reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    DEPOSIT         reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    begin           reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 206 (axis_pts_optional -> READ_ONLY .)
    end             reduce using rule 206 (axis_pts_optional -> READ_ONLY .)


state 807

    (205) axis_pts_optional -> display_identifier .

    READ_ONLY       reduce using rule 205 (axis_pts_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 205 (axis_pts_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 205 (axis_pts_optional -> display_identifier .)
    FORMAT          reduce using rule 205 (axis_pts_optional -> display_identifier .)
    DEPOSIT         reduce using rule 205 (axis_pts_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 205 (axis_pts_optional -> display_identifier .)
    begin           reduce using rule 205 (axis_pts_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 205 (axis_pts_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 205 (axis_pts_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 205 (axis_pts_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 205 (axis_pts_optional -> display_identifier .)
    end             reduce using rule 205 (axis_pts_optional -> display_identifier .)


state 808

    (215) axis_pts_optional -> if_data .

    READ_ONLY       reduce using rule 215 (axis_pts_optional -> if_data .)
    GUARD_RAILS     reduce using rule 215 (axis_pts_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 215 (axis_pts_optional -> if_data .)
    FORMAT          reduce using rule 215 (axis_pts_optional -> if_data .)
    DEPOSIT         reduce using rule 215 (axis_pts_optional -> if_data .)
    BYTE_ORDER      reduce using rule 215 (axis_pts_optional -> if_data .)
    begin           reduce using rule 215 (axis_pts_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 215 (axis_pts_optional -> if_data .)
    EXTENDED_LIMITS reduce using rule 215 (axis_pts_optional -> if_data .)
    CALIBRATION_ACCESS reduce using rule 215 (axis_pts_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 215 (axis_pts_optional -> if_data .)
    end             reduce using rule 215 (axis_pts_optional -> if_data .)


state 809

    (220) axis_pts_optional_list_optional -> empty .

    end             reduce using rule 220 (axis_pts_optional_list_optional -> empty .)


state 810

    (217) axis_pts_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    DEPOSIT         reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    begin           reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)
    end             reduce using rule 217 (axis_pts_optional -> ecu_address_extension .)


state 811

    (209) axis_pts_optional -> byte_order .

    READ_ONLY       reduce using rule 209 (axis_pts_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 209 (axis_pts_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 209 (axis_pts_optional -> byte_order .)
    FORMAT          reduce using rule 209 (axis_pts_optional -> byte_order .)
    DEPOSIT         reduce using rule 209 (axis_pts_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 209 (axis_pts_optional -> byte_order .)
    begin           reduce using rule 209 (axis_pts_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 209 (axis_pts_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 209 (axis_pts_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 209 (axis_pts_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 209 (axis_pts_optional -> byte_order .)
    end             reduce using rule 209 (axis_pts_optional -> byte_order .)


state 812

    (146) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (154) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> begin . IF_DATA IDENT end IF_DATA

    FUNCTION_LIST   shift and go to state 430
    ANNOTATION      shift and go to state 433
    IF_DATA         shift and go to state 101


state 813

    (207) axis_pts_optional -> format .

    READ_ONLY       reduce using rule 207 (axis_pts_optional -> format .)
    GUARD_RAILS     reduce using rule 207 (axis_pts_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 207 (axis_pts_optional -> format .)
    FORMAT          reduce using rule 207 (axis_pts_optional -> format .)
    DEPOSIT         reduce using rule 207 (axis_pts_optional -> format .)
    BYTE_ORDER      reduce using rule 207 (axis_pts_optional -> format .)
    begin           reduce using rule 207 (axis_pts_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 207 (axis_pts_optional -> format .)
    EXTENDED_LIMITS reduce using rule 207 (axis_pts_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 207 (axis_pts_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 207 (axis_pts_optional -> format .)
    end             reduce using rule 207 (axis_pts_optional -> format .)


state 814

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional . end AXIS_PTS

    end             shift and go to state 853


state 815

    (222) deposit -> DEPOSIT . deposit_mode
    (223) deposit_mode -> . ABSOLUTE
    (224) deposit_mode -> . DIFFERENCE

    ABSOLUTE        shift and go to state 856
    DIFFERENCE      shift and go to state 855

    deposit_mode                   shift and go to state 854

state 816

    (216) axis_pts_optional -> calibration_access .

    READ_ONLY       reduce using rule 216 (axis_pts_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 216 (axis_pts_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 216 (axis_pts_optional -> calibration_access .)
    FORMAT          reduce using rule 216 (axis_pts_optional -> calibration_access .)
    DEPOSIT         reduce using rule 216 (axis_pts_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 216 (axis_pts_optional -> calibration_access .)
    begin           reduce using rule 216 (axis_pts_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 216 (axis_pts_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 216 (axis_pts_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 216 (axis_pts_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 216 (axis_pts_optional -> calibration_access .)
    end             reduce using rule 216 (axis_pts_optional -> calibration_access .)


state 817

    (214) axis_pts_optional -> annotation .

    READ_ONLY       reduce using rule 214 (axis_pts_optional -> annotation .)
    GUARD_RAILS     reduce using rule 214 (axis_pts_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 214 (axis_pts_optional -> annotation .)
    FORMAT          reduce using rule 214 (axis_pts_optional -> annotation .)
    DEPOSIT         reduce using rule 214 (axis_pts_optional -> annotation .)
    BYTE_ORDER      reduce using rule 214 (axis_pts_optional -> annotation .)
    begin           reduce using rule 214 (axis_pts_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 214 (axis_pts_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 214 (axis_pts_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 214 (axis_pts_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 214 (axis_pts_optional -> annotation .)
    end             reduce using rule 214 (axis_pts_optional -> annotation .)


state 818

    (213) axis_pts_optional -> extended_limits .

    READ_ONLY       reduce using rule 213 (axis_pts_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 213 (axis_pts_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 213 (axis_pts_optional -> extended_limits .)
    FORMAT          reduce using rule 213 (axis_pts_optional -> extended_limits .)
    DEPOSIT         reduce using rule 213 (axis_pts_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 213 (axis_pts_optional -> extended_limits .)
    begin           reduce using rule 213 (axis_pts_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 213 (axis_pts_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 213 (axis_pts_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 213 (axis_pts_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 213 (axis_pts_optional -> extended_limits .)
    end             reduce using rule 213 (axis_pts_optional -> extended_limits .)


state 819

    (210) axis_pts_optional -> function_list .

    READ_ONLY       reduce using rule 210 (axis_pts_optional -> function_list .)
    GUARD_RAILS     reduce using rule 210 (axis_pts_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 210 (axis_pts_optional -> function_list .)
    FORMAT          reduce using rule 210 (axis_pts_optional -> function_list .)
    DEPOSIT         reduce using rule 210 (axis_pts_optional -> function_list .)
    BYTE_ORDER      reduce using rule 210 (axis_pts_optional -> function_list .)
    begin           reduce using rule 210 (axis_pts_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 210 (axis_pts_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 210 (axis_pts_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 210 (axis_pts_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 210 (axis_pts_optional -> function_list .)
    end             reduce using rule 210 (axis_pts_optional -> function_list .)


state 820

    (212) axis_pts_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    DEPOSIT         reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    begin           reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)
    end             reduce using rule 212 (axis_pts_optional -> GUARD_RAILS .)


state 821

    (208) axis_pts_optional -> deposit .

    READ_ONLY       reduce using rule 208 (axis_pts_optional -> deposit .)
    GUARD_RAILS     reduce using rule 208 (axis_pts_optional -> deposit .)
    DISPLAY_IDENTIFIER reduce using rule 208 (axis_pts_optional -> deposit .)
    FORMAT          reduce using rule 208 (axis_pts_optional -> deposit .)
    DEPOSIT         reduce using rule 208 (axis_pts_optional -> deposit .)
    BYTE_ORDER      reduce using rule 208 (axis_pts_optional -> deposit .)
    begin           reduce using rule 208 (axis_pts_optional -> deposit .)
    REF_MEMORY_SEGMENT reduce using rule 208 (axis_pts_optional -> deposit .)
    EXTENDED_LIMITS reduce using rule 208 (axis_pts_optional -> deposit .)
    CALIBRATION_ACCESS reduce using rule 208 (axis_pts_optional -> deposit .)
    ECU_ADDRESS_EXTENSION reduce using rule 208 (axis_pts_optional -> deposit .)
    end             reduce using rule 208 (axis_pts_optional -> deposit .)


state 822

    (211) axis_pts_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    DEPOSIT         reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    begin           reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)
    end             reduce using rule 211 (axis_pts_optional -> ref_memory_segment .)


state 823

    (218) axis_pts_optional_list -> axis_pts_optional .
    (219) axis_pts_optional_list -> axis_pts_optional . axis_pts_optional_list
    (218) axis_pts_optional_list -> . axis_pts_optional
    (219) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (205) axis_pts_optional -> . display_identifier
    (206) axis_pts_optional -> . READ_ONLY
    (207) axis_pts_optional -> . format
    (208) axis_pts_optional -> . deposit
    (209) axis_pts_optional -> . byte_order
    (210) axis_pts_optional -> . function_list
    (211) axis_pts_optional -> . ref_memory_segment
    (212) axis_pts_optional -> . GUARD_RAILS
    (213) axis_pts_optional -> . extended_limits
    (214) axis_pts_optional -> . annotation
    (215) axis_pts_optional -> . if_data
    (216) axis_pts_optional -> . calibration_access
    (217) axis_pts_optional -> . ecu_address_extension
    (140) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (141) format -> . FORMAT STRING
    (222) deposit -> . DEPOSIT deposit_mode
    (142) byte_order -> . BYTE_ORDER byte_order_type
    (146) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (153) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (148) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (154) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (132) if_data -> . begin IF_DATA IDENT end IF_DATA
    (172) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (178) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 218 (axis_pts_optional_list -> axis_pts_optional .)
    READ_ONLY       shift and go to state 806
    GUARD_RAILS     shift and go to state 820
    DISPLAY_IDENTIFIER shift and go to state 734
    FORMAT          shift and go to state 728
    DEPOSIT         shift and go to state 815
    BYTE_ORDER      shift and go to state 722
    begin           shift and go to state 812
    REF_MEMORY_SEGMENT shift and go to state 742
    EXTENDED_LIMITS shift and go to state 777
    CALIBRATION_ACCESS shift and go to state 782
    ECU_ADDRESS_EXTENSION shift and go to state 736

    byte_order                     shift and go to state 811
    extended_limits                shift and go to state 818
    function_list                  shift and go to state 819
    format                         shift and go to state 813
    display_identifier             shift and go to state 807
    if_data                        shift and go to state 808
    annotation                     shift and go to state 817
    deposit                        shift and go to state 821
    calibration_access             shift and go to state 816
    axis_pts_optional_list         shift and go to state 857
    ref_memory_segment             shift and go to state 822
    axis_pts_optional              shift and go to state 823
    ecu_address_extension          shift and go to state 810

state 824

    (225) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .

    begin           reduce using rule 225 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)
    end             reduce using rule 225 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)


state 825

    (177) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 858


state 826

    (280) virtual -> begin VIRTUAL ident_list . end VIRTUAL

    end             shift and go to state 859


state 827

    (253) right_shift -> RIGHT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 860


state 828

    (252) left_shift -> LEFT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 861


state 829

    (249) bit_operation_optional -> left_shift .

    SIGN_EXTEND     reduce using rule 249 (bit_operation_optional -> left_shift .)
    LEFT_SHIFT      reduce using rule 249 (bit_operation_optional -> left_shift .)
    RIGHT_SHIFT     reduce using rule 249 (bit_operation_optional -> left_shift .)
    end             reduce using rule 249 (bit_operation_optional -> left_shift .)


state 830

    (257) bit_operation_optional_list_optional -> bit_operation_optional_list .

    end             reduce using rule 257 (bit_operation_optional_list_optional -> bit_operation_optional_list .)


state 831

    (250) bit_operation_optional -> right_shift .

    SIGN_EXTEND     reduce using rule 250 (bit_operation_optional -> right_shift .)
    LEFT_SHIFT      reduce using rule 250 (bit_operation_optional -> right_shift .)
    RIGHT_SHIFT     reduce using rule 250 (bit_operation_optional -> right_shift .)
    end             reduce using rule 250 (bit_operation_optional -> right_shift .)


state 832

    (251) bit_operation_optional -> SIGN_EXTEND .

    SIGN_EXTEND     reduce using rule 251 (bit_operation_optional -> SIGN_EXTEND .)
    LEFT_SHIFT      reduce using rule 251 (bit_operation_optional -> SIGN_EXTEND .)
    RIGHT_SHIFT     reduce using rule 251 (bit_operation_optional -> SIGN_EXTEND .)
    end             reduce using rule 251 (bit_operation_optional -> SIGN_EXTEND .)


state 833

    (248) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional . end BIT_OPERATION

    end             shift and go to state 862


state 834

    (254) bit_operation_optional_list -> bit_operation_optional .
    (255) bit_operation_optional_list -> bit_operation_optional . bit_operation_optional_list
    (254) bit_operation_optional_list -> . bit_operation_optional
    (255) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (249) bit_operation_optional -> . left_shift
    (250) bit_operation_optional -> . right_shift
    (251) bit_operation_optional -> . SIGN_EXTEND
    (252) left_shift -> . LEFT_SHIFT NUMERIC
    (253) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 254 (bit_operation_optional_list -> bit_operation_optional .)
    SIGN_EXTEND     shift and go to state 832
    LEFT_SHIFT      shift and go to state 828
    RIGHT_SHIFT     shift and go to state 827

    left_shift                     shift and go to state 829
    bit_operation_optional_list    shift and go to state 863
    right_shift                    shift and go to state 831
    bit_operation_optional         shift and go to state 834

state 835

    (256) bit_operation_optional_list_optional -> empty .

    end             reduce using rule 256 (bit_operation_optional_list_optional -> empty .)


state 836

    (150) max_refresh -> MAX_REFRESH NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    FORMAT          reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    begin           reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    NUMBER          reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    end             reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    READ_WRITE      reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 150 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)


state 837

    (165) comparison_quantity -> COMPARISON_QUANTITY IDENT .

    READ_ONLY       reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    GUARD_RAILS     reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    FORMAT          reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BYTE_ORDER      reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BIT_MASK        reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    begin           reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    NUMBER          reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    EXTENDED_LIMITS reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MAX_REFRESH     reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    COMPARISON_QUANTITY reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    CALIBRATION_ACCESS reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MATRIX_DIM      reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    end             reduce using rule 165 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)


state 838

    (148) extended_limits -> EXTENDED_LIMITS NUMERIC . NUMERIC

    NUMERIC         shift and go to state 864


state 839

    (176) calibration_access_type -> OFFLINE_CALIBRATION .

    READ_ONLY       reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    GUARD_RAILS     reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    FORMAT          reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BYTE_ORDER      reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BIT_MASK        reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    begin           reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    NUMBER          reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MAX_REFRESH     reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MATRIX_DIM      reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    end             reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DEPOSIT         reduce using rule 176 (calibration_access_type -> OFFLINE_CALIBRATION .)


state 840

    (173) calibration_access_type -> CALIBRATION .

    READ_ONLY       reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    GUARD_RAILS     reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    FORMAT          reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    BYTE_ORDER      reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    BIT_MASK        reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    begin           reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    NUMBER          reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    MAX_REFRESH     reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    MATRIX_DIM      reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    end             reduce using rule 173 (calibration_access_type -> CALIBRATION .)
    DEPOSIT         reduce using rule 173 (calibration_access_type -> CALIBRATION .)


state 841

    (174) calibration_access_type -> NO_CALIBRATION .

    READ_ONLY       reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    GUARD_RAILS     reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    FORMAT          reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    BYTE_ORDER      reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    BIT_MASK        reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    begin           reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    NUMBER          reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    MAX_REFRESH     reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    MATRIX_DIM      reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    end             reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)
    DEPOSIT         reduce using rule 174 (calibration_access_type -> NO_CALIBRATION .)


state 842

    (175) calibration_access_type -> NOT_IN_MCD_SYSTEM .

    READ_ONLY       reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    GUARD_RAILS     reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DISPLAY_IDENTIFIER reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    FORMAT          reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BYTE_ORDER      reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BIT_MASK        reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    begin           reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    NUMBER          reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    EXTENDED_LIMITS reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MAX_REFRESH     reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    REF_MEMORY_SEGMENT reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    COMPARISON_QUANTITY reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    CALIBRATION_ACCESS reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MATRIX_DIM      reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    ECU_ADDRESS_EXTENSION reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    end             reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DEPOSIT         reduce using rule 175 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)


state 843

    (172) calibration_access -> CALIBRATION_ACCESS calibration_access_type .

    READ_ONLY       reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    GUARD_RAILS     reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DISPLAY_IDENTIFIER reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    FORMAT          reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BYTE_ORDER      reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BIT_MASK        reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    begin           reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    NUMBER          reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    EXTENDED_LIMITS reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MAX_REFRESH     reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    REF_MEMORY_SEGMENT reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    COMPARISON_QUANTITY reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    CALIBRATION_ACCESS reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MATRIX_DIM      reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    end             reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DEPOSIT         reduce using rule 172 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)


state 844

    (151) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC . STRING ident_list end DEPENDENT_CHARACTERISTIC

    STRING          shift and go to state 865


state 845

    (149) map_list -> begin MAP_LIST . ident_list end MAP_LIST
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 866

state 846

    (166) axis_descr -> begin AXIS_DESCR . axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (167) axis_descr_attribute -> . STD_AXIS
    (168) axis_descr_attribute -> . FIX_AXIS
    (169) axis_descr_attribute -> . COM_AXIS
    (170) axis_descr_attribute -> . RES_AXIS
    (171) axis_descr_attribute -> . CURVE_AXIS

    STD_AXIS        shift and go to state 872
    FIX_AXIS        shift and go to state 869
    COM_AXIS        shift and go to state 871
    RES_AXIS        shift and go to state 870
    CURVE_AXIS      shift and go to state 868

    axis_descr_attribute           shift and go to state 867

state 847

    (152) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC . STRING ident_list end VIRTUAL_CHARACTERISTIC

    STRING          shift and go to state 873


state 848

    (147) number -> NUMBER NUMERIC .

    READ_ONLY       reduce using rule 147 (number -> NUMBER NUMERIC .)
    GUARD_RAILS     reduce using rule 147 (number -> NUMBER NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 147 (number -> NUMBER NUMERIC .)
    FORMAT          reduce using rule 147 (number -> NUMBER NUMERIC .)
    BYTE_ORDER      reduce using rule 147 (number -> NUMBER NUMERIC .)
    BIT_MASK        reduce using rule 147 (number -> NUMBER NUMERIC .)
    begin           reduce using rule 147 (number -> NUMBER NUMERIC .)
    NUMBER          reduce using rule 147 (number -> NUMBER NUMERIC .)
    EXTENDED_LIMITS reduce using rule 147 (number -> NUMBER NUMERIC .)
    MAX_REFRESH     reduce using rule 147 (number -> NUMBER NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 147 (number -> NUMBER NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 147 (number -> NUMBER NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 147 (number -> NUMBER NUMERIC .)
    MATRIX_DIM      reduce using rule 147 (number -> NUMBER NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 147 (number -> NUMBER NUMERIC .)
    end             reduce using rule 147 (number -> NUMBER NUMERIC .)


state 849

    (201) characteristic_optional_list -> characteristic_optional characteristic_optional_list .

    end             reduce using rule 201 (characteristic_optional_list -> characteristic_optional characteristic_optional_list .)


state 850

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end . CHARACTERISTIC

    CHARACTERISTIC  shift and go to state 874


state 851

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 875


state 852

    (273) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    begin           reduce using rule 273 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COEFFS          reduce using rule 273 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COMPU_TAB_REF   reduce using rule 273 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 273 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 273 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 853

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end . AXIS_PTS

    AXIS_PTS        shift and go to state 876


state 854

    (222) deposit -> DEPOSIT deposit_mode .

    READ_ONLY       reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    GUARD_RAILS     reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    DISPLAY_IDENTIFIER reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    FORMAT          reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    DEPOSIT         reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    BYTE_ORDER      reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    begin           reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    REF_MEMORY_SEGMENT reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    EXTENDED_LIMITS reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    CALIBRATION_ACCESS reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    ECU_ADDRESS_EXTENSION reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)
    end             reduce using rule 222 (deposit -> DEPOSIT deposit_mode .)


state 855

    (224) deposit_mode -> DIFFERENCE .

    READ_ONLY       reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    GUARD_RAILS     reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    DISPLAY_IDENTIFIER reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    FORMAT          reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    DEPOSIT         reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    BYTE_ORDER      reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    begin           reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    REF_MEMORY_SEGMENT reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    EXTENDED_LIMITS reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    CALIBRATION_ACCESS reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    ECU_ADDRESS_EXTENSION reduce using rule 224 (deposit_mode -> DIFFERENCE .)
    end             reduce using rule 224 (deposit_mode -> DIFFERENCE .)


state 856

    (223) deposit_mode -> ABSOLUTE .

    READ_ONLY       reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    GUARD_RAILS     reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    DISPLAY_IDENTIFIER reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    FORMAT          reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    DEPOSIT         reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    BYTE_ORDER      reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    begin           reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    REF_MEMORY_SEGMENT reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    EXTENDED_LIMITS reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    CALIBRATION_ACCESS reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    ECU_ADDRESS_EXTENSION reduce using rule 223 (deposit_mode -> ABSOLUTE .)
    end             reduce using rule 223 (deposit_mode -> ABSOLUTE .)


state 857

    (219) axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .

    end             reduce using rule 219 (axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .)


state 858

    (177) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .

    READ_WRITE      reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    FORMAT          reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    READ_ONLY       reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    NUMBER          reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 177 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)


state 859

    (280) virtual -> begin VIRTUAL ident_list end . VIRTUAL

    VIRTUAL         shift and go to state 877


state 860

    (253) right_shift -> RIGHT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 253 (right_shift -> RIGHT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 253 (right_shift -> RIGHT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 253 (right_shift -> RIGHT_SHIFT NUMERIC .)
    end             reduce using rule 253 (right_shift -> RIGHT_SHIFT NUMERIC .)


state 861

    (252) left_shift -> LEFT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 252 (left_shift -> LEFT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 252 (left_shift -> LEFT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 252 (left_shift -> LEFT_SHIFT NUMERIC .)
    end             reduce using rule 252 (left_shift -> LEFT_SHIFT NUMERIC .)


state 862

    (248) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end . BIT_OPERATION

    BIT_OPERATION   shift and go to state 878


state 863

    (255) bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .

    end             reduce using rule 255 (bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .)


state 864

    (148) extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    FORMAT          reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DEPOSIT         reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    begin           reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    end             reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    NUMBER          reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 148 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)


state 865

    (151) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING . ident_list end DEPENDENT_CHARACTERISTIC
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 879

state 866

    (149) map_list -> begin MAP_LIST ident_list . end MAP_LIST

    end             shift and go to state 880


state 867

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute . IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    IDENT           shift and go to state 881


state 868

    (171) axis_descr_attribute -> CURVE_AXIS .

    IDENT           reduce using rule 171 (axis_descr_attribute -> CURVE_AXIS .)


state 869

    (168) axis_descr_attribute -> FIX_AXIS .

    IDENT           reduce using rule 168 (axis_descr_attribute -> FIX_AXIS .)


state 870

    (170) axis_descr_attribute -> RES_AXIS .

    IDENT           reduce using rule 170 (axis_descr_attribute -> RES_AXIS .)


state 871

    (169) axis_descr_attribute -> COM_AXIS .

    IDENT           reduce using rule 169 (axis_descr_attribute -> COM_AXIS .)


state 872

    (167) axis_descr_attribute -> STD_AXIS .

    IDENT           reduce using rule 167 (axis_descr_attribute -> STD_AXIS .)


state 873

    (152) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING . ident_list end VIRTUAL_CHARACTERISTIC
    (91) ident_list -> . IDENT
    (92) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 473

    ident_list                     shift and go to state 882

state 874

    (133) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .

    begin           reduce using rule 133 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)
    end             reduce using rule 133 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)


state 875

    (479) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 479 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 479 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 479 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 479 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 876

    (204) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .

    begin           reduce using rule 204 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)
    end             reduce using rule 204 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)


state 877

    (280) virtual -> begin VIRTUAL ident_list end VIRTUAL .

    READ_WRITE      reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    DISPLAY_IDENTIFIER reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    FORMAT          reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ARRAY_SIZE      reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BIT_MASK        reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    begin           reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BYTE_ORDER      reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MAX_REFRESH     reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS     reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ERROR_MASK      reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    REF_MEMORY_SEGMENT reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MATRIX_DIM      reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS_EXTENSION reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    end             reduce using rule 280 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)


state 878

    (248) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .

    READ_WRITE      reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    DISPLAY_IDENTIFIER reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    FORMAT          reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ARRAY_SIZE      reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BIT_MASK        reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    begin           reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BYTE_ORDER      reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MAX_REFRESH     reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS     reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ERROR_MASK      reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    REF_MEMORY_SEGMENT reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MATRIX_DIM      reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    end             reduce using rule 248 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)


state 879

    (151) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list . end DEPENDENT_CHARACTERISTIC

    end             shift and go to state 883


state 880

    (149) map_list -> begin MAP_LIST ident_list end . MAP_LIST

    MAP_LIST        shift and go to state 884


state 881

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT . IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    IDENT           shift and go to state 885


state 882

    (152) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list . end VIRTUAL_CHARACTERISTIC

    end             shift and go to state 886


state 883

    (151) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end . DEPENDENT_CHARACTERISTIC

    DEPENDENT_CHARACTERISTIC shift and go to state 887


state 884

    (149) map_list -> begin MAP_LIST ident_list end MAP_LIST .

    READ_ONLY       reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    GUARD_RAILS     reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    FORMAT          reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BYTE_ORDER      reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BIT_MASK        reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    begin           reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    NUMBER          reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    EXTENDED_LIMITS reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MAX_REFRESH     reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    COMPARISON_QUANTITY reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    CALIBRATION_ACCESS reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MATRIX_DIM      reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    end             reduce using rule 149 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)


state 885

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT . NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 888


state 886

    (152) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end . VIRTUAL_CHARACTERISTIC

    VIRTUAL_CHARACTERISTIC shift and go to state 889


state 887

    (151) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .

    READ_ONLY       reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    FORMAT          reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    begin           reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    NUMBER          reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    end             reduce using rule 151 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)


state 888

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC . NUMERIC NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 890


state 889

    (152) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .

    READ_ONLY       reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    FORMAT          reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    begin           reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    NUMBER          reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    end             reduce using rule 152 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)


state 890

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC . NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 891


state 891

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC . end AXIS_DESCR

    end             shift and go to state 892


state 892

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end . AXIS_DESCR

    AXIS_DESCR      shift and go to state 893


state 893

    (166) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .

    READ_ONLY       reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    GUARD_RAILS     reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    DISPLAY_IDENTIFIER reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    FORMAT          reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    BYTE_ORDER      reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    BIT_MASK        reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    begin           reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    NUMBER          reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    EXTENDED_LIMITS reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    MAX_REFRESH     reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    REF_MEMORY_SEGMENT reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    COMPARISON_QUANTITY reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    CALIBRATION_ACCESS reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    MATRIX_DIM      reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    ECU_ADDRESS_EXTENSION reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    end             reduce using rule 166 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for begin in state 15 resolved as shift
WARNING: shift/reduce conflict for begin in state 37 resolved as shift
