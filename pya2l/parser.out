Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TYPEDEF_CHARACTERISTIC
    DEFAULT_VALUE_NUMERIC
    EPK
    COEFFS_LINEAR
    SHIFT_OP_4
    CUSTOMER
    TYPEDEF_AXIS
    AXIS_PTS_4
    AXIS_PTS_5
    SRC_ADDR_4
    CALIBRATION_METHOD
    AXIS_PTS_REF
    PHYS_UNIT
    CUSTOMER_NO
    RAW_TEXT
    USER
    NO_AXIS_PTS_5
    SHIFT_OP_5
    C_COMMENT
    STATIC_RECORD_LAYOUT
    DIST_OP_4
    DIST_OP_5
    ECU_CALIBRATION_OFFSET
    TRANSFORMER
    INSTANCE
    FORMULA_INV
    ADDR_EPK
    TYPEDEF_BLOB
    FIX_NO_AXIS_PTS_5
    FIX_NO_AXIS_PTS_4
    BLOB
    TYPEDEF_MEASUREMENT
    MEMORY_SEGMENT
    CALIBRATION_HANDLE_TEXT
    CALIBRATION_HANDLE
    FIX_AXIS_PAR_LIST
    MONOTONY
    TYPEDEF_STRUCTURE
    NO_OF_INTERFACES
    SYSTEM_CONSTANT
    ECU
    STEP_SIZE
    NO_AXIS_PTS_4
    CURVE_AXIS_REF
    CPU_TYPE
    FIX_AXIS_PAR
    STATUS_STRING_REF
    FIX_AXIS_PAR_DIST
    MEMORY_LAYOUT
    CPP_COMMENT
    DISCRETE
    SUPPLIER
    RIP_ADDR_4
    RIP_ADDR_5
    VAR_SEPERATOR
    OFFSET_5
    SYMBOL_LINK
    LAYOUT
    PHONE_NO
    MAX_GRAD
    ALIGNMENT_INT64
    OFFSET_4
    SRC_ADDR_5
    DATA_SIZE

Grammar

Rule 0     S' -> a2l
Rule 1     a2l -> version_list project
Rule 2     datatype -> UBYTE
Rule 3     datatype -> SBYTE
Rule 4     datatype -> UWORD
Rule 5     datatype -> SWORD
Rule 6     datatype -> ULONG
Rule 7     datatype -> SLONG
Rule 8     datatype -> A_UINT64
Rule 9     datatype -> A_INT64
Rule 10    datatype -> FLOAT32_IEEE
Rule 11    datatype -> FLOAT64_IEEE
Rule 12    datasize -> BYTE
Rule 13    datasize -> WORD
Rule 14    datasize -> LONG
Rule 15    addrtype -> PBYTE
Rule 16    addrtype -> PWORD
Rule 17    addrtype -> PLONG
Rule 18    addrtype -> DIRECT
Rule 19    indexorder -> INDEX_INCR
Rule 20    indexorder -> INDEX_DECR
Rule 21    version_list -> version
Rule 22    version_list -> version version_list
Rule 23    version -> version_asap2_a2ml number_list
Rule 24    version_asap2_a2ml -> ASAP2_VERSION
Rule 25    version_asap2_a2ml -> A2ML_VERSION
Rule 26    number_list -> NUMERIC
Rule 27    number_list -> NUMERIC number_list
Rule 28    ident_list -> IDENT
Rule 29    ident_list -> IDENT ident_list
Rule 30    string_list -> STRING
Rule 31    string_list -> STRING string_list
Rule 32    project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT
Rule 33    optional_header -> empty
Rule 34    optional_header -> header
Rule 35    header -> begin HEADER STRING header_version header_project_no end HEADER
Rule 36    header_version -> empty
Rule 37    header_version -> VERSION STRING
Rule 38    header_project_no -> empty
Rule 39    header_project_no -> PROJECT_NO IDENT
Rule 40    module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE
Rule 41    module_list -> module
Rule 42    module_list -> module module_list
Rule 43    a2ml -> begin A2ML end A2ML
Rule 44    optional_a2ml -> empty
Rule 45    optional_a2ml -> a2ml
Rule 46    module_parameter -> mod_par
Rule 47    module_parameter -> mod_common
Rule 48    module_parameter -> if_data
Rule 49    module_parameter -> characteristic
Rule 50    module_parameter -> axis_pts
Rule 51    module_parameter -> measurement
Rule 52    module_parameter -> compu_method
Rule 53    module_parameter -> compu_tab
Rule 54    module_parameter -> compu_vtab
Rule 55    module_parameter -> compu_vtab_range
Rule 56    module_parameter -> function
Rule 57    module_parameter -> group
Rule 58    module_parameter -> record_layout
Rule 59    module_parameter -> variant_coding
Rule 60    module_parameter -> frame
Rule 61    module_parameter -> user_rights
Rule 62    module_parameter -> unit
Rule 63    module_parameter_list -> module_parameter
Rule 64    module_parameter_list -> module_parameter module_parameter_list
Rule 65    optional_module_parameter_list -> empty
Rule 66    optional_module_parameter_list -> module_parameter_list
Rule 67    mod_par -> begin MOD_PAR end MOD_PAR
Rule 68    mod_common -> begin MOD_COMMON end MOD_COMMON
Rule 69    if_data -> begin IF_DATA IDENT end IF_DATA
Rule 70    characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
Rule 71    characteristic_type -> VALUE
Rule 72    characteristic_type -> CURVE
Rule 73    characteristic_type -> MAP
Rule 74    characteristic_type -> CUBOID
Rule 75    characteristic_type -> VAL_BLK
Rule 76    characteristic_type -> ASCII
Rule 77    display_identifier -> DISPLAY_IDENTIFIER IDENT
Rule 78    format -> FORMAT STRING
Rule 79    byte_order -> BYTE_ORDER byte_order_type
Rule 80    byte_order_type -> MSB_FIRST
Rule 81    byte_order_type -> MSB_LAST
Rule 82    bit_mask -> BIT_MASK NUMERIC
Rule 83    function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST
Rule 84    number -> NUMBER NUMERIC
Rule 85    extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC
Rule 86    map_list -> begin MAP_LIST ident_list end MAP_LIST
Rule 87    max_refresh -> MAX_REFRESH NUMERIC NUMERIC
Rule 88    dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
Rule 89    virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
Rule 90    ref_memory_segment -> REF_MEMORY_SEGMENT IDENT
Rule 91    annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION
Rule 92    annotation_optional -> annotation_label
Rule 93    annotation_optional -> annotation_origin
Rule 94    annotation_optional -> annotation_text
Rule 95    annotation_label -> ANNOTATION_LABEL STRING
Rule 96    annotation_origin -> ANNOTATION_ORIGIN STRING
Rule 97    annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT
Rule 98    annotation_optional_list -> annotation_optional
Rule 99    annotation_optional_list -> annotation_optional annotation_optional_list
Rule 100   annotation_optional_list_optional -> empty
Rule 101   annotation_optional_list_optional -> annotation_optional_list
Rule 102   comparison_quantity -> COMPARISON_QUANTITY IDENT
Rule 103   axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
Rule 104   axis_descr_attribute -> STD_AXIS
Rule 105   axis_descr_attribute -> FIX_AXIS
Rule 106   axis_descr_attribute -> COM_AXIS
Rule 107   axis_descr_attribute -> RES_AXIS
Rule 108   axis_descr_attribute -> CURVE_AXIS
Rule 109   calibration_access -> CALIBRATION_ACCESS calibration_access_type
Rule 110   calibration_access_type -> CALIBRATION
Rule 111   calibration_access_type -> NO_CALIBRATION
Rule 112   calibration_access_type -> NOT_IN_MCD_SYSTEM
Rule 113   calibration_access_type -> OFFLINE_CALIBRATION
Rule 114   matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC
Rule 115   ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC
Rule 116   characteristic_optional -> display_identifier
Rule 117   characteristic_optional -> format
Rule 118   characteristic_optional -> byte_order
Rule 119   characteristic_optional -> bit_mask
Rule 120   characteristic_optional -> function_list
Rule 121   characteristic_optional -> number
Rule 122   characteristic_optional -> extended_limits
Rule 123   characteristic_optional -> READ_ONLY
Rule 124   characteristic_optional -> GUARD_RAILS
Rule 125   characteristic_optional -> map_list
Rule 126   characteristic_optional -> max_refresh
Rule 127   characteristic_optional -> dependent_characteristic
Rule 128   characteristic_optional -> virtual_characteristic
Rule 129   characteristic_optional -> ref_memory_segment
Rule 130   characteristic_optional -> annotation
Rule 131   characteristic_optional -> comparison_quantity
Rule 132   characteristic_optional -> if_data
Rule 133   characteristic_optional -> axis_descr
Rule 134   characteristic_optional -> calibration_access
Rule 135   characteristic_optional -> matrix_dim
Rule 136   characteristic_optional -> ecu_address_extension
Rule 137   characteristic_optional_list -> characteristic_optional
Rule 138   characteristic_optional_list -> characteristic_optional characteristic_optional_list
Rule 139   characteristic_optional_list_optional -> empty
Rule 140   characteristic_optional_list_optional -> characteristic_optional_list
Rule 141   axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
Rule 142   axis_pts_optional -> display_identifier
Rule 143   axis_pts_optional -> READ_ONLY
Rule 144   axis_pts_optional -> format
Rule 145   axis_pts_optional -> deposit
Rule 146   axis_pts_optional -> byte_order
Rule 147   axis_pts_optional -> function_list
Rule 148   axis_pts_optional -> ref_memory_segment
Rule 149   axis_pts_optional -> GUARD_RAILS
Rule 150   axis_pts_optional -> extended_limits
Rule 151   axis_pts_optional -> annotation
Rule 152   axis_pts_optional -> if_data
Rule 153   axis_pts_optional -> calibration_access
Rule 154   axis_pts_optional -> ecu_address_extension
Rule 155   axis_pts_optional_list -> axis_pts_optional
Rule 156   axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list
Rule 157   axis_pts_optional_list_optional -> empty
Rule 158   axis_pts_optional_list_optional -> axis_pts_optional_list
Rule 159   deposit -> DEPOSIT deposit_mode
Rule 160   deposit_mode -> ABSOLUTE
Rule 161   deposit_mode -> DIFFERENCE
Rule 162   measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
Rule 163   measurement_optional -> display_identifier
Rule 164   measurement_optional -> READ_WRITE
Rule 165   measurement_optional -> format
Rule 166   measurement_optional -> array_size
Rule 167   measurement_optional -> bit_mask
Rule 168   measurement_optional -> bit_operation
Rule 169   measurement_optional -> byte_order
Rule 170   measurement_optional -> max_refresh
Rule 171   measurement_optional -> virtual
Rule 172   measurement_optional -> function_list
Rule 173   measurement_optional -> ecu_address
Rule 174   measurement_optional -> error_mask
Rule 175   measurement_optional -> ref_memory_segment
Rule 176   measurement_optional -> annotation
Rule 177   measurement_optional -> if_data
Rule 178   measurement_optional -> matrix_dim
Rule 179   measurement_optional -> ecu_address_extension
Rule 180   measurement_optional_list -> measurement_optional
Rule 181   measurement_optional_list -> measurement_optional measurement_optional_list
Rule 182   measurement_optional_list_optional -> empty
Rule 183   measurement_optional_list_optional -> measurement_optional_list
Rule 184   array_size -> ARRAY_SIZE NUMERIC
Rule 185   bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
Rule 186   bit_operation_optional -> left_shift
Rule 187   bit_operation_optional -> right_shift
Rule 188   bit_operation_optional -> SIGN_EXTEND
Rule 189   left_shift -> LEFT_SHIFT NUMERIC
Rule 190   right_shift -> RIGHT_SHIFT NUMERIC
Rule 191   bit_operation_optional_list -> bit_operation_optional
Rule 192   bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list
Rule 193   bit_operation_optional_list_optional -> empty
Rule 194   bit_operation_optional_list_optional -> bit_operation_optional_list
Rule 195   compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
Rule 196   compu_method_conversion_type -> TAB_INTP
Rule 197   compu_method_conversion_type -> TAB_NOINTP
Rule 198   compu_method_conversion_type -> TAB_VERB
Rule 199   compu_method_conversion_type -> RAT_FUNC
Rule 200   compu_method_conversion_type -> FORM
Rule 201   compu_method_conversion_type -> IDENTICAL
Rule 202   compu_method_optional -> formula
Rule 203   compu_method_optional -> coeffs
Rule 204   compu_method_optional -> compu_tab_ref
Rule 205   compu_method_optional -> ref_unit
Rule 206   formula -> begin FORMULA STRING formula_optional end FORMULA
Rule 207   formula_optional -> empty
Rule 208   formula_optional -> formula_inv
Rule 209   formula_inv -> STRING
Rule 210   coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 211   compu_tab_ref -> COMPU_TAB_REF IDENT
Rule 212   ref_unit -> REF_UNIT IDENT
Rule 213   compu_method_optional_list -> compu_method_optional
Rule 214   compu_method_optional_list -> compu_method_optional compu_method_optional_list
Rule 215   compu_method_optional_list_optional -> empty
Rule 216   compu_method_optional_list_optional -> compu_method_optional_list
Rule 217   virtual -> begin VIRTUAL ident_list end VIRTUAL
Rule 218   ecu_address -> ECU_ADDRESS NUMERIC
Rule 219   error_mask -> ERROR_MASK NUMERIC
Rule 220   compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
Rule 221   compu_tab_conversion_type -> TAB_INTP
Rule 222   compu_tab_conversion_type -> TAB_NOINTP
Rule 223   compu_tab_optional -> empty
Rule 224   compu_tab_optional -> default_value
Rule 225   default_value -> DEFAULT_VALUE STRING
Rule 226   compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
Rule 227   compu_vtab_conversion_type -> TAB_VERB
Rule 228   number_string_value_list -> number_string_value
Rule 229   number_string_value_list -> number_string_value number_string_value_list
Rule 230   number_string_value -> NUMERIC STRING
Rule 231   compu_vtab_optional -> empty
Rule 232   compu_vtab_optional -> default_value
Rule 233   compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
Rule 234   number_number_string_value_list -> number_number_string_value
Rule 235   number_number_string_value_list -> number_number_string_value number_number_string_value_list
Rule 236   number_number_string_value -> NUMERIC NUMERIC STRING
Rule 237   compu_vtab_range_optional -> empty
Rule 238   compu_vtab_range_optional -> default_value
Rule 239   function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
Rule 240   function_optional -> annotation
Rule 241   function_optional -> def_characteristic
Rule 242   function_optional -> ref_characteristic
Rule 243   function_optional -> in_measurement
Rule 244   function_optional -> out_measurement
Rule 245   function_optional -> loc_measurement
Rule 246   function_optional -> sub_function
Rule 247   function_optional -> function_version
Rule 248   function_optional_list -> function_optional
Rule 249   function_optional_list -> function_optional function_optional_list
Rule 250   function_optional_list_optional -> empty
Rule 251   function_optional_list_optional -> function_optional_list
Rule 252   def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
Rule 253   ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
Rule 254   in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
Rule 255   out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
Rule 256   loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
Rule 257   sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION
Rule 258   function_version -> FUNCTION_VERSION STRING
Rule 259   group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP
Rule 260   group_optional -> annotation
Rule 261   group_optional -> ROOT
Rule 262   group_optional -> ref_characteristic
Rule 263   group_optional -> ref_measurement
Rule 264   group_optional -> function_list
Rule 265   group_optional -> sub_group
Rule 266   group_optional_list -> group_optional
Rule 267   group_optional_list -> group_optional group_optional_list
Rule 268   group_optional_list_optional -> empty
Rule 269   group_optional_list_optional -> group_optional_list
Rule 270   ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
Rule 271   sub_group -> begin SUB_GROUP ident_list end SUB_GROUP
Rule 272   record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
Rule 273   record_layout_optional -> fnc_values
Rule 274   record_layout_optional -> identification
Rule 275   record_layout_optional -> axis_pts_x
Rule 276   record_layout_optional -> axis_pts_y
Rule 277   record_layout_optional -> axis_pts_z
Rule 278   record_layout_optional -> axis_rescale_x
Rule 279   record_layout_optional -> axis_rescale_y
Rule 280   record_layout_optional -> axis_rescale_z
Rule 281   record_layout_optional -> no_axis_pts_x
Rule 282   record_layout_optional -> no_axis_pts_y
Rule 283   record_layout_optional -> no_axis_pts_z
Rule 284   record_layout_optional -> no_rescale_x
Rule 285   record_layout_optional -> no_rescale_y
Rule 286   record_layout_optional -> no_rescale_z
Rule 287   record_layout_optional -> fix_no_axis_pts_x
Rule 288   record_layout_optional -> fix_no_axis_pts_y
Rule 289   record_layout_optional -> fix_no_axis_pts_z
Rule 290   record_layout_optional -> src_addr_x
Rule 291   record_layout_optional -> src_addr_y
Rule 292   record_layout_optional -> src_addr_z
Rule 293   record_layout_optional -> rip_addr_x
Rule 294   record_layout_optional -> rip_addr_y
Rule 295   record_layout_optional -> rip_addr_z
Rule 296   record_layout_optional -> rip_addr_w
Rule 297   record_layout_optional -> shift_op_x
Rule 298   record_layout_optional -> shift_op_y
Rule 299   record_layout_optional -> shift_op_z
Rule 300   record_layout_optional -> offset_x
Rule 301   record_layout_optional -> offset_y
Rule 302   record_layout_optional -> offset_z
Rule 303   record_layout_optional -> dist_op_x
Rule 304   record_layout_optional -> dist_op_y
Rule 305   record_layout_optional -> dist_op_z
Rule 306   record_layout_optional -> alignment_byte
Rule 307   record_layout_optional -> alignment_word
Rule 308   record_layout_optional -> alignment_long
Rule 309   record_layout_optional -> alignment_float32_ieee
Rule 310   record_layout_optional -> alignment_float64_ieee
Rule 311   record_layout_optional -> reserved
Rule 312   record_layout_optional_list -> record_layout_optional
Rule 313   record_layout_optional_list -> record_layout_optional record_layout_optional_list
Rule 314   record_layout_optional_list_optional -> empty
Rule 315   record_layout_optional_list_optional -> record_layout_optional_list
Rule 316   fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
Rule 317   fnc_values_index_mode -> COLUMN_DIR
Rule 318   fnc_values_index_mode -> ROW_DIR
Rule 319   fnc_values_index_mode -> ALTERNATE_WITH_X
Rule 320   fnc_values_index_mode -> ALTERNATE_WITH_Y
Rule 321   fnc_values_index_mode -> ALTERNATE_CURVES
Rule 322   identification -> IDENTIFICATION NUMERIC datatype
Rule 323   axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype
Rule 324   axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype
Rule 325   axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype
Rule 326   axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
Rule 327   axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
Rule 328   axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
Rule 329   no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype
Rule 330   no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype
Rule 331   no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype
Rule 332   no_rescale_x -> NO_RESCALE_X NUMERIC datatype
Rule 333   no_rescale_y -> NO_RESCALE_Y NUMERIC datatype
Rule 334   no_rescale_z -> NO_RESCALE_Z NUMERIC datatype
Rule 335   fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC
Rule 336   fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC
Rule 337   fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC
Rule 338   src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional
Rule 339   src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional
Rule 340   src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional
Rule 341   src_addr_optional -> empty
Rule 342   src_addr_optional -> datatype
Rule 343   rip_addr_x -> RIP_ADDR_X NUMERIC datatype
Rule 344   rip_addr_y -> RIP_ADDR_Y NUMERIC datatype
Rule 345   rip_addr_z -> RIP_ADDR_Z NUMERIC datatype
Rule 346   rip_addr_w -> RIP_ADDR_W NUMERIC datatype
Rule 347   shift_op_x -> SHIFT_OP_X NUMERIC datatype
Rule 348   shift_op_y -> SHIFT_OP_Y NUMERIC datatype
Rule 349   shift_op_z -> SHIFT_OP_Z NUMERIC datatype
Rule 350   offset_x -> OFFSET_X NUMERIC datatype
Rule 351   offset_y -> OFFSET_Y NUMERIC datatype
Rule 352   offset_z -> OFFSET_Z NUMERIC datatype
Rule 353   dist_op_x -> DIST_OP_X NUMERIC datatype
Rule 354   dist_op_y -> DIST_OP_Y NUMERIC datatype
Rule 355   dist_op_z -> DIST_OP_Z NUMERIC datatype
Rule 356   alignment_byte -> ALIGNMENT_BYTE NUMERIC
Rule 357   alignment_word -> ALIGNMENT_WORD NUMERIC
Rule 358   alignment_long -> ALIGNMENT_LONG NUMERIC
Rule 359   alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC
Rule 360   alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC
Rule 361   variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
Rule 362   variant_coding_optional -> var_separator
Rule 363   variant_coding_optional -> var_naming
Rule 364   variant_coding_optional -> var_criterion
Rule 365   variant_coding_optional -> var_forbidden_comb
Rule 366   variant_coding_optional -> var_characteristic
Rule 367   var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC
Rule 368   var_characteristic_optional -> var_address
Rule 369   var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS
Rule 370   var_separator -> VAR_SEPARATOR STRING
Rule 371   var_naming -> VAR_NAMING IDENT
Rule 372   var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
Rule 373   ident_ident_value_list -> ident_ident_value
Rule 374   ident_ident_value_list -> ident_ident_value ident_ident_value_list
Rule 375   ident_ident_value -> IDENT IDENT
Rule 376   var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
Rule 377   var_criterion_optional -> var_measurement
Rule 378   var_criterion_optional -> var_selection_characteristic
Rule 379   var_criterion_optional_list -> var_criterion_optional
Rule 380   var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list
Rule 381   var_criterion_optional_list_optional -> empty
Rule 382   var_criterion_optional_list_optional -> var_criterion_optional_list
Rule 383   var_measurement -> VAR_MEASUREMENT IDENT
Rule 384   var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT
Rule 385   variant_coding_optional_list -> variant_coding_optional
Rule 386   variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list
Rule 387   variant_coding_optional_list_optional -> empty
Rule 388   variant_coding_optional_list_optional -> variant_coding_optional_list
Rule 389   reserved -> RESERVED NUMERIC datasize
Rule 390   frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
Rule 391   frame_optional -> frame_measurement
Rule 392   frame_optional -> if_data
Rule 393   frame_optional_list -> frame_optional
Rule 394   frame_optional_list -> frame_optional frame_optional_list
Rule 395   frame_optional_list_optional -> empty
Rule 396   frame_optional_list_optional -> frame_optional_list
Rule 397   frame_measurement -> FRAME_MEASUREMENT ident_list
Rule 398   user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
Rule 399   user_rights_optional -> ref_group
Rule 400   user_rights_optional -> READ_ONLY
Rule 401   user_rights_optional_list -> user_rights_optional
Rule 402   user_rights_optional_list -> user_rights_optional user_rights_optional_list
Rule 403   user_rights_optional_list_optional -> empty
Rule 404   user_rights_optional_list_optional -> user_rights_optional_list
Rule 405   ref_group -> begin REF_GROUP ident_list end REF_GROUP
Rule 406   unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT
Rule 407   unit_type -> EXTENDED_SI
Rule 408   unit_type -> DERIVED
Rule 409   unit_optional -> si_exponents
Rule 410   unit_optional -> ref_unit
Rule 411   unit_optional -> unit_conversion
Rule 412   unit_optional_list -> unit_optional
Rule 413   unit_optional_list -> unit_optional unit_optional_list
Rule 414   unit_optional_list_optional -> empty
Rule 415   unit_optional_list_optional -> unit_optional_list
Rule 416   si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
Rule 417   unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC
Rule 418   empty -> <empty>

Terminals, with rules where they appear

A2ML                 : 43 43
A2ML_VERSION         : 25
ABSOLUTE             : 160
ADDR_EPK             : 
ALIGNMENT_BYTE       : 356
ALIGNMENT_FLOAT32_IEEE : 359
ALIGNMENT_FLOAT64_IEEE : 360
ALIGNMENT_INT64      : 
ALIGNMENT_LONG       : 358
ALIGNMENT_WORD       : 357
ALTERNATE_CURVES     : 321
ALTERNATE_WITH_X     : 319
ALTERNATE_WITH_Y     : 320
ANNOTATION           : 91 91
ANNOTATION_LABEL     : 95
ANNOTATION_ORIGIN    : 96
ANNOTATION_TEXT      : 97 97
ARRAY_SIZE           : 184
ASAP2_VERSION        : 24
ASCII                : 76
AXIS_DESCR           : 103 103
AXIS_PTS             : 141 141
AXIS_PTS_4           : 
AXIS_PTS_5           : 
AXIS_PTS_REF         : 
AXIS_PTS_X           : 323
AXIS_PTS_Y           : 324
AXIS_PTS_Z           : 325
AXIS_RESCALE_X       : 326
AXIS_RESCALE_Y       : 327
AXIS_RESCALE_Z       : 328
A_INT64              : 9
A_UINT64             : 8
BIT_MASK             : 82
BIT_OPERATION        : 185 185
BLOB                 : 
BYTE                 : 12
BYTE_ORDER           : 79
CALIBRATION          : 110
CALIBRATION_ACCESS   : 109
CALIBRATION_HANDLE   : 
CALIBRATION_HANDLE_TEXT : 
CALIBRATION_METHOD   : 
CHARACTERISTIC       : 70 70
COEFFS               : 210
COEFFS_LINEAR        : 
COLUMN_DIR           : 317
COMPARISON_QUANTITY  : 102
COMPU_METHOD         : 195 195
COMPU_TAB            : 220 220
COMPU_TAB_REF        : 211
COMPU_VTAB           : 226 226
COMPU_VTAB_RANGE     : 233 233
COM_AXIS             : 106
CPP_COMMENT          : 
CPU_TYPE             : 
CUBOID               : 74
CURVE                : 72
CURVE_AXIS           : 108
CURVE_AXIS_REF       : 
CUSTOMER             : 
CUSTOMER_NO          : 
C_COMMENT            : 
DATA_SIZE            : 
DEFAULT_VALUE        : 225
DEFAULT_VALUE_NUMERIC : 
DEF_CHARACTERISTIC   : 252 252
DEPENDENT_CHARACTERISTIC : 88 88
DEPOSIT              : 159
DERIVED              : 408
DIFFERENCE           : 161
DIRECT               : 18
DISCRETE             : 
DISPLAY_IDENTIFIER   : 77
DIST_OP_4            : 
DIST_OP_5            : 
DIST_OP_X            : 353
DIST_OP_Y            : 354
DIST_OP_Z            : 355
ECU                  : 
ECU_ADDRESS          : 218
ECU_ADDRESS_EXTENSION : 115
ECU_CALIBRATION_OFFSET : 
EPK                  : 
ERROR_MASK           : 219
EXTENDED_LIMITS      : 85
EXTENDED_SI          : 407
FIX_AXIS             : 105
FIX_AXIS_PAR         : 
FIX_AXIS_PAR_DIST    : 
FIX_AXIS_PAR_LIST    : 
FIX_NO_AXIS_PTS_4    : 
FIX_NO_AXIS_PTS_5    : 
FIX_NO_AXIS_PTS_X    : 335
FIX_NO_AXIS_PTS_Y    : 336
FIX_NO_AXIS_PTS_Z    : 337
FLOAT32_IEEE         : 10
FLOAT64_IEEE         : 11
FNC_VALUES           : 316
FORM                 : 200
FORMAT               : 78
FORMULA              : 206 206
FORMULA_INV          : 
FRAME                : 390 390
FRAME_MEASUREMENT    : 397
FUNCTION             : 239 239
FUNCTION_LIST        : 83 83
FUNCTION_VERSION     : 258
GROUP                : 259 259
GUARD_RAILS          : 124 149
HEADER               : 35 35
IDENT                : 28 29 32 39 40 69 70 70 70 77 90 102 103 103 141 141 141 141 162 162 195 211 212 220 226 233 239 259 272 367 371 375 375 376 383 384 390 398 406
IDENTICAL            : 201
IDENTIFICATION       : 322
IF_DATA              : 69 69
INDEX_DECR           : 20
INDEX_INCR           : 19
INSTANCE             : 
IN_MEASUREMENT       : 254 254
LAYOUT               : 
LEFT_SHIFT           : 189
LOC_MEASUREMENT      : 256 256
LONG                 : 14
MAP                  : 73
MAP_LIST             : 86 86
MATRIX_DIM           : 114
MAX_GRAD             : 
MAX_REFRESH          : 87
MEASUREMENT          : 162 162
MEMORY_LAYOUT        : 
MEMORY_SEGMENT       : 
MODULE               : 40 40
MOD_COMMON           : 68 68
MOD_PAR              : 67 67
MONOTONY             : 
MSB_FIRST            : 80
MSB_LAST             : 81
NOT_IN_MCD_SYSTEM    : 112
NO_AXIS_PTS_4        : 
NO_AXIS_PTS_5        : 
NO_AXIS_PTS_X        : 329
NO_AXIS_PTS_Y        : 330
NO_AXIS_PTS_Z        : 331
NO_CALIBRATION       : 111
NO_OF_INTERFACES     : 
NO_RESCALE_X         : 332
NO_RESCALE_Y         : 333
NO_RESCALE_Z         : 334
NUMBER               : 84
NUMERIC              : 26 27 70 70 70 70 82 84 85 85 87 87 103 103 103 114 114 114 115 141 141 141 141 141 162 162 162 162 184 189 190 210 210 210 210 210 210 218 219 220 226 230 233 236 236 316 322 323 324 325 326 326 327 327 328 328 329 330 331 332 333 334 335 336 337 338 339 340 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 389 390 390 416 416 416 416 416 416 416 417 417
OFFLINE_CALIBRATION  : 113
OFFSET_4             : 
OFFSET_5             : 
OFFSET_X             : 350
OFFSET_Y             : 351
OFFSET_Z             : 352
OUT_MEASUREMENT      : 255 255
PBYTE                : 15
PHONE_NO             : 
PHYS_UNIT            : 
PLONG                : 17
PROJECT              : 32 32
PROJECT_NO           : 39
PWORD                : 16
RAT_FUNC             : 199
RAW_TEXT             : 
READ_ONLY            : 123 143 400
READ_WRITE           : 164
RECORD_LAYOUT        : 272 272
REF_CHARACTERISTIC   : 253 253
REF_GROUP            : 405 405
REF_MEASUREMENT      : 270 270
REF_MEMORY_SEGMENT   : 90
REF_UNIT             : 212
RESERVED             : 389
RES_AXIS             : 107
RIGHT_SHIFT          : 190
RIP_ADDR_4           : 
RIP_ADDR_5           : 
RIP_ADDR_W           : 346
RIP_ADDR_X           : 343
RIP_ADDR_Y           : 344
RIP_ADDR_Z           : 345
ROOT                 : 261
ROW_DIR              : 318
SBYTE                : 3
SHIFT_OP_4           : 
SHIFT_OP_5           : 
SHIFT_OP_X           : 347
SHIFT_OP_Y           : 348
SHIFT_OP_Z           : 349
SIGN_EXTEND          : 188
SI_EXPONENTS         : 416
SLONG                : 7
SRC_ADDR_4           : 
SRC_ADDR_5           : 
SRC_ADDR_X           : 338
SRC_ADDR_Y           : 339
SRC_ADDR_Z           : 340
STATIC_RECORD_LAYOUT : 
STATUS_STRING_REF    : 
STD_AXIS             : 104
STEP_SIZE            : 
STRING               : 30 31 32 35 37 40 70 78 88 89 95 96 141 162 195 195 195 206 209 220 225 226 230 233 236 239 258 259 370 376 390 406 406
SUB_FUNCTION         : 257 257
SUB_GROUP            : 271 271
SUPPLIER             : 
SWORD                : 5
SYMBOL_LINK          : 
SYSTEM_CONSTANT      : 
TAB_INTP             : 196 221
TAB_NOINTP           : 197 222
TAB_VERB             : 198 227
TRANSFORMER          : 
TYPEDEF_AXIS         : 
TYPEDEF_BLOB         : 
TYPEDEF_CHARACTERISTIC : 
TYPEDEF_MEASUREMENT  : 
TYPEDEF_STRUCTURE    : 
UBYTE                : 2
ULONG                : 6
UNIT                 : 406 406
UNIT_CONVERSION      : 417
USER                 : 
USER_RIGHTS          : 398 398
UWORD                : 4
VALUE                : 71
VAL_BLK              : 75
VARIANT_CODING       : 361 361
VAR_ADDRESS          : 369 369
VAR_CHARACTERISTIC   : 367 367
VAR_CRITERION        : 376 376
VAR_FORBIDDEN_COMB   : 372 372
VAR_MEASUREMENT      : 383
VAR_NAMING           : 371
VAR_SELECTION_CHARACTERISTIC : 384
VAR_SEPARATOR        : 370
VAR_SEPERATOR        : 
VERSION              : 37
VIRTUAL              : 217 217
VIRTUAL_CHARACTERISTIC : 89 89
WORD                 : 13
begin                : 32 35 40 43 67 68 69 70 83 86 88 89 91 97 103 141 162 185 195 206 217 220 226 233 239 252 253 254 255 256 257 259 270 271 272 361 367 369 372 376 390 398 405 406
end                  : 32 35 40 43 67 68 69 70 83 86 88 89 91 97 103 141 162 185 195 206 217 220 226 233 239 252 253 254 255 256 257 259 270 271 272 361 367 369 372 376 390 398 405 406
error                : 

Nonterminals, with rules where they appear

a2l                  : 0
a2ml                 : 45
addrtype             : 316 323 324 325 326 327 328
alignment_byte       : 306
alignment_float32_ieee : 309
alignment_float64_ieee : 310
alignment_long       : 308
alignment_word       : 307
annotation           : 130 151 176 240 260
annotation_label     : 92
annotation_optional  : 98 99
annotation_optional_list : 99 101
annotation_optional_list_optional : 91
annotation_origin    : 93
annotation_text      : 94
array_size           : 166
axis_descr           : 133
axis_descr_attribute : 103
axis_pts             : 50
axis_pts_optional    : 155 156
axis_pts_optional_list : 156 158
axis_pts_optional_list_optional : 141
axis_pts_x           : 275
axis_pts_y           : 276
axis_pts_z           : 277
axis_rescale_x       : 278
axis_rescale_y       : 279
axis_rescale_z       : 280
bit_mask             : 119 167
bit_operation        : 168
bit_operation_optional : 191 192
bit_operation_optional_list : 192 194
bit_operation_optional_list_optional : 185
byte_order           : 118 146 169
byte_order_type      : 79
calibration_access   : 134 153
calibration_access_type : 109
characteristic       : 49
characteristic_optional : 137 138
characteristic_optional_list : 138 140
characteristic_optional_list_optional : 70
characteristic_type  : 70
coeffs               : 203
comparison_quantity  : 131
compu_method         : 52
compu_method_conversion_type : 195
compu_method_optional : 213 214
compu_method_optional_list : 214 216
compu_method_optional_list_optional : 195
compu_tab            : 53
compu_tab_conversion_type : 220
compu_tab_optional   : 220
compu_tab_ref        : 204
compu_vtab           : 54
compu_vtab_conversion_type : 226
compu_vtab_optional  : 226
compu_vtab_range     : 55
compu_vtab_range_optional : 233
datasize             : 389
datatype             : 162 316 322 323 324 325 326 327 328 329 330 331 332 333 334 342 343 344 345 346 347 348 349 350 351 352 353 354 355
def_characteristic   : 241
default_value        : 224 232 238
dependent_characteristic : 127
deposit              : 145
deposit_mode         : 159
display_identifier   : 116 142 163
dist_op_x            : 303
dist_op_y            : 304
dist_op_z            : 305
ecu_address          : 173
ecu_address_extension : 136 154 179
empty                : 33 36 38 44 65 100 139 157 182 193 207 215 223 231 237 250 268 314 341 381 387 395 403 414
error_mask           : 174
extended_limits      : 122 150
fix_no_axis_pts_x    : 287
fix_no_axis_pts_y    : 288
fix_no_axis_pts_z    : 289
fnc_values           : 273
fnc_values_index_mode : 316
format               : 117 144 165
formula              : 202
formula_inv          : 208
formula_optional     : 206
frame                : 60
frame_measurement    : 391
frame_optional       : 393 394
frame_optional_list  : 394 396
frame_optional_list_optional : 390
function             : 56
function_list        : 120 147 172 264
function_optional    : 248 249
function_optional_list : 249 251
function_optional_list_optional : 239
function_version     : 247
group                : 57
group_optional       : 266 267
group_optional_list  : 267 269
group_optional_list_optional : 259
header               : 34
header_project_no    : 35
header_version       : 35
ident_ident_value    : 373 374
ident_ident_value_list : 372 374
ident_list           : 29 83 86 88 89 217 252 253 254 255 256 257 270 271 367 376 397 405
identification       : 274
if_data              : 48 132 152 177 392
in_measurement       : 243
indexorder           : 323 324 325 326 327 328
left_shift           : 186
loc_measurement      : 245
map_list             : 125
matrix_dim           : 135 178
max_refresh          : 126 170
measurement          : 51
measurement_optional : 180 181
measurement_optional_list : 181 183
measurement_optional_list_optional : 162
mod_common           : 47
mod_par              : 46
module               : 41 42
module_list          : 32 42
module_parameter     : 63 64
module_parameter_list : 64 66
no_axis_pts_x        : 281
no_axis_pts_y        : 282
no_axis_pts_z        : 283
no_rescale_x         : 284
no_rescale_y         : 285
no_rescale_z         : 286
number               : 121
number_list          : 23 27 220 369
number_number_string_value : 234 235
number_number_string_value_list : 233 235
number_string_value  : 228 229
number_string_value_list : 226 229
offset_x             : 300
offset_y             : 301
offset_z             : 302
optional_a2ml        : 40
optional_header      : 32
optional_module_parameter_list : 40
out_measurement      : 244
project              : 1
record_layout        : 58
record_layout_optional : 312 313
record_layout_optional_list : 313 315
record_layout_optional_list_optional : 272
ref_characteristic   : 242 262
ref_group            : 399
ref_measurement      : 263
ref_memory_segment   : 129 148 175
ref_unit             : 205 410
reserved             : 311
right_shift          : 187
rip_addr_w           : 296
rip_addr_x           : 293
rip_addr_y           : 294
rip_addr_z           : 295
shift_op_x           : 297
shift_op_y           : 298
shift_op_z           : 299
si_exponents         : 409
src_addr_optional    : 338 339 340
src_addr_x           : 290
src_addr_y           : 291
src_addr_z           : 292
string_list          : 31 97
sub_function         : 246
sub_group            : 265
unit                 : 62
unit_conversion      : 411
unit_optional        : 412 413
unit_optional_list   : 413 415
unit_optional_list_optional : 406
unit_type            : 406
user_rights          : 61
user_rights_optional : 401 402
user_rights_optional_list : 402 404
user_rights_optional_list_optional : 398
var_address          : 368
var_characteristic   : 366
var_characteristic_optional : 367
var_criterion        : 364
var_criterion_optional : 379 380
var_criterion_optional_list : 380 382
var_criterion_optional_list_optional : 376
var_forbidden_comb   : 365
var_measurement      : 377
var_naming           : 363
var_selection_characteristic : 378
var_separator        : 362
variant_coding       : 59
variant_coding_optional : 385 386
variant_coding_optional_list : 386 388
variant_coding_optional_list_optional : 361
version              : 21 22
version_asap2_a2ml   : 23
version_list         : 1 22
virtual              : 171
virtual_characteristic : 128

Parsing method: LALR

state 0

    (0) S' -> . a2l
    (1) a2l -> . version_list project
    (21) version_list -> . version
    (22) version_list -> . version version_list
    (23) version -> . version_asap2_a2ml number_list
    (24) version_asap2_a2ml -> . ASAP2_VERSION
    (25) version_asap2_a2ml -> . A2ML_VERSION

    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_asap2_a2ml             shift and go to state 1
    version                        shift and go to state 3
    version_list                   shift and go to state 4
    a2l                            shift and go to state 5

state 1

    (23) version -> version_asap2_a2ml . number_list
    (26) number_list -> . NUMERIC
    (27) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 7

state 2

    (24) version_asap2_a2ml -> ASAP2_VERSION .

    NUMERIC         reduce using rule 24 (version_asap2_a2ml -> ASAP2_VERSION .)


state 3

    (21) version_list -> version .
    (22) version_list -> version . version_list
    (21) version_list -> . version
    (22) version_list -> . version version_list
    (23) version -> . version_asap2_a2ml number_list
    (24) version_asap2_a2ml -> . ASAP2_VERSION
    (25) version_asap2_a2ml -> . A2ML_VERSION

    begin           reduce using rule 21 (version_list -> version .)
    ASAP2_VERSION   shift and go to state 2
    A2ML_VERSION    shift and go to state 6

    version_list                   shift and go to state 9
    version                        shift and go to state 3
    version_asap2_a2ml             shift and go to state 1

state 4

    (1) a2l -> version_list . project
    (32) project -> . begin PROJECT IDENT STRING optional_header module_list end PROJECT

    begin           shift and go to state 10

    project                        shift and go to state 11

state 5

    (0) S' -> a2l .



state 6

    (25) version_asap2_a2ml -> A2ML_VERSION .

    NUMERIC         reduce using rule 25 (version_asap2_a2ml -> A2ML_VERSION .)


state 7

    (23) version -> version_asap2_a2ml number_list .

    ASAP2_VERSION   reduce using rule 23 (version -> version_asap2_a2ml number_list .)
    A2ML_VERSION    reduce using rule 23 (version -> version_asap2_a2ml number_list .)
    begin           reduce using rule 23 (version -> version_asap2_a2ml number_list .)


state 8

    (26) number_list -> NUMERIC .
    (27) number_list -> NUMERIC . number_list
    (26) number_list -> . NUMERIC
    (27) number_list -> . NUMERIC number_list

    end             reduce using rule 26 (number_list -> NUMERIC .)
    DEFAULT_VALUE   reduce using rule 26 (number_list -> NUMERIC .)
    ASAP2_VERSION   reduce using rule 26 (number_list -> NUMERIC .)
    A2ML_VERSION    reduce using rule 26 (number_list -> NUMERIC .)
    begin           reduce using rule 26 (number_list -> NUMERIC .)
    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 12

state 9

    (22) version_list -> version version_list .

    begin           reduce using rule 22 (version_list -> version version_list .)


state 10

    (32) project -> begin . PROJECT IDENT STRING optional_header module_list end PROJECT

    PROJECT         shift and go to state 13


state 11

    (1) a2l -> version_list project .

    $end            reduce using rule 1 (a2l -> version_list project .)


state 12

    (27) number_list -> NUMERIC number_list .

    end             reduce using rule 27 (number_list -> NUMERIC number_list .)
    DEFAULT_VALUE   reduce using rule 27 (number_list -> NUMERIC number_list .)
    ASAP2_VERSION   reduce using rule 27 (number_list -> NUMERIC number_list .)
    A2ML_VERSION    reduce using rule 27 (number_list -> NUMERIC number_list .)
    begin           reduce using rule 27 (number_list -> NUMERIC number_list .)


state 13

    (32) project -> begin PROJECT . IDENT STRING optional_header module_list end PROJECT

    IDENT           shift and go to state 14


state 14

    (32) project -> begin PROJECT IDENT . STRING optional_header module_list end PROJECT

    STRING          shift and go to state 15


state 15

    (32) project -> begin PROJECT IDENT STRING . optional_header module_list end PROJECT
    (33) optional_header -> . empty
    (34) optional_header -> . header
    (418) empty -> .
    (35) header -> . begin HEADER STRING header_version header_project_no end HEADER

  ! shift/reduce conflict for begin resolved as shift
    begin           shift and go to state 16

  ! begin           [ reduce using rule 418 (empty -> .) ]

    optional_header                shift and go to state 17
    header                         shift and go to state 18
    empty                          shift and go to state 19

state 16

    (35) header -> begin . HEADER STRING header_version header_project_no end HEADER

    HEADER          shift and go to state 20


state 17

    (32) project -> begin PROJECT IDENT STRING optional_header . module_list end PROJECT
    (41) module_list -> . module
    (42) module_list -> . module module_list
    (40) module -> . begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    begin           shift and go to state 22

    module_list                    shift and go to state 21
    module                         shift and go to state 23

state 18

    (34) optional_header -> header .

    begin           reduce using rule 34 (optional_header -> header .)


state 19

    (33) optional_header -> empty .

    begin           reduce using rule 33 (optional_header -> empty .)


state 20

    (35) header -> begin HEADER . STRING header_version header_project_no end HEADER

    STRING          shift and go to state 24


state 21

    (32) project -> begin PROJECT IDENT STRING optional_header module_list . end PROJECT

    end             shift and go to state 25


state 22

    (40) module -> begin . MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    MODULE          shift and go to state 26


state 23

    (41) module_list -> module .
    (42) module_list -> module . module_list
    (41) module_list -> . module
    (42) module_list -> . module module_list
    (40) module -> . begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    end             reduce using rule 41 (module_list -> module .)
    begin           shift and go to state 22

    module_list                    shift and go to state 27
    module                         shift and go to state 23

state 24

    (35) header -> begin HEADER STRING . header_version header_project_no end HEADER
    (36) header_version -> . empty
    (37) header_version -> . VERSION STRING
    (418) empty -> .

    VERSION         shift and go to state 28
    PROJECT_NO      reduce using rule 418 (empty -> .)
    end             reduce using rule 418 (empty -> .)

    header_version                 shift and go to state 29
    empty                          shift and go to state 30

state 25

    (32) project -> begin PROJECT IDENT STRING optional_header module_list end . PROJECT

    PROJECT         shift and go to state 31


state 26

    (40) module -> begin MODULE . IDENT STRING optional_a2ml optional_module_parameter_list end MODULE

    IDENT           shift and go to state 32


state 27

    (42) module_list -> module module_list .

    end             reduce using rule 42 (module_list -> module module_list .)


state 28

    (37) header_version -> VERSION . STRING

    STRING          shift and go to state 33


state 29

    (35) header -> begin HEADER STRING header_version . header_project_no end HEADER
    (38) header_project_no -> . empty
    (39) header_project_no -> . PROJECT_NO IDENT
    (418) empty -> .

    PROJECT_NO      shift and go to state 36
    end             reduce using rule 418 (empty -> .)

    header_project_no              shift and go to state 34
    empty                          shift and go to state 35

state 30

    (36) header_version -> empty .

    PROJECT_NO      reduce using rule 36 (header_version -> empty .)
    end             reduce using rule 36 (header_version -> empty .)


state 31

    (32) project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT .

    $end            reduce using rule 32 (project -> begin PROJECT IDENT STRING optional_header module_list end PROJECT .)


state 32

    (40) module -> begin MODULE IDENT . STRING optional_a2ml optional_module_parameter_list end MODULE

    STRING          shift and go to state 37


state 33

    (37) header_version -> VERSION STRING .

    PROJECT_NO      reduce using rule 37 (header_version -> VERSION STRING .)
    end             reduce using rule 37 (header_version -> VERSION STRING .)


state 34

    (35) header -> begin HEADER STRING header_version header_project_no . end HEADER

    end             shift and go to state 38


state 35

    (38) header_project_no -> empty .

    end             reduce using rule 38 (header_project_no -> empty .)


state 36

    (39) header_project_no -> PROJECT_NO . IDENT

    IDENT           shift and go to state 39


state 37

    (40) module -> begin MODULE IDENT STRING . optional_a2ml optional_module_parameter_list end MODULE
    (44) optional_a2ml -> . empty
    (45) optional_a2ml -> . a2ml
    (418) empty -> .
    (43) a2ml -> . begin A2ML end A2ML

  ! shift/reduce conflict for begin resolved as shift
    end             reduce using rule 418 (empty -> .)
    begin           shift and go to state 40

  ! begin           [ reduce using rule 418 (empty -> .) ]

    optional_a2ml                  shift and go to state 42
    a2ml                           shift and go to state 41
    empty                          shift and go to state 43

state 38

    (35) header -> begin HEADER STRING header_version header_project_no end . HEADER

    HEADER          shift and go to state 44


state 39

    (39) header_project_no -> PROJECT_NO IDENT .

    end             reduce using rule 39 (header_project_no -> PROJECT_NO IDENT .)


state 40

    (43) a2ml -> begin . A2ML end A2ML

    A2ML            shift and go to state 45


state 41

    (45) optional_a2ml -> a2ml .

    begin           reduce using rule 45 (optional_a2ml -> a2ml .)
    end             reduce using rule 45 (optional_a2ml -> a2ml .)


state 42

    (40) module -> begin MODULE IDENT STRING optional_a2ml . optional_module_parameter_list end MODULE
    (65) optional_module_parameter_list -> . empty
    (66) optional_module_parameter_list -> . module_parameter_list
    (418) empty -> .
    (63) module_parameter_list -> . module_parameter
    (64) module_parameter_list -> . module_parameter module_parameter_list
    (46) module_parameter -> . mod_par
    (47) module_parameter -> . mod_common
    (48) module_parameter -> . if_data
    (49) module_parameter -> . characteristic
    (50) module_parameter -> . axis_pts
    (51) module_parameter -> . measurement
    (52) module_parameter -> . compu_method
    (53) module_parameter -> . compu_tab
    (54) module_parameter -> . compu_vtab
    (55) module_parameter -> . compu_vtab_range
    (56) module_parameter -> . function
    (57) module_parameter -> . group
    (58) module_parameter -> . record_layout
    (59) module_parameter -> . variant_coding
    (60) module_parameter -> . frame
    (61) module_parameter -> . user_rights
    (62) module_parameter -> . unit
    (67) mod_par -> . begin MOD_PAR end MOD_PAR
    (68) mod_common -> . begin MOD_COMMON end MOD_COMMON
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (70) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (141) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (162) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (195) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (220) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (226) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (233) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (239) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (259) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (272) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (361) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (390) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (398) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (406) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 418 (empty -> .)
    begin           shift and go to state 57

    mod_par                        shift and go to state 47
    record_layout                  shift and go to state 48
    frame                          shift and go to state 49
    compu_tab                      shift and go to state 51
    measurement                    shift and go to state 52
    variant_coding                 shift and go to state 53
    group                          shift and go to state 61
    unit                           shift and go to state 54
    empty                          shift and go to state 55
    function                       shift and go to state 56
    mod_common                     shift and go to state 50
    user_rights                    shift and go to state 46
    if_data                        shift and go to state 58
    module_parameter               shift and go to state 59
    axis_pts                       shift and go to state 60
    compu_vtab                     shift and go to state 62
    compu_method                   shift and go to state 63
    optional_module_parameter_list shift and go to state 64
    characteristic                 shift and go to state 65
    module_parameter_list          shift and go to state 66
    compu_vtab_range               shift and go to state 67

state 43

    (44) optional_a2ml -> empty .

    begin           reduce using rule 44 (optional_a2ml -> empty .)
    end             reduce using rule 44 (optional_a2ml -> empty .)


state 44

    (35) header -> begin HEADER STRING header_version header_project_no end HEADER .

    begin           reduce using rule 35 (header -> begin HEADER STRING header_version header_project_no end HEADER .)


state 45

    (43) a2ml -> begin A2ML . end A2ML

    end             shift and go to state 68


state 46

    (61) module_parameter -> user_rights .

    begin           reduce using rule 61 (module_parameter -> user_rights .)
    end             reduce using rule 61 (module_parameter -> user_rights .)


state 47

    (46) module_parameter -> mod_par .

    begin           reduce using rule 46 (module_parameter -> mod_par .)
    end             reduce using rule 46 (module_parameter -> mod_par .)


state 48

    (58) module_parameter -> record_layout .

    begin           reduce using rule 58 (module_parameter -> record_layout .)
    end             reduce using rule 58 (module_parameter -> record_layout .)


state 49

    (60) module_parameter -> frame .

    begin           reduce using rule 60 (module_parameter -> frame .)
    end             reduce using rule 60 (module_parameter -> frame .)


state 50

    (47) module_parameter -> mod_common .

    begin           reduce using rule 47 (module_parameter -> mod_common .)
    end             reduce using rule 47 (module_parameter -> mod_common .)


state 51

    (53) module_parameter -> compu_tab .

    begin           reduce using rule 53 (module_parameter -> compu_tab .)
    end             reduce using rule 53 (module_parameter -> compu_tab .)


state 52

    (51) module_parameter -> measurement .

    begin           reduce using rule 51 (module_parameter -> measurement .)
    end             reduce using rule 51 (module_parameter -> measurement .)


state 53

    (59) module_parameter -> variant_coding .

    begin           reduce using rule 59 (module_parameter -> variant_coding .)
    end             reduce using rule 59 (module_parameter -> variant_coding .)


state 54

    (62) module_parameter -> unit .

    begin           reduce using rule 62 (module_parameter -> unit .)
    end             reduce using rule 62 (module_parameter -> unit .)


state 55

    (65) optional_module_parameter_list -> empty .

    end             reduce using rule 65 (optional_module_parameter_list -> empty .)


state 56

    (56) module_parameter -> function .

    begin           reduce using rule 56 (module_parameter -> function .)
    end             reduce using rule 56 (module_parameter -> function .)


state 57

    (67) mod_par -> begin . MOD_PAR end MOD_PAR
    (68) mod_common -> begin . MOD_COMMON end MOD_COMMON
    (69) if_data -> begin . IF_DATA IDENT end IF_DATA
    (70) characteristic -> begin . CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (141) axis_pts -> begin . AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (162) measurement -> begin . MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (195) compu_method -> begin . COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (220) compu_tab -> begin . COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (226) compu_vtab -> begin . COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (233) compu_vtab_range -> begin . COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (239) function -> begin . FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (259) group -> begin . GROUP IDENT STRING group_optional_list_optional end GROUP
    (272) record_layout -> begin . RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (361) variant_coding -> begin . VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (390) frame -> begin . FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (398) user_rights -> begin . USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (406) unit -> begin . UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    MOD_PAR         shift and go to state 78
    MOD_COMMON      shift and go to state 81
    IF_DATA         shift and go to state 79
    CHARACTERISTIC  shift and go to state 82
    AXIS_PTS        shift and go to state 74
    MEASUREMENT     shift and go to state 75
    COMPU_METHOD    shift and go to state 72
    COMPU_TAB       shift and go to state 80
    COMPU_VTAB      shift and go to state 69
    COMPU_VTAB_RANGE shift and go to state 76
    FUNCTION        shift and go to state 77
    GROUP           shift and go to state 70
    RECORD_LAYOUT   shift and go to state 71
    VARIANT_CODING  shift and go to state 73
    FRAME           shift and go to state 85
    USER_RIGHTS     shift and go to state 84
    UNIT            shift and go to state 83


state 58

    (48) module_parameter -> if_data .

    begin           reduce using rule 48 (module_parameter -> if_data .)
    end             reduce using rule 48 (module_parameter -> if_data .)


state 59

    (63) module_parameter_list -> module_parameter .
    (64) module_parameter_list -> module_parameter . module_parameter_list
    (63) module_parameter_list -> . module_parameter
    (64) module_parameter_list -> . module_parameter module_parameter_list
    (46) module_parameter -> . mod_par
    (47) module_parameter -> . mod_common
    (48) module_parameter -> . if_data
    (49) module_parameter -> . characteristic
    (50) module_parameter -> . axis_pts
    (51) module_parameter -> . measurement
    (52) module_parameter -> . compu_method
    (53) module_parameter -> . compu_tab
    (54) module_parameter -> . compu_vtab
    (55) module_parameter -> . compu_vtab_range
    (56) module_parameter -> . function
    (57) module_parameter -> . group
    (58) module_parameter -> . record_layout
    (59) module_parameter -> . variant_coding
    (60) module_parameter -> . frame
    (61) module_parameter -> . user_rights
    (62) module_parameter -> . unit
    (67) mod_par -> . begin MOD_PAR end MOD_PAR
    (68) mod_common -> . begin MOD_COMMON end MOD_COMMON
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (70) characteristic -> . begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (141) axis_pts -> . begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS
    (162) measurement -> . begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (195) compu_method -> . begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (220) compu_tab -> . begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (226) compu_vtab -> . begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (233) compu_vtab_range -> . begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (239) function -> . begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION
    (259) group -> . begin GROUP IDENT STRING group_optional_list_optional end GROUP
    (272) record_layout -> . begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT
    (361) variant_coding -> . begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING
    (390) frame -> . begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME
    (398) user_rights -> . begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS
    (406) unit -> . begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    end             reduce using rule 63 (module_parameter_list -> module_parameter .)
    begin           shift and go to state 57

    mod_par                        shift and go to state 47
    record_layout                  shift and go to state 48
    frame                          shift and go to state 49
    compu_tab                      shift and go to state 51
    measurement                    shift and go to state 52
    unit                           shift and go to state 54
    group                          shift and go to state 61
    variant_coding                 shift and go to state 53
    function                       shift and go to state 56
    mod_common                     shift and go to state 50
    user_rights                    shift and go to state 46
    if_data                        shift and go to state 58
    module_parameter               shift and go to state 59
    axis_pts                       shift and go to state 60
    compu_vtab                     shift and go to state 62
    compu_method                   shift and go to state 63
    characteristic                 shift and go to state 65
    module_parameter_list          shift and go to state 86
    compu_vtab_range               shift and go to state 67

state 60

    (50) module_parameter -> axis_pts .

    begin           reduce using rule 50 (module_parameter -> axis_pts .)
    end             reduce using rule 50 (module_parameter -> axis_pts .)


state 61

    (57) module_parameter -> group .

    begin           reduce using rule 57 (module_parameter -> group .)
    end             reduce using rule 57 (module_parameter -> group .)


state 62

    (54) module_parameter -> compu_vtab .

    begin           reduce using rule 54 (module_parameter -> compu_vtab .)
    end             reduce using rule 54 (module_parameter -> compu_vtab .)


state 63

    (52) module_parameter -> compu_method .

    begin           reduce using rule 52 (module_parameter -> compu_method .)
    end             reduce using rule 52 (module_parameter -> compu_method .)


state 64

    (40) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list . end MODULE

    end             shift and go to state 87


state 65

    (49) module_parameter -> characteristic .

    begin           reduce using rule 49 (module_parameter -> characteristic .)
    end             reduce using rule 49 (module_parameter -> characteristic .)


state 66

    (66) optional_module_parameter_list -> module_parameter_list .

    end             reduce using rule 66 (optional_module_parameter_list -> module_parameter_list .)


state 67

    (55) module_parameter -> compu_vtab_range .

    begin           reduce using rule 55 (module_parameter -> compu_vtab_range .)
    end             reduce using rule 55 (module_parameter -> compu_vtab_range .)


state 68

    (43) a2ml -> begin A2ML end . A2ML

    A2ML            shift and go to state 88


state 69

    (226) compu_vtab -> begin COMPU_VTAB . IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    IDENT           shift and go to state 89


state 70

    (259) group -> begin GROUP . IDENT STRING group_optional_list_optional end GROUP

    IDENT           shift and go to state 90


state 71

    (272) record_layout -> begin RECORD_LAYOUT . IDENT record_layout_optional_list_optional end RECORD_LAYOUT

    IDENT           shift and go to state 91


state 72

    (195) compu_method -> begin COMPU_METHOD . IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    IDENT           shift and go to state 92


state 73

    (361) variant_coding -> begin VARIANT_CODING . variant_coding_optional_list_optional end VARIANT_CODING
    (387) variant_coding_optional_list_optional -> . empty
    (388) variant_coding_optional_list_optional -> . variant_coding_optional_list
    (418) empty -> .
    (385) variant_coding_optional_list -> . variant_coding_optional
    (386) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (362) variant_coding_optional -> . var_separator
    (363) variant_coding_optional -> . var_naming
    (364) variant_coding_optional -> . var_criterion
    (365) variant_coding_optional -> . var_forbidden_comb
    (366) variant_coding_optional -> . var_characteristic
    (370) var_separator -> . VAR_SEPARATOR STRING
    (371) var_naming -> . VAR_NAMING IDENT
    (376) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (372) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (367) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 418 (empty -> .)
    VAR_SEPARATOR   shift and go to state 103
    VAR_NAMING      shift and go to state 104
    begin           shift and go to state 102

    var_characteristic             shift and go to state 98
    var_naming                     shift and go to state 95
    variant_coding_optional_list_optional shift and go to state 99
    var_separator                  shift and go to state 96
    empty                          shift and go to state 101
    var_criterion                  shift and go to state 93
    var_forbidden_comb             shift and go to state 94
    variant_coding_optional        shift and go to state 100
    variant_coding_optional_list   shift and go to state 97

state 74

    (141) axis_pts -> begin AXIS_PTS . IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 105


state 75

    (162) measurement -> begin MEASUREMENT . IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 106


state 76

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE . IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    IDENT           shift and go to state 107


state 77

    (239) function -> begin FUNCTION . IDENT STRING function_optional_list_optional end FUNCTION

    IDENT           shift and go to state 108


state 78

    (67) mod_par -> begin MOD_PAR . end MOD_PAR

    end             shift and go to state 109


state 79

    (69) if_data -> begin IF_DATA . IDENT end IF_DATA

    IDENT           shift and go to state 110


state 80

    (220) compu_tab -> begin COMPU_TAB . IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    IDENT           shift and go to state 111


state 81

    (68) mod_common -> begin MOD_COMMON . end MOD_COMMON

    end             shift and go to state 112


state 82

    (70) characteristic -> begin CHARACTERISTIC . IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 113


state 83

    (406) unit -> begin UNIT . IDENT STRING STRING unit_type unit_optional_list_optional end UNIT

    IDENT           shift and go to state 114


state 84

    (398) user_rights -> begin USER_RIGHTS . IDENT user_rights_optional_list_optional end USER_RIGHTS

    IDENT           shift and go to state 115


state 85

    (390) frame -> begin FRAME . IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    IDENT           shift and go to state 116


state 86

    (64) module_parameter_list -> module_parameter module_parameter_list .

    end             reduce using rule 64 (module_parameter_list -> module_parameter module_parameter_list .)


state 87

    (40) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end . MODULE

    MODULE          shift and go to state 117


state 88

    (43) a2ml -> begin A2ML end A2ML .

    begin           reduce using rule 43 (a2ml -> begin A2ML end A2ML .)
    end             reduce using rule 43 (a2ml -> begin A2ML end A2ML .)


state 89

    (226) compu_vtab -> begin COMPU_VTAB IDENT . STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    STRING          shift and go to state 118


state 90

    (259) group -> begin GROUP IDENT . STRING group_optional_list_optional end GROUP

    STRING          shift and go to state 119


state 91

    (272) record_layout -> begin RECORD_LAYOUT IDENT . record_layout_optional_list_optional end RECORD_LAYOUT
    (314) record_layout_optional_list_optional -> . empty
    (315) record_layout_optional_list_optional -> . record_layout_optional_list
    (418) empty -> .
    (312) record_layout_optional_list -> . record_layout_optional
    (313) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (273) record_layout_optional -> . fnc_values
    (274) record_layout_optional -> . identification
    (275) record_layout_optional -> . axis_pts_x
    (276) record_layout_optional -> . axis_pts_y
    (277) record_layout_optional -> . axis_pts_z
    (278) record_layout_optional -> . axis_rescale_x
    (279) record_layout_optional -> . axis_rescale_y
    (280) record_layout_optional -> . axis_rescale_z
    (281) record_layout_optional -> . no_axis_pts_x
    (282) record_layout_optional -> . no_axis_pts_y
    (283) record_layout_optional -> . no_axis_pts_z
    (284) record_layout_optional -> . no_rescale_x
    (285) record_layout_optional -> . no_rescale_y
    (286) record_layout_optional -> . no_rescale_z
    (287) record_layout_optional -> . fix_no_axis_pts_x
    (288) record_layout_optional -> . fix_no_axis_pts_y
    (289) record_layout_optional -> . fix_no_axis_pts_z
    (290) record_layout_optional -> . src_addr_x
    (291) record_layout_optional -> . src_addr_y
    (292) record_layout_optional -> . src_addr_z
    (293) record_layout_optional -> . rip_addr_x
    (294) record_layout_optional -> . rip_addr_y
    (295) record_layout_optional -> . rip_addr_z
    (296) record_layout_optional -> . rip_addr_w
    (297) record_layout_optional -> . shift_op_x
    (298) record_layout_optional -> . shift_op_y
    (299) record_layout_optional -> . shift_op_z
    (300) record_layout_optional -> . offset_x
    (301) record_layout_optional -> . offset_y
    (302) record_layout_optional -> . offset_z
    (303) record_layout_optional -> . dist_op_x
    (304) record_layout_optional -> . dist_op_y
    (305) record_layout_optional -> . dist_op_z
    (306) record_layout_optional -> . alignment_byte
    (307) record_layout_optional -> . alignment_word
    (308) record_layout_optional -> . alignment_long
    (309) record_layout_optional -> . alignment_float32_ieee
    (310) record_layout_optional -> . alignment_float64_ieee
    (311) record_layout_optional -> . reserved
    (316) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (322) identification -> . IDENTIFICATION NUMERIC datatype
    (323) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (324) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (325) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (326) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (327) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (328) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (329) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (330) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (331) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (332) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (333) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (334) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (335) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (336) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (337) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (338) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (339) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (340) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (343) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (344) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (345) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (346) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (347) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (348) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (349) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (350) offset_x -> . OFFSET_X NUMERIC datatype
    (351) offset_y -> . OFFSET_Y NUMERIC datatype
    (352) offset_z -> . OFFSET_Z NUMERIC datatype
    (353) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (354) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (355) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (356) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (357) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (358) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (359) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (360) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (389) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 418 (empty -> .)
    FNC_VALUES      shift and go to state 195
    IDENTIFICATION  shift and go to state 177
    AXIS_PTS_X      shift and go to state 127
    AXIS_PTS_Y      shift and go to state 128
    AXIS_PTS_Z      shift and go to state 126
    AXIS_RESCALE_X  shift and go to state 184
    AXIS_RESCALE_Y  shift and go to state 185
    AXIS_RESCALE_Z  shift and go to state 183
    NO_AXIS_PTS_X   shift and go to state 121
    NO_AXIS_PTS_Y   shift and go to state 120
    NO_AXIS_PTS_Z   shift and go to state 122
    NO_RESCALE_X    shift and go to state 149
    NO_RESCALE_Y    shift and go to state 150
    NO_RESCALE_Z    shift and go to state 148
    FIX_NO_AXIS_PTS_X shift and go to state 143
    FIX_NO_AXIS_PTS_Y shift and go to state 142
    FIX_NO_AXIS_PTS_Z shift and go to state 144
    SRC_ADDR_X      shift and go to state 125
    SRC_ADDR_Y      shift and go to state 124
    SRC_ADDR_Z      shift and go to state 123
    RIP_ADDR_X      shift and go to state 189
    RIP_ADDR_Y      shift and go to state 190
    RIP_ADDR_Z      shift and go to state 188
    RIP_ADDR_W      shift and go to state 186
    SHIFT_OP_X      shift and go to state 134
    SHIFT_OP_Y      shift and go to state 133
    SHIFT_OP_Z      shift and go to state 136
    OFFSET_X        shift and go to state 180
    OFFSET_Y        shift and go to state 181
    OFFSET_Z        shift and go to state 182
    DIST_OP_X       shift and go to state 154
    DIST_OP_Y       shift and go to state 155
    DIST_OP_Z       shift and go to state 153
    ALIGNMENT_BYTE  shift and go to state 178
    ALIGNMENT_WORD  shift and go to state 176
    ALIGNMENT_LONG  shift and go to state 129
    ALIGNMENT_FLOAT32_IEEE shift and go to state 157
    ALIGNMENT_FLOAT64_IEEE shift and go to state 140
    RESERVED        shift and go to state 194

    reserved                       shift and go to state 179
    record_layout_optional         shift and go to state 161
    record_layout_optional_list    shift and go to state 162
    src_addr_z                     shift and go to state 196
    src_addr_y                     shift and go to state 145
    src_addr_x                     shift and go to state 146
    record_layout_optional_list_optional shift and go to state 163
    axis_rescale_z                 shift and go to state 130
    shift_op_z                     shift and go to state 199
    identification                 shift and go to state 151
    offset_y                       shift and go to state 192
    offset_z                       shift and go to state 193
    offset_x                       shift and go to state 191
    axis_rescale_y                 shift and go to state 132
    empty                          shift and go to state 164
    alignment_long                 shift and go to state 200
    alignment_float64_ieee         shift and go to state 147
    alignment_byte                 shift and go to state 187
    alignment_word                 shift and go to state 152
    shift_op_y                     shift and go to state 197
    no_axis_pts_y                  shift and go to state 165
    no_axis_pts_x                  shift and go to state 166
    axis_rescale_x                 shift and go to state 131
    no_axis_pts_z                  shift and go to state 167
    rip_addr_w                     shift and go to state 168
    fnc_values                     shift and go to state 169
    axis_pts_z                     shift and go to state 170
    alignment_float32_ieee         shift and go to state 201
    axis_pts_x                     shift and go to state 171
    axis_pts_y                     shift and go to state 172
    rip_addr_z                     shift and go to state 173
    rip_addr_x                     shift and go to state 174
    rip_addr_y                     shift and go to state 175
    no_rescale_z                   shift and go to state 141
    shift_op_x                     shift and go to state 198
    no_rescale_x                   shift and go to state 135
    no_rescale_y                   shift and go to state 156
    dist_op_z                      shift and go to state 158
    dist_op_x                      shift and go to state 159
    dist_op_y                      shift and go to state 160
    fix_no_axis_pts_y              shift and go to state 137
    fix_no_axis_pts_x              shift and go to state 138
    fix_no_axis_pts_z              shift and go to state 139

state 92

    (195) compu_method -> begin COMPU_METHOD IDENT . STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 202


state 93

    (364) variant_coding_optional -> var_criterion .

    VAR_SEPARATOR   reduce using rule 364 (variant_coding_optional -> var_criterion .)
    VAR_NAMING      reduce using rule 364 (variant_coding_optional -> var_criterion .)
    begin           reduce using rule 364 (variant_coding_optional -> var_criterion .)
    end             reduce using rule 364 (variant_coding_optional -> var_criterion .)


state 94

    (365) variant_coding_optional -> var_forbidden_comb .

    VAR_SEPARATOR   reduce using rule 365 (variant_coding_optional -> var_forbidden_comb .)
    VAR_NAMING      reduce using rule 365 (variant_coding_optional -> var_forbidden_comb .)
    begin           reduce using rule 365 (variant_coding_optional -> var_forbidden_comb .)
    end             reduce using rule 365 (variant_coding_optional -> var_forbidden_comb .)


state 95

    (363) variant_coding_optional -> var_naming .

    VAR_SEPARATOR   reduce using rule 363 (variant_coding_optional -> var_naming .)
    VAR_NAMING      reduce using rule 363 (variant_coding_optional -> var_naming .)
    begin           reduce using rule 363 (variant_coding_optional -> var_naming .)
    end             reduce using rule 363 (variant_coding_optional -> var_naming .)


state 96

    (362) variant_coding_optional -> var_separator .

    VAR_SEPARATOR   reduce using rule 362 (variant_coding_optional -> var_separator .)
    VAR_NAMING      reduce using rule 362 (variant_coding_optional -> var_separator .)
    begin           reduce using rule 362 (variant_coding_optional -> var_separator .)
    end             reduce using rule 362 (variant_coding_optional -> var_separator .)


state 97

    (388) variant_coding_optional_list_optional -> variant_coding_optional_list .

    end             reduce using rule 388 (variant_coding_optional_list_optional -> variant_coding_optional_list .)


state 98

    (366) variant_coding_optional -> var_characteristic .

    VAR_SEPARATOR   reduce using rule 366 (variant_coding_optional -> var_characteristic .)
    VAR_NAMING      reduce using rule 366 (variant_coding_optional -> var_characteristic .)
    begin           reduce using rule 366 (variant_coding_optional -> var_characteristic .)
    end             reduce using rule 366 (variant_coding_optional -> var_characteristic .)


state 99

    (361) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional . end VARIANT_CODING

    end             shift and go to state 203


state 100

    (385) variant_coding_optional_list -> variant_coding_optional .
    (386) variant_coding_optional_list -> variant_coding_optional . variant_coding_optional_list
    (385) variant_coding_optional_list -> . variant_coding_optional
    (386) variant_coding_optional_list -> . variant_coding_optional variant_coding_optional_list
    (362) variant_coding_optional -> . var_separator
    (363) variant_coding_optional -> . var_naming
    (364) variant_coding_optional -> . var_criterion
    (365) variant_coding_optional -> . var_forbidden_comb
    (366) variant_coding_optional -> . var_characteristic
    (370) var_separator -> . VAR_SEPARATOR STRING
    (371) var_naming -> . VAR_NAMING IDENT
    (376) var_criterion -> . begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (372) var_forbidden_comb -> . begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (367) var_characteristic -> . begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    end             reduce using rule 385 (variant_coding_optional_list -> variant_coding_optional .)
    VAR_SEPARATOR   shift and go to state 103
    VAR_NAMING      shift and go to state 104
    begin           shift and go to state 102

    var_characteristic             shift and go to state 98
    var_forbidden_comb             shift and go to state 94
    var_naming                     shift and go to state 95
    var_separator                  shift and go to state 96
    var_criterion                  shift and go to state 93
    variant_coding_optional        shift and go to state 100
    variant_coding_optional_list   shift and go to state 204

state 101

    (387) variant_coding_optional_list_optional -> empty .

    end             reduce using rule 387 (variant_coding_optional_list_optional -> empty .)


state 102

    (376) var_criterion -> begin . VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (372) var_forbidden_comb -> begin . VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB
    (367) var_characteristic -> begin . VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    VAR_CRITERION   shift and go to state 207
    VAR_FORBIDDEN_COMB shift and go to state 206
    VAR_CHARACTERISTIC shift and go to state 205


state 103

    (370) var_separator -> VAR_SEPARATOR . STRING

    STRING          shift and go to state 208


state 104

    (371) var_naming -> VAR_NAMING . IDENT

    IDENT           shift and go to state 209


state 105

    (141) axis_pts -> begin AXIS_PTS IDENT . STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    STRING          shift and go to state 210


state 106

    (162) measurement -> begin MEASUREMENT IDENT . STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    STRING          shift and go to state 211


state 107

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT . STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    STRING          shift and go to state 212


state 108

    (239) function -> begin FUNCTION IDENT . STRING function_optional_list_optional end FUNCTION

    STRING          shift and go to state 213


state 109

    (67) mod_par -> begin MOD_PAR end . MOD_PAR

    MOD_PAR         shift and go to state 214


state 110

    (69) if_data -> begin IF_DATA IDENT . end IF_DATA

    end             shift and go to state 215


state 111

    (220) compu_tab -> begin COMPU_TAB IDENT . STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB

    STRING          shift and go to state 216


state 112

    (68) mod_common -> begin MOD_COMMON end . MOD_COMMON

    MOD_COMMON      shift and go to state 217


state 113

    (70) characteristic -> begin CHARACTERISTIC IDENT . STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    STRING          shift and go to state 218


state 114

    (406) unit -> begin UNIT IDENT . STRING STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 219


state 115

    (398) user_rights -> begin USER_RIGHTS IDENT . user_rights_optional_list_optional end USER_RIGHTS
    (403) user_rights_optional_list_optional -> . empty
    (404) user_rights_optional_list_optional -> . user_rights_optional_list
    (418) empty -> .
    (401) user_rights_optional_list -> . user_rights_optional
    (402) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (399) user_rights_optional -> . ref_group
    (400) user_rights_optional -> . READ_ONLY
    (405) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 418 (empty -> .)
    READ_ONLY       shift and go to state 220
    begin           shift and go to state 221

    user_rights_optional_list_optional shift and go to state 223
    user_rights_optional_list      shift and go to state 222
    user_rights_optional           shift and go to state 224
    ref_group                      shift and go to state 225
    empty                          shift and go to state 226

state 116

    (390) frame -> begin FRAME IDENT . STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME

    STRING          shift and go to state 227


state 117

    (40) module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .

    begin           reduce using rule 40 (module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .)
    end             reduce using rule 40 (module -> begin MODULE IDENT STRING optional_a2ml optional_module_parameter_list end MODULE .)


state 118

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING . compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB
    (227) compu_vtab_conversion_type -> . TAB_VERB

    TAB_VERB        shift and go to state 229

    compu_vtab_conversion_type     shift and go to state 228

state 119

    (259) group -> begin GROUP IDENT STRING . group_optional_list_optional end GROUP
    (268) group_optional_list_optional -> . empty
    (269) group_optional_list_optional -> . group_optional_list
    (418) empty -> .
    (266) group_optional_list -> . group_optional
    (267) group_optional_list -> . group_optional group_optional_list
    (260) group_optional -> . annotation
    (261) group_optional -> . ROOT
    (262) group_optional -> . ref_characteristic
    (263) group_optional -> . ref_measurement
    (264) group_optional -> . function_list
    (265) group_optional -> . sub_group
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (253) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (270) ref_measurement -> . begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (271) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 418 (empty -> .)
    ROOT            shift and go to state 233
    begin           shift and go to state 235

    sub_group                      shift and go to state 236
    function_list                  shift and go to state 239
    group_optional                 shift and go to state 238
    group_optional_list_optional   shift and go to state 230
    ref_measurement                shift and go to state 231
    ref_characteristic             shift and go to state 240
    group_optional_list            shift and go to state 237
    annotation                     shift and go to state 232
    empty                          shift and go to state 234

state 120

    (330) no_axis_pts_y -> NO_AXIS_PTS_Y . NUMERIC datatype

    NUMERIC         shift and go to state 241


state 121

    (329) no_axis_pts_x -> NO_AXIS_PTS_X . NUMERIC datatype

    NUMERIC         shift and go to state 242


state 122

    (331) no_axis_pts_z -> NO_AXIS_PTS_Z . NUMERIC datatype

    NUMERIC         shift and go to state 243


state 123

    (340) src_addr_z -> SRC_ADDR_Z . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 244


state 124

    (339) src_addr_y -> SRC_ADDR_Y . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 245


state 125

    (338) src_addr_x -> SRC_ADDR_X . NUMERIC src_addr_optional

    NUMERIC         shift and go to state 246


state 126

    (325) axis_pts_z -> AXIS_PTS_Z . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 247


state 127

    (323) axis_pts_x -> AXIS_PTS_X . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 248


state 128

    (324) axis_pts_y -> AXIS_PTS_Y . NUMERIC datatype indexorder addrtype

    NUMERIC         shift and go to state 249


state 129

    (358) alignment_long -> ALIGNMENT_LONG . NUMERIC

    NUMERIC         shift and go to state 250


state 130

    (280) record_layout_optional -> axis_rescale_z .

    FNC_VALUES      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    IDENTIFICATION  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_X      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Y      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_PTS_Z      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_X    reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Y    reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    NO_RESCALE_Z    reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_X      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Y      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SRC_ADDR_Z      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_X      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Y      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_Z      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    RIP_ADDR_W      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_X      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Y      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    SHIFT_OP_Z      reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    OFFSET_X        reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Y        reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    OFFSET_Z        reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_X       reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Y       reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    DIST_OP_Z       reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    RESERVED        reduce using rule 280 (record_layout_optional -> axis_rescale_z .)
    end             reduce using rule 280 (record_layout_optional -> axis_rescale_z .)


state 131

    (278) record_layout_optional -> axis_rescale_x .

    FNC_VALUES      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    IDENTIFICATION  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_X      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Y      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_PTS_Z      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_X    reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Y    reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    NO_RESCALE_Z    reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_X      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Y      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SRC_ADDR_Z      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_X      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Y      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_Z      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    RIP_ADDR_W      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_X      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Y      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    SHIFT_OP_Z      reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    OFFSET_X        reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Y        reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    OFFSET_Z        reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_X       reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Y       reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    DIST_OP_Z       reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    RESERVED        reduce using rule 278 (record_layout_optional -> axis_rescale_x .)
    end             reduce using rule 278 (record_layout_optional -> axis_rescale_x .)


state 132

    (279) record_layout_optional -> axis_rescale_y .

    FNC_VALUES      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    IDENTIFICATION  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_X      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Y      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_PTS_Z      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_X    reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Y    reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    NO_RESCALE_Z    reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_X      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Y      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SRC_ADDR_Z      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_X      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Y      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_Z      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    RIP_ADDR_W      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_X      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Y      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    SHIFT_OP_Z      reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    OFFSET_X        reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Y        reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    OFFSET_Z        reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_X       reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Y       reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    DIST_OP_Z       reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    RESERVED        reduce using rule 279 (record_layout_optional -> axis_rescale_y .)
    end             reduce using rule 279 (record_layout_optional -> axis_rescale_y .)


state 133

    (348) shift_op_y -> SHIFT_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 251


state 134

    (347) shift_op_x -> SHIFT_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 252


state 135

    (284) record_layout_optional -> no_rescale_x .

    FNC_VALUES      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    IDENTIFICATION  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_X      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Y      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_PTS_Z      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_X  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Y  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    AXIS_RESCALE_Z  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_X   reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Y   reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_AXIS_PTS_Z   reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_X    reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Y    reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    NO_RESCALE_Z    reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_X      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Y      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SRC_ADDR_Z      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_X      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Y      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_Z      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    RIP_ADDR_W      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_X      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Y      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    SHIFT_OP_Z      reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    OFFSET_X        reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    OFFSET_Y        reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    OFFSET_Z        reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    DIST_OP_X       reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Y       reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    DIST_OP_Z       reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_BYTE  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_WORD  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_LONG  reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    RESERVED        reduce using rule 284 (record_layout_optional -> no_rescale_x .)
    end             reduce using rule 284 (record_layout_optional -> no_rescale_x .)


state 136

    (349) shift_op_z -> SHIFT_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 253


state 137

    (288) record_layout_optional -> fix_no_axis_pts_y .

    FNC_VALUES      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_X        reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Y        reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    OFFSET_Z        reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_X       reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    RESERVED        reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)
    end             reduce using rule 288 (record_layout_optional -> fix_no_axis_pts_y .)


state 138

    (287) record_layout_optional -> fix_no_axis_pts_x .

    FNC_VALUES      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_X        reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Y        reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    OFFSET_Z        reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_X       reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    RESERVED        reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)
    end             reduce using rule 287 (record_layout_optional -> fix_no_axis_pts_x .)


state 139

    (289) record_layout_optional -> fix_no_axis_pts_z .

    FNC_VALUES      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_X        reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Y        reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    OFFSET_Z        reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_X       reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    RESERVED        reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)
    end             reduce using rule 289 (record_layout_optional -> fix_no_axis_pts_z .)


state 140

    (360) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE . NUMERIC

    NUMERIC         shift and go to state 254


state 141

    (286) record_layout_optional -> no_rescale_z .

    FNC_VALUES      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    IDENTIFICATION  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_X      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Y      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_PTS_Z      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_X  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Y  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    AXIS_RESCALE_Z  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_X   reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Y   reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_AXIS_PTS_Z   reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_X    reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Y    reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    NO_RESCALE_Z    reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_X      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Y      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SRC_ADDR_Z      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_X      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Y      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_Z      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    RIP_ADDR_W      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_X      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Y      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    SHIFT_OP_Z      reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    OFFSET_X        reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    OFFSET_Y        reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    OFFSET_Z        reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    DIST_OP_X       reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Y       reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    DIST_OP_Z       reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_BYTE  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_WORD  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_LONG  reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    RESERVED        reduce using rule 286 (record_layout_optional -> no_rescale_z .)
    end             reduce using rule 286 (record_layout_optional -> no_rescale_z .)


state 142

    (336) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y . NUMERIC

    NUMERIC         shift and go to state 255


state 143

    (335) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X . NUMERIC

    NUMERIC         shift and go to state 256


state 144

    (337) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z . NUMERIC

    NUMERIC         shift and go to state 257


state 145

    (291) record_layout_optional -> src_addr_y .

    FNC_VALUES      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    IDENTIFICATION  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_X      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Y      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_PTS_Z      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_X  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_X    reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Y    reduce using rule 291 (record_layout_optional -> src_addr_y .)
    NO_RESCALE_Z    reduce using rule 291 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 291 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 291 (record_layout_optional -> src_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_X      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Y      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SRC_ADDR_Z      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_X      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Y      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_Z      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    RIP_ADDR_W      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_X      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Y      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    SHIFT_OP_Z      reduce using rule 291 (record_layout_optional -> src_addr_y .)
    OFFSET_X        reduce using rule 291 (record_layout_optional -> src_addr_y .)
    OFFSET_Y        reduce using rule 291 (record_layout_optional -> src_addr_y .)
    OFFSET_Z        reduce using rule 291 (record_layout_optional -> src_addr_y .)
    DIST_OP_X       reduce using rule 291 (record_layout_optional -> src_addr_y .)
    DIST_OP_Y       reduce using rule 291 (record_layout_optional -> src_addr_y .)
    DIST_OP_Z       reduce using rule 291 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_WORD  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_LONG  reduce using rule 291 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 291 (record_layout_optional -> src_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 291 (record_layout_optional -> src_addr_y .)
    RESERVED        reduce using rule 291 (record_layout_optional -> src_addr_y .)
    end             reduce using rule 291 (record_layout_optional -> src_addr_y .)


state 146

    (290) record_layout_optional -> src_addr_x .

    FNC_VALUES      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    IDENTIFICATION  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_X      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Y      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_PTS_Z      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_X  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_X    reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Y    reduce using rule 290 (record_layout_optional -> src_addr_x .)
    NO_RESCALE_Z    reduce using rule 290 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 290 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 290 (record_layout_optional -> src_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_X      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Y      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SRC_ADDR_Z      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_X      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Y      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_Z      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    RIP_ADDR_W      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_X      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Y      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    SHIFT_OP_Z      reduce using rule 290 (record_layout_optional -> src_addr_x .)
    OFFSET_X        reduce using rule 290 (record_layout_optional -> src_addr_x .)
    OFFSET_Y        reduce using rule 290 (record_layout_optional -> src_addr_x .)
    OFFSET_Z        reduce using rule 290 (record_layout_optional -> src_addr_x .)
    DIST_OP_X       reduce using rule 290 (record_layout_optional -> src_addr_x .)
    DIST_OP_Y       reduce using rule 290 (record_layout_optional -> src_addr_x .)
    DIST_OP_Z       reduce using rule 290 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_WORD  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_LONG  reduce using rule 290 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 290 (record_layout_optional -> src_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 290 (record_layout_optional -> src_addr_x .)
    RESERVED        reduce using rule 290 (record_layout_optional -> src_addr_x .)
    end             reduce using rule 290 (record_layout_optional -> src_addr_x .)


state 147

    (310) record_layout_optional -> alignment_float64_ieee .

    FNC_VALUES      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    IDENTIFICATION  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_X      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Y      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_PTS_Z      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_X  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Y  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    AXIS_RESCALE_Z  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_X   reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_X    reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Y    reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    NO_RESCALE_Z    reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_X      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Y      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SRC_ADDR_Z      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_X      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Y      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_Z      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    RIP_ADDR_W      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_X      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Y      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    SHIFT_OP_Z      reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_X        reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Y        reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    OFFSET_Z        reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_X       reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Y       reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    DIST_OP_Z       reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_BYTE  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_WORD  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_LONG  reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    RESERVED        reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)
    end             reduce using rule 310 (record_layout_optional -> alignment_float64_ieee .)


state 148

    (334) no_rescale_z -> NO_RESCALE_Z . NUMERIC datatype

    NUMERIC         shift and go to state 258


state 149

    (332) no_rescale_x -> NO_RESCALE_X . NUMERIC datatype

    NUMERIC         shift and go to state 259


state 150

    (333) no_rescale_y -> NO_RESCALE_Y . NUMERIC datatype

    NUMERIC         shift and go to state 260


state 151

    (274) record_layout_optional -> identification .

    FNC_VALUES      reduce using rule 274 (record_layout_optional -> identification .)
    IDENTIFICATION  reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_PTS_X      reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_PTS_Y      reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_PTS_Z      reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_RESCALE_X  reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_RESCALE_Y  reduce using rule 274 (record_layout_optional -> identification .)
    AXIS_RESCALE_Z  reduce using rule 274 (record_layout_optional -> identification .)
    NO_AXIS_PTS_X   reduce using rule 274 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Y   reduce using rule 274 (record_layout_optional -> identification .)
    NO_AXIS_PTS_Z   reduce using rule 274 (record_layout_optional -> identification .)
    NO_RESCALE_X    reduce using rule 274 (record_layout_optional -> identification .)
    NO_RESCALE_Y    reduce using rule 274 (record_layout_optional -> identification .)
    NO_RESCALE_Z    reduce using rule 274 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_X reduce using rule 274 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Y reduce using rule 274 (record_layout_optional -> identification .)
    FIX_NO_AXIS_PTS_Z reduce using rule 274 (record_layout_optional -> identification .)
    SRC_ADDR_X      reduce using rule 274 (record_layout_optional -> identification .)
    SRC_ADDR_Y      reduce using rule 274 (record_layout_optional -> identification .)
    SRC_ADDR_Z      reduce using rule 274 (record_layout_optional -> identification .)
    RIP_ADDR_X      reduce using rule 274 (record_layout_optional -> identification .)
    RIP_ADDR_Y      reduce using rule 274 (record_layout_optional -> identification .)
    RIP_ADDR_Z      reduce using rule 274 (record_layout_optional -> identification .)
    RIP_ADDR_W      reduce using rule 274 (record_layout_optional -> identification .)
    SHIFT_OP_X      reduce using rule 274 (record_layout_optional -> identification .)
    SHIFT_OP_Y      reduce using rule 274 (record_layout_optional -> identification .)
    SHIFT_OP_Z      reduce using rule 274 (record_layout_optional -> identification .)
    OFFSET_X        reduce using rule 274 (record_layout_optional -> identification .)
    OFFSET_Y        reduce using rule 274 (record_layout_optional -> identification .)
    OFFSET_Z        reduce using rule 274 (record_layout_optional -> identification .)
    DIST_OP_X       reduce using rule 274 (record_layout_optional -> identification .)
    DIST_OP_Y       reduce using rule 274 (record_layout_optional -> identification .)
    DIST_OP_Z       reduce using rule 274 (record_layout_optional -> identification .)
    ALIGNMENT_BYTE  reduce using rule 274 (record_layout_optional -> identification .)
    ALIGNMENT_WORD  reduce using rule 274 (record_layout_optional -> identification .)
    ALIGNMENT_LONG  reduce using rule 274 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 274 (record_layout_optional -> identification .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 274 (record_layout_optional -> identification .)
    RESERVED        reduce using rule 274 (record_layout_optional -> identification .)
    end             reduce using rule 274 (record_layout_optional -> identification .)


state 152

    (307) record_layout_optional -> alignment_word .

    FNC_VALUES      reduce using rule 307 (record_layout_optional -> alignment_word .)
    IDENTIFICATION  reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_PTS_X      reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Y      reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_PTS_Z      reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_X  reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Y  reduce using rule 307 (record_layout_optional -> alignment_word .)
    AXIS_RESCALE_Z  reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_X   reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Y   reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_AXIS_PTS_Z   reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_RESCALE_X    reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Y    reduce using rule 307 (record_layout_optional -> alignment_word .)
    NO_RESCALE_Z    reduce using rule 307 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_X reduce using rule 307 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Y reduce using rule 307 (record_layout_optional -> alignment_word .)
    FIX_NO_AXIS_PTS_Z reduce using rule 307 (record_layout_optional -> alignment_word .)
    SRC_ADDR_X      reduce using rule 307 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Y      reduce using rule 307 (record_layout_optional -> alignment_word .)
    SRC_ADDR_Z      reduce using rule 307 (record_layout_optional -> alignment_word .)
    RIP_ADDR_X      reduce using rule 307 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Y      reduce using rule 307 (record_layout_optional -> alignment_word .)
    RIP_ADDR_Z      reduce using rule 307 (record_layout_optional -> alignment_word .)
    RIP_ADDR_W      reduce using rule 307 (record_layout_optional -> alignment_word .)
    SHIFT_OP_X      reduce using rule 307 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Y      reduce using rule 307 (record_layout_optional -> alignment_word .)
    SHIFT_OP_Z      reduce using rule 307 (record_layout_optional -> alignment_word .)
    OFFSET_X        reduce using rule 307 (record_layout_optional -> alignment_word .)
    OFFSET_Y        reduce using rule 307 (record_layout_optional -> alignment_word .)
    OFFSET_Z        reduce using rule 307 (record_layout_optional -> alignment_word .)
    DIST_OP_X       reduce using rule 307 (record_layout_optional -> alignment_word .)
    DIST_OP_Y       reduce using rule 307 (record_layout_optional -> alignment_word .)
    DIST_OP_Z       reduce using rule 307 (record_layout_optional -> alignment_word .)
    ALIGNMENT_BYTE  reduce using rule 307 (record_layout_optional -> alignment_word .)
    ALIGNMENT_WORD  reduce using rule 307 (record_layout_optional -> alignment_word .)
    ALIGNMENT_LONG  reduce using rule 307 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 307 (record_layout_optional -> alignment_word .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 307 (record_layout_optional -> alignment_word .)
    RESERVED        reduce using rule 307 (record_layout_optional -> alignment_word .)
    end             reduce using rule 307 (record_layout_optional -> alignment_word .)


state 153

    (355) dist_op_z -> DIST_OP_Z . NUMERIC datatype

    NUMERIC         shift and go to state 261


state 154

    (353) dist_op_x -> DIST_OP_X . NUMERIC datatype

    NUMERIC         shift and go to state 262


state 155

    (354) dist_op_y -> DIST_OP_Y . NUMERIC datatype

    NUMERIC         shift and go to state 263


state 156

    (285) record_layout_optional -> no_rescale_y .

    FNC_VALUES      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    IDENTIFICATION  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_X      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Y      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_PTS_Z      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_X  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Y  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    AXIS_RESCALE_Z  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_X   reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Y   reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_AXIS_PTS_Z   reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_X    reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Y    reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    NO_RESCALE_Z    reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_X      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Y      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SRC_ADDR_Z      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_X      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Y      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_Z      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    RIP_ADDR_W      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_X      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Y      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    SHIFT_OP_Z      reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    OFFSET_X        reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    OFFSET_Y        reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    OFFSET_Z        reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    DIST_OP_X       reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Y       reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    DIST_OP_Z       reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_BYTE  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_WORD  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_LONG  reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    RESERVED        reduce using rule 285 (record_layout_optional -> no_rescale_y .)
    end             reduce using rule 285 (record_layout_optional -> no_rescale_y .)


state 157

    (359) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE . NUMERIC

    NUMERIC         shift and go to state 264


state 158

    (305) record_layout_optional -> dist_op_z .

    FNC_VALUES      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    IDENTIFICATION  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_X      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Y      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_PTS_Z      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_X  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Y  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    AXIS_RESCALE_Z  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_X   reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_X    reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Y    reduce using rule 305 (record_layout_optional -> dist_op_z .)
    NO_RESCALE_Z    reduce using rule 305 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 305 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 305 (record_layout_optional -> dist_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_X      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Y      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SRC_ADDR_Z      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_X      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Y      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_Z      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    RIP_ADDR_W      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_X      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Y      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    SHIFT_OP_Z      reduce using rule 305 (record_layout_optional -> dist_op_z .)
    OFFSET_X        reduce using rule 305 (record_layout_optional -> dist_op_z .)
    OFFSET_Y        reduce using rule 305 (record_layout_optional -> dist_op_z .)
    OFFSET_Z        reduce using rule 305 (record_layout_optional -> dist_op_z .)
    DIST_OP_X       reduce using rule 305 (record_layout_optional -> dist_op_z .)
    DIST_OP_Y       reduce using rule 305 (record_layout_optional -> dist_op_z .)
    DIST_OP_Z       reduce using rule 305 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_BYTE  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_WORD  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_LONG  reduce using rule 305 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 305 (record_layout_optional -> dist_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 305 (record_layout_optional -> dist_op_z .)
    RESERVED        reduce using rule 305 (record_layout_optional -> dist_op_z .)
    end             reduce using rule 305 (record_layout_optional -> dist_op_z .)


state 159

    (303) record_layout_optional -> dist_op_x .

    FNC_VALUES      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    IDENTIFICATION  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_X      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Y      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_PTS_Z      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_X  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Y  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    AXIS_RESCALE_Z  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_X   reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_X    reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Y    reduce using rule 303 (record_layout_optional -> dist_op_x .)
    NO_RESCALE_Z    reduce using rule 303 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 303 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 303 (record_layout_optional -> dist_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_X      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Y      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SRC_ADDR_Z      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_X      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Y      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_Z      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    RIP_ADDR_W      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_X      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Y      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    SHIFT_OP_Z      reduce using rule 303 (record_layout_optional -> dist_op_x .)
    OFFSET_X        reduce using rule 303 (record_layout_optional -> dist_op_x .)
    OFFSET_Y        reduce using rule 303 (record_layout_optional -> dist_op_x .)
    OFFSET_Z        reduce using rule 303 (record_layout_optional -> dist_op_x .)
    DIST_OP_X       reduce using rule 303 (record_layout_optional -> dist_op_x .)
    DIST_OP_Y       reduce using rule 303 (record_layout_optional -> dist_op_x .)
    DIST_OP_Z       reduce using rule 303 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_BYTE  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_WORD  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_LONG  reduce using rule 303 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 303 (record_layout_optional -> dist_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 303 (record_layout_optional -> dist_op_x .)
    RESERVED        reduce using rule 303 (record_layout_optional -> dist_op_x .)
    end             reduce using rule 303 (record_layout_optional -> dist_op_x .)


state 160

    (304) record_layout_optional -> dist_op_y .

    FNC_VALUES      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    IDENTIFICATION  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_X      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Y      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_PTS_Z      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_X  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Y  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    AXIS_RESCALE_Z  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_X   reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_X    reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Y    reduce using rule 304 (record_layout_optional -> dist_op_y .)
    NO_RESCALE_Z    reduce using rule 304 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 304 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 304 (record_layout_optional -> dist_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_X      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Y      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SRC_ADDR_Z      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_X      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Y      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_Z      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    RIP_ADDR_W      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_X      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Y      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    SHIFT_OP_Z      reduce using rule 304 (record_layout_optional -> dist_op_y .)
    OFFSET_X        reduce using rule 304 (record_layout_optional -> dist_op_y .)
    OFFSET_Y        reduce using rule 304 (record_layout_optional -> dist_op_y .)
    OFFSET_Z        reduce using rule 304 (record_layout_optional -> dist_op_y .)
    DIST_OP_X       reduce using rule 304 (record_layout_optional -> dist_op_y .)
    DIST_OP_Y       reduce using rule 304 (record_layout_optional -> dist_op_y .)
    DIST_OP_Z       reduce using rule 304 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_BYTE  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_WORD  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_LONG  reduce using rule 304 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 304 (record_layout_optional -> dist_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 304 (record_layout_optional -> dist_op_y .)
    RESERVED        reduce using rule 304 (record_layout_optional -> dist_op_y .)
    end             reduce using rule 304 (record_layout_optional -> dist_op_y .)


state 161

    (312) record_layout_optional_list -> record_layout_optional .
    (313) record_layout_optional_list -> record_layout_optional . record_layout_optional_list
    (312) record_layout_optional_list -> . record_layout_optional
    (313) record_layout_optional_list -> . record_layout_optional record_layout_optional_list
    (273) record_layout_optional -> . fnc_values
    (274) record_layout_optional -> . identification
    (275) record_layout_optional -> . axis_pts_x
    (276) record_layout_optional -> . axis_pts_y
    (277) record_layout_optional -> . axis_pts_z
    (278) record_layout_optional -> . axis_rescale_x
    (279) record_layout_optional -> . axis_rescale_y
    (280) record_layout_optional -> . axis_rescale_z
    (281) record_layout_optional -> . no_axis_pts_x
    (282) record_layout_optional -> . no_axis_pts_y
    (283) record_layout_optional -> . no_axis_pts_z
    (284) record_layout_optional -> . no_rescale_x
    (285) record_layout_optional -> . no_rescale_y
    (286) record_layout_optional -> . no_rescale_z
    (287) record_layout_optional -> . fix_no_axis_pts_x
    (288) record_layout_optional -> . fix_no_axis_pts_y
    (289) record_layout_optional -> . fix_no_axis_pts_z
    (290) record_layout_optional -> . src_addr_x
    (291) record_layout_optional -> . src_addr_y
    (292) record_layout_optional -> . src_addr_z
    (293) record_layout_optional -> . rip_addr_x
    (294) record_layout_optional -> . rip_addr_y
    (295) record_layout_optional -> . rip_addr_z
    (296) record_layout_optional -> . rip_addr_w
    (297) record_layout_optional -> . shift_op_x
    (298) record_layout_optional -> . shift_op_y
    (299) record_layout_optional -> . shift_op_z
    (300) record_layout_optional -> . offset_x
    (301) record_layout_optional -> . offset_y
    (302) record_layout_optional -> . offset_z
    (303) record_layout_optional -> . dist_op_x
    (304) record_layout_optional -> . dist_op_y
    (305) record_layout_optional -> . dist_op_z
    (306) record_layout_optional -> . alignment_byte
    (307) record_layout_optional -> . alignment_word
    (308) record_layout_optional -> . alignment_long
    (309) record_layout_optional -> . alignment_float32_ieee
    (310) record_layout_optional -> . alignment_float64_ieee
    (311) record_layout_optional -> . reserved
    (316) fnc_values -> . FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype
    (322) identification -> . IDENTIFICATION NUMERIC datatype
    (323) axis_pts_x -> . AXIS_PTS_X NUMERIC datatype indexorder addrtype
    (324) axis_pts_y -> . AXIS_PTS_Y NUMERIC datatype indexorder addrtype
    (325) axis_pts_z -> . AXIS_PTS_Z NUMERIC datatype indexorder addrtype
    (326) axis_rescale_x -> . AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype
    (327) axis_rescale_y -> . AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype
    (328) axis_rescale_z -> . AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype
    (329) no_axis_pts_x -> . NO_AXIS_PTS_X NUMERIC datatype
    (330) no_axis_pts_y -> . NO_AXIS_PTS_Y NUMERIC datatype
    (331) no_axis_pts_z -> . NO_AXIS_PTS_Z NUMERIC datatype
    (332) no_rescale_x -> . NO_RESCALE_X NUMERIC datatype
    (333) no_rescale_y -> . NO_RESCALE_Y NUMERIC datatype
    (334) no_rescale_z -> . NO_RESCALE_Z NUMERIC datatype
    (335) fix_no_axis_pts_x -> . FIX_NO_AXIS_PTS_X NUMERIC
    (336) fix_no_axis_pts_y -> . FIX_NO_AXIS_PTS_Y NUMERIC
    (337) fix_no_axis_pts_z -> . FIX_NO_AXIS_PTS_Z NUMERIC
    (338) src_addr_x -> . SRC_ADDR_X NUMERIC src_addr_optional
    (339) src_addr_y -> . SRC_ADDR_Y NUMERIC src_addr_optional
    (340) src_addr_z -> . SRC_ADDR_Z NUMERIC src_addr_optional
    (343) rip_addr_x -> . RIP_ADDR_X NUMERIC datatype
    (344) rip_addr_y -> . RIP_ADDR_Y NUMERIC datatype
    (345) rip_addr_z -> . RIP_ADDR_Z NUMERIC datatype
    (346) rip_addr_w -> . RIP_ADDR_W NUMERIC datatype
    (347) shift_op_x -> . SHIFT_OP_X NUMERIC datatype
    (348) shift_op_y -> . SHIFT_OP_Y NUMERIC datatype
    (349) shift_op_z -> . SHIFT_OP_Z NUMERIC datatype
    (350) offset_x -> . OFFSET_X NUMERIC datatype
    (351) offset_y -> . OFFSET_Y NUMERIC datatype
    (352) offset_z -> . OFFSET_Z NUMERIC datatype
    (353) dist_op_x -> . DIST_OP_X NUMERIC datatype
    (354) dist_op_y -> . DIST_OP_Y NUMERIC datatype
    (355) dist_op_z -> . DIST_OP_Z NUMERIC datatype
    (356) alignment_byte -> . ALIGNMENT_BYTE NUMERIC
    (357) alignment_word -> . ALIGNMENT_WORD NUMERIC
    (358) alignment_long -> . ALIGNMENT_LONG NUMERIC
    (359) alignment_float32_ieee -> . ALIGNMENT_FLOAT32_IEEE NUMERIC
    (360) alignment_float64_ieee -> . ALIGNMENT_FLOAT64_IEEE NUMERIC
    (389) reserved -> . RESERVED NUMERIC datasize

    end             reduce using rule 312 (record_layout_optional_list -> record_layout_optional .)
    FNC_VALUES      shift and go to state 195
    IDENTIFICATION  shift and go to state 177
    AXIS_PTS_X      shift and go to state 127
    AXIS_PTS_Y      shift and go to state 128
    AXIS_PTS_Z      shift and go to state 126
    AXIS_RESCALE_X  shift and go to state 184
    AXIS_RESCALE_Y  shift and go to state 185
    AXIS_RESCALE_Z  shift and go to state 183
    NO_AXIS_PTS_X   shift and go to state 121
    NO_AXIS_PTS_Y   shift and go to state 120
    NO_AXIS_PTS_Z   shift and go to state 122
    NO_RESCALE_X    shift and go to state 149
    NO_RESCALE_Y    shift and go to state 150
    NO_RESCALE_Z    shift and go to state 148
    FIX_NO_AXIS_PTS_X shift and go to state 143
    FIX_NO_AXIS_PTS_Y shift and go to state 142
    FIX_NO_AXIS_PTS_Z shift and go to state 144
    SRC_ADDR_X      shift and go to state 125
    SRC_ADDR_Y      shift and go to state 124
    SRC_ADDR_Z      shift and go to state 123
    RIP_ADDR_X      shift and go to state 189
    RIP_ADDR_Y      shift and go to state 190
    RIP_ADDR_Z      shift and go to state 188
    RIP_ADDR_W      shift and go to state 186
    SHIFT_OP_X      shift and go to state 134
    SHIFT_OP_Y      shift and go to state 133
    SHIFT_OP_Z      shift and go to state 136
    OFFSET_X        shift and go to state 180
    OFFSET_Y        shift and go to state 181
    OFFSET_Z        shift and go to state 182
    DIST_OP_X       shift and go to state 154
    DIST_OP_Y       shift and go to state 155
    DIST_OP_Z       shift and go to state 153
    ALIGNMENT_BYTE  shift and go to state 178
    ALIGNMENT_WORD  shift and go to state 176
    ALIGNMENT_LONG  shift and go to state 129
    ALIGNMENT_FLOAT32_IEEE shift and go to state 157
    ALIGNMENT_FLOAT64_IEEE shift and go to state 140
    RESERVED        shift and go to state 194

    reserved                       shift and go to state 179
    record_layout_optional         shift and go to state 161
    record_layout_optional_list    shift and go to state 265
    src_addr_z                     shift and go to state 196
    src_addr_y                     shift and go to state 145
    src_addr_x                     shift and go to state 146
    axis_rescale_z                 shift and go to state 130
    shift_op_z                     shift and go to state 199
    identification                 shift and go to state 151
    offset_y                       shift and go to state 192
    offset_z                       shift and go to state 193
    offset_x                       shift and go to state 191
    axis_rescale_y                 shift and go to state 132
    alignment_long                 shift and go to state 200
    alignment_float64_ieee         shift and go to state 147
    alignment_byte                 shift and go to state 187
    alignment_word                 shift and go to state 152
    shift_op_y                     shift and go to state 197
    no_axis_pts_y                  shift and go to state 165
    no_axis_pts_x                  shift and go to state 166
    axis_rescale_x                 shift and go to state 131
    no_axis_pts_z                  shift and go to state 167
    rip_addr_w                     shift and go to state 168
    fnc_values                     shift and go to state 169
    axis_pts_z                     shift and go to state 170
    alignment_float32_ieee         shift and go to state 201
    axis_pts_x                     shift and go to state 171
    axis_pts_y                     shift and go to state 172
    rip_addr_z                     shift and go to state 173
    rip_addr_x                     shift and go to state 174
    rip_addr_y                     shift and go to state 175
    no_rescale_z                   shift and go to state 141
    shift_op_x                     shift and go to state 198
    no_rescale_x                   shift and go to state 135
    no_rescale_y                   shift and go to state 156
    dist_op_z                      shift and go to state 158
    dist_op_x                      shift and go to state 159
    dist_op_y                      shift and go to state 160
    fix_no_axis_pts_y              shift and go to state 137
    fix_no_axis_pts_x              shift and go to state 138
    fix_no_axis_pts_z              shift and go to state 139

state 162

    (315) record_layout_optional_list_optional -> record_layout_optional_list .

    end             reduce using rule 315 (record_layout_optional_list_optional -> record_layout_optional_list .)


state 163

    (272) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional . end RECORD_LAYOUT

    end             shift and go to state 266


state 164

    (314) record_layout_optional_list_optional -> empty .

    end             reduce using rule 314 (record_layout_optional_list_optional -> empty .)


state 165

    (282) record_layout_optional -> no_axis_pts_y .

    FNC_VALUES      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    IDENTIFICATION  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_X      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_X    reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_X      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_X      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    RIP_ADDR_W      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_X      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_X        reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Y        reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    OFFSET_Z        reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_X       reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Y       reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    DIST_OP_Z       reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    RESERVED        reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)
    end             reduce using rule 282 (record_layout_optional -> no_axis_pts_y .)


state 166

    (281) record_layout_optional -> no_axis_pts_x .

    FNC_VALUES      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    IDENTIFICATION  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_X      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_X    reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_X      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_X      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    RIP_ADDR_W      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_X      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_X        reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Y        reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    OFFSET_Z        reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_X       reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Y       reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    DIST_OP_Z       reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    RESERVED        reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)
    end             reduce using rule 281 (record_layout_optional -> no_axis_pts_x .)


state 167

    (283) record_layout_optional -> no_axis_pts_z .

    FNC_VALUES      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    IDENTIFICATION  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_X      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_X    reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_X      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_X      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    RIP_ADDR_W      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_X      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_X        reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Y        reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    OFFSET_Z        reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_X       reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Y       reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    DIST_OP_Z       reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    RESERVED        reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)
    end             reduce using rule 283 (record_layout_optional -> no_axis_pts_z .)


state 168

    (296) record_layout_optional -> rip_addr_w .

    FNC_VALUES      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    IDENTIFICATION  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_X      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Y      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_PTS_Z      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_X  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Y  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    AXIS_RESCALE_Z  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_X   reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Y   reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_AXIS_PTS_Z   reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_X    reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Y    reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    NO_RESCALE_Z    reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_X reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Y reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    FIX_NO_AXIS_PTS_Z reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_X      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Y      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SRC_ADDR_Z      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_X      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Y      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_Z      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    RIP_ADDR_W      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_X      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Y      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    SHIFT_OP_Z      reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    OFFSET_X        reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    OFFSET_Y        reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    OFFSET_Z        reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    DIST_OP_X       reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Y       reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    DIST_OP_Z       reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_BYTE  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_WORD  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_LONG  reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    RESERVED        reduce using rule 296 (record_layout_optional -> rip_addr_w .)
    end             reduce using rule 296 (record_layout_optional -> rip_addr_w .)


state 169

    (273) record_layout_optional -> fnc_values .

    FNC_VALUES      reduce using rule 273 (record_layout_optional -> fnc_values .)
    IDENTIFICATION  reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_PTS_X      reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Y      reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_PTS_Z      reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_X  reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Y  reduce using rule 273 (record_layout_optional -> fnc_values .)
    AXIS_RESCALE_Z  reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_X   reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Y   reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_AXIS_PTS_Z   reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_RESCALE_X    reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Y    reduce using rule 273 (record_layout_optional -> fnc_values .)
    NO_RESCALE_Z    reduce using rule 273 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_X reduce using rule 273 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Y reduce using rule 273 (record_layout_optional -> fnc_values .)
    FIX_NO_AXIS_PTS_Z reduce using rule 273 (record_layout_optional -> fnc_values .)
    SRC_ADDR_X      reduce using rule 273 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Y      reduce using rule 273 (record_layout_optional -> fnc_values .)
    SRC_ADDR_Z      reduce using rule 273 (record_layout_optional -> fnc_values .)
    RIP_ADDR_X      reduce using rule 273 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Y      reduce using rule 273 (record_layout_optional -> fnc_values .)
    RIP_ADDR_Z      reduce using rule 273 (record_layout_optional -> fnc_values .)
    RIP_ADDR_W      reduce using rule 273 (record_layout_optional -> fnc_values .)
    SHIFT_OP_X      reduce using rule 273 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Y      reduce using rule 273 (record_layout_optional -> fnc_values .)
    SHIFT_OP_Z      reduce using rule 273 (record_layout_optional -> fnc_values .)
    OFFSET_X        reduce using rule 273 (record_layout_optional -> fnc_values .)
    OFFSET_Y        reduce using rule 273 (record_layout_optional -> fnc_values .)
    OFFSET_Z        reduce using rule 273 (record_layout_optional -> fnc_values .)
    DIST_OP_X       reduce using rule 273 (record_layout_optional -> fnc_values .)
    DIST_OP_Y       reduce using rule 273 (record_layout_optional -> fnc_values .)
    DIST_OP_Z       reduce using rule 273 (record_layout_optional -> fnc_values .)
    ALIGNMENT_BYTE  reduce using rule 273 (record_layout_optional -> fnc_values .)
    ALIGNMENT_WORD  reduce using rule 273 (record_layout_optional -> fnc_values .)
    ALIGNMENT_LONG  reduce using rule 273 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 273 (record_layout_optional -> fnc_values .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 273 (record_layout_optional -> fnc_values .)
    RESERVED        reduce using rule 273 (record_layout_optional -> fnc_values .)
    end             reduce using rule 273 (record_layout_optional -> fnc_values .)


state 170

    (277) record_layout_optional -> axis_pts_z .

    FNC_VALUES      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    IDENTIFICATION  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_X      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Y      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_PTS_Z      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_X  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Y  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    AXIS_RESCALE_Z  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_X   reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Y   reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_AXIS_PTS_Z   reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_X    reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Y    reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    NO_RESCALE_Z    reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_X      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Y      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SRC_ADDR_Z      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_X      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Y      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_Z      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    RIP_ADDR_W      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_X      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Y      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    SHIFT_OP_Z      reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    OFFSET_X        reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    OFFSET_Y        reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    OFFSET_Z        reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    DIST_OP_X       reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Y       reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    DIST_OP_Z       reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_BYTE  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_WORD  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_LONG  reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    RESERVED        reduce using rule 277 (record_layout_optional -> axis_pts_z .)
    end             reduce using rule 277 (record_layout_optional -> axis_pts_z .)


state 171

    (275) record_layout_optional -> axis_pts_x .

    FNC_VALUES      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    IDENTIFICATION  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_X      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Y      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_PTS_Z      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_X  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Y  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    AXIS_RESCALE_Z  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_X   reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Y   reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_AXIS_PTS_Z   reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_X    reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Y    reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    NO_RESCALE_Z    reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_X      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Y      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SRC_ADDR_Z      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_X      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Y      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_Z      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    RIP_ADDR_W      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_X      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Y      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    SHIFT_OP_Z      reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    OFFSET_X        reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    OFFSET_Y        reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    OFFSET_Z        reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    DIST_OP_X       reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Y       reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    DIST_OP_Z       reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_BYTE  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_WORD  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_LONG  reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    RESERVED        reduce using rule 275 (record_layout_optional -> axis_pts_x .)
    end             reduce using rule 275 (record_layout_optional -> axis_pts_x .)


state 172

    (276) record_layout_optional -> axis_pts_y .

    FNC_VALUES      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    IDENTIFICATION  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_X      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Y      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_PTS_Z      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_X  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Y  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    AXIS_RESCALE_Z  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_X   reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Y   reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_AXIS_PTS_Z   reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_X    reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Y    reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    NO_RESCALE_Z    reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_X      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Y      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SRC_ADDR_Z      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_X      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Y      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_Z      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    RIP_ADDR_W      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_X      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Y      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    SHIFT_OP_Z      reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    OFFSET_X        reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    OFFSET_Y        reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    OFFSET_Z        reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    DIST_OP_X       reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Y       reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    DIST_OP_Z       reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_BYTE  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_WORD  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_LONG  reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    RESERVED        reduce using rule 276 (record_layout_optional -> axis_pts_y .)
    end             reduce using rule 276 (record_layout_optional -> axis_pts_y .)


state 173

    (295) record_layout_optional -> rip_addr_z .

    FNC_VALUES      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    IDENTIFICATION  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_X      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Y      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_PTS_Z      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_X  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_X    reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Y    reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    NO_RESCALE_Z    reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_X      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Y      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SRC_ADDR_Z      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_X      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Y      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_Z      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    RIP_ADDR_W      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_X      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Y      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    SHIFT_OP_Z      reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    OFFSET_X        reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    OFFSET_Y        reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    OFFSET_Z        reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    DIST_OP_X       reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Y       reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    DIST_OP_Z       reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_WORD  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_LONG  reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    RESERVED        reduce using rule 295 (record_layout_optional -> rip_addr_z .)
    end             reduce using rule 295 (record_layout_optional -> rip_addr_z .)


state 174

    (293) record_layout_optional -> rip_addr_x .

    FNC_VALUES      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    IDENTIFICATION  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_X      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Y      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_PTS_Z      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_X  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Y  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    AXIS_RESCALE_Z  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_X   reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Y   reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_AXIS_PTS_Z   reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_X    reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Y    reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    NO_RESCALE_Z    reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_X      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Y      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SRC_ADDR_Z      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_X      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Y      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_Z      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    RIP_ADDR_W      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_X      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Y      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    SHIFT_OP_Z      reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    OFFSET_X        reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    OFFSET_Y        reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    OFFSET_Z        reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    DIST_OP_X       reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Y       reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    DIST_OP_Z       reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_BYTE  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_WORD  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_LONG  reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    RESERVED        reduce using rule 293 (record_layout_optional -> rip_addr_x .)
    end             reduce using rule 293 (record_layout_optional -> rip_addr_x .)


state 175

    (294) record_layout_optional -> rip_addr_y .

    FNC_VALUES      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    IDENTIFICATION  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_X      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Y      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_PTS_Z      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_X  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Y  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    AXIS_RESCALE_Z  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_X   reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Y   reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_AXIS_PTS_Z   reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_X    reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Y    reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    NO_RESCALE_Z    reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_X      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Y      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SRC_ADDR_Z      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_X      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Y      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_Z      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    RIP_ADDR_W      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_X      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Y      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    SHIFT_OP_Z      reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    OFFSET_X        reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    OFFSET_Y        reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    OFFSET_Z        reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    DIST_OP_X       reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Y       reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    DIST_OP_Z       reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_BYTE  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_WORD  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_LONG  reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    RESERVED        reduce using rule 294 (record_layout_optional -> rip_addr_y .)
    end             reduce using rule 294 (record_layout_optional -> rip_addr_y .)


state 176

    (357) alignment_word -> ALIGNMENT_WORD . NUMERIC

    NUMERIC         shift and go to state 267


state 177

    (322) identification -> IDENTIFICATION . NUMERIC datatype

    NUMERIC         shift and go to state 268


state 178

    (356) alignment_byte -> ALIGNMENT_BYTE . NUMERIC

    NUMERIC         shift and go to state 269


state 179

    (311) record_layout_optional -> reserved .

    FNC_VALUES      reduce using rule 311 (record_layout_optional -> reserved .)
    IDENTIFICATION  reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_PTS_X      reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_PTS_Y      reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_PTS_Z      reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_RESCALE_X  reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Y  reduce using rule 311 (record_layout_optional -> reserved .)
    AXIS_RESCALE_Z  reduce using rule 311 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_X   reduce using rule 311 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Y   reduce using rule 311 (record_layout_optional -> reserved .)
    NO_AXIS_PTS_Z   reduce using rule 311 (record_layout_optional -> reserved .)
    NO_RESCALE_X    reduce using rule 311 (record_layout_optional -> reserved .)
    NO_RESCALE_Y    reduce using rule 311 (record_layout_optional -> reserved .)
    NO_RESCALE_Z    reduce using rule 311 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_X reduce using rule 311 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Y reduce using rule 311 (record_layout_optional -> reserved .)
    FIX_NO_AXIS_PTS_Z reduce using rule 311 (record_layout_optional -> reserved .)
    SRC_ADDR_X      reduce using rule 311 (record_layout_optional -> reserved .)
    SRC_ADDR_Y      reduce using rule 311 (record_layout_optional -> reserved .)
    SRC_ADDR_Z      reduce using rule 311 (record_layout_optional -> reserved .)
    RIP_ADDR_X      reduce using rule 311 (record_layout_optional -> reserved .)
    RIP_ADDR_Y      reduce using rule 311 (record_layout_optional -> reserved .)
    RIP_ADDR_Z      reduce using rule 311 (record_layout_optional -> reserved .)
    RIP_ADDR_W      reduce using rule 311 (record_layout_optional -> reserved .)
    SHIFT_OP_X      reduce using rule 311 (record_layout_optional -> reserved .)
    SHIFT_OP_Y      reduce using rule 311 (record_layout_optional -> reserved .)
    SHIFT_OP_Z      reduce using rule 311 (record_layout_optional -> reserved .)
    OFFSET_X        reduce using rule 311 (record_layout_optional -> reserved .)
    OFFSET_Y        reduce using rule 311 (record_layout_optional -> reserved .)
    OFFSET_Z        reduce using rule 311 (record_layout_optional -> reserved .)
    DIST_OP_X       reduce using rule 311 (record_layout_optional -> reserved .)
    DIST_OP_Y       reduce using rule 311 (record_layout_optional -> reserved .)
    DIST_OP_Z       reduce using rule 311 (record_layout_optional -> reserved .)
    ALIGNMENT_BYTE  reduce using rule 311 (record_layout_optional -> reserved .)
    ALIGNMENT_WORD  reduce using rule 311 (record_layout_optional -> reserved .)
    ALIGNMENT_LONG  reduce using rule 311 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 311 (record_layout_optional -> reserved .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 311 (record_layout_optional -> reserved .)
    RESERVED        reduce using rule 311 (record_layout_optional -> reserved .)
    end             reduce using rule 311 (record_layout_optional -> reserved .)


state 180

    (350) offset_x -> OFFSET_X . NUMERIC datatype

    NUMERIC         shift and go to state 270


state 181

    (351) offset_y -> OFFSET_Y . NUMERIC datatype

    NUMERIC         shift and go to state 271


state 182

    (352) offset_z -> OFFSET_Z . NUMERIC datatype

    NUMERIC         shift and go to state 272


state 183

    (328) axis_rescale_z -> AXIS_RESCALE_Z . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 273


state 184

    (326) axis_rescale_x -> AXIS_RESCALE_X . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 274


state 185

    (327) axis_rescale_y -> AXIS_RESCALE_Y . NUMERIC datatype NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 275


state 186

    (346) rip_addr_w -> RIP_ADDR_W . NUMERIC datatype

    NUMERIC         shift and go to state 276


state 187

    (306) record_layout_optional -> alignment_byte .

    FNC_VALUES      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    IDENTIFICATION  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_X      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Y      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_PTS_Z      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_X  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Y  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    AXIS_RESCALE_Z  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_X   reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Y   reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_AXIS_PTS_Z   reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_X    reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Y    reduce using rule 306 (record_layout_optional -> alignment_byte .)
    NO_RESCALE_Z    reduce using rule 306 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_X reduce using rule 306 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Y reduce using rule 306 (record_layout_optional -> alignment_byte .)
    FIX_NO_AXIS_PTS_Z reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_X      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Y      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SRC_ADDR_Z      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_X      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Y      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_Z      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    RIP_ADDR_W      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_X      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Y      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    SHIFT_OP_Z      reduce using rule 306 (record_layout_optional -> alignment_byte .)
    OFFSET_X        reduce using rule 306 (record_layout_optional -> alignment_byte .)
    OFFSET_Y        reduce using rule 306 (record_layout_optional -> alignment_byte .)
    OFFSET_Z        reduce using rule 306 (record_layout_optional -> alignment_byte .)
    DIST_OP_X       reduce using rule 306 (record_layout_optional -> alignment_byte .)
    DIST_OP_Y       reduce using rule 306 (record_layout_optional -> alignment_byte .)
    DIST_OP_Z       reduce using rule 306 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_BYTE  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_WORD  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_LONG  reduce using rule 306 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 306 (record_layout_optional -> alignment_byte .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 306 (record_layout_optional -> alignment_byte .)
    RESERVED        reduce using rule 306 (record_layout_optional -> alignment_byte .)
    end             reduce using rule 306 (record_layout_optional -> alignment_byte .)


state 188

    (345) rip_addr_z -> RIP_ADDR_Z . NUMERIC datatype

    NUMERIC         shift and go to state 277


state 189

    (343) rip_addr_x -> RIP_ADDR_X . NUMERIC datatype

    NUMERIC         shift and go to state 278


state 190

    (344) rip_addr_y -> RIP_ADDR_Y . NUMERIC datatype

    NUMERIC         shift and go to state 279


state 191

    (300) record_layout_optional -> offset_x .

    FNC_VALUES      reduce using rule 300 (record_layout_optional -> offset_x .)
    IDENTIFICATION  reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_PTS_X      reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_PTS_Y      reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_PTS_Z      reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_X  reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Y  reduce using rule 300 (record_layout_optional -> offset_x .)
    AXIS_RESCALE_Z  reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_X   reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Y   reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_AXIS_PTS_Z   reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_RESCALE_X    reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_RESCALE_Y    reduce using rule 300 (record_layout_optional -> offset_x .)
    NO_RESCALE_Z    reduce using rule 300 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 300 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 300 (record_layout_optional -> offset_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 300 (record_layout_optional -> offset_x .)
    SRC_ADDR_X      reduce using rule 300 (record_layout_optional -> offset_x .)
    SRC_ADDR_Y      reduce using rule 300 (record_layout_optional -> offset_x .)
    SRC_ADDR_Z      reduce using rule 300 (record_layout_optional -> offset_x .)
    RIP_ADDR_X      reduce using rule 300 (record_layout_optional -> offset_x .)
    RIP_ADDR_Y      reduce using rule 300 (record_layout_optional -> offset_x .)
    RIP_ADDR_Z      reduce using rule 300 (record_layout_optional -> offset_x .)
    RIP_ADDR_W      reduce using rule 300 (record_layout_optional -> offset_x .)
    SHIFT_OP_X      reduce using rule 300 (record_layout_optional -> offset_x .)
    SHIFT_OP_Y      reduce using rule 300 (record_layout_optional -> offset_x .)
    SHIFT_OP_Z      reduce using rule 300 (record_layout_optional -> offset_x .)
    OFFSET_X        reduce using rule 300 (record_layout_optional -> offset_x .)
    OFFSET_Y        reduce using rule 300 (record_layout_optional -> offset_x .)
    OFFSET_Z        reduce using rule 300 (record_layout_optional -> offset_x .)
    DIST_OP_X       reduce using rule 300 (record_layout_optional -> offset_x .)
    DIST_OP_Y       reduce using rule 300 (record_layout_optional -> offset_x .)
    DIST_OP_Z       reduce using rule 300 (record_layout_optional -> offset_x .)
    ALIGNMENT_BYTE  reduce using rule 300 (record_layout_optional -> offset_x .)
    ALIGNMENT_WORD  reduce using rule 300 (record_layout_optional -> offset_x .)
    ALIGNMENT_LONG  reduce using rule 300 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 300 (record_layout_optional -> offset_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 300 (record_layout_optional -> offset_x .)
    RESERVED        reduce using rule 300 (record_layout_optional -> offset_x .)
    end             reduce using rule 300 (record_layout_optional -> offset_x .)


state 192

    (301) record_layout_optional -> offset_y .

    FNC_VALUES      reduce using rule 301 (record_layout_optional -> offset_y .)
    IDENTIFICATION  reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_PTS_X      reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_PTS_Y      reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_PTS_Z      reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_X  reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Y  reduce using rule 301 (record_layout_optional -> offset_y .)
    AXIS_RESCALE_Z  reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_X   reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Y   reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_AXIS_PTS_Z   reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_RESCALE_X    reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_RESCALE_Y    reduce using rule 301 (record_layout_optional -> offset_y .)
    NO_RESCALE_Z    reduce using rule 301 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 301 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 301 (record_layout_optional -> offset_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 301 (record_layout_optional -> offset_y .)
    SRC_ADDR_X      reduce using rule 301 (record_layout_optional -> offset_y .)
    SRC_ADDR_Y      reduce using rule 301 (record_layout_optional -> offset_y .)
    SRC_ADDR_Z      reduce using rule 301 (record_layout_optional -> offset_y .)
    RIP_ADDR_X      reduce using rule 301 (record_layout_optional -> offset_y .)
    RIP_ADDR_Y      reduce using rule 301 (record_layout_optional -> offset_y .)
    RIP_ADDR_Z      reduce using rule 301 (record_layout_optional -> offset_y .)
    RIP_ADDR_W      reduce using rule 301 (record_layout_optional -> offset_y .)
    SHIFT_OP_X      reduce using rule 301 (record_layout_optional -> offset_y .)
    SHIFT_OP_Y      reduce using rule 301 (record_layout_optional -> offset_y .)
    SHIFT_OP_Z      reduce using rule 301 (record_layout_optional -> offset_y .)
    OFFSET_X        reduce using rule 301 (record_layout_optional -> offset_y .)
    OFFSET_Y        reduce using rule 301 (record_layout_optional -> offset_y .)
    OFFSET_Z        reduce using rule 301 (record_layout_optional -> offset_y .)
    DIST_OP_X       reduce using rule 301 (record_layout_optional -> offset_y .)
    DIST_OP_Y       reduce using rule 301 (record_layout_optional -> offset_y .)
    DIST_OP_Z       reduce using rule 301 (record_layout_optional -> offset_y .)
    ALIGNMENT_BYTE  reduce using rule 301 (record_layout_optional -> offset_y .)
    ALIGNMENT_WORD  reduce using rule 301 (record_layout_optional -> offset_y .)
    ALIGNMENT_LONG  reduce using rule 301 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 301 (record_layout_optional -> offset_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 301 (record_layout_optional -> offset_y .)
    RESERVED        reduce using rule 301 (record_layout_optional -> offset_y .)
    end             reduce using rule 301 (record_layout_optional -> offset_y .)


state 193

    (302) record_layout_optional -> offset_z .

    FNC_VALUES      reduce using rule 302 (record_layout_optional -> offset_z .)
    IDENTIFICATION  reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_PTS_X      reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_PTS_Y      reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_PTS_Z      reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_X  reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Y  reduce using rule 302 (record_layout_optional -> offset_z .)
    AXIS_RESCALE_Z  reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_X   reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Y   reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_AXIS_PTS_Z   reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_RESCALE_X    reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_RESCALE_Y    reduce using rule 302 (record_layout_optional -> offset_z .)
    NO_RESCALE_Z    reduce using rule 302 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 302 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 302 (record_layout_optional -> offset_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 302 (record_layout_optional -> offset_z .)
    SRC_ADDR_X      reduce using rule 302 (record_layout_optional -> offset_z .)
    SRC_ADDR_Y      reduce using rule 302 (record_layout_optional -> offset_z .)
    SRC_ADDR_Z      reduce using rule 302 (record_layout_optional -> offset_z .)
    RIP_ADDR_X      reduce using rule 302 (record_layout_optional -> offset_z .)
    RIP_ADDR_Y      reduce using rule 302 (record_layout_optional -> offset_z .)
    RIP_ADDR_Z      reduce using rule 302 (record_layout_optional -> offset_z .)
    RIP_ADDR_W      reduce using rule 302 (record_layout_optional -> offset_z .)
    SHIFT_OP_X      reduce using rule 302 (record_layout_optional -> offset_z .)
    SHIFT_OP_Y      reduce using rule 302 (record_layout_optional -> offset_z .)
    SHIFT_OP_Z      reduce using rule 302 (record_layout_optional -> offset_z .)
    OFFSET_X        reduce using rule 302 (record_layout_optional -> offset_z .)
    OFFSET_Y        reduce using rule 302 (record_layout_optional -> offset_z .)
    OFFSET_Z        reduce using rule 302 (record_layout_optional -> offset_z .)
    DIST_OP_X       reduce using rule 302 (record_layout_optional -> offset_z .)
    DIST_OP_Y       reduce using rule 302 (record_layout_optional -> offset_z .)
    DIST_OP_Z       reduce using rule 302 (record_layout_optional -> offset_z .)
    ALIGNMENT_BYTE  reduce using rule 302 (record_layout_optional -> offset_z .)
    ALIGNMENT_WORD  reduce using rule 302 (record_layout_optional -> offset_z .)
    ALIGNMENT_LONG  reduce using rule 302 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 302 (record_layout_optional -> offset_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 302 (record_layout_optional -> offset_z .)
    RESERVED        reduce using rule 302 (record_layout_optional -> offset_z .)
    end             reduce using rule 302 (record_layout_optional -> offset_z .)


state 194

    (389) reserved -> RESERVED . NUMERIC datasize

    NUMERIC         shift and go to state 280


state 195

    (316) fnc_values -> FNC_VALUES . NUMERIC datatype fnc_values_index_mode addrtype

    NUMERIC         shift and go to state 281


state 196

    (292) record_layout_optional -> src_addr_z .

    FNC_VALUES      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    IDENTIFICATION  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_X      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Y      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_PTS_Z      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_X  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Y  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    AXIS_RESCALE_Z  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_X   reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Y   reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_AXIS_PTS_Z   reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_X    reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Y    reduce using rule 292 (record_layout_optional -> src_addr_z .)
    NO_RESCALE_Z    reduce using rule 292 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 292 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 292 (record_layout_optional -> src_addr_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_X      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Y      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SRC_ADDR_Z      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_X      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Y      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_Z      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    RIP_ADDR_W      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_X      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Y      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    SHIFT_OP_Z      reduce using rule 292 (record_layout_optional -> src_addr_z .)
    OFFSET_X        reduce using rule 292 (record_layout_optional -> src_addr_z .)
    OFFSET_Y        reduce using rule 292 (record_layout_optional -> src_addr_z .)
    OFFSET_Z        reduce using rule 292 (record_layout_optional -> src_addr_z .)
    DIST_OP_X       reduce using rule 292 (record_layout_optional -> src_addr_z .)
    DIST_OP_Y       reduce using rule 292 (record_layout_optional -> src_addr_z .)
    DIST_OP_Z       reduce using rule 292 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_BYTE  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_WORD  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_LONG  reduce using rule 292 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 292 (record_layout_optional -> src_addr_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 292 (record_layout_optional -> src_addr_z .)
    RESERVED        reduce using rule 292 (record_layout_optional -> src_addr_z .)
    end             reduce using rule 292 (record_layout_optional -> src_addr_z .)


state 197

    (298) record_layout_optional -> shift_op_y .

    FNC_VALUES      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    IDENTIFICATION  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_X      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Y      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_PTS_Z      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_X  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Y  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    AXIS_RESCALE_Z  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_X   reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Y   reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_AXIS_PTS_Z   reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_X    reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Y    reduce using rule 298 (record_layout_optional -> shift_op_y .)
    NO_RESCALE_Z    reduce using rule 298 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_X reduce using rule 298 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Y reduce using rule 298 (record_layout_optional -> shift_op_y .)
    FIX_NO_AXIS_PTS_Z reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_X      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Y      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SRC_ADDR_Z      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_X      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Y      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_Z      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    RIP_ADDR_W      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_X      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Y      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    SHIFT_OP_Z      reduce using rule 298 (record_layout_optional -> shift_op_y .)
    OFFSET_X        reduce using rule 298 (record_layout_optional -> shift_op_y .)
    OFFSET_Y        reduce using rule 298 (record_layout_optional -> shift_op_y .)
    OFFSET_Z        reduce using rule 298 (record_layout_optional -> shift_op_y .)
    DIST_OP_X       reduce using rule 298 (record_layout_optional -> shift_op_y .)
    DIST_OP_Y       reduce using rule 298 (record_layout_optional -> shift_op_y .)
    DIST_OP_Z       reduce using rule 298 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_BYTE  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_WORD  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_LONG  reduce using rule 298 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 298 (record_layout_optional -> shift_op_y .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 298 (record_layout_optional -> shift_op_y .)
    RESERVED        reduce using rule 298 (record_layout_optional -> shift_op_y .)
    end             reduce using rule 298 (record_layout_optional -> shift_op_y .)


state 198

    (297) record_layout_optional -> shift_op_x .

    FNC_VALUES      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    IDENTIFICATION  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_X      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Y      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_PTS_Z      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_X  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Y  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    AXIS_RESCALE_Z  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_X   reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Y   reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_AXIS_PTS_Z   reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_X    reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Y    reduce using rule 297 (record_layout_optional -> shift_op_x .)
    NO_RESCALE_Z    reduce using rule 297 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_X reduce using rule 297 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Y reduce using rule 297 (record_layout_optional -> shift_op_x .)
    FIX_NO_AXIS_PTS_Z reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_X      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Y      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SRC_ADDR_Z      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_X      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Y      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_Z      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    RIP_ADDR_W      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_X      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Y      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    SHIFT_OP_Z      reduce using rule 297 (record_layout_optional -> shift_op_x .)
    OFFSET_X        reduce using rule 297 (record_layout_optional -> shift_op_x .)
    OFFSET_Y        reduce using rule 297 (record_layout_optional -> shift_op_x .)
    OFFSET_Z        reduce using rule 297 (record_layout_optional -> shift_op_x .)
    DIST_OP_X       reduce using rule 297 (record_layout_optional -> shift_op_x .)
    DIST_OP_Y       reduce using rule 297 (record_layout_optional -> shift_op_x .)
    DIST_OP_Z       reduce using rule 297 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_BYTE  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_WORD  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_LONG  reduce using rule 297 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 297 (record_layout_optional -> shift_op_x .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 297 (record_layout_optional -> shift_op_x .)
    RESERVED        reduce using rule 297 (record_layout_optional -> shift_op_x .)
    end             reduce using rule 297 (record_layout_optional -> shift_op_x .)


state 199

    (299) record_layout_optional -> shift_op_z .

    FNC_VALUES      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    IDENTIFICATION  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_X      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Y      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_PTS_Z      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_X  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Y  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    AXIS_RESCALE_Z  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_X   reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Y   reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_AXIS_PTS_Z   reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_X    reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Y    reduce using rule 299 (record_layout_optional -> shift_op_z .)
    NO_RESCALE_Z    reduce using rule 299 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_X reduce using rule 299 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Y reduce using rule 299 (record_layout_optional -> shift_op_z .)
    FIX_NO_AXIS_PTS_Z reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_X      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Y      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SRC_ADDR_Z      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_X      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Y      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_Z      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    RIP_ADDR_W      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_X      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Y      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    SHIFT_OP_Z      reduce using rule 299 (record_layout_optional -> shift_op_z .)
    OFFSET_X        reduce using rule 299 (record_layout_optional -> shift_op_z .)
    OFFSET_Y        reduce using rule 299 (record_layout_optional -> shift_op_z .)
    OFFSET_Z        reduce using rule 299 (record_layout_optional -> shift_op_z .)
    DIST_OP_X       reduce using rule 299 (record_layout_optional -> shift_op_z .)
    DIST_OP_Y       reduce using rule 299 (record_layout_optional -> shift_op_z .)
    DIST_OP_Z       reduce using rule 299 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_BYTE  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_WORD  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_LONG  reduce using rule 299 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 299 (record_layout_optional -> shift_op_z .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 299 (record_layout_optional -> shift_op_z .)
    RESERVED        reduce using rule 299 (record_layout_optional -> shift_op_z .)
    end             reduce using rule 299 (record_layout_optional -> shift_op_z .)


state 200

    (308) record_layout_optional -> alignment_long .

    FNC_VALUES      reduce using rule 308 (record_layout_optional -> alignment_long .)
    IDENTIFICATION  reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_PTS_X      reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Y      reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_PTS_Z      reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_X  reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Y  reduce using rule 308 (record_layout_optional -> alignment_long .)
    AXIS_RESCALE_Z  reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_X   reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Y   reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_AXIS_PTS_Z   reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_RESCALE_X    reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Y    reduce using rule 308 (record_layout_optional -> alignment_long .)
    NO_RESCALE_Z    reduce using rule 308 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_X reduce using rule 308 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Y reduce using rule 308 (record_layout_optional -> alignment_long .)
    FIX_NO_AXIS_PTS_Z reduce using rule 308 (record_layout_optional -> alignment_long .)
    SRC_ADDR_X      reduce using rule 308 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Y      reduce using rule 308 (record_layout_optional -> alignment_long .)
    SRC_ADDR_Z      reduce using rule 308 (record_layout_optional -> alignment_long .)
    RIP_ADDR_X      reduce using rule 308 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Y      reduce using rule 308 (record_layout_optional -> alignment_long .)
    RIP_ADDR_Z      reduce using rule 308 (record_layout_optional -> alignment_long .)
    RIP_ADDR_W      reduce using rule 308 (record_layout_optional -> alignment_long .)
    SHIFT_OP_X      reduce using rule 308 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Y      reduce using rule 308 (record_layout_optional -> alignment_long .)
    SHIFT_OP_Z      reduce using rule 308 (record_layout_optional -> alignment_long .)
    OFFSET_X        reduce using rule 308 (record_layout_optional -> alignment_long .)
    OFFSET_Y        reduce using rule 308 (record_layout_optional -> alignment_long .)
    OFFSET_Z        reduce using rule 308 (record_layout_optional -> alignment_long .)
    DIST_OP_X       reduce using rule 308 (record_layout_optional -> alignment_long .)
    DIST_OP_Y       reduce using rule 308 (record_layout_optional -> alignment_long .)
    DIST_OP_Z       reduce using rule 308 (record_layout_optional -> alignment_long .)
    ALIGNMENT_BYTE  reduce using rule 308 (record_layout_optional -> alignment_long .)
    ALIGNMENT_WORD  reduce using rule 308 (record_layout_optional -> alignment_long .)
    ALIGNMENT_LONG  reduce using rule 308 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 308 (record_layout_optional -> alignment_long .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 308 (record_layout_optional -> alignment_long .)
    RESERVED        reduce using rule 308 (record_layout_optional -> alignment_long .)
    end             reduce using rule 308 (record_layout_optional -> alignment_long .)


state 201

    (309) record_layout_optional -> alignment_float32_ieee .

    FNC_VALUES      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    IDENTIFICATION  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_X      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Y      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_PTS_Z      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_X  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Y  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    AXIS_RESCALE_Z  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_X   reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Y   reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_AXIS_PTS_Z   reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_X    reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Y    reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    NO_RESCALE_Z    reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_X reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Y reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    FIX_NO_AXIS_PTS_Z reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_X      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Y      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SRC_ADDR_Z      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_X      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Y      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_Z      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    RIP_ADDR_W      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_X      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Y      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    SHIFT_OP_Z      reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_X        reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Y        reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    OFFSET_Z        reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_X       reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Y       reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    DIST_OP_Z       reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_BYTE  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_WORD  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_LONG  reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    RESERVED        reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)
    end             reduce using rule 309 (record_layout_optional -> alignment_float32_ieee .)


state 202

    (195) compu_method -> begin COMPU_METHOD IDENT STRING . compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD
    (196) compu_method_conversion_type -> . TAB_INTP
    (197) compu_method_conversion_type -> . TAB_NOINTP
    (198) compu_method_conversion_type -> . TAB_VERB
    (199) compu_method_conversion_type -> . RAT_FUNC
    (200) compu_method_conversion_type -> . FORM
    (201) compu_method_conversion_type -> . IDENTICAL

    TAB_INTP        shift and go to state 286
    TAB_NOINTP      shift and go to state 287
    TAB_VERB        shift and go to state 288
    RAT_FUNC        shift and go to state 284
    FORM            shift and go to state 283
    IDENTICAL       shift and go to state 282

    compu_method_conversion_type   shift and go to state 285

state 203

    (361) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end . VARIANT_CODING

    VARIANT_CODING  shift and go to state 289


state 204

    (386) variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .

    end             reduce using rule 386 (variant_coding_optional_list -> variant_coding_optional variant_coding_optional_list .)


state 205

    (367) var_characteristic -> begin VAR_CHARACTERISTIC . IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC

    IDENT           shift and go to state 290


state 206

    (372) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB . ident_ident_value_list end VAR_FORBIDDEN_COMB
    (373) ident_ident_value_list -> . ident_ident_value
    (374) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (375) ident_ident_value -> . IDENT IDENT

    IDENT           shift and go to state 291

    ident_ident_value              shift and go to state 292
    ident_ident_value_list         shift and go to state 293

state 207

    (376) var_criterion -> begin VAR_CRITERION . IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    IDENT           shift and go to state 294


state 208

    (370) var_separator -> VAR_SEPARATOR STRING .

    VAR_SEPARATOR   reduce using rule 370 (var_separator -> VAR_SEPARATOR STRING .)
    VAR_NAMING      reduce using rule 370 (var_separator -> VAR_SEPARATOR STRING .)
    begin           reduce using rule 370 (var_separator -> VAR_SEPARATOR STRING .)
    end             reduce using rule 370 (var_separator -> VAR_SEPARATOR STRING .)


state 209

    (371) var_naming -> VAR_NAMING IDENT .

    VAR_SEPARATOR   reduce using rule 371 (var_naming -> VAR_NAMING IDENT .)
    VAR_NAMING      reduce using rule 371 (var_naming -> VAR_NAMING IDENT .)
    begin           reduce using rule 371 (var_naming -> VAR_NAMING IDENT .)
    end             reduce using rule 371 (var_naming -> VAR_NAMING IDENT .)


state 210

    (141) axis_pts -> begin AXIS_PTS IDENT STRING . NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 295


state 211

    (162) measurement -> begin MEASUREMENT IDENT STRING . datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 297

state 212

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING . NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE

    NUMERIC         shift and go to state 307


state 213

    (239) function -> begin FUNCTION IDENT STRING . function_optional_list_optional end FUNCTION
    (250) function_optional_list_optional -> . empty
    (251) function_optional_list_optional -> . function_optional_list
    (418) empty -> .
    (248) function_optional_list -> . function_optional
    (249) function_optional_list -> . function_optional function_optional_list
    (240) function_optional -> . annotation
    (241) function_optional -> . def_characteristic
    (242) function_optional -> . ref_characteristic
    (243) function_optional -> . in_measurement
    (244) function_optional -> . out_measurement
    (245) function_optional -> . loc_measurement
    (246) function_optional -> . sub_function
    (247) function_optional -> . function_version
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (252) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (253) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (254) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (255) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (256) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (257) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (258) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 418 (empty -> .)
    begin           shift and go to state 314
    FUNCTION_VERSION shift and go to state 309

    function_optional              shift and go to state 308
    out_measurement                shift and go to state 319
    loc_measurement                shift and go to state 310
    def_characteristic             shift and go to state 315
    function_version               shift and go to state 321
    sub_function                   shift and go to state 316
    in_measurement                 shift and go to state 312
    ref_characteristic             shift and go to state 320
    function_optional_list_optional shift and go to state 318
    function_optional_list         shift and go to state 317
    annotation                     shift and go to state 311
    empty                          shift and go to state 313

state 214

    (67) mod_par -> begin MOD_PAR end MOD_PAR .

    begin           reduce using rule 67 (mod_par -> begin MOD_PAR end MOD_PAR .)
    end             reduce using rule 67 (mod_par -> begin MOD_PAR end MOD_PAR .)


state 215

    (69) if_data -> begin IF_DATA IDENT end . IF_DATA

    IF_DATA         shift and go to state 322


state 216

    (220) compu_tab -> begin COMPU_TAB IDENT STRING . compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB
    (221) compu_tab_conversion_type -> . TAB_INTP
    (222) compu_tab_conversion_type -> . TAB_NOINTP

    TAB_INTP        shift and go to state 323
    TAB_NOINTP      shift and go to state 325

    compu_tab_conversion_type      shift and go to state 324

state 217

    (68) mod_common -> begin MOD_COMMON end MOD_COMMON .

    begin           reduce using rule 68 (mod_common -> begin MOD_COMMON end MOD_COMMON .)
    end             reduce using rule 68 (mod_common -> begin MOD_COMMON end MOD_COMMON .)


state 218

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING . characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC
    (71) characteristic_type -> . VALUE
    (72) characteristic_type -> . CURVE
    (73) characteristic_type -> . MAP
    (74) characteristic_type -> . CUBOID
    (75) characteristic_type -> . VAL_BLK
    (76) characteristic_type -> . ASCII

    VALUE           shift and go to state 327
    CURVE           shift and go to state 328
    MAP             shift and go to state 326
    CUBOID          shift and go to state 330
    VAL_BLK         shift and go to state 329
    ASCII           shift and go to state 332

    characteristic_type            shift and go to state 331

state 219

    (406) unit -> begin UNIT IDENT STRING . STRING unit_type unit_optional_list_optional end UNIT

    STRING          shift and go to state 333


state 220

    (400) user_rights_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 400 (user_rights_optional -> READ_ONLY .)
    begin           reduce using rule 400 (user_rights_optional -> READ_ONLY .)
    end             reduce using rule 400 (user_rights_optional -> READ_ONLY .)


state 221

    (405) ref_group -> begin . REF_GROUP ident_list end REF_GROUP

    REF_GROUP       shift and go to state 334


state 222

    (404) user_rights_optional_list_optional -> user_rights_optional_list .

    end             reduce using rule 404 (user_rights_optional_list_optional -> user_rights_optional_list .)


state 223

    (398) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional . end USER_RIGHTS

    end             shift and go to state 335


state 224

    (401) user_rights_optional_list -> user_rights_optional .
    (402) user_rights_optional_list -> user_rights_optional . user_rights_optional_list
    (401) user_rights_optional_list -> . user_rights_optional
    (402) user_rights_optional_list -> . user_rights_optional user_rights_optional_list
    (399) user_rights_optional -> . ref_group
    (400) user_rights_optional -> . READ_ONLY
    (405) ref_group -> . begin REF_GROUP ident_list end REF_GROUP

    end             reduce using rule 401 (user_rights_optional_list -> user_rights_optional .)
    READ_ONLY       shift and go to state 220
    begin           shift and go to state 221

    user_rights_optional           shift and go to state 224
    ref_group                      shift and go to state 225
    user_rights_optional_list      shift and go to state 336

state 225

    (399) user_rights_optional -> ref_group .

    READ_ONLY       reduce using rule 399 (user_rights_optional -> ref_group .)
    begin           reduce using rule 399 (user_rights_optional -> ref_group .)
    end             reduce using rule 399 (user_rights_optional -> ref_group .)


state 226

    (403) user_rights_optional_list_optional -> empty .

    end             reduce using rule 403 (user_rights_optional_list_optional -> empty .)


state 227

    (390) frame -> begin FRAME IDENT STRING . NUMERIC NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 337


state 228

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type . NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB

    NUMERIC         shift and go to state 338


state 229

    (227) compu_vtab_conversion_type -> TAB_VERB .

    NUMERIC         reduce using rule 227 (compu_vtab_conversion_type -> TAB_VERB .)


state 230

    (259) group -> begin GROUP IDENT STRING group_optional_list_optional . end GROUP

    end             shift and go to state 339


state 231

    (263) group_optional -> ref_measurement .

    ROOT            reduce using rule 263 (group_optional -> ref_measurement .)
    begin           reduce using rule 263 (group_optional -> ref_measurement .)
    end             reduce using rule 263 (group_optional -> ref_measurement .)


state 232

    (260) group_optional -> annotation .

    ROOT            reduce using rule 260 (group_optional -> annotation .)
    begin           reduce using rule 260 (group_optional -> annotation .)
    end             reduce using rule 260 (group_optional -> annotation .)


state 233

    (261) group_optional -> ROOT .

    ROOT            reduce using rule 261 (group_optional -> ROOT .)
    begin           reduce using rule 261 (group_optional -> ROOT .)
    end             reduce using rule 261 (group_optional -> ROOT .)


state 234

    (268) group_optional_list_optional -> empty .

    end             reduce using rule 268 (group_optional_list_optional -> empty .)


state 235

    (91) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (253) ref_characteristic -> begin . REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (270) ref_measurement -> begin . REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (83) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (271) sub_group -> begin . SUB_GROUP ident_list end SUB_GROUP

    ANNOTATION      shift and go to state 344
    REF_CHARACTERISTIC shift and go to state 343
    REF_MEASUREMENT shift and go to state 342
    FUNCTION_LIST   shift and go to state 341
    SUB_GROUP       shift and go to state 340


state 236

    (265) group_optional -> sub_group .

    ROOT            reduce using rule 265 (group_optional -> sub_group .)
    begin           reduce using rule 265 (group_optional -> sub_group .)
    end             reduce using rule 265 (group_optional -> sub_group .)


state 237

    (269) group_optional_list_optional -> group_optional_list .

    end             reduce using rule 269 (group_optional_list_optional -> group_optional_list .)


state 238

    (266) group_optional_list -> group_optional .
    (267) group_optional_list -> group_optional . group_optional_list
    (266) group_optional_list -> . group_optional
    (267) group_optional_list -> . group_optional group_optional_list
    (260) group_optional -> . annotation
    (261) group_optional -> . ROOT
    (262) group_optional -> . ref_characteristic
    (263) group_optional -> . ref_measurement
    (264) group_optional -> . function_list
    (265) group_optional -> . sub_group
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (253) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (270) ref_measurement -> . begin REF_MEASUREMENT ident_list end REF_MEASUREMENT
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (271) sub_group -> . begin SUB_GROUP ident_list end SUB_GROUP

    end             reduce using rule 266 (group_optional_list -> group_optional .)
    ROOT            shift and go to state 233
    begin           shift and go to state 235

    sub_group                      shift and go to state 236
    function_list                  shift and go to state 239
    group_optional                 shift and go to state 238
    ref_measurement                shift and go to state 231
    ref_characteristic             shift and go to state 240
    group_optional_list            shift and go to state 345
    annotation                     shift and go to state 232

state 239

    (264) group_optional -> function_list .

    ROOT            reduce using rule 264 (group_optional -> function_list .)
    begin           reduce using rule 264 (group_optional -> function_list .)
    end             reduce using rule 264 (group_optional -> function_list .)


state 240

    (262) group_optional -> ref_characteristic .

    ROOT            reduce using rule 262 (group_optional -> ref_characteristic .)
    begin           reduce using rule 262 (group_optional -> ref_characteristic .)
    end             reduce using rule 262 (group_optional -> ref_characteristic .)


state 241

    (330) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 346

state 242

    (329) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 347

state 243

    (331) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 348

state 244

    (340) src_addr_z -> SRC_ADDR_Z NUMERIC . src_addr_optional
    (341) src_addr_optional -> . empty
    (342) src_addr_optional -> . datatype
    (418) empty -> .
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 418 (empty -> .)
    IDENTIFICATION  reduce using rule 418 (empty -> .)
    AXIS_PTS_X      reduce using rule 418 (empty -> .)
    AXIS_PTS_Y      reduce using rule 418 (empty -> .)
    AXIS_PTS_Z      reduce using rule 418 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 418 (empty -> .)
    NO_RESCALE_X    reduce using rule 418 (empty -> .)
    NO_RESCALE_Y    reduce using rule 418 (empty -> .)
    NO_RESCALE_Z    reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 418 (empty -> .)
    SRC_ADDR_X      reduce using rule 418 (empty -> .)
    SRC_ADDR_Y      reduce using rule 418 (empty -> .)
    SRC_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_X      reduce using rule 418 (empty -> .)
    RIP_ADDR_Y      reduce using rule 418 (empty -> .)
    RIP_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_W      reduce using rule 418 (empty -> .)
    SHIFT_OP_X      reduce using rule 418 (empty -> .)
    SHIFT_OP_Y      reduce using rule 418 (empty -> .)
    SHIFT_OP_Z      reduce using rule 418 (empty -> .)
    OFFSET_X        reduce using rule 418 (empty -> .)
    OFFSET_Y        reduce using rule 418 (empty -> .)
    OFFSET_Z        reduce using rule 418 (empty -> .)
    DIST_OP_X       reduce using rule 418 (empty -> .)
    DIST_OP_Y       reduce using rule 418 (empty -> .)
    DIST_OP_Z       reduce using rule 418 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 418 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 418 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 418 (empty -> .)
    RESERVED        reduce using rule 418 (empty -> .)
    end             reduce using rule 418 (empty -> .)
    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 349
    empty                          shift and go to state 351
    src_addr_optional              shift and go to state 350

state 245

    (339) src_addr_y -> SRC_ADDR_Y NUMERIC . src_addr_optional
    (341) src_addr_optional -> . empty
    (342) src_addr_optional -> . datatype
    (418) empty -> .
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 418 (empty -> .)
    IDENTIFICATION  reduce using rule 418 (empty -> .)
    AXIS_PTS_X      reduce using rule 418 (empty -> .)
    AXIS_PTS_Y      reduce using rule 418 (empty -> .)
    AXIS_PTS_Z      reduce using rule 418 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 418 (empty -> .)
    NO_RESCALE_X    reduce using rule 418 (empty -> .)
    NO_RESCALE_Y    reduce using rule 418 (empty -> .)
    NO_RESCALE_Z    reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 418 (empty -> .)
    SRC_ADDR_X      reduce using rule 418 (empty -> .)
    SRC_ADDR_Y      reduce using rule 418 (empty -> .)
    SRC_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_X      reduce using rule 418 (empty -> .)
    RIP_ADDR_Y      reduce using rule 418 (empty -> .)
    RIP_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_W      reduce using rule 418 (empty -> .)
    SHIFT_OP_X      reduce using rule 418 (empty -> .)
    SHIFT_OP_Y      reduce using rule 418 (empty -> .)
    SHIFT_OP_Z      reduce using rule 418 (empty -> .)
    OFFSET_X        reduce using rule 418 (empty -> .)
    OFFSET_Y        reduce using rule 418 (empty -> .)
    OFFSET_Z        reduce using rule 418 (empty -> .)
    DIST_OP_X       reduce using rule 418 (empty -> .)
    DIST_OP_Y       reduce using rule 418 (empty -> .)
    DIST_OP_Z       reduce using rule 418 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 418 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 418 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 418 (empty -> .)
    RESERVED        reduce using rule 418 (empty -> .)
    end             reduce using rule 418 (empty -> .)
    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 349
    empty                          shift and go to state 351
    src_addr_optional              shift and go to state 352

state 246

    (338) src_addr_x -> SRC_ADDR_X NUMERIC . src_addr_optional
    (341) src_addr_optional -> . empty
    (342) src_addr_optional -> . datatype
    (418) empty -> .
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    FNC_VALUES      reduce using rule 418 (empty -> .)
    IDENTIFICATION  reduce using rule 418 (empty -> .)
    AXIS_PTS_X      reduce using rule 418 (empty -> .)
    AXIS_PTS_Y      reduce using rule 418 (empty -> .)
    AXIS_PTS_Z      reduce using rule 418 (empty -> .)
    AXIS_RESCALE_X  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Y  reduce using rule 418 (empty -> .)
    AXIS_RESCALE_Z  reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_X   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Y   reduce using rule 418 (empty -> .)
    NO_AXIS_PTS_Z   reduce using rule 418 (empty -> .)
    NO_RESCALE_X    reduce using rule 418 (empty -> .)
    NO_RESCALE_Y    reduce using rule 418 (empty -> .)
    NO_RESCALE_Z    reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_X reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Y reduce using rule 418 (empty -> .)
    FIX_NO_AXIS_PTS_Z reduce using rule 418 (empty -> .)
    SRC_ADDR_X      reduce using rule 418 (empty -> .)
    SRC_ADDR_Y      reduce using rule 418 (empty -> .)
    SRC_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_X      reduce using rule 418 (empty -> .)
    RIP_ADDR_Y      reduce using rule 418 (empty -> .)
    RIP_ADDR_Z      reduce using rule 418 (empty -> .)
    RIP_ADDR_W      reduce using rule 418 (empty -> .)
    SHIFT_OP_X      reduce using rule 418 (empty -> .)
    SHIFT_OP_Y      reduce using rule 418 (empty -> .)
    SHIFT_OP_Z      reduce using rule 418 (empty -> .)
    OFFSET_X        reduce using rule 418 (empty -> .)
    OFFSET_Y        reduce using rule 418 (empty -> .)
    OFFSET_Z        reduce using rule 418 (empty -> .)
    DIST_OP_X       reduce using rule 418 (empty -> .)
    DIST_OP_Y       reduce using rule 418 (empty -> .)
    DIST_OP_Z       reduce using rule 418 (empty -> .)
    ALIGNMENT_BYTE  reduce using rule 418 (empty -> .)
    ALIGNMENT_WORD  reduce using rule 418 (empty -> .)
    ALIGNMENT_LONG  reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 418 (empty -> .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 418 (empty -> .)
    RESERVED        reduce using rule 418 (empty -> .)
    end             reduce using rule 418 (empty -> .)
    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 349
    empty                          shift and go to state 351
    src_addr_optional              shift and go to state 353

state 247

    (325) axis_pts_z -> AXIS_PTS_Z NUMERIC . datatype indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 354

state 248

    (323) axis_pts_x -> AXIS_PTS_X NUMERIC . datatype indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 355

state 249

    (324) axis_pts_y -> AXIS_PTS_Y NUMERIC . datatype indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 356

state 250

    (358) alignment_long -> ALIGNMENT_LONG NUMERIC .

    FNC_VALUES      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    IDENTIFICATION  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_X      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Y      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_PTS_Z      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_X    reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Y    reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    NO_RESCALE_Z    reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_X      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Y      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SRC_ADDR_Z      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_X      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Y      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_Z      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RIP_ADDR_W      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_X      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Y      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    SHIFT_OP_Z      reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_X        reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Y        reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    OFFSET_Z        reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_X       reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Y       reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    DIST_OP_Z       reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    RESERVED        reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)
    end             reduce using rule 358 (alignment_long -> ALIGNMENT_LONG NUMERIC .)


state 251

    (348) shift_op_y -> SHIFT_OP_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 357

state 252

    (347) shift_op_x -> SHIFT_OP_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 358

state 253

    (349) shift_op_z -> SHIFT_OP_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 359

state 254

    (360) alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .

    FNC_VALUES      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    RESERVED        reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)
    end             reduce using rule 360 (alignment_float64_ieee -> ALIGNMENT_FLOAT64_IEEE NUMERIC .)


state 255

    (336) fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .

    FNC_VALUES      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    IDENTIFICATION  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_X      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Y      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_PTS_Z      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_X    reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Y    reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    NO_RESCALE_Z    reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_X      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Y      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SRC_ADDR_Z      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_X      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Y      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_Z      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RIP_ADDR_W      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_X      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Y      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    SHIFT_OP_Z      reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_X        reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Y        reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    OFFSET_Z        reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_X       reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Y       reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    DIST_OP_Z       reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    RESERVED        reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)
    end             reduce using rule 336 (fix_no_axis_pts_y -> FIX_NO_AXIS_PTS_Y NUMERIC .)


state 256

    (335) fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .

    FNC_VALUES      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    IDENTIFICATION  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_X      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Y      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_PTS_Z      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_X    reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Y    reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    NO_RESCALE_Z    reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_X      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Y      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SRC_ADDR_Z      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_X      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Y      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_Z      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RIP_ADDR_W      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_X      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Y      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    SHIFT_OP_Z      reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_X        reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Y        reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    OFFSET_Z        reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_X       reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Y       reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    DIST_OP_Z       reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    RESERVED        reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)
    end             reduce using rule 335 (fix_no_axis_pts_x -> FIX_NO_AXIS_PTS_X NUMERIC .)


state 257

    (337) fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .

    FNC_VALUES      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    IDENTIFICATION  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_X      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Y      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_PTS_Z      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_X    reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Y    reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    NO_RESCALE_Z    reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_X      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Y      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SRC_ADDR_Z      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_X      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Y      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_Z      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RIP_ADDR_W      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_X      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Y      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    SHIFT_OP_Z      reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_X        reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Y        reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    OFFSET_Z        reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_X       reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Y       reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    DIST_OP_Z       reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    RESERVED        reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)
    end             reduce using rule 337 (fix_no_axis_pts_z -> FIX_NO_AXIS_PTS_Z NUMERIC .)


state 258

    (334) no_rescale_z -> NO_RESCALE_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 360

state 259

    (332) no_rescale_x -> NO_RESCALE_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 361

state 260

    (333) no_rescale_y -> NO_RESCALE_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 362

state 261

    (355) dist_op_z -> DIST_OP_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 363

state 262

    (353) dist_op_x -> DIST_OP_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 364

state 263

    (354) dist_op_y -> DIST_OP_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 365

state 264

    (359) alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .

    FNC_VALUES      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    IDENTIFICATION  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_X      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_X    reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_X      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_X      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RIP_ADDR_W      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_X      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_X        reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Y        reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    OFFSET_Z        reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_X       reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Y       reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    DIST_OP_Z       reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    RESERVED        reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)
    end             reduce using rule 359 (alignment_float32_ieee -> ALIGNMENT_FLOAT32_IEEE NUMERIC .)


state 265

    (313) record_layout_optional_list -> record_layout_optional record_layout_optional_list .

    end             reduce using rule 313 (record_layout_optional_list -> record_layout_optional record_layout_optional_list .)


state 266

    (272) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end . RECORD_LAYOUT

    RECORD_LAYOUT   shift and go to state 366


state 267

    (357) alignment_word -> ALIGNMENT_WORD NUMERIC .

    FNC_VALUES      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    IDENTIFICATION  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_X      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Y      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_PTS_Z      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_X    reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Y    reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    NO_RESCALE_Z    reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_X      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Y      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SRC_ADDR_Z      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_X      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Y      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_Z      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RIP_ADDR_W      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_X      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Y      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    SHIFT_OP_Z      reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_X        reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Y        reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    OFFSET_Z        reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_X       reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Y       reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    DIST_OP_Z       reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    RESERVED        reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)
    end             reduce using rule 357 (alignment_word -> ALIGNMENT_WORD NUMERIC .)


state 268

    (322) identification -> IDENTIFICATION NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 367

state 269

    (356) alignment_byte -> ALIGNMENT_BYTE NUMERIC .

    FNC_VALUES      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    IDENTIFICATION  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_X      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Y      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_PTS_Z      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_X  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Y  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    AXIS_RESCALE_Z  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_X   reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Y   reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_AXIS_PTS_Z   reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_X    reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Y    reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    NO_RESCALE_Z    reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_X reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Y reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    FIX_NO_AXIS_PTS_Z reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_X      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Y      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SRC_ADDR_Z      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_X      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Y      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_Z      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RIP_ADDR_W      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_X      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Y      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    SHIFT_OP_Z      reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_X        reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Y        reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    OFFSET_Z        reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_X       reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Y       reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    DIST_OP_Z       reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_BYTE  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_WORD  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_LONG  reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    RESERVED        reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)
    end             reduce using rule 356 (alignment_byte -> ALIGNMENT_BYTE NUMERIC .)


state 270

    (350) offset_x -> OFFSET_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 368

state 271

    (351) offset_y -> OFFSET_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 369

state 272

    (352) offset_z -> OFFSET_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 370

state 273

    (328) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC . datatype NUMERIC indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 371

state 274

    (326) axis_rescale_x -> AXIS_RESCALE_X NUMERIC . datatype NUMERIC indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 372

state 275

    (327) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC . datatype NUMERIC indexorder addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 373

state 276

    (346) rip_addr_w -> RIP_ADDR_W NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 374

state 277

    (345) rip_addr_z -> RIP_ADDR_Z NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 375

state 278

    (343) rip_addr_x -> RIP_ADDR_X NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 376

state 279

    (344) rip_addr_y -> RIP_ADDR_Y NUMERIC . datatype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 377

state 280

    (389) reserved -> RESERVED NUMERIC . datasize
    (12) datasize -> . BYTE
    (13) datasize -> . WORD
    (14) datasize -> . LONG

    BYTE            shift and go to state 380
    WORD            shift and go to state 378
    LONG            shift and go to state 379

    datasize                       shift and go to state 381

state 281

    (316) fnc_values -> FNC_VALUES NUMERIC . datatype fnc_values_index_mode addrtype
    (2) datatype -> . UBYTE
    (3) datatype -> . SBYTE
    (4) datatype -> . UWORD
    (5) datatype -> . SWORD
    (6) datatype -> . ULONG
    (7) datatype -> . SLONG
    (8) datatype -> . A_UINT64
    (9) datatype -> . A_INT64
    (10) datatype -> . FLOAT32_IEEE
    (11) datatype -> . FLOAT64_IEEE

    UBYTE           shift and go to state 306
    SBYTE           shift and go to state 305
    UWORD           shift and go to state 302
    SWORD           shift and go to state 303
    ULONG           shift and go to state 296
    SLONG           shift and go to state 304
    A_UINT64        shift and go to state 300
    A_INT64         shift and go to state 298
    FLOAT32_IEEE    shift and go to state 299
    FLOAT64_IEEE    shift and go to state 301

    datatype                       shift and go to state 382

state 282

    (201) compu_method_conversion_type -> IDENTICAL .

    STRING          reduce using rule 201 (compu_method_conversion_type -> IDENTICAL .)


state 283

    (200) compu_method_conversion_type -> FORM .

    STRING          reduce using rule 200 (compu_method_conversion_type -> FORM .)


state 284

    (199) compu_method_conversion_type -> RAT_FUNC .

    STRING          reduce using rule 199 (compu_method_conversion_type -> RAT_FUNC .)


state 285

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type . STRING STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 383


state 286

    (196) compu_method_conversion_type -> TAB_INTP .

    STRING          reduce using rule 196 (compu_method_conversion_type -> TAB_INTP .)


state 287

    (197) compu_method_conversion_type -> TAB_NOINTP .

    STRING          reduce using rule 197 (compu_method_conversion_type -> TAB_NOINTP .)


state 288

    (198) compu_method_conversion_type -> TAB_VERB .

    STRING          reduce using rule 198 (compu_method_conversion_type -> TAB_VERB .)


state 289

    (361) variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .

    begin           reduce using rule 361 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)
    end             reduce using rule 361 (variant_coding -> begin VARIANT_CODING variant_coding_optional_list_optional end VARIANT_CODING .)


state 290

    (367) var_characteristic -> begin VAR_CHARACTERISTIC IDENT . ident_list var_characteristic_optional end VAR_CHARACTERISTIC
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 385

state 291

    (375) ident_ident_value -> IDENT . IDENT

    IDENT           shift and go to state 386


state 292

    (373) ident_ident_value_list -> ident_ident_value .
    (374) ident_ident_value_list -> ident_ident_value . ident_ident_value_list
    (373) ident_ident_value_list -> . ident_ident_value
    (374) ident_ident_value_list -> . ident_ident_value ident_ident_value_list
    (375) ident_ident_value -> . IDENT IDENT

    end             reduce using rule 373 (ident_ident_value_list -> ident_ident_value .)
    IDENT           shift and go to state 291

    ident_ident_value              shift and go to state 292
    ident_ident_value_list         shift and go to state 387

state 293

    (372) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list . end VAR_FORBIDDEN_COMB

    end             shift and go to state 388


state 294

    (376) var_criterion -> begin VAR_CRITERION IDENT . STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION

    STRING          shift and go to state 389


state 295

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC . IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 390


state 296

    (6) datatype -> ULONG .

    FNC_VALUES      reduce using rule 6 (datatype -> ULONG .)
    IDENTIFICATION  reduce using rule 6 (datatype -> ULONG .)
    AXIS_PTS_X      reduce using rule 6 (datatype -> ULONG .)
    AXIS_PTS_Y      reduce using rule 6 (datatype -> ULONG .)
    AXIS_PTS_Z      reduce using rule 6 (datatype -> ULONG .)
    AXIS_RESCALE_X  reduce using rule 6 (datatype -> ULONG .)
    AXIS_RESCALE_Y  reduce using rule 6 (datatype -> ULONG .)
    AXIS_RESCALE_Z  reduce using rule 6 (datatype -> ULONG .)
    NO_AXIS_PTS_X   reduce using rule 6 (datatype -> ULONG .)
    NO_AXIS_PTS_Y   reduce using rule 6 (datatype -> ULONG .)
    NO_AXIS_PTS_Z   reduce using rule 6 (datatype -> ULONG .)
    NO_RESCALE_X    reduce using rule 6 (datatype -> ULONG .)
    NO_RESCALE_Y    reduce using rule 6 (datatype -> ULONG .)
    NO_RESCALE_Z    reduce using rule 6 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 6 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 6 (datatype -> ULONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 6 (datatype -> ULONG .)
    SRC_ADDR_X      reduce using rule 6 (datatype -> ULONG .)
    SRC_ADDR_Y      reduce using rule 6 (datatype -> ULONG .)
    SRC_ADDR_Z      reduce using rule 6 (datatype -> ULONG .)
    RIP_ADDR_X      reduce using rule 6 (datatype -> ULONG .)
    RIP_ADDR_Y      reduce using rule 6 (datatype -> ULONG .)
    RIP_ADDR_Z      reduce using rule 6 (datatype -> ULONG .)
    RIP_ADDR_W      reduce using rule 6 (datatype -> ULONG .)
    SHIFT_OP_X      reduce using rule 6 (datatype -> ULONG .)
    SHIFT_OP_Y      reduce using rule 6 (datatype -> ULONG .)
    SHIFT_OP_Z      reduce using rule 6 (datatype -> ULONG .)
    OFFSET_X        reduce using rule 6 (datatype -> ULONG .)
    OFFSET_Y        reduce using rule 6 (datatype -> ULONG .)
    OFFSET_Z        reduce using rule 6 (datatype -> ULONG .)
    DIST_OP_X       reduce using rule 6 (datatype -> ULONG .)
    DIST_OP_Y       reduce using rule 6 (datatype -> ULONG .)
    DIST_OP_Z       reduce using rule 6 (datatype -> ULONG .)
    ALIGNMENT_BYTE  reduce using rule 6 (datatype -> ULONG .)
    ALIGNMENT_WORD  reduce using rule 6 (datatype -> ULONG .)
    ALIGNMENT_LONG  reduce using rule 6 (datatype -> ULONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 6 (datatype -> ULONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 6 (datatype -> ULONG .)
    RESERVED        reduce using rule 6 (datatype -> ULONG .)
    end             reduce using rule 6 (datatype -> ULONG .)
    NUMERIC         reduce using rule 6 (datatype -> ULONG .)
    IDENT           reduce using rule 6 (datatype -> ULONG .)
    COLUMN_DIR      reduce using rule 6 (datatype -> ULONG .)
    ROW_DIR         reduce using rule 6 (datatype -> ULONG .)
    ALTERNATE_WITH_X reduce using rule 6 (datatype -> ULONG .)
    ALTERNATE_WITH_Y reduce using rule 6 (datatype -> ULONG .)
    ALTERNATE_CURVES reduce using rule 6 (datatype -> ULONG .)
    INDEX_INCR      reduce using rule 6 (datatype -> ULONG .)
    INDEX_DECR      reduce using rule 6 (datatype -> ULONG .)


state 297

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype . IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    IDENT           shift and go to state 391


state 298

    (9) datatype -> A_INT64 .

    FNC_VALUES      reduce using rule 9 (datatype -> A_INT64 .)
    IDENTIFICATION  reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_PTS_X      reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_PTS_Y      reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_PTS_Z      reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_RESCALE_X  reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_RESCALE_Y  reduce using rule 9 (datatype -> A_INT64 .)
    AXIS_RESCALE_Z  reduce using rule 9 (datatype -> A_INT64 .)
    NO_AXIS_PTS_X   reduce using rule 9 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Y   reduce using rule 9 (datatype -> A_INT64 .)
    NO_AXIS_PTS_Z   reduce using rule 9 (datatype -> A_INT64 .)
    NO_RESCALE_X    reduce using rule 9 (datatype -> A_INT64 .)
    NO_RESCALE_Y    reduce using rule 9 (datatype -> A_INT64 .)
    NO_RESCALE_Z    reduce using rule 9 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 9 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 9 (datatype -> A_INT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 9 (datatype -> A_INT64 .)
    SRC_ADDR_X      reduce using rule 9 (datatype -> A_INT64 .)
    SRC_ADDR_Y      reduce using rule 9 (datatype -> A_INT64 .)
    SRC_ADDR_Z      reduce using rule 9 (datatype -> A_INT64 .)
    RIP_ADDR_X      reduce using rule 9 (datatype -> A_INT64 .)
    RIP_ADDR_Y      reduce using rule 9 (datatype -> A_INT64 .)
    RIP_ADDR_Z      reduce using rule 9 (datatype -> A_INT64 .)
    RIP_ADDR_W      reduce using rule 9 (datatype -> A_INT64 .)
    SHIFT_OP_X      reduce using rule 9 (datatype -> A_INT64 .)
    SHIFT_OP_Y      reduce using rule 9 (datatype -> A_INT64 .)
    SHIFT_OP_Z      reduce using rule 9 (datatype -> A_INT64 .)
    OFFSET_X        reduce using rule 9 (datatype -> A_INT64 .)
    OFFSET_Y        reduce using rule 9 (datatype -> A_INT64 .)
    OFFSET_Z        reduce using rule 9 (datatype -> A_INT64 .)
    DIST_OP_X       reduce using rule 9 (datatype -> A_INT64 .)
    DIST_OP_Y       reduce using rule 9 (datatype -> A_INT64 .)
    DIST_OP_Z       reduce using rule 9 (datatype -> A_INT64 .)
    ALIGNMENT_BYTE  reduce using rule 9 (datatype -> A_INT64 .)
    ALIGNMENT_WORD  reduce using rule 9 (datatype -> A_INT64 .)
    ALIGNMENT_LONG  reduce using rule 9 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 9 (datatype -> A_INT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 9 (datatype -> A_INT64 .)
    RESERVED        reduce using rule 9 (datatype -> A_INT64 .)
    end             reduce using rule 9 (datatype -> A_INT64 .)
    NUMERIC         reduce using rule 9 (datatype -> A_INT64 .)
    IDENT           reduce using rule 9 (datatype -> A_INT64 .)
    COLUMN_DIR      reduce using rule 9 (datatype -> A_INT64 .)
    ROW_DIR         reduce using rule 9 (datatype -> A_INT64 .)
    ALTERNATE_WITH_X reduce using rule 9 (datatype -> A_INT64 .)
    ALTERNATE_WITH_Y reduce using rule 9 (datatype -> A_INT64 .)
    ALTERNATE_CURVES reduce using rule 9 (datatype -> A_INT64 .)
    INDEX_INCR      reduce using rule 9 (datatype -> A_INT64 .)
    INDEX_DECR      reduce using rule 9 (datatype -> A_INT64 .)


state 299

    (10) datatype -> FLOAT32_IEEE .

    FNC_VALUES      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    IDENTIFICATION  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_X      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Y      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_PTS_Z      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_X  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_X    reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Y    reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NO_RESCALE_Z    reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_X      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Y      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SRC_ADDR_Z      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_X      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Y      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_Z      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    RIP_ADDR_W      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_X      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Y      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    SHIFT_OP_Z      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    OFFSET_X        reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    OFFSET_Y        reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    OFFSET_Z        reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    DIST_OP_X       reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Y       reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    DIST_OP_Z       reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_WORD  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_LONG  reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    RESERVED        reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    end             reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    NUMERIC         reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    IDENT           reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    COLUMN_DIR      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ROW_DIR         reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_X reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    ALTERNATE_CURVES reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    INDEX_INCR      reduce using rule 10 (datatype -> FLOAT32_IEEE .)
    INDEX_DECR      reduce using rule 10 (datatype -> FLOAT32_IEEE .)


state 300

    (8) datatype -> A_UINT64 .

    FNC_VALUES      reduce using rule 8 (datatype -> A_UINT64 .)
    IDENTIFICATION  reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_PTS_X      reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_PTS_Y      reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_PTS_Z      reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_RESCALE_X  reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Y  reduce using rule 8 (datatype -> A_UINT64 .)
    AXIS_RESCALE_Z  reduce using rule 8 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_X   reduce using rule 8 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Y   reduce using rule 8 (datatype -> A_UINT64 .)
    NO_AXIS_PTS_Z   reduce using rule 8 (datatype -> A_UINT64 .)
    NO_RESCALE_X    reduce using rule 8 (datatype -> A_UINT64 .)
    NO_RESCALE_Y    reduce using rule 8 (datatype -> A_UINT64 .)
    NO_RESCALE_Z    reduce using rule 8 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_X reduce using rule 8 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Y reduce using rule 8 (datatype -> A_UINT64 .)
    FIX_NO_AXIS_PTS_Z reduce using rule 8 (datatype -> A_UINT64 .)
    SRC_ADDR_X      reduce using rule 8 (datatype -> A_UINT64 .)
    SRC_ADDR_Y      reduce using rule 8 (datatype -> A_UINT64 .)
    SRC_ADDR_Z      reduce using rule 8 (datatype -> A_UINT64 .)
    RIP_ADDR_X      reduce using rule 8 (datatype -> A_UINT64 .)
    RIP_ADDR_Y      reduce using rule 8 (datatype -> A_UINT64 .)
    RIP_ADDR_Z      reduce using rule 8 (datatype -> A_UINT64 .)
    RIP_ADDR_W      reduce using rule 8 (datatype -> A_UINT64 .)
    SHIFT_OP_X      reduce using rule 8 (datatype -> A_UINT64 .)
    SHIFT_OP_Y      reduce using rule 8 (datatype -> A_UINT64 .)
    SHIFT_OP_Z      reduce using rule 8 (datatype -> A_UINT64 .)
    OFFSET_X        reduce using rule 8 (datatype -> A_UINT64 .)
    OFFSET_Y        reduce using rule 8 (datatype -> A_UINT64 .)
    OFFSET_Z        reduce using rule 8 (datatype -> A_UINT64 .)
    DIST_OP_X       reduce using rule 8 (datatype -> A_UINT64 .)
    DIST_OP_Y       reduce using rule 8 (datatype -> A_UINT64 .)
    DIST_OP_Z       reduce using rule 8 (datatype -> A_UINT64 .)
    ALIGNMENT_BYTE  reduce using rule 8 (datatype -> A_UINT64 .)
    ALIGNMENT_WORD  reduce using rule 8 (datatype -> A_UINT64 .)
    ALIGNMENT_LONG  reduce using rule 8 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 8 (datatype -> A_UINT64 .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 8 (datatype -> A_UINT64 .)
    RESERVED        reduce using rule 8 (datatype -> A_UINT64 .)
    end             reduce using rule 8 (datatype -> A_UINT64 .)
    NUMERIC         reduce using rule 8 (datatype -> A_UINT64 .)
    IDENT           reduce using rule 8 (datatype -> A_UINT64 .)
    COLUMN_DIR      reduce using rule 8 (datatype -> A_UINT64 .)
    ROW_DIR         reduce using rule 8 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_X reduce using rule 8 (datatype -> A_UINT64 .)
    ALTERNATE_WITH_Y reduce using rule 8 (datatype -> A_UINT64 .)
    ALTERNATE_CURVES reduce using rule 8 (datatype -> A_UINT64 .)
    INDEX_INCR      reduce using rule 8 (datatype -> A_UINT64 .)
    INDEX_DECR      reduce using rule 8 (datatype -> A_UINT64 .)


state 301

    (11) datatype -> FLOAT64_IEEE .

    FNC_VALUES      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    IDENTIFICATION  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_X      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Y      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_PTS_Z      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_X  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Y  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    AXIS_RESCALE_Z  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_X   reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Y   reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_AXIS_PTS_Z   reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_X    reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Y    reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NO_RESCALE_Z    reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_X reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_X      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Y      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SRC_ADDR_Z      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_X      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Y      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_Z      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    RIP_ADDR_W      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_X      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Y      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    SHIFT_OP_Z      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    OFFSET_X        reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    OFFSET_Y        reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    OFFSET_Z        reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    DIST_OP_X       reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Y       reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    DIST_OP_Z       reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_BYTE  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_WORD  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_LONG  reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    RESERVED        reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    end             reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    NUMERIC         reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    IDENT           reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    COLUMN_DIR      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ROW_DIR         reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_X reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_WITH_Y reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    ALTERNATE_CURVES reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    INDEX_INCR      reduce using rule 11 (datatype -> FLOAT64_IEEE .)
    INDEX_DECR      reduce using rule 11 (datatype -> FLOAT64_IEEE .)


state 302

    (4) datatype -> UWORD .

    FNC_VALUES      reduce using rule 4 (datatype -> UWORD .)
    IDENTIFICATION  reduce using rule 4 (datatype -> UWORD .)
    AXIS_PTS_X      reduce using rule 4 (datatype -> UWORD .)
    AXIS_PTS_Y      reduce using rule 4 (datatype -> UWORD .)
    AXIS_PTS_Z      reduce using rule 4 (datatype -> UWORD .)
    AXIS_RESCALE_X  reduce using rule 4 (datatype -> UWORD .)
    AXIS_RESCALE_Y  reduce using rule 4 (datatype -> UWORD .)
    AXIS_RESCALE_Z  reduce using rule 4 (datatype -> UWORD .)
    NO_AXIS_PTS_X   reduce using rule 4 (datatype -> UWORD .)
    NO_AXIS_PTS_Y   reduce using rule 4 (datatype -> UWORD .)
    NO_AXIS_PTS_Z   reduce using rule 4 (datatype -> UWORD .)
    NO_RESCALE_X    reduce using rule 4 (datatype -> UWORD .)
    NO_RESCALE_Y    reduce using rule 4 (datatype -> UWORD .)
    NO_RESCALE_Z    reduce using rule 4 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 4 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 4 (datatype -> UWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 4 (datatype -> UWORD .)
    SRC_ADDR_X      reduce using rule 4 (datatype -> UWORD .)
    SRC_ADDR_Y      reduce using rule 4 (datatype -> UWORD .)
    SRC_ADDR_Z      reduce using rule 4 (datatype -> UWORD .)
    RIP_ADDR_X      reduce using rule 4 (datatype -> UWORD .)
    RIP_ADDR_Y      reduce using rule 4 (datatype -> UWORD .)
    RIP_ADDR_Z      reduce using rule 4 (datatype -> UWORD .)
    RIP_ADDR_W      reduce using rule 4 (datatype -> UWORD .)
    SHIFT_OP_X      reduce using rule 4 (datatype -> UWORD .)
    SHIFT_OP_Y      reduce using rule 4 (datatype -> UWORD .)
    SHIFT_OP_Z      reduce using rule 4 (datatype -> UWORD .)
    OFFSET_X        reduce using rule 4 (datatype -> UWORD .)
    OFFSET_Y        reduce using rule 4 (datatype -> UWORD .)
    OFFSET_Z        reduce using rule 4 (datatype -> UWORD .)
    DIST_OP_X       reduce using rule 4 (datatype -> UWORD .)
    DIST_OP_Y       reduce using rule 4 (datatype -> UWORD .)
    DIST_OP_Z       reduce using rule 4 (datatype -> UWORD .)
    ALIGNMENT_BYTE  reduce using rule 4 (datatype -> UWORD .)
    ALIGNMENT_WORD  reduce using rule 4 (datatype -> UWORD .)
    ALIGNMENT_LONG  reduce using rule 4 (datatype -> UWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 4 (datatype -> UWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 4 (datatype -> UWORD .)
    RESERVED        reduce using rule 4 (datatype -> UWORD .)
    end             reduce using rule 4 (datatype -> UWORD .)
    NUMERIC         reduce using rule 4 (datatype -> UWORD .)
    IDENT           reduce using rule 4 (datatype -> UWORD .)
    COLUMN_DIR      reduce using rule 4 (datatype -> UWORD .)
    ROW_DIR         reduce using rule 4 (datatype -> UWORD .)
    ALTERNATE_WITH_X reduce using rule 4 (datatype -> UWORD .)
    ALTERNATE_WITH_Y reduce using rule 4 (datatype -> UWORD .)
    ALTERNATE_CURVES reduce using rule 4 (datatype -> UWORD .)
    INDEX_INCR      reduce using rule 4 (datatype -> UWORD .)
    INDEX_DECR      reduce using rule 4 (datatype -> UWORD .)


state 303

    (5) datatype -> SWORD .

    FNC_VALUES      reduce using rule 5 (datatype -> SWORD .)
    IDENTIFICATION  reduce using rule 5 (datatype -> SWORD .)
    AXIS_PTS_X      reduce using rule 5 (datatype -> SWORD .)
    AXIS_PTS_Y      reduce using rule 5 (datatype -> SWORD .)
    AXIS_PTS_Z      reduce using rule 5 (datatype -> SWORD .)
    AXIS_RESCALE_X  reduce using rule 5 (datatype -> SWORD .)
    AXIS_RESCALE_Y  reduce using rule 5 (datatype -> SWORD .)
    AXIS_RESCALE_Z  reduce using rule 5 (datatype -> SWORD .)
    NO_AXIS_PTS_X   reduce using rule 5 (datatype -> SWORD .)
    NO_AXIS_PTS_Y   reduce using rule 5 (datatype -> SWORD .)
    NO_AXIS_PTS_Z   reduce using rule 5 (datatype -> SWORD .)
    NO_RESCALE_X    reduce using rule 5 (datatype -> SWORD .)
    NO_RESCALE_Y    reduce using rule 5 (datatype -> SWORD .)
    NO_RESCALE_Z    reduce using rule 5 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 5 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 5 (datatype -> SWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 5 (datatype -> SWORD .)
    SRC_ADDR_X      reduce using rule 5 (datatype -> SWORD .)
    SRC_ADDR_Y      reduce using rule 5 (datatype -> SWORD .)
    SRC_ADDR_Z      reduce using rule 5 (datatype -> SWORD .)
    RIP_ADDR_X      reduce using rule 5 (datatype -> SWORD .)
    RIP_ADDR_Y      reduce using rule 5 (datatype -> SWORD .)
    RIP_ADDR_Z      reduce using rule 5 (datatype -> SWORD .)
    RIP_ADDR_W      reduce using rule 5 (datatype -> SWORD .)
    SHIFT_OP_X      reduce using rule 5 (datatype -> SWORD .)
    SHIFT_OP_Y      reduce using rule 5 (datatype -> SWORD .)
    SHIFT_OP_Z      reduce using rule 5 (datatype -> SWORD .)
    OFFSET_X        reduce using rule 5 (datatype -> SWORD .)
    OFFSET_Y        reduce using rule 5 (datatype -> SWORD .)
    OFFSET_Z        reduce using rule 5 (datatype -> SWORD .)
    DIST_OP_X       reduce using rule 5 (datatype -> SWORD .)
    DIST_OP_Y       reduce using rule 5 (datatype -> SWORD .)
    DIST_OP_Z       reduce using rule 5 (datatype -> SWORD .)
    ALIGNMENT_BYTE  reduce using rule 5 (datatype -> SWORD .)
    ALIGNMENT_WORD  reduce using rule 5 (datatype -> SWORD .)
    ALIGNMENT_LONG  reduce using rule 5 (datatype -> SWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 5 (datatype -> SWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 5 (datatype -> SWORD .)
    RESERVED        reduce using rule 5 (datatype -> SWORD .)
    end             reduce using rule 5 (datatype -> SWORD .)
    NUMERIC         reduce using rule 5 (datatype -> SWORD .)
    IDENT           reduce using rule 5 (datatype -> SWORD .)
    COLUMN_DIR      reduce using rule 5 (datatype -> SWORD .)
    ROW_DIR         reduce using rule 5 (datatype -> SWORD .)
    ALTERNATE_WITH_X reduce using rule 5 (datatype -> SWORD .)
    ALTERNATE_WITH_Y reduce using rule 5 (datatype -> SWORD .)
    ALTERNATE_CURVES reduce using rule 5 (datatype -> SWORD .)
    INDEX_INCR      reduce using rule 5 (datatype -> SWORD .)
    INDEX_DECR      reduce using rule 5 (datatype -> SWORD .)


state 304

    (7) datatype -> SLONG .

    FNC_VALUES      reduce using rule 7 (datatype -> SLONG .)
    IDENTIFICATION  reduce using rule 7 (datatype -> SLONG .)
    AXIS_PTS_X      reduce using rule 7 (datatype -> SLONG .)
    AXIS_PTS_Y      reduce using rule 7 (datatype -> SLONG .)
    AXIS_PTS_Z      reduce using rule 7 (datatype -> SLONG .)
    AXIS_RESCALE_X  reduce using rule 7 (datatype -> SLONG .)
    AXIS_RESCALE_Y  reduce using rule 7 (datatype -> SLONG .)
    AXIS_RESCALE_Z  reduce using rule 7 (datatype -> SLONG .)
    NO_AXIS_PTS_X   reduce using rule 7 (datatype -> SLONG .)
    NO_AXIS_PTS_Y   reduce using rule 7 (datatype -> SLONG .)
    NO_AXIS_PTS_Z   reduce using rule 7 (datatype -> SLONG .)
    NO_RESCALE_X    reduce using rule 7 (datatype -> SLONG .)
    NO_RESCALE_Y    reduce using rule 7 (datatype -> SLONG .)
    NO_RESCALE_Z    reduce using rule 7 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 7 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 7 (datatype -> SLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 7 (datatype -> SLONG .)
    SRC_ADDR_X      reduce using rule 7 (datatype -> SLONG .)
    SRC_ADDR_Y      reduce using rule 7 (datatype -> SLONG .)
    SRC_ADDR_Z      reduce using rule 7 (datatype -> SLONG .)
    RIP_ADDR_X      reduce using rule 7 (datatype -> SLONG .)
    RIP_ADDR_Y      reduce using rule 7 (datatype -> SLONG .)
    RIP_ADDR_Z      reduce using rule 7 (datatype -> SLONG .)
    RIP_ADDR_W      reduce using rule 7 (datatype -> SLONG .)
    SHIFT_OP_X      reduce using rule 7 (datatype -> SLONG .)
    SHIFT_OP_Y      reduce using rule 7 (datatype -> SLONG .)
    SHIFT_OP_Z      reduce using rule 7 (datatype -> SLONG .)
    OFFSET_X        reduce using rule 7 (datatype -> SLONG .)
    OFFSET_Y        reduce using rule 7 (datatype -> SLONG .)
    OFFSET_Z        reduce using rule 7 (datatype -> SLONG .)
    DIST_OP_X       reduce using rule 7 (datatype -> SLONG .)
    DIST_OP_Y       reduce using rule 7 (datatype -> SLONG .)
    DIST_OP_Z       reduce using rule 7 (datatype -> SLONG .)
    ALIGNMENT_BYTE  reduce using rule 7 (datatype -> SLONG .)
    ALIGNMENT_WORD  reduce using rule 7 (datatype -> SLONG .)
    ALIGNMENT_LONG  reduce using rule 7 (datatype -> SLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 7 (datatype -> SLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 7 (datatype -> SLONG .)
    RESERVED        reduce using rule 7 (datatype -> SLONG .)
    end             reduce using rule 7 (datatype -> SLONG .)
    NUMERIC         reduce using rule 7 (datatype -> SLONG .)
    IDENT           reduce using rule 7 (datatype -> SLONG .)
    COLUMN_DIR      reduce using rule 7 (datatype -> SLONG .)
    ROW_DIR         reduce using rule 7 (datatype -> SLONG .)
    ALTERNATE_WITH_X reduce using rule 7 (datatype -> SLONG .)
    ALTERNATE_WITH_Y reduce using rule 7 (datatype -> SLONG .)
    ALTERNATE_CURVES reduce using rule 7 (datatype -> SLONG .)
    INDEX_INCR      reduce using rule 7 (datatype -> SLONG .)
    INDEX_DECR      reduce using rule 7 (datatype -> SLONG .)


state 305

    (3) datatype -> SBYTE .

    FNC_VALUES      reduce using rule 3 (datatype -> SBYTE .)
    IDENTIFICATION  reduce using rule 3 (datatype -> SBYTE .)
    AXIS_PTS_X      reduce using rule 3 (datatype -> SBYTE .)
    AXIS_PTS_Y      reduce using rule 3 (datatype -> SBYTE .)
    AXIS_PTS_Z      reduce using rule 3 (datatype -> SBYTE .)
    AXIS_RESCALE_X  reduce using rule 3 (datatype -> SBYTE .)
    AXIS_RESCALE_Y  reduce using rule 3 (datatype -> SBYTE .)
    AXIS_RESCALE_Z  reduce using rule 3 (datatype -> SBYTE .)
    NO_AXIS_PTS_X   reduce using rule 3 (datatype -> SBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 3 (datatype -> SBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 3 (datatype -> SBYTE .)
    NO_RESCALE_X    reduce using rule 3 (datatype -> SBYTE .)
    NO_RESCALE_Y    reduce using rule 3 (datatype -> SBYTE .)
    NO_RESCALE_Z    reduce using rule 3 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 3 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 3 (datatype -> SBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 3 (datatype -> SBYTE .)
    SRC_ADDR_X      reduce using rule 3 (datatype -> SBYTE .)
    SRC_ADDR_Y      reduce using rule 3 (datatype -> SBYTE .)
    SRC_ADDR_Z      reduce using rule 3 (datatype -> SBYTE .)
    RIP_ADDR_X      reduce using rule 3 (datatype -> SBYTE .)
    RIP_ADDR_Y      reduce using rule 3 (datatype -> SBYTE .)
    RIP_ADDR_Z      reduce using rule 3 (datatype -> SBYTE .)
    RIP_ADDR_W      reduce using rule 3 (datatype -> SBYTE .)
    SHIFT_OP_X      reduce using rule 3 (datatype -> SBYTE .)
    SHIFT_OP_Y      reduce using rule 3 (datatype -> SBYTE .)
    SHIFT_OP_Z      reduce using rule 3 (datatype -> SBYTE .)
    OFFSET_X        reduce using rule 3 (datatype -> SBYTE .)
    OFFSET_Y        reduce using rule 3 (datatype -> SBYTE .)
    OFFSET_Z        reduce using rule 3 (datatype -> SBYTE .)
    DIST_OP_X       reduce using rule 3 (datatype -> SBYTE .)
    DIST_OP_Y       reduce using rule 3 (datatype -> SBYTE .)
    DIST_OP_Z       reduce using rule 3 (datatype -> SBYTE .)
    ALIGNMENT_BYTE  reduce using rule 3 (datatype -> SBYTE .)
    ALIGNMENT_WORD  reduce using rule 3 (datatype -> SBYTE .)
    ALIGNMENT_LONG  reduce using rule 3 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 3 (datatype -> SBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 3 (datatype -> SBYTE .)
    RESERVED        reduce using rule 3 (datatype -> SBYTE .)
    end             reduce using rule 3 (datatype -> SBYTE .)
    NUMERIC         reduce using rule 3 (datatype -> SBYTE .)
    IDENT           reduce using rule 3 (datatype -> SBYTE .)
    COLUMN_DIR      reduce using rule 3 (datatype -> SBYTE .)
    ROW_DIR         reduce using rule 3 (datatype -> SBYTE .)
    ALTERNATE_WITH_X reduce using rule 3 (datatype -> SBYTE .)
    ALTERNATE_WITH_Y reduce using rule 3 (datatype -> SBYTE .)
    ALTERNATE_CURVES reduce using rule 3 (datatype -> SBYTE .)
    INDEX_INCR      reduce using rule 3 (datatype -> SBYTE .)
    INDEX_DECR      reduce using rule 3 (datatype -> SBYTE .)


state 306

    (2) datatype -> UBYTE .

    FNC_VALUES      reduce using rule 2 (datatype -> UBYTE .)
    IDENTIFICATION  reduce using rule 2 (datatype -> UBYTE .)
    AXIS_PTS_X      reduce using rule 2 (datatype -> UBYTE .)
    AXIS_PTS_Y      reduce using rule 2 (datatype -> UBYTE .)
    AXIS_PTS_Z      reduce using rule 2 (datatype -> UBYTE .)
    AXIS_RESCALE_X  reduce using rule 2 (datatype -> UBYTE .)
    AXIS_RESCALE_Y  reduce using rule 2 (datatype -> UBYTE .)
    AXIS_RESCALE_Z  reduce using rule 2 (datatype -> UBYTE .)
    NO_AXIS_PTS_X   reduce using rule 2 (datatype -> UBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 2 (datatype -> UBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 2 (datatype -> UBYTE .)
    NO_RESCALE_X    reduce using rule 2 (datatype -> UBYTE .)
    NO_RESCALE_Y    reduce using rule 2 (datatype -> UBYTE .)
    NO_RESCALE_Z    reduce using rule 2 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 2 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 2 (datatype -> UBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 2 (datatype -> UBYTE .)
    SRC_ADDR_X      reduce using rule 2 (datatype -> UBYTE .)
    SRC_ADDR_Y      reduce using rule 2 (datatype -> UBYTE .)
    SRC_ADDR_Z      reduce using rule 2 (datatype -> UBYTE .)
    RIP_ADDR_X      reduce using rule 2 (datatype -> UBYTE .)
    RIP_ADDR_Y      reduce using rule 2 (datatype -> UBYTE .)
    RIP_ADDR_Z      reduce using rule 2 (datatype -> UBYTE .)
    RIP_ADDR_W      reduce using rule 2 (datatype -> UBYTE .)
    SHIFT_OP_X      reduce using rule 2 (datatype -> UBYTE .)
    SHIFT_OP_Y      reduce using rule 2 (datatype -> UBYTE .)
    SHIFT_OP_Z      reduce using rule 2 (datatype -> UBYTE .)
    OFFSET_X        reduce using rule 2 (datatype -> UBYTE .)
    OFFSET_Y        reduce using rule 2 (datatype -> UBYTE .)
    OFFSET_Z        reduce using rule 2 (datatype -> UBYTE .)
    DIST_OP_X       reduce using rule 2 (datatype -> UBYTE .)
    DIST_OP_Y       reduce using rule 2 (datatype -> UBYTE .)
    DIST_OP_Z       reduce using rule 2 (datatype -> UBYTE .)
    ALIGNMENT_BYTE  reduce using rule 2 (datatype -> UBYTE .)
    ALIGNMENT_WORD  reduce using rule 2 (datatype -> UBYTE .)
    ALIGNMENT_LONG  reduce using rule 2 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 2 (datatype -> UBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 2 (datatype -> UBYTE .)
    RESERVED        reduce using rule 2 (datatype -> UBYTE .)
    end             reduce using rule 2 (datatype -> UBYTE .)
    NUMERIC         reduce using rule 2 (datatype -> UBYTE .)
    IDENT           reduce using rule 2 (datatype -> UBYTE .)
    COLUMN_DIR      reduce using rule 2 (datatype -> UBYTE .)
    ROW_DIR         reduce using rule 2 (datatype -> UBYTE .)
    ALTERNATE_WITH_X reduce using rule 2 (datatype -> UBYTE .)
    ALTERNATE_WITH_Y reduce using rule 2 (datatype -> UBYTE .)
    ALTERNATE_CURVES reduce using rule 2 (datatype -> UBYTE .)
    INDEX_INCR      reduce using rule 2 (datatype -> UBYTE .)
    INDEX_DECR      reduce using rule 2 (datatype -> UBYTE .)


state 307

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC . number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE
    (234) number_number_string_value_list -> . number_number_string_value
    (235) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (236) number_number_string_value -> . NUMERIC NUMERIC STRING

    NUMERIC         shift and go to state 394

    number_number_string_value_list shift and go to state 393
    number_number_string_value     shift and go to state 392

state 308

    (248) function_optional_list -> function_optional .
    (249) function_optional_list -> function_optional . function_optional_list
    (248) function_optional_list -> . function_optional
    (249) function_optional_list -> . function_optional function_optional_list
    (240) function_optional -> . annotation
    (241) function_optional -> . def_characteristic
    (242) function_optional -> . ref_characteristic
    (243) function_optional -> . in_measurement
    (244) function_optional -> . out_measurement
    (245) function_optional -> . loc_measurement
    (246) function_optional -> . sub_function
    (247) function_optional -> . function_version
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (252) def_characteristic -> . begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (253) ref_characteristic -> . begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (254) in_measurement -> . begin IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (255) out_measurement -> . begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (256) loc_measurement -> . begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (257) sub_function -> . begin SUB_FUNCTION ident_list end SUB_FUNCTION
    (258) function_version -> . FUNCTION_VERSION STRING

    end             reduce using rule 248 (function_optional_list -> function_optional .)
    begin           shift and go to state 314
    FUNCTION_VERSION shift and go to state 309

    function_optional              shift and go to state 308
    out_measurement                shift and go to state 319
    loc_measurement                shift and go to state 310
    def_characteristic             shift and go to state 315
    function_version               shift and go to state 321
    sub_function                   shift and go to state 316
    in_measurement                 shift and go to state 312
    ref_characteristic             shift and go to state 320
    function_optional_list         shift and go to state 395
    annotation                     shift and go to state 311

state 309

    (258) function_version -> FUNCTION_VERSION . STRING

    STRING          shift and go to state 396


state 310

    (245) function_optional -> loc_measurement .

    begin           reduce using rule 245 (function_optional -> loc_measurement .)
    FUNCTION_VERSION reduce using rule 245 (function_optional -> loc_measurement .)
    end             reduce using rule 245 (function_optional -> loc_measurement .)


state 311

    (240) function_optional -> annotation .

    begin           reduce using rule 240 (function_optional -> annotation .)
    FUNCTION_VERSION reduce using rule 240 (function_optional -> annotation .)
    end             reduce using rule 240 (function_optional -> annotation .)


state 312

    (243) function_optional -> in_measurement .

    begin           reduce using rule 243 (function_optional -> in_measurement .)
    FUNCTION_VERSION reduce using rule 243 (function_optional -> in_measurement .)
    end             reduce using rule 243 (function_optional -> in_measurement .)


state 313

    (250) function_optional_list_optional -> empty .

    end             reduce using rule 250 (function_optional_list_optional -> empty .)


state 314

    (91) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (252) def_characteristic -> begin . DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC
    (253) ref_characteristic -> begin . REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC
    (254) in_measurement -> begin . IN_MEASUREMENT ident_list end IN_MEASUREMENT
    (255) out_measurement -> begin . OUT_MEASUREMENT ident_list end OUT_MEASUREMENT
    (256) loc_measurement -> begin . LOC_MEASUREMENT ident_list end LOC_MEASUREMENT
    (257) sub_function -> begin . SUB_FUNCTION ident_list end SUB_FUNCTION

    ANNOTATION      shift and go to state 344
    DEF_CHARACTERISTIC shift and go to state 398
    REF_CHARACTERISTIC shift and go to state 343
    IN_MEASUREMENT  shift and go to state 400
    OUT_MEASUREMENT shift and go to state 401
    LOC_MEASUREMENT shift and go to state 397
    SUB_FUNCTION    shift and go to state 399


state 315

    (241) function_optional -> def_characteristic .

    begin           reduce using rule 241 (function_optional -> def_characteristic .)
    FUNCTION_VERSION reduce using rule 241 (function_optional -> def_characteristic .)
    end             reduce using rule 241 (function_optional -> def_characteristic .)


state 316

    (246) function_optional -> sub_function .

    begin           reduce using rule 246 (function_optional -> sub_function .)
    FUNCTION_VERSION reduce using rule 246 (function_optional -> sub_function .)
    end             reduce using rule 246 (function_optional -> sub_function .)


state 317

    (251) function_optional_list_optional -> function_optional_list .

    end             reduce using rule 251 (function_optional_list_optional -> function_optional_list .)


state 318

    (239) function -> begin FUNCTION IDENT STRING function_optional_list_optional . end FUNCTION

    end             shift and go to state 402


state 319

    (244) function_optional -> out_measurement .

    begin           reduce using rule 244 (function_optional -> out_measurement .)
    FUNCTION_VERSION reduce using rule 244 (function_optional -> out_measurement .)
    end             reduce using rule 244 (function_optional -> out_measurement .)


state 320

    (242) function_optional -> ref_characteristic .

    begin           reduce using rule 242 (function_optional -> ref_characteristic .)
    FUNCTION_VERSION reduce using rule 242 (function_optional -> ref_characteristic .)
    end             reduce using rule 242 (function_optional -> ref_characteristic .)


state 321

    (247) function_optional -> function_version .

    begin           reduce using rule 247 (function_optional -> function_version .)
    FUNCTION_VERSION reduce using rule 247 (function_optional -> function_version .)
    end             reduce using rule 247 (function_optional -> function_version .)


state 322

    (69) if_data -> begin IF_DATA IDENT end IF_DATA .

    FRAME_MEASUREMENT reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    begin           reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    end             reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    READ_WRITE      reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    DISPLAY_IDENTIFIER reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    FORMAT          reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ARRAY_SIZE      reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    BIT_MASK        reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    BYTE_ORDER      reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    MAX_REFRESH     reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ECU_ADDRESS     reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ERROR_MASK      reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    REF_MEMORY_SEGMENT reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    MATRIX_DIM      reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    ECU_ADDRESS_EXTENSION reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    READ_ONLY       reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    GUARD_RAILS     reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    NUMBER          reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    EXTENDED_LIMITS reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    COMPARISON_QUANTITY reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    CALIBRATION_ACCESS reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)
    DEPOSIT         reduce using rule 69 (if_data -> begin IF_DATA IDENT end IF_DATA .)


state 323

    (221) compu_tab_conversion_type -> TAB_INTP .

    NUMERIC         reduce using rule 221 (compu_tab_conversion_type -> TAB_INTP .)


state 324

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type . NUMERIC number_list compu_tab_optional end COMPU_TAB

    NUMERIC         shift and go to state 403


state 325

    (222) compu_tab_conversion_type -> TAB_NOINTP .

    NUMERIC         reduce using rule 222 (compu_tab_conversion_type -> TAB_NOINTP .)


state 326

    (73) characteristic_type -> MAP .

    NUMERIC         reduce using rule 73 (characteristic_type -> MAP .)


state 327

    (71) characteristic_type -> VALUE .

    NUMERIC         reduce using rule 71 (characteristic_type -> VALUE .)


state 328

    (72) characteristic_type -> CURVE .

    NUMERIC         reduce using rule 72 (characteristic_type -> CURVE .)


state 329

    (75) characteristic_type -> VAL_BLK .

    NUMERIC         reduce using rule 75 (characteristic_type -> VAL_BLK .)


state 330

    (74) characteristic_type -> CUBOID .

    NUMERIC         reduce using rule 74 (characteristic_type -> CUBOID .)


state 331

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type . NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 404


state 332

    (76) characteristic_type -> ASCII .

    NUMERIC         reduce using rule 76 (characteristic_type -> ASCII .)


state 333

    (406) unit -> begin UNIT IDENT STRING STRING . unit_type unit_optional_list_optional end UNIT
    (407) unit_type -> . EXTENDED_SI
    (408) unit_type -> . DERIVED

    EXTENDED_SI     shift and go to state 407
    DERIVED         shift and go to state 405

    unit_type                      shift and go to state 406

state 334

    (405) ref_group -> begin REF_GROUP . ident_list end REF_GROUP
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 408

state 335

    (398) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end . USER_RIGHTS

    USER_RIGHTS     shift and go to state 409


state 336

    (402) user_rights_optional_list -> user_rights_optional user_rights_optional_list .

    end             reduce using rule 402 (user_rights_optional_list -> user_rights_optional user_rights_optional_list .)


state 337

    (390) frame -> begin FRAME IDENT STRING NUMERIC . NUMERIC frame_optional_list_optional end FRAME

    NUMERIC         shift and go to state 410


state 338

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC . number_string_value_list compu_vtab_optional end COMPU_VTAB
    (228) number_string_value_list -> . number_string_value
    (229) number_string_value_list -> . number_string_value number_string_value_list
    (230) number_string_value -> . NUMERIC STRING

    NUMERIC         shift and go to state 411

    number_string_value            shift and go to state 413
    number_string_value_list       shift and go to state 412

state 339

    (259) group -> begin GROUP IDENT STRING group_optional_list_optional end . GROUP

    GROUP           shift and go to state 414


state 340

    (271) sub_group -> begin SUB_GROUP . ident_list end SUB_GROUP
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 415

state 341

    (83) function_list -> begin FUNCTION_LIST . ident_list end FUNCTION_LIST
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 416

state 342

    (270) ref_measurement -> begin REF_MEASUREMENT . ident_list end REF_MEASUREMENT
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 417

state 343

    (253) ref_characteristic -> begin REF_CHARACTERISTIC . ident_list end REF_CHARACTERISTIC
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 418

state 344

    (91) annotation -> begin ANNOTATION . annotation_optional_list_optional end ANNOTATION
    (100) annotation_optional_list_optional -> . empty
    (101) annotation_optional_list_optional -> . annotation_optional_list
    (418) empty -> .
    (98) annotation_optional_list -> . annotation_optional
    (99) annotation_optional_list -> . annotation_optional annotation_optional_list
    (92) annotation_optional -> . annotation_label
    (93) annotation_optional -> . annotation_origin
    (94) annotation_optional -> . annotation_text
    (95) annotation_label -> . ANNOTATION_LABEL STRING
    (96) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (97) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 418 (empty -> .)
    ANNOTATION_LABEL shift and go to state 422
    ANNOTATION_ORIGIN shift and go to state 425
    begin           shift and go to state 420

    annotation_optional_list_optional shift and go to state 419
    annotation_origin              shift and go to state 421
    annotation_text                shift and go to state 423
    annotation_optional_list       shift and go to state 424
    annotation_optional            shift and go to state 426
    annotation_label               shift and go to state 427
    empty                          shift and go to state 428

state 345

    (267) group_optional_list -> group_optional group_optional_list .

    end             reduce using rule 267 (group_optional_list -> group_optional group_optional_list .)


state 346

    (330) no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    RESERVED        reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)
    end             reduce using rule 330 (no_axis_pts_y -> NO_AXIS_PTS_Y NUMERIC datatype .)


state 347

    (329) no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    RESERVED        reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)
    end             reduce using rule 329 (no_axis_pts_x -> NO_AXIS_PTS_X NUMERIC datatype .)


state 348

    (331) no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    RESERVED        reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)
    end             reduce using rule 331 (no_axis_pts_z -> NO_AXIS_PTS_Z NUMERIC datatype .)


state 349

    (342) src_addr_optional -> datatype .

    FNC_VALUES      reduce using rule 342 (src_addr_optional -> datatype .)
    IDENTIFICATION  reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_PTS_X      reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_PTS_Y      reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_PTS_Z      reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_RESCALE_X  reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Y  reduce using rule 342 (src_addr_optional -> datatype .)
    AXIS_RESCALE_Z  reduce using rule 342 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_X   reduce using rule 342 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Y   reduce using rule 342 (src_addr_optional -> datatype .)
    NO_AXIS_PTS_Z   reduce using rule 342 (src_addr_optional -> datatype .)
    NO_RESCALE_X    reduce using rule 342 (src_addr_optional -> datatype .)
    NO_RESCALE_Y    reduce using rule 342 (src_addr_optional -> datatype .)
    NO_RESCALE_Z    reduce using rule 342 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 342 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 342 (src_addr_optional -> datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 342 (src_addr_optional -> datatype .)
    SRC_ADDR_X      reduce using rule 342 (src_addr_optional -> datatype .)
    SRC_ADDR_Y      reduce using rule 342 (src_addr_optional -> datatype .)
    SRC_ADDR_Z      reduce using rule 342 (src_addr_optional -> datatype .)
    RIP_ADDR_X      reduce using rule 342 (src_addr_optional -> datatype .)
    RIP_ADDR_Y      reduce using rule 342 (src_addr_optional -> datatype .)
    RIP_ADDR_Z      reduce using rule 342 (src_addr_optional -> datatype .)
    RIP_ADDR_W      reduce using rule 342 (src_addr_optional -> datatype .)
    SHIFT_OP_X      reduce using rule 342 (src_addr_optional -> datatype .)
    SHIFT_OP_Y      reduce using rule 342 (src_addr_optional -> datatype .)
    SHIFT_OP_Z      reduce using rule 342 (src_addr_optional -> datatype .)
    OFFSET_X        reduce using rule 342 (src_addr_optional -> datatype .)
    OFFSET_Y        reduce using rule 342 (src_addr_optional -> datatype .)
    OFFSET_Z        reduce using rule 342 (src_addr_optional -> datatype .)
    DIST_OP_X       reduce using rule 342 (src_addr_optional -> datatype .)
    DIST_OP_Y       reduce using rule 342 (src_addr_optional -> datatype .)
    DIST_OP_Z       reduce using rule 342 (src_addr_optional -> datatype .)
    ALIGNMENT_BYTE  reduce using rule 342 (src_addr_optional -> datatype .)
    ALIGNMENT_WORD  reduce using rule 342 (src_addr_optional -> datatype .)
    ALIGNMENT_LONG  reduce using rule 342 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 342 (src_addr_optional -> datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 342 (src_addr_optional -> datatype .)
    RESERVED        reduce using rule 342 (src_addr_optional -> datatype .)
    end             reduce using rule 342 (src_addr_optional -> datatype .)


state 350

    (340) src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)
    end             reduce using rule 340 (src_addr_z -> SRC_ADDR_Z NUMERIC src_addr_optional .)


state 351

    (341) src_addr_optional -> empty .

    FNC_VALUES      reduce using rule 341 (src_addr_optional -> empty .)
    IDENTIFICATION  reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_PTS_X      reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_PTS_Y      reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_PTS_Z      reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_RESCALE_X  reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_RESCALE_Y  reduce using rule 341 (src_addr_optional -> empty .)
    AXIS_RESCALE_Z  reduce using rule 341 (src_addr_optional -> empty .)
    NO_AXIS_PTS_X   reduce using rule 341 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Y   reduce using rule 341 (src_addr_optional -> empty .)
    NO_AXIS_PTS_Z   reduce using rule 341 (src_addr_optional -> empty .)
    NO_RESCALE_X    reduce using rule 341 (src_addr_optional -> empty .)
    NO_RESCALE_Y    reduce using rule 341 (src_addr_optional -> empty .)
    NO_RESCALE_Z    reduce using rule 341 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_X reduce using rule 341 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Y reduce using rule 341 (src_addr_optional -> empty .)
    FIX_NO_AXIS_PTS_Z reduce using rule 341 (src_addr_optional -> empty .)
    SRC_ADDR_X      reduce using rule 341 (src_addr_optional -> empty .)
    SRC_ADDR_Y      reduce using rule 341 (src_addr_optional -> empty .)
    SRC_ADDR_Z      reduce using rule 341 (src_addr_optional -> empty .)
    RIP_ADDR_X      reduce using rule 341 (src_addr_optional -> empty .)
    RIP_ADDR_Y      reduce using rule 341 (src_addr_optional -> empty .)
    RIP_ADDR_Z      reduce using rule 341 (src_addr_optional -> empty .)
    RIP_ADDR_W      reduce using rule 341 (src_addr_optional -> empty .)
    SHIFT_OP_X      reduce using rule 341 (src_addr_optional -> empty .)
    SHIFT_OP_Y      reduce using rule 341 (src_addr_optional -> empty .)
    SHIFT_OP_Z      reduce using rule 341 (src_addr_optional -> empty .)
    OFFSET_X        reduce using rule 341 (src_addr_optional -> empty .)
    OFFSET_Y        reduce using rule 341 (src_addr_optional -> empty .)
    OFFSET_Z        reduce using rule 341 (src_addr_optional -> empty .)
    DIST_OP_X       reduce using rule 341 (src_addr_optional -> empty .)
    DIST_OP_Y       reduce using rule 341 (src_addr_optional -> empty .)
    DIST_OP_Z       reduce using rule 341 (src_addr_optional -> empty .)
    ALIGNMENT_BYTE  reduce using rule 341 (src_addr_optional -> empty .)
    ALIGNMENT_WORD  reduce using rule 341 (src_addr_optional -> empty .)
    ALIGNMENT_LONG  reduce using rule 341 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 341 (src_addr_optional -> empty .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 341 (src_addr_optional -> empty .)
    RESERVED        reduce using rule 341 (src_addr_optional -> empty .)
    end             reduce using rule 341 (src_addr_optional -> empty .)


state 352

    (339) src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)
    end             reduce using rule 339 (src_addr_y -> SRC_ADDR_Y NUMERIC src_addr_optional .)


state 353

    (338) src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .

    FNC_VALUES      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    IDENTIFICATION  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_X      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Y      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_PTS_Z      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_X  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Y  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    AXIS_RESCALE_Z  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_X   reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Y   reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_AXIS_PTS_Z   reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_X    reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Y    reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    NO_RESCALE_Z    reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_X reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Y reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    FIX_NO_AXIS_PTS_Z reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_X      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Y      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SRC_ADDR_Z      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_X      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Y      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_Z      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RIP_ADDR_W      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_X      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Y      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    SHIFT_OP_Z      reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_X        reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Y        reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    OFFSET_Z        reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_X       reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Y       reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    DIST_OP_Z       reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_BYTE  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_WORD  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_LONG  reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    RESERVED        reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)
    end             reduce using rule 338 (src_addr_x -> SRC_ADDR_X NUMERIC src_addr_optional .)


state 354

    (325) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 431

state 355

    (323) axis_pts_x -> AXIS_PTS_X NUMERIC datatype . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 432

state 356

    (324) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 433

state 357

    (348) shift_op_y -> SHIFT_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)
    end             reduce using rule 348 (shift_op_y -> SHIFT_OP_Y NUMERIC datatype .)


state 358

    (347) shift_op_x -> SHIFT_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)
    end             reduce using rule 347 (shift_op_x -> SHIFT_OP_X NUMERIC datatype .)


state 359

    (349) shift_op_z -> SHIFT_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)
    end             reduce using rule 349 (shift_op_z -> SHIFT_OP_Z NUMERIC datatype .)


state 360

    (334) no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    RESERVED        reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)
    end             reduce using rule 334 (no_rescale_z -> NO_RESCALE_Z NUMERIC datatype .)


state 361

    (332) no_rescale_x -> NO_RESCALE_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    RESERVED        reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)
    end             reduce using rule 332 (no_rescale_x -> NO_RESCALE_X NUMERIC datatype .)


state 362

    (333) no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    RESERVED        reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)
    end             reduce using rule 333 (no_rescale_y -> NO_RESCALE_Y NUMERIC datatype .)


state 363

    (355) dist_op_z -> DIST_OP_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    RESERVED        reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)
    end             reduce using rule 355 (dist_op_z -> DIST_OP_Z NUMERIC datatype .)


state 364

    (353) dist_op_x -> DIST_OP_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    RESERVED        reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)
    end             reduce using rule 353 (dist_op_x -> DIST_OP_X NUMERIC datatype .)


state 365

    (354) dist_op_y -> DIST_OP_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    RESERVED        reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)
    end             reduce using rule 354 (dist_op_y -> DIST_OP_Y NUMERIC datatype .)


state 366

    (272) record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .

    begin           reduce using rule 272 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)
    end             reduce using rule 272 (record_layout -> begin RECORD_LAYOUT IDENT record_layout_optional_list_optional end RECORD_LAYOUT .)


state 367

    (322) identification -> IDENTIFICATION NUMERIC datatype .

    FNC_VALUES      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_X        reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Y        reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    OFFSET_Z        reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_X       reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    RESERVED        reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)
    end             reduce using rule 322 (identification -> IDENTIFICATION NUMERIC datatype .)


state 368

    (350) offset_x -> OFFSET_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    RESERVED        reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)
    end             reduce using rule 350 (offset_x -> OFFSET_X NUMERIC datatype .)


state 369

    (351) offset_y -> OFFSET_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    RESERVED        reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)
    end             reduce using rule 351 (offset_y -> OFFSET_Y NUMERIC datatype .)


state 370

    (352) offset_z -> OFFSET_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    RESERVED        reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)
    end             reduce using rule 352 (offset_z -> OFFSET_Z NUMERIC datatype .)


state 371

    (328) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 434


state 372

    (326) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 435


state 373

    (327) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype . NUMERIC indexorder addrtype

    NUMERIC         shift and go to state 436


state 374

    (346) rip_addr_w -> RIP_ADDR_W NUMERIC datatype .

    FNC_VALUES      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_X        reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Y        reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    OFFSET_Z        reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_X       reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    RESERVED        reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)
    end             reduce using rule 346 (rip_addr_w -> RIP_ADDR_W NUMERIC datatype .)


state 375

    (345) rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .

    FNC_VALUES      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_X        reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Y        reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    OFFSET_Z        reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_X       reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    RESERVED        reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)
    end             reduce using rule 345 (rip_addr_z -> RIP_ADDR_Z NUMERIC datatype .)


state 376

    (343) rip_addr_x -> RIP_ADDR_X NUMERIC datatype .

    FNC_VALUES      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_X        reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Y        reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    OFFSET_Z        reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_X       reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    RESERVED        reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)
    end             reduce using rule 343 (rip_addr_x -> RIP_ADDR_X NUMERIC datatype .)


state 377

    (344) rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .

    FNC_VALUES      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    IDENTIFICATION  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_X      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Y      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_PTS_Z      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_X  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Y  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    AXIS_RESCALE_Z  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_X   reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Y   reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_AXIS_PTS_Z   reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_X    reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Y    reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    NO_RESCALE_Z    reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_X reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_X      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Y      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SRC_ADDR_Z      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_X      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Y      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_Z      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RIP_ADDR_W      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_X      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Y      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    SHIFT_OP_Z      reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_X        reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Y        reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    OFFSET_Z        reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_X       reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Y       reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    DIST_OP_Z       reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_BYTE  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_WORD  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_LONG  reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    RESERVED        reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)
    end             reduce using rule 344 (rip_addr_y -> RIP_ADDR_Y NUMERIC datatype .)


state 378

    (13) datasize -> WORD .

    FNC_VALUES      reduce using rule 13 (datasize -> WORD .)
    IDENTIFICATION  reduce using rule 13 (datasize -> WORD .)
    AXIS_PTS_X      reduce using rule 13 (datasize -> WORD .)
    AXIS_PTS_Y      reduce using rule 13 (datasize -> WORD .)
    AXIS_PTS_Z      reduce using rule 13 (datasize -> WORD .)
    AXIS_RESCALE_X  reduce using rule 13 (datasize -> WORD .)
    AXIS_RESCALE_Y  reduce using rule 13 (datasize -> WORD .)
    AXIS_RESCALE_Z  reduce using rule 13 (datasize -> WORD .)
    NO_AXIS_PTS_X   reduce using rule 13 (datasize -> WORD .)
    NO_AXIS_PTS_Y   reduce using rule 13 (datasize -> WORD .)
    NO_AXIS_PTS_Z   reduce using rule 13 (datasize -> WORD .)
    NO_RESCALE_X    reduce using rule 13 (datasize -> WORD .)
    NO_RESCALE_Y    reduce using rule 13 (datasize -> WORD .)
    NO_RESCALE_Z    reduce using rule 13 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 13 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 13 (datasize -> WORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 13 (datasize -> WORD .)
    SRC_ADDR_X      reduce using rule 13 (datasize -> WORD .)
    SRC_ADDR_Y      reduce using rule 13 (datasize -> WORD .)
    SRC_ADDR_Z      reduce using rule 13 (datasize -> WORD .)
    RIP_ADDR_X      reduce using rule 13 (datasize -> WORD .)
    RIP_ADDR_Y      reduce using rule 13 (datasize -> WORD .)
    RIP_ADDR_Z      reduce using rule 13 (datasize -> WORD .)
    RIP_ADDR_W      reduce using rule 13 (datasize -> WORD .)
    SHIFT_OP_X      reduce using rule 13 (datasize -> WORD .)
    SHIFT_OP_Y      reduce using rule 13 (datasize -> WORD .)
    SHIFT_OP_Z      reduce using rule 13 (datasize -> WORD .)
    OFFSET_X        reduce using rule 13 (datasize -> WORD .)
    OFFSET_Y        reduce using rule 13 (datasize -> WORD .)
    OFFSET_Z        reduce using rule 13 (datasize -> WORD .)
    DIST_OP_X       reduce using rule 13 (datasize -> WORD .)
    DIST_OP_Y       reduce using rule 13 (datasize -> WORD .)
    DIST_OP_Z       reduce using rule 13 (datasize -> WORD .)
    ALIGNMENT_BYTE  reduce using rule 13 (datasize -> WORD .)
    ALIGNMENT_WORD  reduce using rule 13 (datasize -> WORD .)
    ALIGNMENT_LONG  reduce using rule 13 (datasize -> WORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 13 (datasize -> WORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 13 (datasize -> WORD .)
    RESERVED        reduce using rule 13 (datasize -> WORD .)
    end             reduce using rule 13 (datasize -> WORD .)


state 379

    (14) datasize -> LONG .

    FNC_VALUES      reduce using rule 14 (datasize -> LONG .)
    IDENTIFICATION  reduce using rule 14 (datasize -> LONG .)
    AXIS_PTS_X      reduce using rule 14 (datasize -> LONG .)
    AXIS_PTS_Y      reduce using rule 14 (datasize -> LONG .)
    AXIS_PTS_Z      reduce using rule 14 (datasize -> LONG .)
    AXIS_RESCALE_X  reduce using rule 14 (datasize -> LONG .)
    AXIS_RESCALE_Y  reduce using rule 14 (datasize -> LONG .)
    AXIS_RESCALE_Z  reduce using rule 14 (datasize -> LONG .)
    NO_AXIS_PTS_X   reduce using rule 14 (datasize -> LONG .)
    NO_AXIS_PTS_Y   reduce using rule 14 (datasize -> LONG .)
    NO_AXIS_PTS_Z   reduce using rule 14 (datasize -> LONG .)
    NO_RESCALE_X    reduce using rule 14 (datasize -> LONG .)
    NO_RESCALE_Y    reduce using rule 14 (datasize -> LONG .)
    NO_RESCALE_Z    reduce using rule 14 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 14 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 14 (datasize -> LONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 14 (datasize -> LONG .)
    SRC_ADDR_X      reduce using rule 14 (datasize -> LONG .)
    SRC_ADDR_Y      reduce using rule 14 (datasize -> LONG .)
    SRC_ADDR_Z      reduce using rule 14 (datasize -> LONG .)
    RIP_ADDR_X      reduce using rule 14 (datasize -> LONG .)
    RIP_ADDR_Y      reduce using rule 14 (datasize -> LONG .)
    RIP_ADDR_Z      reduce using rule 14 (datasize -> LONG .)
    RIP_ADDR_W      reduce using rule 14 (datasize -> LONG .)
    SHIFT_OP_X      reduce using rule 14 (datasize -> LONG .)
    SHIFT_OP_Y      reduce using rule 14 (datasize -> LONG .)
    SHIFT_OP_Z      reduce using rule 14 (datasize -> LONG .)
    OFFSET_X        reduce using rule 14 (datasize -> LONG .)
    OFFSET_Y        reduce using rule 14 (datasize -> LONG .)
    OFFSET_Z        reduce using rule 14 (datasize -> LONG .)
    DIST_OP_X       reduce using rule 14 (datasize -> LONG .)
    DIST_OP_Y       reduce using rule 14 (datasize -> LONG .)
    DIST_OP_Z       reduce using rule 14 (datasize -> LONG .)
    ALIGNMENT_BYTE  reduce using rule 14 (datasize -> LONG .)
    ALIGNMENT_WORD  reduce using rule 14 (datasize -> LONG .)
    ALIGNMENT_LONG  reduce using rule 14 (datasize -> LONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 14 (datasize -> LONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 14 (datasize -> LONG .)
    RESERVED        reduce using rule 14 (datasize -> LONG .)
    end             reduce using rule 14 (datasize -> LONG .)


state 380

    (12) datasize -> BYTE .

    FNC_VALUES      reduce using rule 12 (datasize -> BYTE .)
    IDENTIFICATION  reduce using rule 12 (datasize -> BYTE .)
    AXIS_PTS_X      reduce using rule 12 (datasize -> BYTE .)
    AXIS_PTS_Y      reduce using rule 12 (datasize -> BYTE .)
    AXIS_PTS_Z      reduce using rule 12 (datasize -> BYTE .)
    AXIS_RESCALE_X  reduce using rule 12 (datasize -> BYTE .)
    AXIS_RESCALE_Y  reduce using rule 12 (datasize -> BYTE .)
    AXIS_RESCALE_Z  reduce using rule 12 (datasize -> BYTE .)
    NO_AXIS_PTS_X   reduce using rule 12 (datasize -> BYTE .)
    NO_AXIS_PTS_Y   reduce using rule 12 (datasize -> BYTE .)
    NO_AXIS_PTS_Z   reduce using rule 12 (datasize -> BYTE .)
    NO_RESCALE_X    reduce using rule 12 (datasize -> BYTE .)
    NO_RESCALE_Y    reduce using rule 12 (datasize -> BYTE .)
    NO_RESCALE_Z    reduce using rule 12 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 12 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 12 (datasize -> BYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 12 (datasize -> BYTE .)
    SRC_ADDR_X      reduce using rule 12 (datasize -> BYTE .)
    SRC_ADDR_Y      reduce using rule 12 (datasize -> BYTE .)
    SRC_ADDR_Z      reduce using rule 12 (datasize -> BYTE .)
    RIP_ADDR_X      reduce using rule 12 (datasize -> BYTE .)
    RIP_ADDR_Y      reduce using rule 12 (datasize -> BYTE .)
    RIP_ADDR_Z      reduce using rule 12 (datasize -> BYTE .)
    RIP_ADDR_W      reduce using rule 12 (datasize -> BYTE .)
    SHIFT_OP_X      reduce using rule 12 (datasize -> BYTE .)
    SHIFT_OP_Y      reduce using rule 12 (datasize -> BYTE .)
    SHIFT_OP_Z      reduce using rule 12 (datasize -> BYTE .)
    OFFSET_X        reduce using rule 12 (datasize -> BYTE .)
    OFFSET_Y        reduce using rule 12 (datasize -> BYTE .)
    OFFSET_Z        reduce using rule 12 (datasize -> BYTE .)
    DIST_OP_X       reduce using rule 12 (datasize -> BYTE .)
    DIST_OP_Y       reduce using rule 12 (datasize -> BYTE .)
    DIST_OP_Z       reduce using rule 12 (datasize -> BYTE .)
    ALIGNMENT_BYTE  reduce using rule 12 (datasize -> BYTE .)
    ALIGNMENT_WORD  reduce using rule 12 (datasize -> BYTE .)
    ALIGNMENT_LONG  reduce using rule 12 (datasize -> BYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 12 (datasize -> BYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 12 (datasize -> BYTE .)
    RESERVED        reduce using rule 12 (datasize -> BYTE .)
    end             reduce using rule 12 (datasize -> BYTE .)


state 381

    (389) reserved -> RESERVED NUMERIC datasize .

    FNC_VALUES      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    IDENTIFICATION  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_X      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Y      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_PTS_Z      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_X  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Y  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    AXIS_RESCALE_Z  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_X   reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Y   reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_AXIS_PTS_Z   reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_X    reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Y    reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    NO_RESCALE_Z    reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_X reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Y reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    FIX_NO_AXIS_PTS_Z reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_X      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Y      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SRC_ADDR_Z      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_X      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Y      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_Z      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    RIP_ADDR_W      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_X      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Y      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    SHIFT_OP_Z      reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_X        reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Y        reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    OFFSET_Z        reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_X       reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Y       reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    DIST_OP_Z       reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_BYTE  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_WORD  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_LONG  reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    RESERVED        reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)
    end             reduce using rule 389 (reserved -> RESERVED NUMERIC datasize .)


state 382

    (316) fnc_values -> FNC_VALUES NUMERIC datatype . fnc_values_index_mode addrtype
    (317) fnc_values_index_mode -> . COLUMN_DIR
    (318) fnc_values_index_mode -> . ROW_DIR
    (319) fnc_values_index_mode -> . ALTERNATE_WITH_X
    (320) fnc_values_index_mode -> . ALTERNATE_WITH_Y
    (321) fnc_values_index_mode -> . ALTERNATE_CURVES

    COLUMN_DIR      shift and go to state 439
    ROW_DIR         shift and go to state 437
    ALTERNATE_WITH_X shift and go to state 438
    ALTERNATE_WITH_Y shift and go to state 442
    ALTERNATE_CURVES shift and go to state 440

    fnc_values_index_mode          shift and go to state 441

state 383

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING . STRING compu_method_optional_list_optional end COMPU_METHOD

    STRING          shift and go to state 443


state 384

    (28) ident_list -> IDENT .
    (29) ident_list -> IDENT . ident_list
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    end             reduce using rule 28 (ident_list -> IDENT .)
    VAR_MEASUREMENT reduce using rule 28 (ident_list -> IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 28 (ident_list -> IDENT .)
    FRAME_MEASUREMENT reduce using rule 28 (ident_list -> IDENT .)
    begin           reduce using rule 28 (ident_list -> IDENT .)
    IDENT           shift and go to state 384

    ident_list                     shift and go to state 444

state 385

    (367) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list . var_characteristic_optional end VAR_CHARACTERISTIC
    (368) var_characteristic_optional -> . var_address
    (369) var_address -> . begin VAR_ADDRESS number_list end VAR_ADDRESS

    begin           shift and go to state 445

    var_characteristic_optional    shift and go to state 447
    var_address                    shift and go to state 446

state 386

    (375) ident_ident_value -> IDENT IDENT .

    IDENT           reduce using rule 375 (ident_ident_value -> IDENT IDENT .)
    end             reduce using rule 375 (ident_ident_value -> IDENT IDENT .)


state 387

    (374) ident_ident_value_list -> ident_ident_value ident_ident_value_list .

    end             reduce using rule 374 (ident_ident_value_list -> ident_ident_value ident_ident_value_list .)


state 388

    (372) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end . VAR_FORBIDDEN_COMB

    VAR_FORBIDDEN_COMB shift and go to state 448


state 389

    (376) var_criterion -> begin VAR_CRITERION IDENT STRING . ident_list var_criterion_optional_list_optional end VAR_CRITERION
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 449

state 390

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT . IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 450


state 391

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT . NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 451


state 392

    (234) number_number_string_value_list -> number_number_string_value .
    (235) number_number_string_value_list -> number_number_string_value . number_number_string_value_list
    (234) number_number_string_value_list -> . number_number_string_value
    (235) number_number_string_value_list -> . number_number_string_value number_number_string_value_list
    (236) number_number_string_value -> . NUMERIC NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 234 (number_number_string_value_list -> number_number_string_value .)
    end             reduce using rule 234 (number_number_string_value_list -> number_number_string_value .)
    NUMERIC         shift and go to state 394

    number_number_string_value_list shift and go to state 452
    number_number_string_value     shift and go to state 392

state 393

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list . compu_vtab_range_optional end COMPU_VTAB_RANGE
    (237) compu_vtab_range_optional -> . empty
    (238) compu_vtab_range_optional -> . default_value
    (418) empty -> .
    (225) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 418 (empty -> .)
    DEFAULT_VALUE   shift and go to state 454

    default_value                  shift and go to state 453
    compu_vtab_range_optional      shift and go to state 455
    empty                          shift and go to state 456

state 394

    (236) number_number_string_value -> NUMERIC . NUMERIC STRING

    NUMERIC         shift and go to state 457


state 395

    (249) function_optional_list -> function_optional function_optional_list .

    end             reduce using rule 249 (function_optional_list -> function_optional function_optional_list .)


state 396

    (258) function_version -> FUNCTION_VERSION STRING .

    begin           reduce using rule 258 (function_version -> FUNCTION_VERSION STRING .)
    FUNCTION_VERSION reduce using rule 258 (function_version -> FUNCTION_VERSION STRING .)
    end             reduce using rule 258 (function_version -> FUNCTION_VERSION STRING .)


state 397

    (256) loc_measurement -> begin LOC_MEASUREMENT . ident_list end LOC_MEASUREMENT
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 458

state 398

    (252) def_characteristic -> begin DEF_CHARACTERISTIC . ident_list end DEF_CHARACTERISTIC
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 459

state 399

    (257) sub_function -> begin SUB_FUNCTION . ident_list end SUB_FUNCTION
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 460

state 400

    (254) in_measurement -> begin IN_MEASUREMENT . ident_list end IN_MEASUREMENT
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 461

state 401

    (255) out_measurement -> begin OUT_MEASUREMENT . ident_list end OUT_MEASUREMENT
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 462

state 402

    (239) function -> begin FUNCTION IDENT STRING function_optional_list_optional end . FUNCTION

    FUNCTION        shift and go to state 463


state 403

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC . number_list compu_tab_optional end COMPU_TAB
    (26) number_list -> . NUMERIC
    (27) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 464

state 404

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC . IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 465


state 405

    (408) unit_type -> DERIVED .

    SI_EXPONENTS    reduce using rule 408 (unit_type -> DERIVED .)
    REF_UNIT        reduce using rule 408 (unit_type -> DERIVED .)
    UNIT_CONVERSION reduce using rule 408 (unit_type -> DERIVED .)
    end             reduce using rule 408 (unit_type -> DERIVED .)


state 406

    (406) unit -> begin UNIT IDENT STRING STRING unit_type . unit_optional_list_optional end UNIT
    (414) unit_optional_list_optional -> . empty
    (415) unit_optional_list_optional -> . unit_optional_list
    (418) empty -> .
    (412) unit_optional_list -> . unit_optional
    (413) unit_optional_list -> . unit_optional unit_optional_list
    (409) unit_optional -> . si_exponents
    (410) unit_optional -> . ref_unit
    (411) unit_optional -> . unit_conversion
    (416) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (212) ref_unit -> . REF_UNIT IDENT
    (417) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 418 (empty -> .)
    SI_EXPONENTS    shift and go to state 467
    REF_UNIT        shift and go to state 468
    UNIT_CONVERSION shift and go to state 474

    unit_optional_list             shift and go to state 466
    unit_optional_list_optional    shift and go to state 469
    unit_conversion                shift and go to state 470
    si_exponents                   shift and go to state 471
    ref_unit                       shift and go to state 473
    unit_optional                  shift and go to state 475
    empty                          shift and go to state 472

state 407

    (407) unit_type -> EXTENDED_SI .

    SI_EXPONENTS    reduce using rule 407 (unit_type -> EXTENDED_SI .)
    REF_UNIT        reduce using rule 407 (unit_type -> EXTENDED_SI .)
    UNIT_CONVERSION reduce using rule 407 (unit_type -> EXTENDED_SI .)
    end             reduce using rule 407 (unit_type -> EXTENDED_SI .)


state 408

    (405) ref_group -> begin REF_GROUP ident_list . end REF_GROUP

    end             shift and go to state 476


state 409

    (398) user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .

    begin           reduce using rule 398 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)
    end             reduce using rule 398 (user_rights -> begin USER_RIGHTS IDENT user_rights_optional_list_optional end USER_RIGHTS .)


state 410

    (390) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC . frame_optional_list_optional end FRAME
    (395) frame_optional_list_optional -> . empty
    (396) frame_optional_list_optional -> . frame_optional_list
    (418) empty -> .
    (393) frame_optional_list -> . frame_optional
    (394) frame_optional_list -> . frame_optional frame_optional_list
    (391) frame_optional -> . frame_measurement
    (392) frame_optional -> . if_data
    (397) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA

    end             reduce using rule 418 (empty -> .)
    FRAME_MEASUREMENT shift and go to state 481
    begin           shift and go to state 477

    frame_optional_list            shift and go to state 480
    frame_optional_list_optional   shift and go to state 478
    if_data                        shift and go to state 479
    frame_optional                 shift and go to state 482
    empty                          shift and go to state 483
    frame_measurement              shift and go to state 484

state 411

    (230) number_string_value -> NUMERIC . STRING

    STRING          shift and go to state 485


state 412

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list . compu_vtab_optional end COMPU_VTAB
    (231) compu_vtab_optional -> . empty
    (232) compu_vtab_optional -> . default_value
    (418) empty -> .
    (225) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 418 (empty -> .)
    DEFAULT_VALUE   shift and go to state 454

    default_value                  shift and go to state 486
    compu_vtab_optional            shift and go to state 487
    empty                          shift and go to state 488

state 413

    (228) number_string_value_list -> number_string_value .
    (229) number_string_value_list -> number_string_value . number_string_value_list
    (228) number_string_value_list -> . number_string_value
    (229) number_string_value_list -> . number_string_value number_string_value_list
    (230) number_string_value -> . NUMERIC STRING

    DEFAULT_VALUE   reduce using rule 228 (number_string_value_list -> number_string_value .)
    end             reduce using rule 228 (number_string_value_list -> number_string_value .)
    NUMERIC         shift and go to state 411

    number_string_value            shift and go to state 413
    number_string_value_list       shift and go to state 489

state 414

    (259) group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .

    begin           reduce using rule 259 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)
    end             reduce using rule 259 (group -> begin GROUP IDENT STRING group_optional_list_optional end GROUP .)


state 415

    (271) sub_group -> begin SUB_GROUP ident_list . end SUB_GROUP

    end             shift and go to state 490


state 416

    (83) function_list -> begin FUNCTION_LIST ident_list . end FUNCTION_LIST

    end             shift and go to state 491


state 417

    (270) ref_measurement -> begin REF_MEASUREMENT ident_list . end REF_MEASUREMENT

    end             shift and go to state 492


state 418

    (253) ref_characteristic -> begin REF_CHARACTERISTIC ident_list . end REF_CHARACTERISTIC

    end             shift and go to state 493


state 419

    (91) annotation -> begin ANNOTATION annotation_optional_list_optional . end ANNOTATION

    end             shift and go to state 494


state 420

    (97) annotation_text -> begin . ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 495


state 421

    (93) annotation_optional -> annotation_origin .

    ANNOTATION_LABEL reduce using rule 93 (annotation_optional -> annotation_origin .)
    ANNOTATION_ORIGIN reduce using rule 93 (annotation_optional -> annotation_origin .)
    begin           reduce using rule 93 (annotation_optional -> annotation_origin .)
    end             reduce using rule 93 (annotation_optional -> annotation_origin .)


state 422

    (95) annotation_label -> ANNOTATION_LABEL . STRING

    STRING          shift and go to state 496


state 423

    (94) annotation_optional -> annotation_text .

    ANNOTATION_LABEL reduce using rule 94 (annotation_optional -> annotation_text .)
    ANNOTATION_ORIGIN reduce using rule 94 (annotation_optional -> annotation_text .)
    begin           reduce using rule 94 (annotation_optional -> annotation_text .)
    end             reduce using rule 94 (annotation_optional -> annotation_text .)


state 424

    (101) annotation_optional_list_optional -> annotation_optional_list .

    end             reduce using rule 101 (annotation_optional_list_optional -> annotation_optional_list .)


state 425

    (96) annotation_origin -> ANNOTATION_ORIGIN . STRING

    STRING          shift and go to state 497


state 426

    (98) annotation_optional_list -> annotation_optional .
    (99) annotation_optional_list -> annotation_optional . annotation_optional_list
    (98) annotation_optional_list -> . annotation_optional
    (99) annotation_optional_list -> . annotation_optional annotation_optional_list
    (92) annotation_optional -> . annotation_label
    (93) annotation_optional -> . annotation_origin
    (94) annotation_optional -> . annotation_text
    (95) annotation_label -> . ANNOTATION_LABEL STRING
    (96) annotation_origin -> . ANNOTATION_ORIGIN STRING
    (97) annotation_text -> . begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT

    end             reduce using rule 98 (annotation_optional_list -> annotation_optional .)
    ANNOTATION_LABEL shift and go to state 422
    ANNOTATION_ORIGIN shift and go to state 425
    begin           shift and go to state 420

    annotation_optional_list       shift and go to state 498
    annotation_origin              shift and go to state 421
    annotation_text                shift and go to state 423
    annotation_optional            shift and go to state 426
    annotation_label               shift and go to state 427

state 427

    (92) annotation_optional -> annotation_label .

    ANNOTATION_LABEL reduce using rule 92 (annotation_optional -> annotation_label .)
    ANNOTATION_ORIGIN reduce using rule 92 (annotation_optional -> annotation_label .)
    begin           reduce using rule 92 (annotation_optional -> annotation_label .)
    end             reduce using rule 92 (annotation_optional -> annotation_label .)


state 428

    (100) annotation_optional_list_optional -> empty .

    end             reduce using rule 100 (annotation_optional_list_optional -> empty .)


state 429

    (20) indexorder -> INDEX_DECR .

    PBYTE           reduce using rule 20 (indexorder -> INDEX_DECR .)
    PWORD           reduce using rule 20 (indexorder -> INDEX_DECR .)
    PLONG           reduce using rule 20 (indexorder -> INDEX_DECR .)
    DIRECT          reduce using rule 20 (indexorder -> INDEX_DECR .)


state 430

    (19) indexorder -> INDEX_INCR .

    PBYTE           reduce using rule 19 (indexorder -> INDEX_INCR .)
    PWORD           reduce using rule 19 (indexorder -> INDEX_INCR .)
    PLONG           reduce using rule 19 (indexorder -> INDEX_INCR .)
    DIRECT          reduce using rule 19 (indexorder -> INDEX_INCR .)


state 431

    (325) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 499

state 432

    (323) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 504

state 433

    (324) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 505

state 434

    (328) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 506

state 435

    (326) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 507

state 436

    (327) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC . indexorder addrtype
    (19) indexorder -> . INDEX_INCR
    (20) indexorder -> . INDEX_DECR

    INDEX_INCR      shift and go to state 430
    INDEX_DECR      shift and go to state 429

    indexorder                     shift and go to state 508

state 437

    (318) fnc_values_index_mode -> ROW_DIR .

    PBYTE           reduce using rule 318 (fnc_values_index_mode -> ROW_DIR .)
    PWORD           reduce using rule 318 (fnc_values_index_mode -> ROW_DIR .)
    PLONG           reduce using rule 318 (fnc_values_index_mode -> ROW_DIR .)
    DIRECT          reduce using rule 318 (fnc_values_index_mode -> ROW_DIR .)


state 438

    (319) fnc_values_index_mode -> ALTERNATE_WITH_X .

    PBYTE           reduce using rule 319 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PWORD           reduce using rule 319 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    PLONG           reduce using rule 319 (fnc_values_index_mode -> ALTERNATE_WITH_X .)
    DIRECT          reduce using rule 319 (fnc_values_index_mode -> ALTERNATE_WITH_X .)


state 439

    (317) fnc_values_index_mode -> COLUMN_DIR .

    PBYTE           reduce using rule 317 (fnc_values_index_mode -> COLUMN_DIR .)
    PWORD           reduce using rule 317 (fnc_values_index_mode -> COLUMN_DIR .)
    PLONG           reduce using rule 317 (fnc_values_index_mode -> COLUMN_DIR .)
    DIRECT          reduce using rule 317 (fnc_values_index_mode -> COLUMN_DIR .)


state 440

    (321) fnc_values_index_mode -> ALTERNATE_CURVES .

    PBYTE           reduce using rule 321 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PWORD           reduce using rule 321 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    PLONG           reduce using rule 321 (fnc_values_index_mode -> ALTERNATE_CURVES .)
    DIRECT          reduce using rule 321 (fnc_values_index_mode -> ALTERNATE_CURVES .)


state 441

    (316) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 509

state 442

    (320) fnc_values_index_mode -> ALTERNATE_WITH_Y .

    PBYTE           reduce using rule 320 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PWORD           reduce using rule 320 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    PLONG           reduce using rule 320 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)
    DIRECT          reduce using rule 320 (fnc_values_index_mode -> ALTERNATE_WITH_Y .)


state 443

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING . compu_method_optional_list_optional end COMPU_METHOD
    (215) compu_method_optional_list_optional -> . empty
    (216) compu_method_optional_list_optional -> . compu_method_optional_list
    (418) empty -> .
    (213) compu_method_optional_list -> . compu_method_optional
    (214) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (202) compu_method_optional -> . formula
    (203) compu_method_optional -> . coeffs
    (204) compu_method_optional -> . compu_tab_ref
    (205) compu_method_optional -> . ref_unit
    (206) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (210) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (211) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (212) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 418 (empty -> .)
    begin           shift and go to state 510
    COEFFS          shift and go to state 512
    COMPU_TAB_REF   shift and go to state 515
    REF_UNIT        shift and go to state 468

    ref_unit                       shift and go to state 516
    compu_tab_ref                  shift and go to state 520
    compu_method_optional_list_optional shift and go to state 511
    compu_method_optional_list     shift and go to state 513
    compu_method_optional          shift and go to state 514
    coeffs                         shift and go to state 517
    formula                        shift and go to state 518
    empty                          shift and go to state 519

state 444

    (29) ident_list -> IDENT ident_list .

    end             reduce using rule 29 (ident_list -> IDENT ident_list .)
    VAR_MEASUREMENT reduce using rule 29 (ident_list -> IDENT ident_list .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 29 (ident_list -> IDENT ident_list .)
    FRAME_MEASUREMENT reduce using rule 29 (ident_list -> IDENT ident_list .)
    begin           reduce using rule 29 (ident_list -> IDENT ident_list .)


state 445

    (369) var_address -> begin . VAR_ADDRESS number_list end VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 521


state 446

    (368) var_characteristic_optional -> var_address .

    end             reduce using rule 368 (var_characteristic_optional -> var_address .)


state 447

    (367) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional . end VAR_CHARACTERISTIC

    end             shift and go to state 522


state 448

    (372) var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .

    VAR_SEPARATOR   reduce using rule 372 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    VAR_NAMING      reduce using rule 372 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    begin           reduce using rule 372 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)
    end             reduce using rule 372 (var_forbidden_comb -> begin VAR_FORBIDDEN_COMB ident_ident_value_list end VAR_FORBIDDEN_COMB .)


state 449

    (376) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list . var_criterion_optional_list_optional end VAR_CRITERION
    (381) var_criterion_optional_list_optional -> . empty
    (382) var_criterion_optional_list_optional -> . var_criterion_optional_list
    (418) empty -> .
    (379) var_criterion_optional_list -> . var_criterion_optional
    (380) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (377) var_criterion_optional -> . var_measurement
    (378) var_criterion_optional -> . var_selection_characteristic
    (383) var_measurement -> . VAR_MEASUREMENT IDENT
    (384) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 418 (empty -> .)
    VAR_MEASUREMENT shift and go to state 525
    VAR_SELECTION_CHARACTERISTIC shift and go to state 528

    var_criterion_optional         shift and go to state 523
    var_criterion_optional_list    shift and go to state 524
    var_criterion_optional_list_optional shift and go to state 526
    var_selection_characteristic   shift and go to state 527
    var_measurement                shift and go to state 529
    empty                          shift and go to state 530

state 450

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT . NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 531


state 451

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC . NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 532


state 452

    (235) number_number_string_value_list -> number_number_string_value number_number_string_value_list .

    DEFAULT_VALUE   reduce using rule 235 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)
    end             reduce using rule 235 (number_number_string_value_list -> number_number_string_value number_number_string_value_list .)


state 453

    (238) compu_vtab_range_optional -> default_value .

    end             reduce using rule 238 (compu_vtab_range_optional -> default_value .)


state 454

    (225) default_value -> DEFAULT_VALUE . STRING

    STRING          shift and go to state 533


state 455

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional . end COMPU_VTAB_RANGE

    end             shift and go to state 534


state 456

    (237) compu_vtab_range_optional -> empty .

    end             reduce using rule 237 (compu_vtab_range_optional -> empty .)


state 457

    (236) number_number_string_value -> NUMERIC NUMERIC . STRING

    STRING          shift and go to state 535


state 458

    (256) loc_measurement -> begin LOC_MEASUREMENT ident_list . end LOC_MEASUREMENT

    end             shift and go to state 536


state 459

    (252) def_characteristic -> begin DEF_CHARACTERISTIC ident_list . end DEF_CHARACTERISTIC

    end             shift and go to state 537


state 460

    (257) sub_function -> begin SUB_FUNCTION ident_list . end SUB_FUNCTION

    end             shift and go to state 538


state 461

    (254) in_measurement -> begin IN_MEASUREMENT ident_list . end IN_MEASUREMENT

    end             shift and go to state 539


state 462

    (255) out_measurement -> begin OUT_MEASUREMENT ident_list . end OUT_MEASUREMENT

    end             shift and go to state 540


state 463

    (239) function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .

    begin           reduce using rule 239 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)
    end             reduce using rule 239 (function -> begin FUNCTION IDENT STRING function_optional_list_optional end FUNCTION .)


state 464

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list . compu_tab_optional end COMPU_TAB
    (223) compu_tab_optional -> . empty
    (224) compu_tab_optional -> . default_value
    (418) empty -> .
    (225) default_value -> . DEFAULT_VALUE STRING

    end             reduce using rule 418 (empty -> .)
    DEFAULT_VALUE   shift and go to state 454

    default_value                  shift and go to state 541
    compu_tab_optional             shift and go to state 542
    empty                          shift and go to state 543

state 465

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT . NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 544


state 466

    (415) unit_optional_list_optional -> unit_optional_list .

    end             reduce using rule 415 (unit_optional_list_optional -> unit_optional_list .)


state 467

    (416) si_exponents -> SI_EXPONENTS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 545


state 468

    (212) ref_unit -> REF_UNIT . IDENT

    IDENT           shift and go to state 546


state 469

    (406) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional . end UNIT

    end             shift and go to state 547


state 470

    (411) unit_optional -> unit_conversion .

    SI_EXPONENTS    reduce using rule 411 (unit_optional -> unit_conversion .)
    REF_UNIT        reduce using rule 411 (unit_optional -> unit_conversion .)
    UNIT_CONVERSION reduce using rule 411 (unit_optional -> unit_conversion .)
    end             reduce using rule 411 (unit_optional -> unit_conversion .)


state 471

    (409) unit_optional -> si_exponents .

    SI_EXPONENTS    reduce using rule 409 (unit_optional -> si_exponents .)
    REF_UNIT        reduce using rule 409 (unit_optional -> si_exponents .)
    UNIT_CONVERSION reduce using rule 409 (unit_optional -> si_exponents .)
    end             reduce using rule 409 (unit_optional -> si_exponents .)


state 472

    (414) unit_optional_list_optional -> empty .

    end             reduce using rule 414 (unit_optional_list_optional -> empty .)


state 473

    (410) unit_optional -> ref_unit .

    SI_EXPONENTS    reduce using rule 410 (unit_optional -> ref_unit .)
    REF_UNIT        reduce using rule 410 (unit_optional -> ref_unit .)
    UNIT_CONVERSION reduce using rule 410 (unit_optional -> ref_unit .)
    end             reduce using rule 410 (unit_optional -> ref_unit .)


state 474

    (417) unit_conversion -> UNIT_CONVERSION . NUMERIC NUMERIC

    NUMERIC         shift and go to state 548


state 475

    (412) unit_optional_list -> unit_optional .
    (413) unit_optional_list -> unit_optional . unit_optional_list
    (412) unit_optional_list -> . unit_optional
    (413) unit_optional_list -> . unit_optional unit_optional_list
    (409) unit_optional -> . si_exponents
    (410) unit_optional -> . ref_unit
    (411) unit_optional -> . unit_conversion
    (416) si_exponents -> . SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (212) ref_unit -> . REF_UNIT IDENT
    (417) unit_conversion -> . UNIT_CONVERSION NUMERIC NUMERIC

    end             reduce using rule 412 (unit_optional_list -> unit_optional .)
    SI_EXPONENTS    shift and go to state 467
    REF_UNIT        shift and go to state 468
    UNIT_CONVERSION shift and go to state 474

    ref_unit                       shift and go to state 473
    si_exponents                   shift and go to state 471
    unit_optional                  shift and go to state 475
    unit_conversion                shift and go to state 470
    unit_optional_list             shift and go to state 549

state 476

    (405) ref_group -> begin REF_GROUP ident_list end . REF_GROUP

    REF_GROUP       shift and go to state 550


state 477

    (69) if_data -> begin . IF_DATA IDENT end IF_DATA

    IF_DATA         shift and go to state 79


state 478

    (390) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional . end FRAME

    end             shift and go to state 551


state 479

    (392) frame_optional -> if_data .

    FRAME_MEASUREMENT reduce using rule 392 (frame_optional -> if_data .)
    begin           reduce using rule 392 (frame_optional -> if_data .)
    end             reduce using rule 392 (frame_optional -> if_data .)


state 480

    (396) frame_optional_list_optional -> frame_optional_list .

    end             reduce using rule 396 (frame_optional_list_optional -> frame_optional_list .)


state 481

    (397) frame_measurement -> FRAME_MEASUREMENT . ident_list
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 552

state 482

    (393) frame_optional_list -> frame_optional .
    (394) frame_optional_list -> frame_optional . frame_optional_list
    (393) frame_optional_list -> . frame_optional
    (394) frame_optional_list -> . frame_optional frame_optional_list
    (391) frame_optional -> . frame_measurement
    (392) frame_optional -> . if_data
    (397) frame_measurement -> . FRAME_MEASUREMENT ident_list
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA

    end             reduce using rule 393 (frame_optional_list -> frame_optional .)
    FRAME_MEASUREMENT shift and go to state 481
    begin           shift and go to state 477

    frame_optional_list            shift and go to state 553
    if_data                        shift and go to state 479
    frame_optional                 shift and go to state 482
    frame_measurement              shift and go to state 484

state 483

    (395) frame_optional_list_optional -> empty .

    end             reduce using rule 395 (frame_optional_list_optional -> empty .)


state 484

    (391) frame_optional -> frame_measurement .

    FRAME_MEASUREMENT reduce using rule 391 (frame_optional -> frame_measurement .)
    begin           reduce using rule 391 (frame_optional -> frame_measurement .)
    end             reduce using rule 391 (frame_optional -> frame_measurement .)


state 485

    (230) number_string_value -> NUMERIC STRING .

    NUMERIC         reduce using rule 230 (number_string_value -> NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 230 (number_string_value -> NUMERIC STRING .)
    end             reduce using rule 230 (number_string_value -> NUMERIC STRING .)


state 486

    (232) compu_vtab_optional -> default_value .

    end             reduce using rule 232 (compu_vtab_optional -> default_value .)


state 487

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional . end COMPU_VTAB

    end             shift and go to state 554


state 488

    (231) compu_vtab_optional -> empty .

    end             reduce using rule 231 (compu_vtab_optional -> empty .)


state 489

    (229) number_string_value_list -> number_string_value number_string_value_list .

    DEFAULT_VALUE   reduce using rule 229 (number_string_value_list -> number_string_value number_string_value_list .)
    end             reduce using rule 229 (number_string_value_list -> number_string_value number_string_value_list .)


state 490

    (271) sub_group -> begin SUB_GROUP ident_list end . SUB_GROUP

    SUB_GROUP       shift and go to state 555


state 491

    (83) function_list -> begin FUNCTION_LIST ident_list end . FUNCTION_LIST

    FUNCTION_LIST   shift and go to state 556


state 492

    (270) ref_measurement -> begin REF_MEASUREMENT ident_list end . REF_MEASUREMENT

    REF_MEASUREMENT shift and go to state 557


state 493

    (253) ref_characteristic -> begin REF_CHARACTERISTIC ident_list end . REF_CHARACTERISTIC

    REF_CHARACTERISTIC shift and go to state 558


state 494

    (91) annotation -> begin ANNOTATION annotation_optional_list_optional end . ANNOTATION

    ANNOTATION      shift and go to state 559


state 495

    (97) annotation_text -> begin ANNOTATION_TEXT . string_list end ANNOTATION_TEXT
    (30) string_list -> . STRING
    (31) string_list -> . STRING string_list

    STRING          shift and go to state 561

    string_list                    shift and go to state 560

state 496

    (95) annotation_label -> ANNOTATION_LABEL STRING .

    ANNOTATION_LABEL reduce using rule 95 (annotation_label -> ANNOTATION_LABEL STRING .)
    ANNOTATION_ORIGIN reduce using rule 95 (annotation_label -> ANNOTATION_LABEL STRING .)
    begin           reduce using rule 95 (annotation_label -> ANNOTATION_LABEL STRING .)
    end             reduce using rule 95 (annotation_label -> ANNOTATION_LABEL STRING .)


state 497

    (96) annotation_origin -> ANNOTATION_ORIGIN STRING .

    ANNOTATION_LABEL reduce using rule 96 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    ANNOTATION_ORIGIN reduce using rule 96 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    begin           reduce using rule 96 (annotation_origin -> ANNOTATION_ORIGIN STRING .)
    end             reduce using rule 96 (annotation_origin -> ANNOTATION_ORIGIN STRING .)


state 498

    (99) annotation_optional_list -> annotation_optional annotation_optional_list .

    end             reduce using rule 99 (annotation_optional_list -> annotation_optional annotation_optional_list .)


state 499

    (325) axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 325 (axis_pts_z -> AXIS_PTS_Z NUMERIC datatype indexorder addrtype .)


state 500

    (15) addrtype -> PBYTE .

    FNC_VALUES      reduce using rule 15 (addrtype -> PBYTE .)
    IDENTIFICATION  reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_PTS_X      reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_PTS_Y      reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_PTS_Z      reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_RESCALE_X  reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_RESCALE_Y  reduce using rule 15 (addrtype -> PBYTE .)
    AXIS_RESCALE_Z  reduce using rule 15 (addrtype -> PBYTE .)
    NO_AXIS_PTS_X   reduce using rule 15 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Y   reduce using rule 15 (addrtype -> PBYTE .)
    NO_AXIS_PTS_Z   reduce using rule 15 (addrtype -> PBYTE .)
    NO_RESCALE_X    reduce using rule 15 (addrtype -> PBYTE .)
    NO_RESCALE_Y    reduce using rule 15 (addrtype -> PBYTE .)
    NO_RESCALE_Z    reduce using rule 15 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_X reduce using rule 15 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Y reduce using rule 15 (addrtype -> PBYTE .)
    FIX_NO_AXIS_PTS_Z reduce using rule 15 (addrtype -> PBYTE .)
    SRC_ADDR_X      reduce using rule 15 (addrtype -> PBYTE .)
    SRC_ADDR_Y      reduce using rule 15 (addrtype -> PBYTE .)
    SRC_ADDR_Z      reduce using rule 15 (addrtype -> PBYTE .)
    RIP_ADDR_X      reduce using rule 15 (addrtype -> PBYTE .)
    RIP_ADDR_Y      reduce using rule 15 (addrtype -> PBYTE .)
    RIP_ADDR_Z      reduce using rule 15 (addrtype -> PBYTE .)
    RIP_ADDR_W      reduce using rule 15 (addrtype -> PBYTE .)
    SHIFT_OP_X      reduce using rule 15 (addrtype -> PBYTE .)
    SHIFT_OP_Y      reduce using rule 15 (addrtype -> PBYTE .)
    SHIFT_OP_Z      reduce using rule 15 (addrtype -> PBYTE .)
    OFFSET_X        reduce using rule 15 (addrtype -> PBYTE .)
    OFFSET_Y        reduce using rule 15 (addrtype -> PBYTE .)
    OFFSET_Z        reduce using rule 15 (addrtype -> PBYTE .)
    DIST_OP_X       reduce using rule 15 (addrtype -> PBYTE .)
    DIST_OP_Y       reduce using rule 15 (addrtype -> PBYTE .)
    DIST_OP_Z       reduce using rule 15 (addrtype -> PBYTE .)
    ALIGNMENT_BYTE  reduce using rule 15 (addrtype -> PBYTE .)
    ALIGNMENT_WORD  reduce using rule 15 (addrtype -> PBYTE .)
    ALIGNMENT_LONG  reduce using rule 15 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 15 (addrtype -> PBYTE .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 15 (addrtype -> PBYTE .)
    RESERVED        reduce using rule 15 (addrtype -> PBYTE .)
    end             reduce using rule 15 (addrtype -> PBYTE .)


state 501

    (18) addrtype -> DIRECT .

    FNC_VALUES      reduce using rule 18 (addrtype -> DIRECT .)
    IDENTIFICATION  reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_PTS_X      reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_PTS_Y      reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_PTS_Z      reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_RESCALE_X  reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_RESCALE_Y  reduce using rule 18 (addrtype -> DIRECT .)
    AXIS_RESCALE_Z  reduce using rule 18 (addrtype -> DIRECT .)
    NO_AXIS_PTS_X   reduce using rule 18 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Y   reduce using rule 18 (addrtype -> DIRECT .)
    NO_AXIS_PTS_Z   reduce using rule 18 (addrtype -> DIRECT .)
    NO_RESCALE_X    reduce using rule 18 (addrtype -> DIRECT .)
    NO_RESCALE_Y    reduce using rule 18 (addrtype -> DIRECT .)
    NO_RESCALE_Z    reduce using rule 18 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_X reduce using rule 18 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Y reduce using rule 18 (addrtype -> DIRECT .)
    FIX_NO_AXIS_PTS_Z reduce using rule 18 (addrtype -> DIRECT .)
    SRC_ADDR_X      reduce using rule 18 (addrtype -> DIRECT .)
    SRC_ADDR_Y      reduce using rule 18 (addrtype -> DIRECT .)
    SRC_ADDR_Z      reduce using rule 18 (addrtype -> DIRECT .)
    RIP_ADDR_X      reduce using rule 18 (addrtype -> DIRECT .)
    RIP_ADDR_Y      reduce using rule 18 (addrtype -> DIRECT .)
    RIP_ADDR_Z      reduce using rule 18 (addrtype -> DIRECT .)
    RIP_ADDR_W      reduce using rule 18 (addrtype -> DIRECT .)
    SHIFT_OP_X      reduce using rule 18 (addrtype -> DIRECT .)
    SHIFT_OP_Y      reduce using rule 18 (addrtype -> DIRECT .)
    SHIFT_OP_Z      reduce using rule 18 (addrtype -> DIRECT .)
    OFFSET_X        reduce using rule 18 (addrtype -> DIRECT .)
    OFFSET_Y        reduce using rule 18 (addrtype -> DIRECT .)
    OFFSET_Z        reduce using rule 18 (addrtype -> DIRECT .)
    DIST_OP_X       reduce using rule 18 (addrtype -> DIRECT .)
    DIST_OP_Y       reduce using rule 18 (addrtype -> DIRECT .)
    DIST_OP_Z       reduce using rule 18 (addrtype -> DIRECT .)
    ALIGNMENT_BYTE  reduce using rule 18 (addrtype -> DIRECT .)
    ALIGNMENT_WORD  reduce using rule 18 (addrtype -> DIRECT .)
    ALIGNMENT_LONG  reduce using rule 18 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 18 (addrtype -> DIRECT .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 18 (addrtype -> DIRECT .)
    RESERVED        reduce using rule 18 (addrtype -> DIRECT .)
    end             reduce using rule 18 (addrtype -> DIRECT .)


state 502

    (16) addrtype -> PWORD .

    FNC_VALUES      reduce using rule 16 (addrtype -> PWORD .)
    IDENTIFICATION  reduce using rule 16 (addrtype -> PWORD .)
    AXIS_PTS_X      reduce using rule 16 (addrtype -> PWORD .)
    AXIS_PTS_Y      reduce using rule 16 (addrtype -> PWORD .)
    AXIS_PTS_Z      reduce using rule 16 (addrtype -> PWORD .)
    AXIS_RESCALE_X  reduce using rule 16 (addrtype -> PWORD .)
    AXIS_RESCALE_Y  reduce using rule 16 (addrtype -> PWORD .)
    AXIS_RESCALE_Z  reduce using rule 16 (addrtype -> PWORD .)
    NO_AXIS_PTS_X   reduce using rule 16 (addrtype -> PWORD .)
    NO_AXIS_PTS_Y   reduce using rule 16 (addrtype -> PWORD .)
    NO_AXIS_PTS_Z   reduce using rule 16 (addrtype -> PWORD .)
    NO_RESCALE_X    reduce using rule 16 (addrtype -> PWORD .)
    NO_RESCALE_Y    reduce using rule 16 (addrtype -> PWORD .)
    NO_RESCALE_Z    reduce using rule 16 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_X reduce using rule 16 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Y reduce using rule 16 (addrtype -> PWORD .)
    FIX_NO_AXIS_PTS_Z reduce using rule 16 (addrtype -> PWORD .)
    SRC_ADDR_X      reduce using rule 16 (addrtype -> PWORD .)
    SRC_ADDR_Y      reduce using rule 16 (addrtype -> PWORD .)
    SRC_ADDR_Z      reduce using rule 16 (addrtype -> PWORD .)
    RIP_ADDR_X      reduce using rule 16 (addrtype -> PWORD .)
    RIP_ADDR_Y      reduce using rule 16 (addrtype -> PWORD .)
    RIP_ADDR_Z      reduce using rule 16 (addrtype -> PWORD .)
    RIP_ADDR_W      reduce using rule 16 (addrtype -> PWORD .)
    SHIFT_OP_X      reduce using rule 16 (addrtype -> PWORD .)
    SHIFT_OP_Y      reduce using rule 16 (addrtype -> PWORD .)
    SHIFT_OP_Z      reduce using rule 16 (addrtype -> PWORD .)
    OFFSET_X        reduce using rule 16 (addrtype -> PWORD .)
    OFFSET_Y        reduce using rule 16 (addrtype -> PWORD .)
    OFFSET_Z        reduce using rule 16 (addrtype -> PWORD .)
    DIST_OP_X       reduce using rule 16 (addrtype -> PWORD .)
    DIST_OP_Y       reduce using rule 16 (addrtype -> PWORD .)
    DIST_OP_Z       reduce using rule 16 (addrtype -> PWORD .)
    ALIGNMENT_BYTE  reduce using rule 16 (addrtype -> PWORD .)
    ALIGNMENT_WORD  reduce using rule 16 (addrtype -> PWORD .)
    ALIGNMENT_LONG  reduce using rule 16 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 16 (addrtype -> PWORD .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 16 (addrtype -> PWORD .)
    RESERVED        reduce using rule 16 (addrtype -> PWORD .)
    end             reduce using rule 16 (addrtype -> PWORD .)


state 503

    (17) addrtype -> PLONG .

    FNC_VALUES      reduce using rule 17 (addrtype -> PLONG .)
    IDENTIFICATION  reduce using rule 17 (addrtype -> PLONG .)
    AXIS_PTS_X      reduce using rule 17 (addrtype -> PLONG .)
    AXIS_PTS_Y      reduce using rule 17 (addrtype -> PLONG .)
    AXIS_PTS_Z      reduce using rule 17 (addrtype -> PLONG .)
    AXIS_RESCALE_X  reduce using rule 17 (addrtype -> PLONG .)
    AXIS_RESCALE_Y  reduce using rule 17 (addrtype -> PLONG .)
    AXIS_RESCALE_Z  reduce using rule 17 (addrtype -> PLONG .)
    NO_AXIS_PTS_X   reduce using rule 17 (addrtype -> PLONG .)
    NO_AXIS_PTS_Y   reduce using rule 17 (addrtype -> PLONG .)
    NO_AXIS_PTS_Z   reduce using rule 17 (addrtype -> PLONG .)
    NO_RESCALE_X    reduce using rule 17 (addrtype -> PLONG .)
    NO_RESCALE_Y    reduce using rule 17 (addrtype -> PLONG .)
    NO_RESCALE_Z    reduce using rule 17 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_X reduce using rule 17 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Y reduce using rule 17 (addrtype -> PLONG .)
    FIX_NO_AXIS_PTS_Z reduce using rule 17 (addrtype -> PLONG .)
    SRC_ADDR_X      reduce using rule 17 (addrtype -> PLONG .)
    SRC_ADDR_Y      reduce using rule 17 (addrtype -> PLONG .)
    SRC_ADDR_Z      reduce using rule 17 (addrtype -> PLONG .)
    RIP_ADDR_X      reduce using rule 17 (addrtype -> PLONG .)
    RIP_ADDR_Y      reduce using rule 17 (addrtype -> PLONG .)
    RIP_ADDR_Z      reduce using rule 17 (addrtype -> PLONG .)
    RIP_ADDR_W      reduce using rule 17 (addrtype -> PLONG .)
    SHIFT_OP_X      reduce using rule 17 (addrtype -> PLONG .)
    SHIFT_OP_Y      reduce using rule 17 (addrtype -> PLONG .)
    SHIFT_OP_Z      reduce using rule 17 (addrtype -> PLONG .)
    OFFSET_X        reduce using rule 17 (addrtype -> PLONG .)
    OFFSET_Y        reduce using rule 17 (addrtype -> PLONG .)
    OFFSET_Z        reduce using rule 17 (addrtype -> PLONG .)
    DIST_OP_X       reduce using rule 17 (addrtype -> PLONG .)
    DIST_OP_Y       reduce using rule 17 (addrtype -> PLONG .)
    DIST_OP_Z       reduce using rule 17 (addrtype -> PLONG .)
    ALIGNMENT_BYTE  reduce using rule 17 (addrtype -> PLONG .)
    ALIGNMENT_WORD  reduce using rule 17 (addrtype -> PLONG .)
    ALIGNMENT_LONG  reduce using rule 17 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 17 (addrtype -> PLONG .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 17 (addrtype -> PLONG .)
    RESERVED        reduce using rule 17 (addrtype -> PLONG .)
    end             reduce using rule 17 (addrtype -> PLONG .)


state 504

    (323) axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 323 (axis_pts_x -> AXIS_PTS_X NUMERIC datatype indexorder addrtype .)


state 505

    (324) axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .

    FNC_VALUES      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    IDENTIFICATION  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_X        reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Y        reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    OFFSET_Z        reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_X       reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Y       reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    DIST_OP_Z       reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    RESERVED        reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)
    end             reduce using rule 324 (axis_pts_y -> AXIS_PTS_Y NUMERIC datatype indexorder addrtype .)


state 506

    (328) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 562

state 507

    (326) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 563

state 508

    (327) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder . addrtype
    (15) addrtype -> . PBYTE
    (16) addrtype -> . PWORD
    (17) addrtype -> . PLONG
    (18) addrtype -> . DIRECT

    PBYTE           shift and go to state 500
    PWORD           shift and go to state 502
    PLONG           shift and go to state 503
    DIRECT          shift and go to state 501

    addrtype                       shift and go to state 564

state 509

    (316) fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .

    FNC_VALUES      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    IDENTIFICATION  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_X      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Y      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_PTS_Z      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_X  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Y  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    AXIS_RESCALE_Z  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_X   reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_X    reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Y    reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    NO_RESCALE_Z    reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_X      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Y      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SRC_ADDR_Z      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_X      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Y      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_Z      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RIP_ADDR_W      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_X      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Y      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    SHIFT_OP_Z      reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_X        reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Y        reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    OFFSET_Z        reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_X       reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Y       reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    DIST_OP_Z       reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_BYTE  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_WORD  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_LONG  reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    RESERVED        reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)
    end             reduce using rule 316 (fnc_values -> FNC_VALUES NUMERIC datatype fnc_values_index_mode addrtype .)


state 510

    (206) formula -> begin . FORMULA STRING formula_optional end FORMULA

    FORMULA         shift and go to state 565


state 511

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional . end COMPU_METHOD

    end             shift and go to state 566


state 512

    (210) coeffs -> COEFFS . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 567


state 513

    (216) compu_method_optional_list_optional -> compu_method_optional_list .

    end             reduce using rule 216 (compu_method_optional_list_optional -> compu_method_optional_list .)


state 514

    (213) compu_method_optional_list -> compu_method_optional .
    (214) compu_method_optional_list -> compu_method_optional . compu_method_optional_list
    (213) compu_method_optional_list -> . compu_method_optional
    (214) compu_method_optional_list -> . compu_method_optional compu_method_optional_list
    (202) compu_method_optional -> . formula
    (203) compu_method_optional -> . coeffs
    (204) compu_method_optional -> . compu_tab_ref
    (205) compu_method_optional -> . ref_unit
    (206) formula -> . begin FORMULA STRING formula_optional end FORMULA
    (210) coeffs -> . COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC
    (211) compu_tab_ref -> . COMPU_TAB_REF IDENT
    (212) ref_unit -> . REF_UNIT IDENT

    end             reduce using rule 213 (compu_method_optional_list -> compu_method_optional .)
    begin           shift and go to state 510
    COEFFS          shift and go to state 512
    COMPU_TAB_REF   shift and go to state 515
    REF_UNIT        shift and go to state 468

    compu_tab_ref                  shift and go to state 520
    compu_method_optional          shift and go to state 514
    compu_method_optional_list     shift and go to state 568
    ref_unit                       shift and go to state 516
    coeffs                         shift and go to state 517
    formula                        shift and go to state 518

state 515

    (211) compu_tab_ref -> COMPU_TAB_REF . IDENT

    IDENT           shift and go to state 569


state 516

    (205) compu_method_optional -> ref_unit .

    begin           reduce using rule 205 (compu_method_optional -> ref_unit .)
    COEFFS          reduce using rule 205 (compu_method_optional -> ref_unit .)
    COMPU_TAB_REF   reduce using rule 205 (compu_method_optional -> ref_unit .)
    REF_UNIT        reduce using rule 205 (compu_method_optional -> ref_unit .)
    end             reduce using rule 205 (compu_method_optional -> ref_unit .)


state 517

    (203) compu_method_optional -> coeffs .

    begin           reduce using rule 203 (compu_method_optional -> coeffs .)
    COEFFS          reduce using rule 203 (compu_method_optional -> coeffs .)
    COMPU_TAB_REF   reduce using rule 203 (compu_method_optional -> coeffs .)
    REF_UNIT        reduce using rule 203 (compu_method_optional -> coeffs .)
    end             reduce using rule 203 (compu_method_optional -> coeffs .)


state 518

    (202) compu_method_optional -> formula .

    begin           reduce using rule 202 (compu_method_optional -> formula .)
    COEFFS          reduce using rule 202 (compu_method_optional -> formula .)
    COMPU_TAB_REF   reduce using rule 202 (compu_method_optional -> formula .)
    REF_UNIT        reduce using rule 202 (compu_method_optional -> formula .)
    end             reduce using rule 202 (compu_method_optional -> formula .)


state 519

    (215) compu_method_optional_list_optional -> empty .

    end             reduce using rule 215 (compu_method_optional_list_optional -> empty .)


state 520

    (204) compu_method_optional -> compu_tab_ref .

    begin           reduce using rule 204 (compu_method_optional -> compu_tab_ref .)
    COEFFS          reduce using rule 204 (compu_method_optional -> compu_tab_ref .)
    COMPU_TAB_REF   reduce using rule 204 (compu_method_optional -> compu_tab_ref .)
    REF_UNIT        reduce using rule 204 (compu_method_optional -> compu_tab_ref .)
    end             reduce using rule 204 (compu_method_optional -> compu_tab_ref .)


state 521

    (369) var_address -> begin VAR_ADDRESS . number_list end VAR_ADDRESS
    (26) number_list -> . NUMERIC
    (27) number_list -> . NUMERIC number_list

    NUMERIC         shift and go to state 8

    number_list                    shift and go to state 570

state 522

    (367) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end . VAR_CHARACTERISTIC

    VAR_CHARACTERISTIC shift and go to state 571


state 523

    (379) var_criterion_optional_list -> var_criterion_optional .
    (380) var_criterion_optional_list -> var_criterion_optional . var_criterion_optional_list
    (379) var_criterion_optional_list -> . var_criterion_optional
    (380) var_criterion_optional_list -> . var_criterion_optional var_criterion_optional_list
    (377) var_criterion_optional -> . var_measurement
    (378) var_criterion_optional -> . var_selection_characteristic
    (383) var_measurement -> . VAR_MEASUREMENT IDENT
    (384) var_selection_characteristic -> . VAR_SELECTION_CHARACTERISTIC IDENT

    end             reduce using rule 379 (var_criterion_optional_list -> var_criterion_optional .)
    VAR_MEASUREMENT shift and go to state 525
    VAR_SELECTION_CHARACTERISTIC shift and go to state 528

    var_criterion_optional         shift and go to state 523
    var_selection_characteristic   shift and go to state 527
    var_measurement                shift and go to state 529
    var_criterion_optional_list    shift and go to state 572

state 524

    (382) var_criterion_optional_list_optional -> var_criterion_optional_list .

    end             reduce using rule 382 (var_criterion_optional_list_optional -> var_criterion_optional_list .)


state 525

    (383) var_measurement -> VAR_MEASUREMENT . IDENT

    IDENT           shift and go to state 573


state 526

    (376) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional . end VAR_CRITERION

    end             shift and go to state 574


state 527

    (378) var_criterion_optional -> var_selection_characteristic .

    VAR_MEASUREMENT reduce using rule 378 (var_criterion_optional -> var_selection_characteristic .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 378 (var_criterion_optional -> var_selection_characteristic .)
    end             reduce using rule 378 (var_criterion_optional -> var_selection_characteristic .)


state 528

    (384) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC . IDENT

    IDENT           shift and go to state 575


state 529

    (377) var_criterion_optional -> var_measurement .

    VAR_MEASUREMENT reduce using rule 377 (var_criterion_optional -> var_measurement .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 377 (var_criterion_optional -> var_measurement .)
    end             reduce using rule 377 (var_criterion_optional -> var_measurement .)


state 530

    (381) var_criterion_optional_list_optional -> empty .

    end             reduce using rule 381 (var_criterion_optional_list_optional -> empty .)


state 531

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC . IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    IDENT           shift and go to state 576


state 532

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC . NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 577


state 533

    (225) default_value -> DEFAULT_VALUE STRING .

    end             reduce using rule 225 (default_value -> DEFAULT_VALUE STRING .)


state 534

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end . COMPU_VTAB_RANGE

    COMPU_VTAB_RANGE shift and go to state 578


state 535

    (236) number_number_string_value -> NUMERIC NUMERIC STRING .

    NUMERIC         reduce using rule 236 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    DEFAULT_VALUE   reduce using rule 236 (number_number_string_value -> NUMERIC NUMERIC STRING .)
    end             reduce using rule 236 (number_number_string_value -> NUMERIC NUMERIC STRING .)


state 536

    (256) loc_measurement -> begin LOC_MEASUREMENT ident_list end . LOC_MEASUREMENT

    LOC_MEASUREMENT shift and go to state 579


state 537

    (252) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end . DEF_CHARACTERISTIC

    DEF_CHARACTERISTIC shift and go to state 580


state 538

    (257) sub_function -> begin SUB_FUNCTION ident_list end . SUB_FUNCTION

    SUB_FUNCTION    shift and go to state 581


state 539

    (254) in_measurement -> begin IN_MEASUREMENT ident_list end . IN_MEASUREMENT

    IN_MEASUREMENT  shift and go to state 582


state 540

    (255) out_measurement -> begin OUT_MEASUREMENT ident_list end . OUT_MEASUREMENT

    OUT_MEASUREMENT shift and go to state 583


state 541

    (224) compu_tab_optional -> default_value .

    end             reduce using rule 224 (compu_tab_optional -> default_value .)


state 542

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional . end COMPU_TAB

    end             shift and go to state 584


state 543

    (223) compu_tab_optional -> empty .

    end             reduce using rule 223 (compu_tab_optional -> empty .)


state 544

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC . IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    IDENT           shift and go to state 585


state 545

    (416) si_exponents -> SI_EXPONENTS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 586


state 546

    (212) ref_unit -> REF_UNIT IDENT .

    SI_EXPONENTS    reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    REF_UNIT        reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    UNIT_CONVERSION reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    end             reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    begin           reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    COEFFS          reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)
    COMPU_TAB_REF   reduce using rule 212 (ref_unit -> REF_UNIT IDENT .)


state 547

    (406) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end . UNIT

    UNIT            shift and go to state 587


state 548

    (417) unit_conversion -> UNIT_CONVERSION NUMERIC . NUMERIC

    NUMERIC         shift and go to state 588


state 549

    (413) unit_optional_list -> unit_optional unit_optional_list .

    end             reduce using rule 413 (unit_optional_list -> unit_optional unit_optional_list .)


state 550

    (405) ref_group -> begin REF_GROUP ident_list end REF_GROUP .

    READ_ONLY       reduce using rule 405 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    begin           reduce using rule 405 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)
    end             reduce using rule 405 (ref_group -> begin REF_GROUP ident_list end REF_GROUP .)


state 551

    (390) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end . FRAME

    FRAME           shift and go to state 589


state 552

    (397) frame_measurement -> FRAME_MEASUREMENT ident_list .

    FRAME_MEASUREMENT reduce using rule 397 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    begin           reduce using rule 397 (frame_measurement -> FRAME_MEASUREMENT ident_list .)
    end             reduce using rule 397 (frame_measurement -> FRAME_MEASUREMENT ident_list .)


state 553

    (394) frame_optional_list -> frame_optional frame_optional_list .

    end             reduce using rule 394 (frame_optional_list -> frame_optional frame_optional_list .)


state 554

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end . COMPU_VTAB

    COMPU_VTAB      shift and go to state 590


state 555

    (271) sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .

    ROOT            reduce using rule 271 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    begin           reduce using rule 271 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)
    end             reduce using rule 271 (sub_group -> begin SUB_GROUP ident_list end SUB_GROUP .)


state 556

    (83) function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .

    READ_ONLY       reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    GUARD_RAILS     reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    FORMAT          reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    DEPOSIT         reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BYTE_ORDER      reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    begin           reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    EXTENDED_LIMITS reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    CALIBRATION_ACCESS reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    end             reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    BIT_MASK        reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    NUMBER          reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MAX_REFRESH     reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    COMPARISON_QUANTITY reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    MATRIX_DIM      reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    READ_WRITE      reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ARRAY_SIZE      reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ECU_ADDRESS     reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ERROR_MASK      reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)
    ROOT            reduce using rule 83 (function_list -> begin FUNCTION_LIST ident_list end FUNCTION_LIST .)


state 557

    (270) ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .

    ROOT            reduce using rule 270 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)
    begin           reduce using rule 270 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)
    end             reduce using rule 270 (ref_measurement -> begin REF_MEASUREMENT ident_list end REF_MEASUREMENT .)


state 558

    (253) ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .

    ROOT            reduce using rule 253 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    begin           reduce using rule 253 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    end             reduce using rule 253 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 253 (ref_characteristic -> begin REF_CHARACTERISTIC ident_list end REF_CHARACTERISTIC .)


state 559

    (91) annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .

    READ_WRITE      reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DISPLAY_IDENTIFIER reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FORMAT          reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ARRAY_SIZE      reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BIT_MASK        reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    begin           reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    BYTE_ORDER      reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MAX_REFRESH     reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS     reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ERROR_MASK      reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    REF_MEMORY_SEGMENT reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    MATRIX_DIM      reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    end             reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    READ_ONLY       reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    GUARD_RAILS     reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    DEPOSIT         reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    EXTENDED_LIMITS reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    CALIBRATION_ACCESS reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    FUNCTION_VERSION reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    ROOT            reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    NUMBER          reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)
    COMPARISON_QUANTITY reduce using rule 91 (annotation -> begin ANNOTATION annotation_optional_list_optional end ANNOTATION .)


state 560

    (97) annotation_text -> begin ANNOTATION_TEXT string_list . end ANNOTATION_TEXT

    end             shift and go to state 591


state 561

    (30) string_list -> STRING .
    (31) string_list -> STRING . string_list
    (30) string_list -> . STRING
    (31) string_list -> . STRING string_list

    end             reduce using rule 30 (string_list -> STRING .)
    STRING          shift and go to state 561

    string_list                    shift and go to state 592

state 562

    (328) axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 328 (axis_rescale_z -> AXIS_RESCALE_Z NUMERIC datatype NUMERIC indexorder addrtype .)


state 563

    (326) axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 326 (axis_rescale_x -> AXIS_RESCALE_X NUMERIC datatype NUMERIC indexorder addrtype .)


state 564

    (327) axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .

    FNC_VALUES      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    IDENTIFICATION  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_X      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Y      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_PTS_Z      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_X  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Y  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    AXIS_RESCALE_Z  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_X   reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Y   reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_AXIS_PTS_Z   reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_X    reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Y    reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    NO_RESCALE_Z    reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_X reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Y reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    FIX_NO_AXIS_PTS_Z reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_X      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Y      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SRC_ADDR_Z      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_X      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Y      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_Z      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RIP_ADDR_W      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_X      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Y      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    SHIFT_OP_Z      reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_X        reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Y        reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    OFFSET_Z        reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_X       reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Y       reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    DIST_OP_Z       reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_BYTE  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_WORD  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_LONG  reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT32_IEEE reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    ALIGNMENT_FLOAT64_IEEE reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    RESERVED        reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)
    end             reduce using rule 327 (axis_rescale_y -> AXIS_RESCALE_Y NUMERIC datatype NUMERIC indexorder addrtype .)


state 565

    (206) formula -> begin FORMULA . STRING formula_optional end FORMULA

    STRING          shift and go to state 593


state 566

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end . COMPU_METHOD

    COMPU_METHOD    shift and go to state 594


state 567

    (210) coeffs -> COEFFS NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 595


state 568

    (214) compu_method_optional_list -> compu_method_optional compu_method_optional_list .

    end             reduce using rule 214 (compu_method_optional_list -> compu_method_optional compu_method_optional_list .)


state 569

    (211) compu_tab_ref -> COMPU_TAB_REF IDENT .

    begin           reduce using rule 211 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COEFFS          reduce using rule 211 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    COMPU_TAB_REF   reduce using rule 211 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    REF_UNIT        reduce using rule 211 (compu_tab_ref -> COMPU_TAB_REF IDENT .)
    end             reduce using rule 211 (compu_tab_ref -> COMPU_TAB_REF IDENT .)


state 570

    (369) var_address -> begin VAR_ADDRESS number_list . end VAR_ADDRESS

    end             shift and go to state 596


state 571

    (367) var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .

    VAR_SEPARATOR   reduce using rule 367 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    VAR_NAMING      reduce using rule 367 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    begin           reduce using rule 367 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)
    end             reduce using rule 367 (var_characteristic -> begin VAR_CHARACTERISTIC IDENT ident_list var_characteristic_optional end VAR_CHARACTERISTIC .)


state 572

    (380) var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .

    end             reduce using rule 380 (var_criterion_optional_list -> var_criterion_optional var_criterion_optional_list .)


state 573

    (383) var_measurement -> VAR_MEASUREMENT IDENT .

    VAR_MEASUREMENT reduce using rule 383 (var_measurement -> VAR_MEASUREMENT IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 383 (var_measurement -> VAR_MEASUREMENT IDENT .)
    end             reduce using rule 383 (var_measurement -> VAR_MEASUREMENT IDENT .)


state 574

    (376) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end . VAR_CRITERION

    VAR_CRITERION   shift and go to state 597


state 575

    (384) var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .

    VAR_MEASUREMENT reduce using rule 384 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    VAR_SELECTION_CHARACTERISTIC reduce using rule 384 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)
    end             reduce using rule 384 (var_selection_characteristic -> VAR_SELECTION_CHARACTERISTIC IDENT .)


state 576

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT . NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 598


state 577

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC . NUMERIC measurement_optional_list_optional end MEASUREMENT

    NUMERIC         shift and go to state 599


state 578

    (233) compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .

    begin           reduce using rule 233 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)
    end             reduce using rule 233 (compu_vtab_range -> begin COMPU_VTAB_RANGE IDENT STRING NUMERIC number_number_string_value_list compu_vtab_range_optional end COMPU_VTAB_RANGE .)


state 579

    (256) loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .

    begin           reduce using rule 256 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 256 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)
    end             reduce using rule 256 (loc_measurement -> begin LOC_MEASUREMENT ident_list end LOC_MEASUREMENT .)


state 580

    (252) def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .

    begin           reduce using rule 252 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    FUNCTION_VERSION reduce using rule 252 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)
    end             reduce using rule 252 (def_characteristic -> begin DEF_CHARACTERISTIC ident_list end DEF_CHARACTERISTIC .)


state 581

    (257) sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .

    begin           reduce using rule 257 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    FUNCTION_VERSION reduce using rule 257 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)
    end             reduce using rule 257 (sub_function -> begin SUB_FUNCTION ident_list end SUB_FUNCTION .)


state 582

    (254) in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .

    begin           reduce using rule 254 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 254 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)
    end             reduce using rule 254 (in_measurement -> begin IN_MEASUREMENT ident_list end IN_MEASUREMENT .)


state 583

    (255) out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .

    begin           reduce using rule 255 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    FUNCTION_VERSION reduce using rule 255 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)
    end             reduce using rule 255 (out_measurement -> begin OUT_MEASUREMENT ident_list end OUT_MEASUREMENT .)


state 584

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end . COMPU_TAB

    COMPU_TAB       shift and go to state 600


state 585

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT . NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 601


state 586

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 602


state 587

    (406) unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .

    begin           reduce using rule 406 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)
    end             reduce using rule 406 (unit -> begin UNIT IDENT STRING STRING unit_type unit_optional_list_optional end UNIT .)


state 588

    (417) unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 417 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 417 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 417 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)
    end             reduce using rule 417 (unit_conversion -> UNIT_CONVERSION NUMERIC NUMERIC .)


state 589

    (390) frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .

    begin           reduce using rule 390 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)
    end             reduce using rule 390 (frame -> begin FRAME IDENT STRING NUMERIC NUMERIC frame_optional_list_optional end FRAME .)


state 590

    (226) compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .

    begin           reduce using rule 226 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)
    end             reduce using rule 226 (compu_vtab -> begin COMPU_VTAB IDENT STRING compu_vtab_conversion_type NUMERIC number_string_value_list compu_vtab_optional end COMPU_VTAB .)


state 591

    (97) annotation_text -> begin ANNOTATION_TEXT string_list end . ANNOTATION_TEXT

    ANNOTATION_TEXT shift and go to state 603


state 592

    (31) string_list -> STRING string_list .

    end             reduce using rule 31 (string_list -> STRING string_list .)


state 593

    (206) formula -> begin FORMULA STRING . formula_optional end FORMULA
    (207) formula_optional -> . empty
    (208) formula_optional -> . formula_inv
    (418) empty -> .
    (209) formula_inv -> . STRING

    end             reduce using rule 418 (empty -> .)
    STRING          shift and go to state 604

    formula_inv                    shift and go to state 605
    formula_optional               shift and go to state 606
    empty                          shift and go to state 607

state 594

    (195) compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .

    begin           reduce using rule 195 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)
    end             reduce using rule 195 (compu_method -> begin COMPU_METHOD IDENT STRING compu_method_conversion_type STRING STRING compu_method_optional_list_optional end COMPU_METHOD .)


state 595

    (210) coeffs -> COEFFS NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 608


state 596

    (369) var_address -> begin VAR_ADDRESS number_list end . VAR_ADDRESS

    VAR_ADDRESS     shift and go to state 609


state 597

    (376) var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .

    VAR_SEPARATOR   reduce using rule 376 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    VAR_NAMING      reduce using rule 376 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    begin           reduce using rule 376 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)
    end             reduce using rule 376 (var_criterion -> begin VAR_CRITERION IDENT STRING ident_list var_criterion_optional_list_optional end VAR_CRITERION .)


state 598

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC . NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 610


state 599

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC . measurement_optional_list_optional end MEASUREMENT
    (182) measurement_optional_list_optional -> . empty
    (183) measurement_optional_list_optional -> . measurement_optional_list
    (418) empty -> .
    (180) measurement_optional_list -> . measurement_optional
    (181) measurement_optional_list -> . measurement_optional measurement_optional_list
    (163) measurement_optional -> . display_identifier
    (164) measurement_optional -> . READ_WRITE
    (165) measurement_optional -> . format
    (166) measurement_optional -> . array_size
    (167) measurement_optional -> . bit_mask
    (168) measurement_optional -> . bit_operation
    (169) measurement_optional -> . byte_order
    (170) measurement_optional -> . max_refresh
    (171) measurement_optional -> . virtual
    (172) measurement_optional -> . function_list
    (173) measurement_optional -> . ecu_address
    (174) measurement_optional -> . error_mask
    (175) measurement_optional -> . ref_memory_segment
    (176) measurement_optional -> . annotation
    (177) measurement_optional -> . if_data
    (178) measurement_optional -> . matrix_dim
    (179) measurement_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (184) array_size -> . ARRAY_SIZE NUMERIC
    (82) bit_mask -> . BIT_MASK NUMERIC
    (185) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (87) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (217) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (218) ecu_address -> . ECU_ADDRESS NUMERIC
    (219) error_mask -> . ERROR_MASK NUMERIC
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (114) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 418 (empty -> .)
    READ_WRITE      shift and go to state 611
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    ARRAY_SIZE      shift and go to state 640
    BIT_MASK        shift and go to state 613
    begin           shift and go to state 626
    BYTE_ORDER      shift and go to state 616
    MAX_REFRESH     shift and go to state 641
    ECU_ADDRESS     shift and go to state 635
    ERROR_MASK      shift and go to state 620
    REF_MEMORY_SEGMENT shift and go to state 636
    MATRIX_DIM      shift and go to state 621
    ECU_ADDRESS_EXTENSION shift and go to state 630

    measurement_optional_list_optional shift and go to state 612
    error_mask                     shift and go to state 614
    display_identifier             shift and go to state 617
    if_data                        shift and go to state 618
    bit_mask                       shift and go to state 619
    virtual                        shift and go to state 615
    ecu_address                    shift and go to state 629
    empty                          shift and go to state 623
    ecu_address_extension          shift and go to state 624
    byte_order                     shift and go to state 625
    format                         shift and go to state 627
    matrix_dim                     shift and go to state 631
    measurement_optional           shift and go to state 632
    annotation                     shift and go to state 633
    measurement_optional_list      shift and go to state 634
    function_list                  shift and go to state 637
    array_size                     shift and go to state 638
    max_refresh                    shift and go to state 639
    bit_operation                  shift and go to state 642
    ref_memory_segment             shift and go to state 643

state 600

    (220) compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .

    begin           reduce using rule 220 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)
    end             reduce using rule 220 (compu_tab -> begin COMPU_TAB IDENT STRING compu_tab_conversion_type NUMERIC number_list compu_tab_optional end COMPU_TAB .)


state 601

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC . NUMERIC characteristic_optional_list_optional end CHARACTERISTIC

    NUMERIC         shift and go to state 644


state 602

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 645


state 603

    (97) annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .

    ANNOTATION_LABEL reduce using rule 97 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    ANNOTATION_ORIGIN reduce using rule 97 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    begin           reduce using rule 97 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)
    end             reduce using rule 97 (annotation_text -> begin ANNOTATION_TEXT string_list end ANNOTATION_TEXT .)


state 604

    (209) formula_inv -> STRING .

    end             reduce using rule 209 (formula_inv -> STRING .)


state 605

    (208) formula_optional -> formula_inv .

    end             reduce using rule 208 (formula_optional -> formula_inv .)


state 606

    (206) formula -> begin FORMULA STRING formula_optional . end FORMULA

    end             shift and go to state 646


state 607

    (207) formula_optional -> empty .

    end             reduce using rule 207 (formula_optional -> empty .)


state 608

    (210) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 647


state 609

    (369) var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .

    end             reduce using rule 369 (var_address -> begin VAR_ADDRESS number_list end VAR_ADDRESS .)


state 610

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC . NUMERIC axis_pts_optional_list_optional end AXIS_PTS

    NUMERIC         shift and go to state 648


state 611

    (164) measurement_optional -> READ_WRITE .

    READ_WRITE      reduce using rule 164 (measurement_optional -> READ_WRITE .)
    DISPLAY_IDENTIFIER reduce using rule 164 (measurement_optional -> READ_WRITE .)
    FORMAT          reduce using rule 164 (measurement_optional -> READ_WRITE .)
    ARRAY_SIZE      reduce using rule 164 (measurement_optional -> READ_WRITE .)
    BIT_MASK        reduce using rule 164 (measurement_optional -> READ_WRITE .)
    begin           reduce using rule 164 (measurement_optional -> READ_WRITE .)
    BYTE_ORDER      reduce using rule 164 (measurement_optional -> READ_WRITE .)
    MAX_REFRESH     reduce using rule 164 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS     reduce using rule 164 (measurement_optional -> READ_WRITE .)
    ERROR_MASK      reduce using rule 164 (measurement_optional -> READ_WRITE .)
    REF_MEMORY_SEGMENT reduce using rule 164 (measurement_optional -> READ_WRITE .)
    MATRIX_DIM      reduce using rule 164 (measurement_optional -> READ_WRITE .)
    ECU_ADDRESS_EXTENSION reduce using rule 164 (measurement_optional -> READ_WRITE .)
    end             reduce using rule 164 (measurement_optional -> READ_WRITE .)


state 612

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional . end MEASUREMENT

    end             shift and go to state 649


state 613

    (82) bit_mask -> BIT_MASK . NUMERIC

    NUMERIC         shift and go to state 650


state 614

    (174) measurement_optional -> error_mask .

    READ_WRITE      reduce using rule 174 (measurement_optional -> error_mask .)
    DISPLAY_IDENTIFIER reduce using rule 174 (measurement_optional -> error_mask .)
    FORMAT          reduce using rule 174 (measurement_optional -> error_mask .)
    ARRAY_SIZE      reduce using rule 174 (measurement_optional -> error_mask .)
    BIT_MASK        reduce using rule 174 (measurement_optional -> error_mask .)
    begin           reduce using rule 174 (measurement_optional -> error_mask .)
    BYTE_ORDER      reduce using rule 174 (measurement_optional -> error_mask .)
    MAX_REFRESH     reduce using rule 174 (measurement_optional -> error_mask .)
    ECU_ADDRESS     reduce using rule 174 (measurement_optional -> error_mask .)
    ERROR_MASK      reduce using rule 174 (measurement_optional -> error_mask .)
    REF_MEMORY_SEGMENT reduce using rule 174 (measurement_optional -> error_mask .)
    MATRIX_DIM      reduce using rule 174 (measurement_optional -> error_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 174 (measurement_optional -> error_mask .)
    end             reduce using rule 174 (measurement_optional -> error_mask .)


state 615

    (171) measurement_optional -> virtual .

    READ_WRITE      reduce using rule 171 (measurement_optional -> virtual .)
    DISPLAY_IDENTIFIER reduce using rule 171 (measurement_optional -> virtual .)
    FORMAT          reduce using rule 171 (measurement_optional -> virtual .)
    ARRAY_SIZE      reduce using rule 171 (measurement_optional -> virtual .)
    BIT_MASK        reduce using rule 171 (measurement_optional -> virtual .)
    begin           reduce using rule 171 (measurement_optional -> virtual .)
    BYTE_ORDER      reduce using rule 171 (measurement_optional -> virtual .)
    MAX_REFRESH     reduce using rule 171 (measurement_optional -> virtual .)
    ECU_ADDRESS     reduce using rule 171 (measurement_optional -> virtual .)
    ERROR_MASK      reduce using rule 171 (measurement_optional -> virtual .)
    REF_MEMORY_SEGMENT reduce using rule 171 (measurement_optional -> virtual .)
    MATRIX_DIM      reduce using rule 171 (measurement_optional -> virtual .)
    ECU_ADDRESS_EXTENSION reduce using rule 171 (measurement_optional -> virtual .)
    end             reduce using rule 171 (measurement_optional -> virtual .)


state 616

    (79) byte_order -> BYTE_ORDER . byte_order_type
    (80) byte_order_type -> . MSB_FIRST
    (81) byte_order_type -> . MSB_LAST

    MSB_FIRST       shift and go to state 651
    MSB_LAST        shift and go to state 652

    byte_order_type                shift and go to state 653

state 617

    (163) measurement_optional -> display_identifier .

    READ_WRITE      reduce using rule 163 (measurement_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 163 (measurement_optional -> display_identifier .)
    FORMAT          reduce using rule 163 (measurement_optional -> display_identifier .)
    ARRAY_SIZE      reduce using rule 163 (measurement_optional -> display_identifier .)
    BIT_MASK        reduce using rule 163 (measurement_optional -> display_identifier .)
    begin           reduce using rule 163 (measurement_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 163 (measurement_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 163 (measurement_optional -> display_identifier .)
    ECU_ADDRESS     reduce using rule 163 (measurement_optional -> display_identifier .)
    ERROR_MASK      reduce using rule 163 (measurement_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 163 (measurement_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 163 (measurement_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 163 (measurement_optional -> display_identifier .)
    end             reduce using rule 163 (measurement_optional -> display_identifier .)


state 618

    (177) measurement_optional -> if_data .

    READ_WRITE      reduce using rule 177 (measurement_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 177 (measurement_optional -> if_data .)
    FORMAT          reduce using rule 177 (measurement_optional -> if_data .)
    ARRAY_SIZE      reduce using rule 177 (measurement_optional -> if_data .)
    BIT_MASK        reduce using rule 177 (measurement_optional -> if_data .)
    begin           reduce using rule 177 (measurement_optional -> if_data .)
    BYTE_ORDER      reduce using rule 177 (measurement_optional -> if_data .)
    MAX_REFRESH     reduce using rule 177 (measurement_optional -> if_data .)
    ECU_ADDRESS     reduce using rule 177 (measurement_optional -> if_data .)
    ERROR_MASK      reduce using rule 177 (measurement_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 177 (measurement_optional -> if_data .)
    MATRIX_DIM      reduce using rule 177 (measurement_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 177 (measurement_optional -> if_data .)
    end             reduce using rule 177 (measurement_optional -> if_data .)


state 619

    (167) measurement_optional -> bit_mask .

    READ_WRITE      reduce using rule 167 (measurement_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 167 (measurement_optional -> bit_mask .)
    FORMAT          reduce using rule 167 (measurement_optional -> bit_mask .)
    ARRAY_SIZE      reduce using rule 167 (measurement_optional -> bit_mask .)
    BIT_MASK        reduce using rule 167 (measurement_optional -> bit_mask .)
    begin           reduce using rule 167 (measurement_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 167 (measurement_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 167 (measurement_optional -> bit_mask .)
    ECU_ADDRESS     reduce using rule 167 (measurement_optional -> bit_mask .)
    ERROR_MASK      reduce using rule 167 (measurement_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 167 (measurement_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 167 (measurement_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 167 (measurement_optional -> bit_mask .)
    end             reduce using rule 167 (measurement_optional -> bit_mask .)


state 620

    (219) error_mask -> ERROR_MASK . NUMERIC

    NUMERIC         shift and go to state 654


state 621

    (114) matrix_dim -> MATRIX_DIM . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 655


state 622

    (78) format -> FORMAT . STRING

    STRING          shift and go to state 656


state 623

    (182) measurement_optional_list_optional -> empty .

    end             reduce using rule 182 (measurement_optional_list_optional -> empty .)


state 624

    (179) measurement_optional -> ecu_address_extension .

    READ_WRITE      reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    ARRAY_SIZE      reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    begin           reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS     reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    ERROR_MASK      reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 179 (measurement_optional -> ecu_address_extension .)
    end             reduce using rule 179 (measurement_optional -> ecu_address_extension .)


state 625

    (169) measurement_optional -> byte_order .

    READ_WRITE      reduce using rule 169 (measurement_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 169 (measurement_optional -> byte_order .)
    FORMAT          reduce using rule 169 (measurement_optional -> byte_order .)
    ARRAY_SIZE      reduce using rule 169 (measurement_optional -> byte_order .)
    BIT_MASK        reduce using rule 169 (measurement_optional -> byte_order .)
    begin           reduce using rule 169 (measurement_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 169 (measurement_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 169 (measurement_optional -> byte_order .)
    ECU_ADDRESS     reduce using rule 169 (measurement_optional -> byte_order .)
    ERROR_MASK      reduce using rule 169 (measurement_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 169 (measurement_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 169 (measurement_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 169 (measurement_optional -> byte_order .)
    end             reduce using rule 169 (measurement_optional -> byte_order .)


state 626

    (185) bit_operation -> begin . BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (217) virtual -> begin . VIRTUAL ident_list end VIRTUAL
    (83) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (91) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> begin . IF_DATA IDENT end IF_DATA

    BIT_OPERATION   shift and go to state 658
    VIRTUAL         shift and go to state 657
    FUNCTION_LIST   shift and go to state 341
    ANNOTATION      shift and go to state 344
    IF_DATA         shift and go to state 79


state 627

    (165) measurement_optional -> format .

    READ_WRITE      reduce using rule 165 (measurement_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 165 (measurement_optional -> format .)
    FORMAT          reduce using rule 165 (measurement_optional -> format .)
    ARRAY_SIZE      reduce using rule 165 (measurement_optional -> format .)
    BIT_MASK        reduce using rule 165 (measurement_optional -> format .)
    begin           reduce using rule 165 (measurement_optional -> format .)
    BYTE_ORDER      reduce using rule 165 (measurement_optional -> format .)
    MAX_REFRESH     reduce using rule 165 (measurement_optional -> format .)
    ECU_ADDRESS     reduce using rule 165 (measurement_optional -> format .)
    ERROR_MASK      reduce using rule 165 (measurement_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 165 (measurement_optional -> format .)
    MATRIX_DIM      reduce using rule 165 (measurement_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 165 (measurement_optional -> format .)
    end             reduce using rule 165 (measurement_optional -> format .)


state 628

    (77) display_identifier -> DISPLAY_IDENTIFIER . IDENT

    IDENT           shift and go to state 659


state 629

    (173) measurement_optional -> ecu_address .

    READ_WRITE      reduce using rule 173 (measurement_optional -> ecu_address .)
    DISPLAY_IDENTIFIER reduce using rule 173 (measurement_optional -> ecu_address .)
    FORMAT          reduce using rule 173 (measurement_optional -> ecu_address .)
    ARRAY_SIZE      reduce using rule 173 (measurement_optional -> ecu_address .)
    BIT_MASK        reduce using rule 173 (measurement_optional -> ecu_address .)
    begin           reduce using rule 173 (measurement_optional -> ecu_address .)
    BYTE_ORDER      reduce using rule 173 (measurement_optional -> ecu_address .)
    MAX_REFRESH     reduce using rule 173 (measurement_optional -> ecu_address .)
    ECU_ADDRESS     reduce using rule 173 (measurement_optional -> ecu_address .)
    ERROR_MASK      reduce using rule 173 (measurement_optional -> ecu_address .)
    REF_MEMORY_SEGMENT reduce using rule 173 (measurement_optional -> ecu_address .)
    MATRIX_DIM      reduce using rule 173 (measurement_optional -> ecu_address .)
    ECU_ADDRESS_EXTENSION reduce using rule 173 (measurement_optional -> ecu_address .)
    end             reduce using rule 173 (measurement_optional -> ecu_address .)


state 630

    (115) ecu_address_extension -> ECU_ADDRESS_EXTENSION . NUMERIC

    NUMERIC         shift and go to state 660


state 631

    (178) measurement_optional -> matrix_dim .

    READ_WRITE      reduce using rule 178 (measurement_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 178 (measurement_optional -> matrix_dim .)
    FORMAT          reduce using rule 178 (measurement_optional -> matrix_dim .)
    ARRAY_SIZE      reduce using rule 178 (measurement_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 178 (measurement_optional -> matrix_dim .)
    begin           reduce using rule 178 (measurement_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 178 (measurement_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 178 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS     reduce using rule 178 (measurement_optional -> matrix_dim .)
    ERROR_MASK      reduce using rule 178 (measurement_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 178 (measurement_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 178 (measurement_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 178 (measurement_optional -> matrix_dim .)
    end             reduce using rule 178 (measurement_optional -> matrix_dim .)


state 632

    (180) measurement_optional_list -> measurement_optional .
    (181) measurement_optional_list -> measurement_optional . measurement_optional_list
    (180) measurement_optional_list -> . measurement_optional
    (181) measurement_optional_list -> . measurement_optional measurement_optional_list
    (163) measurement_optional -> . display_identifier
    (164) measurement_optional -> . READ_WRITE
    (165) measurement_optional -> . format
    (166) measurement_optional -> . array_size
    (167) measurement_optional -> . bit_mask
    (168) measurement_optional -> . bit_operation
    (169) measurement_optional -> . byte_order
    (170) measurement_optional -> . max_refresh
    (171) measurement_optional -> . virtual
    (172) measurement_optional -> . function_list
    (173) measurement_optional -> . ecu_address
    (174) measurement_optional -> . error_mask
    (175) measurement_optional -> . ref_memory_segment
    (176) measurement_optional -> . annotation
    (177) measurement_optional -> . if_data
    (178) measurement_optional -> . matrix_dim
    (179) measurement_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (184) array_size -> . ARRAY_SIZE NUMERIC
    (82) bit_mask -> . BIT_MASK NUMERIC
    (185) bit_operation -> . begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (87) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (217) virtual -> . begin VIRTUAL ident_list end VIRTUAL
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (218) ecu_address -> . ECU_ADDRESS NUMERIC
    (219) error_mask -> . ERROR_MASK NUMERIC
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (114) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 180 (measurement_optional_list -> measurement_optional .)
    READ_WRITE      shift and go to state 611
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    ARRAY_SIZE      shift and go to state 640
    BIT_MASK        shift and go to state 613
    begin           shift and go to state 626
    BYTE_ORDER      shift and go to state 616
    MAX_REFRESH     shift and go to state 641
    ECU_ADDRESS     shift and go to state 635
    ERROR_MASK      shift and go to state 620
    REF_MEMORY_SEGMENT shift and go to state 636
    MATRIX_DIM      shift and go to state 621
    ECU_ADDRESS_EXTENSION shift and go to state 630

    error_mask                     shift and go to state 614
    display_identifier             shift and go to state 617
    if_data                        shift and go to state 618
    bit_mask                       shift and go to state 619
    virtual                        shift and go to state 615
    ecu_address                    shift and go to state 629
    measurement_optional_list      shift and go to state 661
    ecu_address_extension          shift and go to state 624
    byte_order                     shift and go to state 625
    format                         shift and go to state 627
    matrix_dim                     shift and go to state 631
    measurement_optional           shift and go to state 632
    annotation                     shift and go to state 633
    function_list                  shift and go to state 637
    array_size                     shift and go to state 638
    max_refresh                    shift and go to state 639
    bit_operation                  shift and go to state 642
    ref_memory_segment             shift and go to state 643

state 633

    (176) measurement_optional -> annotation .

    READ_WRITE      reduce using rule 176 (measurement_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 176 (measurement_optional -> annotation .)
    FORMAT          reduce using rule 176 (measurement_optional -> annotation .)
    ARRAY_SIZE      reduce using rule 176 (measurement_optional -> annotation .)
    BIT_MASK        reduce using rule 176 (measurement_optional -> annotation .)
    begin           reduce using rule 176 (measurement_optional -> annotation .)
    BYTE_ORDER      reduce using rule 176 (measurement_optional -> annotation .)
    MAX_REFRESH     reduce using rule 176 (measurement_optional -> annotation .)
    ECU_ADDRESS     reduce using rule 176 (measurement_optional -> annotation .)
    ERROR_MASK      reduce using rule 176 (measurement_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 176 (measurement_optional -> annotation .)
    MATRIX_DIM      reduce using rule 176 (measurement_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 176 (measurement_optional -> annotation .)
    end             reduce using rule 176 (measurement_optional -> annotation .)


state 634

    (183) measurement_optional_list_optional -> measurement_optional_list .

    end             reduce using rule 183 (measurement_optional_list_optional -> measurement_optional_list .)


state 635

    (218) ecu_address -> ECU_ADDRESS . NUMERIC

    NUMERIC         shift and go to state 662


state 636

    (90) ref_memory_segment -> REF_MEMORY_SEGMENT . IDENT

    IDENT           shift and go to state 663


state 637

    (172) measurement_optional -> function_list .

    READ_WRITE      reduce using rule 172 (measurement_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 172 (measurement_optional -> function_list .)
    FORMAT          reduce using rule 172 (measurement_optional -> function_list .)
    ARRAY_SIZE      reduce using rule 172 (measurement_optional -> function_list .)
    BIT_MASK        reduce using rule 172 (measurement_optional -> function_list .)
    begin           reduce using rule 172 (measurement_optional -> function_list .)
    BYTE_ORDER      reduce using rule 172 (measurement_optional -> function_list .)
    MAX_REFRESH     reduce using rule 172 (measurement_optional -> function_list .)
    ECU_ADDRESS     reduce using rule 172 (measurement_optional -> function_list .)
    ERROR_MASK      reduce using rule 172 (measurement_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 172 (measurement_optional -> function_list .)
    MATRIX_DIM      reduce using rule 172 (measurement_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 172 (measurement_optional -> function_list .)
    end             reduce using rule 172 (measurement_optional -> function_list .)


state 638

    (166) measurement_optional -> array_size .

    READ_WRITE      reduce using rule 166 (measurement_optional -> array_size .)
    DISPLAY_IDENTIFIER reduce using rule 166 (measurement_optional -> array_size .)
    FORMAT          reduce using rule 166 (measurement_optional -> array_size .)
    ARRAY_SIZE      reduce using rule 166 (measurement_optional -> array_size .)
    BIT_MASK        reduce using rule 166 (measurement_optional -> array_size .)
    begin           reduce using rule 166 (measurement_optional -> array_size .)
    BYTE_ORDER      reduce using rule 166 (measurement_optional -> array_size .)
    MAX_REFRESH     reduce using rule 166 (measurement_optional -> array_size .)
    ECU_ADDRESS     reduce using rule 166 (measurement_optional -> array_size .)
    ERROR_MASK      reduce using rule 166 (measurement_optional -> array_size .)
    REF_MEMORY_SEGMENT reduce using rule 166 (measurement_optional -> array_size .)
    MATRIX_DIM      reduce using rule 166 (measurement_optional -> array_size .)
    ECU_ADDRESS_EXTENSION reduce using rule 166 (measurement_optional -> array_size .)
    end             reduce using rule 166 (measurement_optional -> array_size .)


state 639

    (170) measurement_optional -> max_refresh .

    READ_WRITE      reduce using rule 170 (measurement_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 170 (measurement_optional -> max_refresh .)
    FORMAT          reduce using rule 170 (measurement_optional -> max_refresh .)
    ARRAY_SIZE      reduce using rule 170 (measurement_optional -> max_refresh .)
    BIT_MASK        reduce using rule 170 (measurement_optional -> max_refresh .)
    begin           reduce using rule 170 (measurement_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 170 (measurement_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 170 (measurement_optional -> max_refresh .)
    ECU_ADDRESS     reduce using rule 170 (measurement_optional -> max_refresh .)
    ERROR_MASK      reduce using rule 170 (measurement_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 170 (measurement_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 170 (measurement_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 170 (measurement_optional -> max_refresh .)
    end             reduce using rule 170 (measurement_optional -> max_refresh .)


state 640

    (184) array_size -> ARRAY_SIZE . NUMERIC

    NUMERIC         shift and go to state 664


state 641

    (87) max_refresh -> MAX_REFRESH . NUMERIC NUMERIC

    NUMERIC         shift and go to state 665


state 642

    (168) measurement_optional -> bit_operation .

    READ_WRITE      reduce using rule 168 (measurement_optional -> bit_operation .)
    DISPLAY_IDENTIFIER reduce using rule 168 (measurement_optional -> bit_operation .)
    FORMAT          reduce using rule 168 (measurement_optional -> bit_operation .)
    ARRAY_SIZE      reduce using rule 168 (measurement_optional -> bit_operation .)
    BIT_MASK        reduce using rule 168 (measurement_optional -> bit_operation .)
    begin           reduce using rule 168 (measurement_optional -> bit_operation .)
    BYTE_ORDER      reduce using rule 168 (measurement_optional -> bit_operation .)
    MAX_REFRESH     reduce using rule 168 (measurement_optional -> bit_operation .)
    ECU_ADDRESS     reduce using rule 168 (measurement_optional -> bit_operation .)
    ERROR_MASK      reduce using rule 168 (measurement_optional -> bit_operation .)
    REF_MEMORY_SEGMENT reduce using rule 168 (measurement_optional -> bit_operation .)
    MATRIX_DIM      reduce using rule 168 (measurement_optional -> bit_operation .)
    ECU_ADDRESS_EXTENSION reduce using rule 168 (measurement_optional -> bit_operation .)
    end             reduce using rule 168 (measurement_optional -> bit_operation .)


state 643

    (175) measurement_optional -> ref_memory_segment .

    READ_WRITE      reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    ARRAY_SIZE      reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    begin           reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS     reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    ERROR_MASK      reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 175 (measurement_optional -> ref_memory_segment .)
    end             reduce using rule 175 (measurement_optional -> ref_memory_segment .)


state 644

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC . characteristic_optional_list_optional end CHARACTERISTIC
    (139) characteristic_optional_list_optional -> . empty
    (140) characteristic_optional_list_optional -> . characteristic_optional_list
    (418) empty -> .
    (137) characteristic_optional_list -> . characteristic_optional
    (138) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (116) characteristic_optional -> . display_identifier
    (117) characteristic_optional -> . format
    (118) characteristic_optional -> . byte_order
    (119) characteristic_optional -> . bit_mask
    (120) characteristic_optional -> . function_list
    (121) characteristic_optional -> . number
    (122) characteristic_optional -> . extended_limits
    (123) characteristic_optional -> . READ_ONLY
    (124) characteristic_optional -> . GUARD_RAILS
    (125) characteristic_optional -> . map_list
    (126) characteristic_optional -> . max_refresh
    (127) characteristic_optional -> . dependent_characteristic
    (128) characteristic_optional -> . virtual_characteristic
    (129) characteristic_optional -> . ref_memory_segment
    (130) characteristic_optional -> . annotation
    (131) characteristic_optional -> . comparison_quantity
    (132) characteristic_optional -> . if_data
    (133) characteristic_optional -> . axis_descr
    (134) characteristic_optional -> . calibration_access
    (135) characteristic_optional -> . matrix_dim
    (136) characteristic_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (82) bit_mask -> . BIT_MASK NUMERIC
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (84) number -> . NUMBER NUMERIC
    (85) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (86) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (87) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (88) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (89) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (102) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (103) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (109) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (114) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 418 (empty -> .)
    READ_ONLY       shift and go to state 670
    GUARD_RAILS     shift and go to state 692
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    BYTE_ORDER      shift and go to state 616
    BIT_MASK        shift and go to state 613
    begin           shift and go to state 680
    NUMBER          shift and go to state 683
    EXTENDED_LIMITS shift and go to state 671
    MAX_REFRESH     shift and go to state 641
    REF_MEMORY_SEGMENT shift and go to state 636
    COMPARISON_QUANTITY shift and go to state 668
    CALIBRATION_ACCESS shift and go to state 676
    MATRIX_DIM      shift and go to state 621
    ECU_ADDRESS_EXTENSION shift and go to state 630

    number                         shift and go to state 666
    display_identifier             shift and go to state 672
    if_data                        shift and go to state 673
    bit_mask                       shift and go to state 674
    empty                          shift and go to state 677
    ecu_address_extension          shift and go to state 678
    byte_order                     shift and go to state 679
    dependent_characteristic       shift and go to state 667
    characteristic_optional_list   shift and go to state 669
    format                         shift and go to state 681
    map_list                       shift and go to state 682
    axis_descr                     shift and go to state 684
    matrix_dim                     shift and go to state 685
    calibration_access             shift and go to state 686
    annotation                     shift and go to state 687
    extended_limits                shift and go to state 689
    virtual_characteristic         shift and go to state 688
    function_list                  shift and go to state 690
    max_refresh                    shift and go to state 694
    characteristic_optional        shift and go to state 691
    comparison_quantity            shift and go to state 675
    characteristic_optional_list_optional shift and go to state 693
    ref_memory_segment             shift and go to state 695

state 645

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC NUMERIC

    NUMERIC         shift and go to state 696


state 646

    (206) formula -> begin FORMULA STRING formula_optional end . FORMULA

    FORMULA         shift and go to state 697


state 647

    (210) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 698


state 648

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC . axis_pts_optional_list_optional end AXIS_PTS
    (157) axis_pts_optional_list_optional -> . empty
    (158) axis_pts_optional_list_optional -> . axis_pts_optional_list
    (418) empty -> .
    (155) axis_pts_optional_list -> . axis_pts_optional
    (156) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (142) axis_pts_optional -> . display_identifier
    (143) axis_pts_optional -> . READ_ONLY
    (144) axis_pts_optional -> . format
    (145) axis_pts_optional -> . deposit
    (146) axis_pts_optional -> . byte_order
    (147) axis_pts_optional -> . function_list
    (148) axis_pts_optional -> . ref_memory_segment
    (149) axis_pts_optional -> . GUARD_RAILS
    (150) axis_pts_optional -> . extended_limits
    (151) axis_pts_optional -> . annotation
    (152) axis_pts_optional -> . if_data
    (153) axis_pts_optional -> . calibration_access
    (154) axis_pts_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (159) deposit -> . DEPOSIT deposit_mode
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (85) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (109) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 418 (empty -> .)
    READ_ONLY       shift and go to state 700
    GUARD_RAILS     shift and go to state 714
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    DEPOSIT         shift and go to state 709
    BYTE_ORDER      shift and go to state 616
    begin           shift and go to state 706
    REF_MEMORY_SEGMENT shift and go to state 636
    EXTENDED_LIMITS shift and go to state 671
    CALIBRATION_ACCESS shift and go to state 676
    ECU_ADDRESS_EXTENSION shift and go to state 630

    byte_order                     shift and go to state 705
    extended_limits                shift and go to state 712
    function_list                  shift and go to state 713
    format                         shift and go to state 707
    display_identifier             shift and go to state 701
    if_data                        shift and go to state 702
    axis_pts_optional_list_optional shift and go to state 708
    annotation                     shift and go to state 711
    deposit                        shift and go to state 715
    calibration_access             shift and go to state 710
    axis_pts_optional_list         shift and go to state 699
    ref_memory_segment             shift and go to state 716
    axis_pts_optional              shift and go to state 717
    empty                          shift and go to state 703
    ecu_address_extension          shift and go to state 704

state 649

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end . MEASUREMENT

    MEASUREMENT     shift and go to state 718


state 650

    (82) bit_mask -> BIT_MASK NUMERIC .

    READ_ONLY       reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    GUARD_RAILS     reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    FORMAT          reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    BIT_MASK        reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    begin           reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    NUMBER          reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    EXTENDED_LIMITS reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    end             reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    READ_WRITE      reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 82 (bit_mask -> BIT_MASK NUMERIC .)


state 651

    (80) byte_order_type -> MSB_FIRST .

    READ_WRITE      reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    DISPLAY_IDENTIFIER reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    FORMAT          reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    ARRAY_SIZE      reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    BIT_MASK        reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    begin           reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    BYTE_ORDER      reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    MAX_REFRESH     reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS     reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    ERROR_MASK      reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    REF_MEMORY_SEGMENT reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    MATRIX_DIM      reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    ECU_ADDRESS_EXTENSION reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    end             reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    READ_ONLY       reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    GUARD_RAILS     reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    NUMBER          reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    EXTENDED_LIMITS reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    COMPARISON_QUANTITY reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    CALIBRATION_ACCESS reduce using rule 80 (byte_order_type -> MSB_FIRST .)
    DEPOSIT         reduce using rule 80 (byte_order_type -> MSB_FIRST .)


state 652

    (81) byte_order_type -> MSB_LAST .

    READ_WRITE      reduce using rule 81 (byte_order_type -> MSB_LAST .)
    DISPLAY_IDENTIFIER reduce using rule 81 (byte_order_type -> MSB_LAST .)
    FORMAT          reduce using rule 81 (byte_order_type -> MSB_LAST .)
    ARRAY_SIZE      reduce using rule 81 (byte_order_type -> MSB_LAST .)
    BIT_MASK        reduce using rule 81 (byte_order_type -> MSB_LAST .)
    begin           reduce using rule 81 (byte_order_type -> MSB_LAST .)
    BYTE_ORDER      reduce using rule 81 (byte_order_type -> MSB_LAST .)
    MAX_REFRESH     reduce using rule 81 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS     reduce using rule 81 (byte_order_type -> MSB_LAST .)
    ERROR_MASK      reduce using rule 81 (byte_order_type -> MSB_LAST .)
    REF_MEMORY_SEGMENT reduce using rule 81 (byte_order_type -> MSB_LAST .)
    MATRIX_DIM      reduce using rule 81 (byte_order_type -> MSB_LAST .)
    ECU_ADDRESS_EXTENSION reduce using rule 81 (byte_order_type -> MSB_LAST .)
    end             reduce using rule 81 (byte_order_type -> MSB_LAST .)
    READ_ONLY       reduce using rule 81 (byte_order_type -> MSB_LAST .)
    GUARD_RAILS     reduce using rule 81 (byte_order_type -> MSB_LAST .)
    NUMBER          reduce using rule 81 (byte_order_type -> MSB_LAST .)
    EXTENDED_LIMITS reduce using rule 81 (byte_order_type -> MSB_LAST .)
    COMPARISON_QUANTITY reduce using rule 81 (byte_order_type -> MSB_LAST .)
    CALIBRATION_ACCESS reduce using rule 81 (byte_order_type -> MSB_LAST .)
    DEPOSIT         reduce using rule 81 (byte_order_type -> MSB_LAST .)


state 653

    (79) byte_order -> BYTE_ORDER byte_order_type .

    READ_ONLY       reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    GUARD_RAILS     reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    DISPLAY_IDENTIFIER reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    FORMAT          reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    DEPOSIT         reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    BYTE_ORDER      reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    begin           reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    REF_MEMORY_SEGMENT reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    EXTENDED_LIMITS reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    CALIBRATION_ACCESS reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    end             reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    READ_WRITE      reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    ARRAY_SIZE      reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    BIT_MASK        reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    MAX_REFRESH     reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    ECU_ADDRESS     reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    ERROR_MASK      reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    MATRIX_DIM      reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    NUMBER          reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)
    COMPARISON_QUANTITY reduce using rule 79 (byte_order -> BYTE_ORDER byte_order_type .)


state 654

    (219) error_mask -> ERROR_MASK NUMERIC .

    READ_WRITE      reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    FORMAT          reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    ARRAY_SIZE      reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    BIT_MASK        reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    begin           reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    BYTE_ORDER      reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    MAX_REFRESH     reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS     reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    ERROR_MASK      reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    MATRIX_DIM      reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)
    end             reduce using rule 219 (error_mask -> ERROR_MASK NUMERIC .)


state 655

    (114) matrix_dim -> MATRIX_DIM NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 719


state 656

    (78) format -> FORMAT STRING .

    READ_ONLY       reduce using rule 78 (format -> FORMAT STRING .)
    GUARD_RAILS     reduce using rule 78 (format -> FORMAT STRING .)
    DISPLAY_IDENTIFIER reduce using rule 78 (format -> FORMAT STRING .)
    FORMAT          reduce using rule 78 (format -> FORMAT STRING .)
    DEPOSIT         reduce using rule 78 (format -> FORMAT STRING .)
    BYTE_ORDER      reduce using rule 78 (format -> FORMAT STRING .)
    begin           reduce using rule 78 (format -> FORMAT STRING .)
    REF_MEMORY_SEGMENT reduce using rule 78 (format -> FORMAT STRING .)
    EXTENDED_LIMITS reduce using rule 78 (format -> FORMAT STRING .)
    CALIBRATION_ACCESS reduce using rule 78 (format -> FORMAT STRING .)
    ECU_ADDRESS_EXTENSION reduce using rule 78 (format -> FORMAT STRING .)
    end             reduce using rule 78 (format -> FORMAT STRING .)
    READ_WRITE      reduce using rule 78 (format -> FORMAT STRING .)
    ARRAY_SIZE      reduce using rule 78 (format -> FORMAT STRING .)
    BIT_MASK        reduce using rule 78 (format -> FORMAT STRING .)
    MAX_REFRESH     reduce using rule 78 (format -> FORMAT STRING .)
    ECU_ADDRESS     reduce using rule 78 (format -> FORMAT STRING .)
    ERROR_MASK      reduce using rule 78 (format -> FORMAT STRING .)
    MATRIX_DIM      reduce using rule 78 (format -> FORMAT STRING .)
    NUMBER          reduce using rule 78 (format -> FORMAT STRING .)
    COMPARISON_QUANTITY reduce using rule 78 (format -> FORMAT STRING .)


state 657

    (217) virtual -> begin VIRTUAL . ident_list end VIRTUAL
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 720

state 658

    (185) bit_operation -> begin BIT_OPERATION . bit_operation_optional_list_optional end BIT_OPERATION
    (193) bit_operation_optional_list_optional -> . empty
    (194) bit_operation_optional_list_optional -> . bit_operation_optional_list
    (418) empty -> .
    (191) bit_operation_optional_list -> . bit_operation_optional
    (192) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (186) bit_operation_optional -> . left_shift
    (187) bit_operation_optional -> . right_shift
    (188) bit_operation_optional -> . SIGN_EXTEND
    (189) left_shift -> . LEFT_SHIFT NUMERIC
    (190) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 418 (empty -> .)
    SIGN_EXTEND     shift and go to state 726
    LEFT_SHIFT      shift and go to state 722
    RIGHT_SHIFT     shift and go to state 721

    bit_operation_optional_list_optional shift and go to state 727
    left_shift                     shift and go to state 723
    bit_operation_optional_list    shift and go to state 724
    right_shift                    shift and go to state 725
    bit_operation_optional         shift and go to state 728
    empty                          shift and go to state 729

state 659

    (77) display_identifier -> DISPLAY_IDENTIFIER IDENT .

    READ_ONLY       reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    GUARD_RAILS     reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    FORMAT          reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BYTE_ORDER      reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    BIT_MASK        reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    begin           reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    NUMBER          reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    EXTENDED_LIMITS reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MAX_REFRESH     reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    COMPARISON_QUANTITY reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    CALIBRATION_ACCESS reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    MATRIX_DIM      reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    end             reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    READ_WRITE      reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ARRAY_SIZE      reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ECU_ADDRESS     reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    ERROR_MASK      reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)
    DEPOSIT         reduce using rule 77 (display_identifier -> DISPLAY_IDENTIFIER IDENT .)


state 660

    (115) ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .

    READ_ONLY       reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    GUARD_RAILS     reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    FORMAT          reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    DEPOSIT         reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BYTE_ORDER      reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    begin           reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    EXTENDED_LIMITS reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    end             reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    READ_WRITE      reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ARRAY_SIZE      reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    BIT_MASK        reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MAX_REFRESH     reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ECU_ADDRESS     reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    ERROR_MASK      reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    MATRIX_DIM      reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    NUMBER          reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 115 (ecu_address_extension -> ECU_ADDRESS_EXTENSION NUMERIC .)


state 661

    (181) measurement_optional_list -> measurement_optional measurement_optional_list .

    end             reduce using rule 181 (measurement_optional_list -> measurement_optional measurement_optional_list .)


state 662

    (218) ecu_address -> ECU_ADDRESS NUMERIC .

    READ_WRITE      reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    FORMAT          reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ARRAY_SIZE      reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BIT_MASK        reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    begin           reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    BYTE_ORDER      reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MAX_REFRESH     reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS     reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ERROR_MASK      reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    MATRIX_DIM      reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)
    end             reduce using rule 218 (ecu_address -> ECU_ADDRESS NUMERIC .)


state 663

    (90) ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .

    READ_ONLY       reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    GUARD_RAILS     reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    FORMAT          reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BYTE_ORDER      reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    BIT_MASK        reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    begin           reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    NUMBER          reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    EXTENDED_LIMITS reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MAX_REFRESH     reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    COMPARISON_QUANTITY reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    CALIBRATION_ACCESS reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    MATRIX_DIM      reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    end             reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    DEPOSIT         reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    READ_WRITE      reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ARRAY_SIZE      reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ECU_ADDRESS     reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)
    ERROR_MASK      reduce using rule 90 (ref_memory_segment -> REF_MEMORY_SEGMENT IDENT .)


state 664

    (184) array_size -> ARRAY_SIZE NUMERIC .

    READ_WRITE      reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    FORMAT          reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    ARRAY_SIZE      reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    BIT_MASK        reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    begin           reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    BYTE_ORDER      reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    MAX_REFRESH     reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS     reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    ERROR_MASK      reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    MATRIX_DIM      reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)
    end             reduce using rule 184 (array_size -> ARRAY_SIZE NUMERIC .)


state 665

    (87) max_refresh -> MAX_REFRESH NUMERIC . NUMERIC

    NUMERIC         shift and go to state 730


state 666

    (121) characteristic_optional -> number .

    READ_ONLY       reduce using rule 121 (characteristic_optional -> number .)
    GUARD_RAILS     reduce using rule 121 (characteristic_optional -> number .)
    DISPLAY_IDENTIFIER reduce using rule 121 (characteristic_optional -> number .)
    FORMAT          reduce using rule 121 (characteristic_optional -> number .)
    BYTE_ORDER      reduce using rule 121 (characteristic_optional -> number .)
    BIT_MASK        reduce using rule 121 (characteristic_optional -> number .)
    begin           reduce using rule 121 (characteristic_optional -> number .)
    NUMBER          reduce using rule 121 (characteristic_optional -> number .)
    EXTENDED_LIMITS reduce using rule 121 (characteristic_optional -> number .)
    MAX_REFRESH     reduce using rule 121 (characteristic_optional -> number .)
    REF_MEMORY_SEGMENT reduce using rule 121 (characteristic_optional -> number .)
    COMPARISON_QUANTITY reduce using rule 121 (characteristic_optional -> number .)
    CALIBRATION_ACCESS reduce using rule 121 (characteristic_optional -> number .)
    MATRIX_DIM      reduce using rule 121 (characteristic_optional -> number .)
    ECU_ADDRESS_EXTENSION reduce using rule 121 (characteristic_optional -> number .)
    end             reduce using rule 121 (characteristic_optional -> number .)


state 667

    (127) characteristic_optional -> dependent_characteristic .

    READ_ONLY       reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    GUARD_RAILS     reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    FORMAT          reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    BYTE_ORDER      reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    BIT_MASK        reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    begin           reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    NUMBER          reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    EXTENDED_LIMITS reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    MAX_REFRESH     reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    COMPARISON_QUANTITY reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    CALIBRATION_ACCESS reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    MATRIX_DIM      reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 127 (characteristic_optional -> dependent_characteristic .)
    end             reduce using rule 127 (characteristic_optional -> dependent_characteristic .)


state 668

    (102) comparison_quantity -> COMPARISON_QUANTITY . IDENT

    IDENT           shift and go to state 731


state 669

    (140) characteristic_optional_list_optional -> characteristic_optional_list .

    end             reduce using rule 140 (characteristic_optional_list_optional -> characteristic_optional_list .)


state 670

    (123) characteristic_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    FORMAT          reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    BIT_MASK        reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    begin           reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    NUMBER          reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    MAX_REFRESH     reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    COMPARISON_QUANTITY reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    MATRIX_DIM      reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 123 (characteristic_optional -> READ_ONLY .)
    end             reduce using rule 123 (characteristic_optional -> READ_ONLY .)


state 671

    (85) extended_limits -> EXTENDED_LIMITS . NUMERIC NUMERIC

    NUMERIC         shift and go to state 732


state 672

    (116) characteristic_optional -> display_identifier .

    READ_ONLY       reduce using rule 116 (characteristic_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 116 (characteristic_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 116 (characteristic_optional -> display_identifier .)
    FORMAT          reduce using rule 116 (characteristic_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 116 (characteristic_optional -> display_identifier .)
    BIT_MASK        reduce using rule 116 (characteristic_optional -> display_identifier .)
    begin           reduce using rule 116 (characteristic_optional -> display_identifier .)
    NUMBER          reduce using rule 116 (characteristic_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 116 (characteristic_optional -> display_identifier .)
    MAX_REFRESH     reduce using rule 116 (characteristic_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 116 (characteristic_optional -> display_identifier .)
    COMPARISON_QUANTITY reduce using rule 116 (characteristic_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 116 (characteristic_optional -> display_identifier .)
    MATRIX_DIM      reduce using rule 116 (characteristic_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 116 (characteristic_optional -> display_identifier .)
    end             reduce using rule 116 (characteristic_optional -> display_identifier .)


state 673

    (132) characteristic_optional -> if_data .

    READ_ONLY       reduce using rule 132 (characteristic_optional -> if_data .)
    GUARD_RAILS     reduce using rule 132 (characteristic_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 132 (characteristic_optional -> if_data .)
    FORMAT          reduce using rule 132 (characteristic_optional -> if_data .)
    BYTE_ORDER      reduce using rule 132 (characteristic_optional -> if_data .)
    BIT_MASK        reduce using rule 132 (characteristic_optional -> if_data .)
    begin           reduce using rule 132 (characteristic_optional -> if_data .)
    NUMBER          reduce using rule 132 (characteristic_optional -> if_data .)
    EXTENDED_LIMITS reduce using rule 132 (characteristic_optional -> if_data .)
    MAX_REFRESH     reduce using rule 132 (characteristic_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 132 (characteristic_optional -> if_data .)
    COMPARISON_QUANTITY reduce using rule 132 (characteristic_optional -> if_data .)
    CALIBRATION_ACCESS reduce using rule 132 (characteristic_optional -> if_data .)
    MATRIX_DIM      reduce using rule 132 (characteristic_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 132 (characteristic_optional -> if_data .)
    end             reduce using rule 132 (characteristic_optional -> if_data .)


state 674

    (119) characteristic_optional -> bit_mask .

    READ_ONLY       reduce using rule 119 (characteristic_optional -> bit_mask .)
    GUARD_RAILS     reduce using rule 119 (characteristic_optional -> bit_mask .)
    DISPLAY_IDENTIFIER reduce using rule 119 (characteristic_optional -> bit_mask .)
    FORMAT          reduce using rule 119 (characteristic_optional -> bit_mask .)
    BYTE_ORDER      reduce using rule 119 (characteristic_optional -> bit_mask .)
    BIT_MASK        reduce using rule 119 (characteristic_optional -> bit_mask .)
    begin           reduce using rule 119 (characteristic_optional -> bit_mask .)
    NUMBER          reduce using rule 119 (characteristic_optional -> bit_mask .)
    EXTENDED_LIMITS reduce using rule 119 (characteristic_optional -> bit_mask .)
    MAX_REFRESH     reduce using rule 119 (characteristic_optional -> bit_mask .)
    REF_MEMORY_SEGMENT reduce using rule 119 (characteristic_optional -> bit_mask .)
    COMPARISON_QUANTITY reduce using rule 119 (characteristic_optional -> bit_mask .)
    CALIBRATION_ACCESS reduce using rule 119 (characteristic_optional -> bit_mask .)
    MATRIX_DIM      reduce using rule 119 (characteristic_optional -> bit_mask .)
    ECU_ADDRESS_EXTENSION reduce using rule 119 (characteristic_optional -> bit_mask .)
    end             reduce using rule 119 (characteristic_optional -> bit_mask .)


state 675

    (131) characteristic_optional -> comparison_quantity .

    READ_ONLY       reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    GUARD_RAILS     reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    DISPLAY_IDENTIFIER reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    FORMAT          reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    BYTE_ORDER      reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    BIT_MASK        reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    begin           reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    NUMBER          reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    EXTENDED_LIMITS reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    MAX_REFRESH     reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    REF_MEMORY_SEGMENT reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    COMPARISON_QUANTITY reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    CALIBRATION_ACCESS reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    MATRIX_DIM      reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    ECU_ADDRESS_EXTENSION reduce using rule 131 (characteristic_optional -> comparison_quantity .)
    end             reduce using rule 131 (characteristic_optional -> comparison_quantity .)


state 676

    (109) calibration_access -> CALIBRATION_ACCESS . calibration_access_type
    (110) calibration_access_type -> . CALIBRATION
    (111) calibration_access_type -> . NO_CALIBRATION
    (112) calibration_access_type -> . NOT_IN_MCD_SYSTEM
    (113) calibration_access_type -> . OFFLINE_CALIBRATION

    CALIBRATION     shift and go to state 734
    NO_CALIBRATION  shift and go to state 735
    NOT_IN_MCD_SYSTEM shift and go to state 736
    OFFLINE_CALIBRATION shift and go to state 733

    calibration_access_type        shift and go to state 737

state 677

    (139) characteristic_optional_list_optional -> empty .

    end             reduce using rule 139 (characteristic_optional_list_optional -> empty .)


state 678

    (136) characteristic_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    BIT_MASK        reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    begin           reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    NUMBER          reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    MAX_REFRESH     reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    COMPARISON_QUANTITY reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    MATRIX_DIM      reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 136 (characteristic_optional -> ecu_address_extension .)
    end             reduce using rule 136 (characteristic_optional -> ecu_address_extension .)


state 679

    (118) characteristic_optional -> byte_order .

    READ_ONLY       reduce using rule 118 (characteristic_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 118 (characteristic_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 118 (characteristic_optional -> byte_order .)
    FORMAT          reduce using rule 118 (characteristic_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 118 (characteristic_optional -> byte_order .)
    BIT_MASK        reduce using rule 118 (characteristic_optional -> byte_order .)
    begin           reduce using rule 118 (characteristic_optional -> byte_order .)
    NUMBER          reduce using rule 118 (characteristic_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 118 (characteristic_optional -> byte_order .)
    MAX_REFRESH     reduce using rule 118 (characteristic_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 118 (characteristic_optional -> byte_order .)
    COMPARISON_QUANTITY reduce using rule 118 (characteristic_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 118 (characteristic_optional -> byte_order .)
    MATRIX_DIM      reduce using rule 118 (characteristic_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 118 (characteristic_optional -> byte_order .)
    end             reduce using rule 118 (characteristic_optional -> byte_order .)


state 680

    (83) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (86) map_list -> begin . MAP_LIST ident_list end MAP_LIST
    (88) dependent_characteristic -> begin . DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (89) virtual_characteristic -> begin . VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (91) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> begin . IF_DATA IDENT end IF_DATA
    (103) axis_descr -> begin . AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    FUNCTION_LIST   shift and go to state 341
    MAP_LIST        shift and go to state 739
    DEPENDENT_CHARACTERISTIC shift and go to state 738
    VIRTUAL_CHARACTERISTIC shift and go to state 741
    ANNOTATION      shift and go to state 344
    IF_DATA         shift and go to state 79
    AXIS_DESCR      shift and go to state 740


state 681

    (117) characteristic_optional -> format .

    READ_ONLY       reduce using rule 117 (characteristic_optional -> format .)
    GUARD_RAILS     reduce using rule 117 (characteristic_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 117 (characteristic_optional -> format .)
    FORMAT          reduce using rule 117 (characteristic_optional -> format .)
    BYTE_ORDER      reduce using rule 117 (characteristic_optional -> format .)
    BIT_MASK        reduce using rule 117 (characteristic_optional -> format .)
    begin           reduce using rule 117 (characteristic_optional -> format .)
    NUMBER          reduce using rule 117 (characteristic_optional -> format .)
    EXTENDED_LIMITS reduce using rule 117 (characteristic_optional -> format .)
    MAX_REFRESH     reduce using rule 117 (characteristic_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 117 (characteristic_optional -> format .)
    COMPARISON_QUANTITY reduce using rule 117 (characteristic_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 117 (characteristic_optional -> format .)
    MATRIX_DIM      reduce using rule 117 (characteristic_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 117 (characteristic_optional -> format .)
    end             reduce using rule 117 (characteristic_optional -> format .)


state 682

    (125) characteristic_optional -> map_list .

    READ_ONLY       reduce using rule 125 (characteristic_optional -> map_list .)
    GUARD_RAILS     reduce using rule 125 (characteristic_optional -> map_list .)
    DISPLAY_IDENTIFIER reduce using rule 125 (characteristic_optional -> map_list .)
    FORMAT          reduce using rule 125 (characteristic_optional -> map_list .)
    BYTE_ORDER      reduce using rule 125 (characteristic_optional -> map_list .)
    BIT_MASK        reduce using rule 125 (characteristic_optional -> map_list .)
    begin           reduce using rule 125 (characteristic_optional -> map_list .)
    NUMBER          reduce using rule 125 (characteristic_optional -> map_list .)
    EXTENDED_LIMITS reduce using rule 125 (characteristic_optional -> map_list .)
    MAX_REFRESH     reduce using rule 125 (characteristic_optional -> map_list .)
    REF_MEMORY_SEGMENT reduce using rule 125 (characteristic_optional -> map_list .)
    COMPARISON_QUANTITY reduce using rule 125 (characteristic_optional -> map_list .)
    CALIBRATION_ACCESS reduce using rule 125 (characteristic_optional -> map_list .)
    MATRIX_DIM      reduce using rule 125 (characteristic_optional -> map_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 125 (characteristic_optional -> map_list .)
    end             reduce using rule 125 (characteristic_optional -> map_list .)


state 683

    (84) number -> NUMBER . NUMERIC

    NUMERIC         shift and go to state 742


state 684

    (133) characteristic_optional -> axis_descr .

    READ_ONLY       reduce using rule 133 (characteristic_optional -> axis_descr .)
    GUARD_RAILS     reduce using rule 133 (characteristic_optional -> axis_descr .)
    DISPLAY_IDENTIFIER reduce using rule 133 (characteristic_optional -> axis_descr .)
    FORMAT          reduce using rule 133 (characteristic_optional -> axis_descr .)
    BYTE_ORDER      reduce using rule 133 (characteristic_optional -> axis_descr .)
    BIT_MASK        reduce using rule 133 (characteristic_optional -> axis_descr .)
    begin           reduce using rule 133 (characteristic_optional -> axis_descr .)
    NUMBER          reduce using rule 133 (characteristic_optional -> axis_descr .)
    EXTENDED_LIMITS reduce using rule 133 (characteristic_optional -> axis_descr .)
    MAX_REFRESH     reduce using rule 133 (characteristic_optional -> axis_descr .)
    REF_MEMORY_SEGMENT reduce using rule 133 (characteristic_optional -> axis_descr .)
    COMPARISON_QUANTITY reduce using rule 133 (characteristic_optional -> axis_descr .)
    CALIBRATION_ACCESS reduce using rule 133 (characteristic_optional -> axis_descr .)
    MATRIX_DIM      reduce using rule 133 (characteristic_optional -> axis_descr .)
    ECU_ADDRESS_EXTENSION reduce using rule 133 (characteristic_optional -> axis_descr .)
    end             reduce using rule 133 (characteristic_optional -> axis_descr .)


state 685

    (135) characteristic_optional -> matrix_dim .

    READ_ONLY       reduce using rule 135 (characteristic_optional -> matrix_dim .)
    GUARD_RAILS     reduce using rule 135 (characteristic_optional -> matrix_dim .)
    DISPLAY_IDENTIFIER reduce using rule 135 (characteristic_optional -> matrix_dim .)
    FORMAT          reduce using rule 135 (characteristic_optional -> matrix_dim .)
    BYTE_ORDER      reduce using rule 135 (characteristic_optional -> matrix_dim .)
    BIT_MASK        reduce using rule 135 (characteristic_optional -> matrix_dim .)
    begin           reduce using rule 135 (characteristic_optional -> matrix_dim .)
    NUMBER          reduce using rule 135 (characteristic_optional -> matrix_dim .)
    EXTENDED_LIMITS reduce using rule 135 (characteristic_optional -> matrix_dim .)
    MAX_REFRESH     reduce using rule 135 (characteristic_optional -> matrix_dim .)
    REF_MEMORY_SEGMENT reduce using rule 135 (characteristic_optional -> matrix_dim .)
    COMPARISON_QUANTITY reduce using rule 135 (characteristic_optional -> matrix_dim .)
    CALIBRATION_ACCESS reduce using rule 135 (characteristic_optional -> matrix_dim .)
    MATRIX_DIM      reduce using rule 135 (characteristic_optional -> matrix_dim .)
    ECU_ADDRESS_EXTENSION reduce using rule 135 (characteristic_optional -> matrix_dim .)
    end             reduce using rule 135 (characteristic_optional -> matrix_dim .)


state 686

    (134) characteristic_optional -> calibration_access .

    READ_ONLY       reduce using rule 134 (characteristic_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 134 (characteristic_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 134 (characteristic_optional -> calibration_access .)
    FORMAT          reduce using rule 134 (characteristic_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 134 (characteristic_optional -> calibration_access .)
    BIT_MASK        reduce using rule 134 (characteristic_optional -> calibration_access .)
    begin           reduce using rule 134 (characteristic_optional -> calibration_access .)
    NUMBER          reduce using rule 134 (characteristic_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 134 (characteristic_optional -> calibration_access .)
    MAX_REFRESH     reduce using rule 134 (characteristic_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 134 (characteristic_optional -> calibration_access .)
    COMPARISON_QUANTITY reduce using rule 134 (characteristic_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 134 (characteristic_optional -> calibration_access .)
    MATRIX_DIM      reduce using rule 134 (characteristic_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 134 (characteristic_optional -> calibration_access .)
    end             reduce using rule 134 (characteristic_optional -> calibration_access .)


state 687

    (130) characteristic_optional -> annotation .

    READ_ONLY       reduce using rule 130 (characteristic_optional -> annotation .)
    GUARD_RAILS     reduce using rule 130 (characteristic_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 130 (characteristic_optional -> annotation .)
    FORMAT          reduce using rule 130 (characteristic_optional -> annotation .)
    BYTE_ORDER      reduce using rule 130 (characteristic_optional -> annotation .)
    BIT_MASK        reduce using rule 130 (characteristic_optional -> annotation .)
    begin           reduce using rule 130 (characteristic_optional -> annotation .)
    NUMBER          reduce using rule 130 (characteristic_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 130 (characteristic_optional -> annotation .)
    MAX_REFRESH     reduce using rule 130 (characteristic_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 130 (characteristic_optional -> annotation .)
    COMPARISON_QUANTITY reduce using rule 130 (characteristic_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 130 (characteristic_optional -> annotation .)
    MATRIX_DIM      reduce using rule 130 (characteristic_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 130 (characteristic_optional -> annotation .)
    end             reduce using rule 130 (characteristic_optional -> annotation .)


state 688

    (128) characteristic_optional -> virtual_characteristic .

    READ_ONLY       reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    GUARD_RAILS     reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    DISPLAY_IDENTIFIER reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    FORMAT          reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    BYTE_ORDER      reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    BIT_MASK        reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    begin           reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    NUMBER          reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    EXTENDED_LIMITS reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    MAX_REFRESH     reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    REF_MEMORY_SEGMENT reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    COMPARISON_QUANTITY reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    CALIBRATION_ACCESS reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    MATRIX_DIM      reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    ECU_ADDRESS_EXTENSION reduce using rule 128 (characteristic_optional -> virtual_characteristic .)
    end             reduce using rule 128 (characteristic_optional -> virtual_characteristic .)


state 689

    (122) characteristic_optional -> extended_limits .

    READ_ONLY       reduce using rule 122 (characteristic_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 122 (characteristic_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 122 (characteristic_optional -> extended_limits .)
    FORMAT          reduce using rule 122 (characteristic_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 122 (characteristic_optional -> extended_limits .)
    BIT_MASK        reduce using rule 122 (characteristic_optional -> extended_limits .)
    begin           reduce using rule 122 (characteristic_optional -> extended_limits .)
    NUMBER          reduce using rule 122 (characteristic_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 122 (characteristic_optional -> extended_limits .)
    MAX_REFRESH     reduce using rule 122 (characteristic_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 122 (characteristic_optional -> extended_limits .)
    COMPARISON_QUANTITY reduce using rule 122 (characteristic_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 122 (characteristic_optional -> extended_limits .)
    MATRIX_DIM      reduce using rule 122 (characteristic_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 122 (characteristic_optional -> extended_limits .)
    end             reduce using rule 122 (characteristic_optional -> extended_limits .)


state 690

    (120) characteristic_optional -> function_list .

    READ_ONLY       reduce using rule 120 (characteristic_optional -> function_list .)
    GUARD_RAILS     reduce using rule 120 (characteristic_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 120 (characteristic_optional -> function_list .)
    FORMAT          reduce using rule 120 (characteristic_optional -> function_list .)
    BYTE_ORDER      reduce using rule 120 (characteristic_optional -> function_list .)
    BIT_MASK        reduce using rule 120 (characteristic_optional -> function_list .)
    begin           reduce using rule 120 (characteristic_optional -> function_list .)
    NUMBER          reduce using rule 120 (characteristic_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 120 (characteristic_optional -> function_list .)
    MAX_REFRESH     reduce using rule 120 (characteristic_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 120 (characteristic_optional -> function_list .)
    COMPARISON_QUANTITY reduce using rule 120 (characteristic_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 120 (characteristic_optional -> function_list .)
    MATRIX_DIM      reduce using rule 120 (characteristic_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 120 (characteristic_optional -> function_list .)
    end             reduce using rule 120 (characteristic_optional -> function_list .)


state 691

    (137) characteristic_optional_list -> characteristic_optional .
    (138) characteristic_optional_list -> characteristic_optional . characteristic_optional_list
    (137) characteristic_optional_list -> . characteristic_optional
    (138) characteristic_optional_list -> . characteristic_optional characteristic_optional_list
    (116) characteristic_optional -> . display_identifier
    (117) characteristic_optional -> . format
    (118) characteristic_optional -> . byte_order
    (119) characteristic_optional -> . bit_mask
    (120) characteristic_optional -> . function_list
    (121) characteristic_optional -> . number
    (122) characteristic_optional -> . extended_limits
    (123) characteristic_optional -> . READ_ONLY
    (124) characteristic_optional -> . GUARD_RAILS
    (125) characteristic_optional -> . map_list
    (126) characteristic_optional -> . max_refresh
    (127) characteristic_optional -> . dependent_characteristic
    (128) characteristic_optional -> . virtual_characteristic
    (129) characteristic_optional -> . ref_memory_segment
    (130) characteristic_optional -> . annotation
    (131) characteristic_optional -> . comparison_quantity
    (132) characteristic_optional -> . if_data
    (133) characteristic_optional -> . axis_descr
    (134) characteristic_optional -> . calibration_access
    (135) characteristic_optional -> . matrix_dim
    (136) characteristic_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (82) bit_mask -> . BIT_MASK NUMERIC
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (84) number -> . NUMBER NUMERIC
    (85) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (86) map_list -> . begin MAP_LIST ident_list end MAP_LIST
    (87) max_refresh -> . MAX_REFRESH NUMERIC NUMERIC
    (88) dependent_characteristic -> . begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC
    (89) virtual_characteristic -> . begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (102) comparison_quantity -> . COMPARISON_QUANTITY IDENT
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (103) axis_descr -> . begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (109) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (114) matrix_dim -> . MATRIX_DIM NUMERIC NUMERIC NUMERIC
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 137 (characteristic_optional_list -> characteristic_optional .)
    READ_ONLY       shift and go to state 670
    GUARD_RAILS     shift and go to state 692
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    BYTE_ORDER      shift and go to state 616
    BIT_MASK        shift and go to state 613
    begin           shift and go to state 680
    NUMBER          shift and go to state 683
    EXTENDED_LIMITS shift and go to state 671
    MAX_REFRESH     shift and go to state 641
    REF_MEMORY_SEGMENT shift and go to state 636
    COMPARISON_QUANTITY shift and go to state 668
    CALIBRATION_ACCESS shift and go to state 676
    MATRIX_DIM      shift and go to state 621
    ECU_ADDRESS_EXTENSION shift and go to state 630

    number                         shift and go to state 666
    display_identifier             shift and go to state 672
    if_data                        shift and go to state 673
    bit_mask                       shift and go to state 674
    ecu_address_extension          shift and go to state 678
    byte_order                     shift and go to state 679
    dependent_characteristic       shift and go to state 667
    characteristic_optional_list   shift and go to state 743
    format                         shift and go to state 681
    map_list                       shift and go to state 682
    axis_descr                     shift and go to state 684
    matrix_dim                     shift and go to state 685
    calibration_access             shift and go to state 686
    annotation                     shift and go to state 687
    extended_limits                shift and go to state 689
    virtual_characteristic         shift and go to state 688
    function_list                  shift and go to state 690
    max_refresh                    shift and go to state 694
    characteristic_optional        shift and go to state 691
    comparison_quantity            shift and go to state 675
    ref_memory_segment             shift and go to state 695

state 692

    (124) characteristic_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    BIT_MASK        reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    begin           reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    NUMBER          reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    MAX_REFRESH     reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    COMPARISON_QUANTITY reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    MATRIX_DIM      reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)
    end             reduce using rule 124 (characteristic_optional -> GUARD_RAILS .)


state 693

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional . end CHARACTERISTIC

    end             shift and go to state 744


state 694

    (126) characteristic_optional -> max_refresh .

    READ_ONLY       reduce using rule 126 (characteristic_optional -> max_refresh .)
    GUARD_RAILS     reduce using rule 126 (characteristic_optional -> max_refresh .)
    DISPLAY_IDENTIFIER reduce using rule 126 (characteristic_optional -> max_refresh .)
    FORMAT          reduce using rule 126 (characteristic_optional -> max_refresh .)
    BYTE_ORDER      reduce using rule 126 (characteristic_optional -> max_refresh .)
    BIT_MASK        reduce using rule 126 (characteristic_optional -> max_refresh .)
    begin           reduce using rule 126 (characteristic_optional -> max_refresh .)
    NUMBER          reduce using rule 126 (characteristic_optional -> max_refresh .)
    EXTENDED_LIMITS reduce using rule 126 (characteristic_optional -> max_refresh .)
    MAX_REFRESH     reduce using rule 126 (characteristic_optional -> max_refresh .)
    REF_MEMORY_SEGMENT reduce using rule 126 (characteristic_optional -> max_refresh .)
    COMPARISON_QUANTITY reduce using rule 126 (characteristic_optional -> max_refresh .)
    CALIBRATION_ACCESS reduce using rule 126 (characteristic_optional -> max_refresh .)
    MATRIX_DIM      reduce using rule 126 (characteristic_optional -> max_refresh .)
    ECU_ADDRESS_EXTENSION reduce using rule 126 (characteristic_optional -> max_refresh .)
    end             reduce using rule 126 (characteristic_optional -> max_refresh .)


state 695

    (129) characteristic_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    BIT_MASK        reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    begin           reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    NUMBER          reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    MAX_REFRESH     reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    COMPARISON_QUANTITY reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    MATRIX_DIM      reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 129 (characteristic_optional -> ref_memory_segment .)
    end             reduce using rule 129 (characteristic_optional -> ref_memory_segment .)


state 696

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC NUMERIC

    NUMERIC         shift and go to state 745


state 697

    (206) formula -> begin FORMULA STRING formula_optional end FORMULA .

    begin           reduce using rule 206 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COEFFS          reduce using rule 206 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    COMPU_TAB_REF   reduce using rule 206 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    REF_UNIT        reduce using rule 206 (formula -> begin FORMULA STRING formula_optional end FORMULA .)
    end             reduce using rule 206 (formula -> begin FORMULA STRING formula_optional end FORMULA .)


state 698

    (210) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 746


state 699

    (158) axis_pts_optional_list_optional -> axis_pts_optional_list .

    end             reduce using rule 158 (axis_pts_optional_list_optional -> axis_pts_optional_list .)


state 700

    (143) axis_pts_optional -> READ_ONLY .

    READ_ONLY       reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    GUARD_RAILS     reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    DISPLAY_IDENTIFIER reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    FORMAT          reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    DEPOSIT         reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    BYTE_ORDER      reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    begin           reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    REF_MEMORY_SEGMENT reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    EXTENDED_LIMITS reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    CALIBRATION_ACCESS reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    ECU_ADDRESS_EXTENSION reduce using rule 143 (axis_pts_optional -> READ_ONLY .)
    end             reduce using rule 143 (axis_pts_optional -> READ_ONLY .)


state 701

    (142) axis_pts_optional -> display_identifier .

    READ_ONLY       reduce using rule 142 (axis_pts_optional -> display_identifier .)
    GUARD_RAILS     reduce using rule 142 (axis_pts_optional -> display_identifier .)
    DISPLAY_IDENTIFIER reduce using rule 142 (axis_pts_optional -> display_identifier .)
    FORMAT          reduce using rule 142 (axis_pts_optional -> display_identifier .)
    DEPOSIT         reduce using rule 142 (axis_pts_optional -> display_identifier .)
    BYTE_ORDER      reduce using rule 142 (axis_pts_optional -> display_identifier .)
    begin           reduce using rule 142 (axis_pts_optional -> display_identifier .)
    REF_MEMORY_SEGMENT reduce using rule 142 (axis_pts_optional -> display_identifier .)
    EXTENDED_LIMITS reduce using rule 142 (axis_pts_optional -> display_identifier .)
    CALIBRATION_ACCESS reduce using rule 142 (axis_pts_optional -> display_identifier .)
    ECU_ADDRESS_EXTENSION reduce using rule 142 (axis_pts_optional -> display_identifier .)
    end             reduce using rule 142 (axis_pts_optional -> display_identifier .)


state 702

    (152) axis_pts_optional -> if_data .

    READ_ONLY       reduce using rule 152 (axis_pts_optional -> if_data .)
    GUARD_RAILS     reduce using rule 152 (axis_pts_optional -> if_data .)
    DISPLAY_IDENTIFIER reduce using rule 152 (axis_pts_optional -> if_data .)
    FORMAT          reduce using rule 152 (axis_pts_optional -> if_data .)
    DEPOSIT         reduce using rule 152 (axis_pts_optional -> if_data .)
    BYTE_ORDER      reduce using rule 152 (axis_pts_optional -> if_data .)
    begin           reduce using rule 152 (axis_pts_optional -> if_data .)
    REF_MEMORY_SEGMENT reduce using rule 152 (axis_pts_optional -> if_data .)
    EXTENDED_LIMITS reduce using rule 152 (axis_pts_optional -> if_data .)
    CALIBRATION_ACCESS reduce using rule 152 (axis_pts_optional -> if_data .)
    ECU_ADDRESS_EXTENSION reduce using rule 152 (axis_pts_optional -> if_data .)
    end             reduce using rule 152 (axis_pts_optional -> if_data .)


state 703

    (157) axis_pts_optional_list_optional -> empty .

    end             reduce using rule 157 (axis_pts_optional_list_optional -> empty .)


state 704

    (154) axis_pts_optional -> ecu_address_extension .

    READ_ONLY       reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    GUARD_RAILS     reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    DISPLAY_IDENTIFIER reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    FORMAT          reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    DEPOSIT         reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    BYTE_ORDER      reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    begin           reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    REF_MEMORY_SEGMENT reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    EXTENDED_LIMITS reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    CALIBRATION_ACCESS reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    ECU_ADDRESS_EXTENSION reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)
    end             reduce using rule 154 (axis_pts_optional -> ecu_address_extension .)


state 705

    (146) axis_pts_optional -> byte_order .

    READ_ONLY       reduce using rule 146 (axis_pts_optional -> byte_order .)
    GUARD_RAILS     reduce using rule 146 (axis_pts_optional -> byte_order .)
    DISPLAY_IDENTIFIER reduce using rule 146 (axis_pts_optional -> byte_order .)
    FORMAT          reduce using rule 146 (axis_pts_optional -> byte_order .)
    DEPOSIT         reduce using rule 146 (axis_pts_optional -> byte_order .)
    BYTE_ORDER      reduce using rule 146 (axis_pts_optional -> byte_order .)
    begin           reduce using rule 146 (axis_pts_optional -> byte_order .)
    REF_MEMORY_SEGMENT reduce using rule 146 (axis_pts_optional -> byte_order .)
    EXTENDED_LIMITS reduce using rule 146 (axis_pts_optional -> byte_order .)
    CALIBRATION_ACCESS reduce using rule 146 (axis_pts_optional -> byte_order .)
    ECU_ADDRESS_EXTENSION reduce using rule 146 (axis_pts_optional -> byte_order .)
    end             reduce using rule 146 (axis_pts_optional -> byte_order .)


state 706

    (83) function_list -> begin . FUNCTION_LIST ident_list end FUNCTION_LIST
    (91) annotation -> begin . ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> begin . IF_DATA IDENT end IF_DATA

    FUNCTION_LIST   shift and go to state 341
    ANNOTATION      shift and go to state 344
    IF_DATA         shift and go to state 79


state 707

    (144) axis_pts_optional -> format .

    READ_ONLY       reduce using rule 144 (axis_pts_optional -> format .)
    GUARD_RAILS     reduce using rule 144 (axis_pts_optional -> format .)
    DISPLAY_IDENTIFIER reduce using rule 144 (axis_pts_optional -> format .)
    FORMAT          reduce using rule 144 (axis_pts_optional -> format .)
    DEPOSIT         reduce using rule 144 (axis_pts_optional -> format .)
    BYTE_ORDER      reduce using rule 144 (axis_pts_optional -> format .)
    begin           reduce using rule 144 (axis_pts_optional -> format .)
    REF_MEMORY_SEGMENT reduce using rule 144 (axis_pts_optional -> format .)
    EXTENDED_LIMITS reduce using rule 144 (axis_pts_optional -> format .)
    CALIBRATION_ACCESS reduce using rule 144 (axis_pts_optional -> format .)
    ECU_ADDRESS_EXTENSION reduce using rule 144 (axis_pts_optional -> format .)
    end             reduce using rule 144 (axis_pts_optional -> format .)


state 708

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional . end AXIS_PTS

    end             shift and go to state 747


state 709

    (159) deposit -> DEPOSIT . deposit_mode
    (160) deposit_mode -> . ABSOLUTE
    (161) deposit_mode -> . DIFFERENCE

    ABSOLUTE        shift and go to state 750
    DIFFERENCE      shift and go to state 749

    deposit_mode                   shift and go to state 748

state 710

    (153) axis_pts_optional -> calibration_access .

    READ_ONLY       reduce using rule 153 (axis_pts_optional -> calibration_access .)
    GUARD_RAILS     reduce using rule 153 (axis_pts_optional -> calibration_access .)
    DISPLAY_IDENTIFIER reduce using rule 153 (axis_pts_optional -> calibration_access .)
    FORMAT          reduce using rule 153 (axis_pts_optional -> calibration_access .)
    DEPOSIT         reduce using rule 153 (axis_pts_optional -> calibration_access .)
    BYTE_ORDER      reduce using rule 153 (axis_pts_optional -> calibration_access .)
    begin           reduce using rule 153 (axis_pts_optional -> calibration_access .)
    REF_MEMORY_SEGMENT reduce using rule 153 (axis_pts_optional -> calibration_access .)
    EXTENDED_LIMITS reduce using rule 153 (axis_pts_optional -> calibration_access .)
    CALIBRATION_ACCESS reduce using rule 153 (axis_pts_optional -> calibration_access .)
    ECU_ADDRESS_EXTENSION reduce using rule 153 (axis_pts_optional -> calibration_access .)
    end             reduce using rule 153 (axis_pts_optional -> calibration_access .)


state 711

    (151) axis_pts_optional -> annotation .

    READ_ONLY       reduce using rule 151 (axis_pts_optional -> annotation .)
    GUARD_RAILS     reduce using rule 151 (axis_pts_optional -> annotation .)
    DISPLAY_IDENTIFIER reduce using rule 151 (axis_pts_optional -> annotation .)
    FORMAT          reduce using rule 151 (axis_pts_optional -> annotation .)
    DEPOSIT         reduce using rule 151 (axis_pts_optional -> annotation .)
    BYTE_ORDER      reduce using rule 151 (axis_pts_optional -> annotation .)
    begin           reduce using rule 151 (axis_pts_optional -> annotation .)
    REF_MEMORY_SEGMENT reduce using rule 151 (axis_pts_optional -> annotation .)
    EXTENDED_LIMITS reduce using rule 151 (axis_pts_optional -> annotation .)
    CALIBRATION_ACCESS reduce using rule 151 (axis_pts_optional -> annotation .)
    ECU_ADDRESS_EXTENSION reduce using rule 151 (axis_pts_optional -> annotation .)
    end             reduce using rule 151 (axis_pts_optional -> annotation .)


state 712

    (150) axis_pts_optional -> extended_limits .

    READ_ONLY       reduce using rule 150 (axis_pts_optional -> extended_limits .)
    GUARD_RAILS     reduce using rule 150 (axis_pts_optional -> extended_limits .)
    DISPLAY_IDENTIFIER reduce using rule 150 (axis_pts_optional -> extended_limits .)
    FORMAT          reduce using rule 150 (axis_pts_optional -> extended_limits .)
    DEPOSIT         reduce using rule 150 (axis_pts_optional -> extended_limits .)
    BYTE_ORDER      reduce using rule 150 (axis_pts_optional -> extended_limits .)
    begin           reduce using rule 150 (axis_pts_optional -> extended_limits .)
    REF_MEMORY_SEGMENT reduce using rule 150 (axis_pts_optional -> extended_limits .)
    EXTENDED_LIMITS reduce using rule 150 (axis_pts_optional -> extended_limits .)
    CALIBRATION_ACCESS reduce using rule 150 (axis_pts_optional -> extended_limits .)
    ECU_ADDRESS_EXTENSION reduce using rule 150 (axis_pts_optional -> extended_limits .)
    end             reduce using rule 150 (axis_pts_optional -> extended_limits .)


state 713

    (147) axis_pts_optional -> function_list .

    READ_ONLY       reduce using rule 147 (axis_pts_optional -> function_list .)
    GUARD_RAILS     reduce using rule 147 (axis_pts_optional -> function_list .)
    DISPLAY_IDENTIFIER reduce using rule 147 (axis_pts_optional -> function_list .)
    FORMAT          reduce using rule 147 (axis_pts_optional -> function_list .)
    DEPOSIT         reduce using rule 147 (axis_pts_optional -> function_list .)
    BYTE_ORDER      reduce using rule 147 (axis_pts_optional -> function_list .)
    begin           reduce using rule 147 (axis_pts_optional -> function_list .)
    REF_MEMORY_SEGMENT reduce using rule 147 (axis_pts_optional -> function_list .)
    EXTENDED_LIMITS reduce using rule 147 (axis_pts_optional -> function_list .)
    CALIBRATION_ACCESS reduce using rule 147 (axis_pts_optional -> function_list .)
    ECU_ADDRESS_EXTENSION reduce using rule 147 (axis_pts_optional -> function_list .)
    end             reduce using rule 147 (axis_pts_optional -> function_list .)


state 714

    (149) axis_pts_optional -> GUARD_RAILS .

    READ_ONLY       reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    GUARD_RAILS     reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    DISPLAY_IDENTIFIER reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    FORMAT          reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    DEPOSIT         reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    BYTE_ORDER      reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    begin           reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    REF_MEMORY_SEGMENT reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    EXTENDED_LIMITS reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    CALIBRATION_ACCESS reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    ECU_ADDRESS_EXTENSION reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)
    end             reduce using rule 149 (axis_pts_optional -> GUARD_RAILS .)


state 715

    (145) axis_pts_optional -> deposit .

    READ_ONLY       reduce using rule 145 (axis_pts_optional -> deposit .)
    GUARD_RAILS     reduce using rule 145 (axis_pts_optional -> deposit .)
    DISPLAY_IDENTIFIER reduce using rule 145 (axis_pts_optional -> deposit .)
    FORMAT          reduce using rule 145 (axis_pts_optional -> deposit .)
    DEPOSIT         reduce using rule 145 (axis_pts_optional -> deposit .)
    BYTE_ORDER      reduce using rule 145 (axis_pts_optional -> deposit .)
    begin           reduce using rule 145 (axis_pts_optional -> deposit .)
    REF_MEMORY_SEGMENT reduce using rule 145 (axis_pts_optional -> deposit .)
    EXTENDED_LIMITS reduce using rule 145 (axis_pts_optional -> deposit .)
    CALIBRATION_ACCESS reduce using rule 145 (axis_pts_optional -> deposit .)
    ECU_ADDRESS_EXTENSION reduce using rule 145 (axis_pts_optional -> deposit .)
    end             reduce using rule 145 (axis_pts_optional -> deposit .)


state 716

    (148) axis_pts_optional -> ref_memory_segment .

    READ_ONLY       reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    GUARD_RAILS     reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    DISPLAY_IDENTIFIER reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    FORMAT          reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    DEPOSIT         reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    BYTE_ORDER      reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    begin           reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    REF_MEMORY_SEGMENT reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    EXTENDED_LIMITS reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    CALIBRATION_ACCESS reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    ECU_ADDRESS_EXTENSION reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)
    end             reduce using rule 148 (axis_pts_optional -> ref_memory_segment .)


state 717

    (155) axis_pts_optional_list -> axis_pts_optional .
    (156) axis_pts_optional_list -> axis_pts_optional . axis_pts_optional_list
    (155) axis_pts_optional_list -> . axis_pts_optional
    (156) axis_pts_optional_list -> . axis_pts_optional axis_pts_optional_list
    (142) axis_pts_optional -> . display_identifier
    (143) axis_pts_optional -> . READ_ONLY
    (144) axis_pts_optional -> . format
    (145) axis_pts_optional -> . deposit
    (146) axis_pts_optional -> . byte_order
    (147) axis_pts_optional -> . function_list
    (148) axis_pts_optional -> . ref_memory_segment
    (149) axis_pts_optional -> . GUARD_RAILS
    (150) axis_pts_optional -> . extended_limits
    (151) axis_pts_optional -> . annotation
    (152) axis_pts_optional -> . if_data
    (153) axis_pts_optional -> . calibration_access
    (154) axis_pts_optional -> . ecu_address_extension
    (77) display_identifier -> . DISPLAY_IDENTIFIER IDENT
    (78) format -> . FORMAT STRING
    (159) deposit -> . DEPOSIT deposit_mode
    (79) byte_order -> . BYTE_ORDER byte_order_type
    (83) function_list -> . begin FUNCTION_LIST ident_list end FUNCTION_LIST
    (90) ref_memory_segment -> . REF_MEMORY_SEGMENT IDENT
    (85) extended_limits -> . EXTENDED_LIMITS NUMERIC NUMERIC
    (91) annotation -> . begin ANNOTATION annotation_optional_list_optional end ANNOTATION
    (69) if_data -> . begin IF_DATA IDENT end IF_DATA
    (109) calibration_access -> . CALIBRATION_ACCESS calibration_access_type
    (115) ecu_address_extension -> . ECU_ADDRESS_EXTENSION NUMERIC

    end             reduce using rule 155 (axis_pts_optional_list -> axis_pts_optional .)
    READ_ONLY       shift and go to state 700
    GUARD_RAILS     shift and go to state 714
    DISPLAY_IDENTIFIER shift and go to state 628
    FORMAT          shift and go to state 622
    DEPOSIT         shift and go to state 709
    BYTE_ORDER      shift and go to state 616
    begin           shift and go to state 706
    REF_MEMORY_SEGMENT shift and go to state 636
    EXTENDED_LIMITS shift and go to state 671
    CALIBRATION_ACCESS shift and go to state 676
    ECU_ADDRESS_EXTENSION shift and go to state 630

    byte_order                     shift and go to state 705
    extended_limits                shift and go to state 712
    function_list                  shift and go to state 713
    format                         shift and go to state 707
    display_identifier             shift and go to state 701
    if_data                        shift and go to state 702
    annotation                     shift and go to state 711
    deposit                        shift and go to state 715
    calibration_access             shift and go to state 710
    axis_pts_optional_list         shift and go to state 751
    ref_memory_segment             shift and go to state 716
    axis_pts_optional              shift and go to state 717
    ecu_address_extension          shift and go to state 704

state 718

    (162) measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .

    begin           reduce using rule 162 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)
    end             reduce using rule 162 (measurement -> begin MEASUREMENT IDENT STRING datatype IDENT NUMERIC NUMERIC NUMERIC NUMERIC measurement_optional_list_optional end MEASUREMENT .)


state 719

    (114) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 752


state 720

    (217) virtual -> begin VIRTUAL ident_list . end VIRTUAL

    end             shift and go to state 753


state 721

    (190) right_shift -> RIGHT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 754


state 722

    (189) left_shift -> LEFT_SHIFT . NUMERIC

    NUMERIC         shift and go to state 755


state 723

    (186) bit_operation_optional -> left_shift .

    SIGN_EXTEND     reduce using rule 186 (bit_operation_optional -> left_shift .)
    LEFT_SHIFT      reduce using rule 186 (bit_operation_optional -> left_shift .)
    RIGHT_SHIFT     reduce using rule 186 (bit_operation_optional -> left_shift .)
    end             reduce using rule 186 (bit_operation_optional -> left_shift .)


state 724

    (194) bit_operation_optional_list_optional -> bit_operation_optional_list .

    end             reduce using rule 194 (bit_operation_optional_list_optional -> bit_operation_optional_list .)


state 725

    (187) bit_operation_optional -> right_shift .

    SIGN_EXTEND     reduce using rule 187 (bit_operation_optional -> right_shift .)
    LEFT_SHIFT      reduce using rule 187 (bit_operation_optional -> right_shift .)
    RIGHT_SHIFT     reduce using rule 187 (bit_operation_optional -> right_shift .)
    end             reduce using rule 187 (bit_operation_optional -> right_shift .)


state 726

    (188) bit_operation_optional -> SIGN_EXTEND .

    SIGN_EXTEND     reduce using rule 188 (bit_operation_optional -> SIGN_EXTEND .)
    LEFT_SHIFT      reduce using rule 188 (bit_operation_optional -> SIGN_EXTEND .)
    RIGHT_SHIFT     reduce using rule 188 (bit_operation_optional -> SIGN_EXTEND .)
    end             reduce using rule 188 (bit_operation_optional -> SIGN_EXTEND .)


state 727

    (185) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional . end BIT_OPERATION

    end             shift and go to state 756


state 728

    (191) bit_operation_optional_list -> bit_operation_optional .
    (192) bit_operation_optional_list -> bit_operation_optional . bit_operation_optional_list
    (191) bit_operation_optional_list -> . bit_operation_optional
    (192) bit_operation_optional_list -> . bit_operation_optional bit_operation_optional_list
    (186) bit_operation_optional -> . left_shift
    (187) bit_operation_optional -> . right_shift
    (188) bit_operation_optional -> . SIGN_EXTEND
    (189) left_shift -> . LEFT_SHIFT NUMERIC
    (190) right_shift -> . RIGHT_SHIFT NUMERIC

    end             reduce using rule 191 (bit_operation_optional_list -> bit_operation_optional .)
    SIGN_EXTEND     shift and go to state 726
    LEFT_SHIFT      shift and go to state 722
    RIGHT_SHIFT     shift and go to state 721

    left_shift                     shift and go to state 723
    bit_operation_optional_list    shift and go to state 757
    right_shift                    shift and go to state 725
    bit_operation_optional         shift and go to state 728

state 729

    (193) bit_operation_optional_list_optional -> empty .

    end             reduce using rule 193 (bit_operation_optional_list_optional -> empty .)


state 730

    (87) max_refresh -> MAX_REFRESH NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    FORMAT          reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    begin           reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    NUMBER          reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    end             reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    READ_WRITE      reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 87 (max_refresh -> MAX_REFRESH NUMERIC NUMERIC .)


state 731

    (102) comparison_quantity -> COMPARISON_QUANTITY IDENT .

    READ_ONLY       reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    GUARD_RAILS     reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    DISPLAY_IDENTIFIER reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    FORMAT          reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BYTE_ORDER      reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    BIT_MASK        reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    begin           reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    NUMBER          reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    EXTENDED_LIMITS reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MAX_REFRESH     reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    REF_MEMORY_SEGMENT reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    COMPARISON_QUANTITY reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    CALIBRATION_ACCESS reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    MATRIX_DIM      reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    ECU_ADDRESS_EXTENSION reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)
    end             reduce using rule 102 (comparison_quantity -> COMPARISON_QUANTITY IDENT .)


state 732

    (85) extended_limits -> EXTENDED_LIMITS NUMERIC . NUMERIC

    NUMERIC         shift and go to state 758


state 733

    (113) calibration_access_type -> OFFLINE_CALIBRATION .

    READ_ONLY       reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    GUARD_RAILS     reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    FORMAT          reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BYTE_ORDER      reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    BIT_MASK        reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    begin           reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    NUMBER          reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MAX_REFRESH     reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    MATRIX_DIM      reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    end             reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)
    DEPOSIT         reduce using rule 113 (calibration_access_type -> OFFLINE_CALIBRATION .)


state 734

    (110) calibration_access_type -> CALIBRATION .

    READ_ONLY       reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    GUARD_RAILS     reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    FORMAT          reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    BYTE_ORDER      reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    BIT_MASK        reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    begin           reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    NUMBER          reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    MAX_REFRESH     reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    MATRIX_DIM      reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    end             reduce using rule 110 (calibration_access_type -> CALIBRATION .)
    DEPOSIT         reduce using rule 110 (calibration_access_type -> CALIBRATION .)


state 735

    (111) calibration_access_type -> NO_CALIBRATION .

    READ_ONLY       reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    GUARD_RAILS     reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    DISPLAY_IDENTIFIER reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    FORMAT          reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    BYTE_ORDER      reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    BIT_MASK        reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    begin           reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    NUMBER          reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    EXTENDED_LIMITS reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    MAX_REFRESH     reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    REF_MEMORY_SEGMENT reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    COMPARISON_QUANTITY reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    CALIBRATION_ACCESS reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    MATRIX_DIM      reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    end             reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)
    DEPOSIT         reduce using rule 111 (calibration_access_type -> NO_CALIBRATION .)


state 736

    (112) calibration_access_type -> NOT_IN_MCD_SYSTEM .

    READ_ONLY       reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    GUARD_RAILS     reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DISPLAY_IDENTIFIER reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    FORMAT          reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BYTE_ORDER      reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    BIT_MASK        reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    begin           reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    NUMBER          reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    EXTENDED_LIMITS reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MAX_REFRESH     reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    REF_MEMORY_SEGMENT reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    COMPARISON_QUANTITY reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    CALIBRATION_ACCESS reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    MATRIX_DIM      reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    ECU_ADDRESS_EXTENSION reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    end             reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)
    DEPOSIT         reduce using rule 112 (calibration_access_type -> NOT_IN_MCD_SYSTEM .)


state 737

    (109) calibration_access -> CALIBRATION_ACCESS calibration_access_type .

    READ_ONLY       reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    GUARD_RAILS     reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DISPLAY_IDENTIFIER reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    FORMAT          reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BYTE_ORDER      reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    BIT_MASK        reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    begin           reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    NUMBER          reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    EXTENDED_LIMITS reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MAX_REFRESH     reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    REF_MEMORY_SEGMENT reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    COMPARISON_QUANTITY reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    CALIBRATION_ACCESS reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    MATRIX_DIM      reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    ECU_ADDRESS_EXTENSION reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    end             reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)
    DEPOSIT         reduce using rule 109 (calibration_access -> CALIBRATION_ACCESS calibration_access_type .)


state 738

    (88) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC . STRING ident_list end DEPENDENT_CHARACTERISTIC

    STRING          shift and go to state 759


state 739

    (86) map_list -> begin MAP_LIST . ident_list end MAP_LIST
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 760

state 740

    (103) axis_descr -> begin AXIS_DESCR . axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR
    (104) axis_descr_attribute -> . STD_AXIS
    (105) axis_descr_attribute -> . FIX_AXIS
    (106) axis_descr_attribute -> . COM_AXIS
    (107) axis_descr_attribute -> . RES_AXIS
    (108) axis_descr_attribute -> . CURVE_AXIS

    STD_AXIS        shift and go to state 766
    FIX_AXIS        shift and go to state 763
    COM_AXIS        shift and go to state 765
    RES_AXIS        shift and go to state 764
    CURVE_AXIS      shift and go to state 762

    axis_descr_attribute           shift and go to state 761

state 741

    (89) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC . STRING ident_list end VIRTUAL_CHARACTERISTIC

    STRING          shift and go to state 767


state 742

    (84) number -> NUMBER NUMERIC .

    READ_ONLY       reduce using rule 84 (number -> NUMBER NUMERIC .)
    GUARD_RAILS     reduce using rule 84 (number -> NUMBER NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 84 (number -> NUMBER NUMERIC .)
    FORMAT          reduce using rule 84 (number -> NUMBER NUMERIC .)
    BYTE_ORDER      reduce using rule 84 (number -> NUMBER NUMERIC .)
    BIT_MASK        reduce using rule 84 (number -> NUMBER NUMERIC .)
    begin           reduce using rule 84 (number -> NUMBER NUMERIC .)
    NUMBER          reduce using rule 84 (number -> NUMBER NUMERIC .)
    EXTENDED_LIMITS reduce using rule 84 (number -> NUMBER NUMERIC .)
    MAX_REFRESH     reduce using rule 84 (number -> NUMBER NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 84 (number -> NUMBER NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 84 (number -> NUMBER NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 84 (number -> NUMBER NUMERIC .)
    MATRIX_DIM      reduce using rule 84 (number -> NUMBER NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 84 (number -> NUMBER NUMERIC .)
    end             reduce using rule 84 (number -> NUMBER NUMERIC .)


state 743

    (138) characteristic_optional_list -> characteristic_optional characteristic_optional_list .

    end             reduce using rule 138 (characteristic_optional_list -> characteristic_optional characteristic_optional_list .)


state 744

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end . CHARACTERISTIC

    CHARACTERISTIC  shift and go to state 768


state 745

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC . NUMERIC

    NUMERIC         shift and go to state 769


state 746

    (210) coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    begin           reduce using rule 210 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COEFFS          reduce using rule 210 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    COMPU_TAB_REF   reduce using rule 210 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 210 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 210 (coeffs -> COEFFS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 747

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end . AXIS_PTS

    AXIS_PTS        shift and go to state 770


state 748

    (159) deposit -> DEPOSIT deposit_mode .

    READ_ONLY       reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    GUARD_RAILS     reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    DISPLAY_IDENTIFIER reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    FORMAT          reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    DEPOSIT         reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    BYTE_ORDER      reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    begin           reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    REF_MEMORY_SEGMENT reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    EXTENDED_LIMITS reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    CALIBRATION_ACCESS reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    ECU_ADDRESS_EXTENSION reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)
    end             reduce using rule 159 (deposit -> DEPOSIT deposit_mode .)


state 749

    (161) deposit_mode -> DIFFERENCE .

    READ_ONLY       reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    GUARD_RAILS     reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    DISPLAY_IDENTIFIER reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    FORMAT          reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    DEPOSIT         reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    BYTE_ORDER      reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    begin           reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    REF_MEMORY_SEGMENT reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    EXTENDED_LIMITS reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    CALIBRATION_ACCESS reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    ECU_ADDRESS_EXTENSION reduce using rule 161 (deposit_mode -> DIFFERENCE .)
    end             reduce using rule 161 (deposit_mode -> DIFFERENCE .)


state 750

    (160) deposit_mode -> ABSOLUTE .

    READ_ONLY       reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    GUARD_RAILS     reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    DISPLAY_IDENTIFIER reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    FORMAT          reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    DEPOSIT         reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    BYTE_ORDER      reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    begin           reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    REF_MEMORY_SEGMENT reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    EXTENDED_LIMITS reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    CALIBRATION_ACCESS reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    ECU_ADDRESS_EXTENSION reduce using rule 160 (deposit_mode -> ABSOLUTE .)
    end             reduce using rule 160 (deposit_mode -> ABSOLUTE .)


state 751

    (156) axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .

    end             reduce using rule 156 (axis_pts_optional_list -> axis_pts_optional axis_pts_optional_list .)


state 752

    (114) matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .

    READ_WRITE      reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    FORMAT          reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ARRAY_SIZE      reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    begin           reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS     reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ERROR_MASK      reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    READ_ONLY       reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    NUMBER          reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 114 (matrix_dim -> MATRIX_DIM NUMERIC NUMERIC NUMERIC .)


state 753

    (217) virtual -> begin VIRTUAL ident_list end . VIRTUAL

    VIRTUAL         shift and go to state 771


state 754

    (190) right_shift -> RIGHT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 190 (right_shift -> RIGHT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 190 (right_shift -> RIGHT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 190 (right_shift -> RIGHT_SHIFT NUMERIC .)
    end             reduce using rule 190 (right_shift -> RIGHT_SHIFT NUMERIC .)


state 755

    (189) left_shift -> LEFT_SHIFT NUMERIC .

    SIGN_EXTEND     reduce using rule 189 (left_shift -> LEFT_SHIFT NUMERIC .)
    LEFT_SHIFT      reduce using rule 189 (left_shift -> LEFT_SHIFT NUMERIC .)
    RIGHT_SHIFT     reduce using rule 189 (left_shift -> LEFT_SHIFT NUMERIC .)
    end             reduce using rule 189 (left_shift -> LEFT_SHIFT NUMERIC .)


state 756

    (185) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end . BIT_OPERATION

    BIT_OPERATION   shift and go to state 772


state 757

    (192) bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .

    end             reduce using rule 192 (bit_operation_optional_list -> bit_operation_optional bit_operation_optional_list .)


state 758

    (85) extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .

    READ_ONLY       reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    GUARD_RAILS     reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DISPLAY_IDENTIFIER reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    FORMAT          reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BYTE_ORDER      reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    BIT_MASK        reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    begin           reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    NUMBER          reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    EXTENDED_LIMITS reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MAX_REFRESH     reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    REF_MEMORY_SEGMENT reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    COMPARISON_QUANTITY reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    CALIBRATION_ACCESS reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    MATRIX_DIM      reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    end             reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)
    DEPOSIT         reduce using rule 85 (extended_limits -> EXTENDED_LIMITS NUMERIC NUMERIC .)


state 759

    (88) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING . ident_list end DEPENDENT_CHARACTERISTIC
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 773

state 760

    (86) map_list -> begin MAP_LIST ident_list . end MAP_LIST

    end             shift and go to state 774


state 761

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute . IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    IDENT           shift and go to state 775


state 762

    (108) axis_descr_attribute -> CURVE_AXIS .

    IDENT           reduce using rule 108 (axis_descr_attribute -> CURVE_AXIS .)


state 763

    (105) axis_descr_attribute -> FIX_AXIS .

    IDENT           reduce using rule 105 (axis_descr_attribute -> FIX_AXIS .)


state 764

    (107) axis_descr_attribute -> RES_AXIS .

    IDENT           reduce using rule 107 (axis_descr_attribute -> RES_AXIS .)


state 765

    (106) axis_descr_attribute -> COM_AXIS .

    IDENT           reduce using rule 106 (axis_descr_attribute -> COM_AXIS .)


state 766

    (104) axis_descr_attribute -> STD_AXIS .

    IDENT           reduce using rule 104 (axis_descr_attribute -> STD_AXIS .)


state 767

    (89) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING . ident_list end VIRTUAL_CHARACTERISTIC
    (28) ident_list -> . IDENT
    (29) ident_list -> . IDENT ident_list

    IDENT           shift and go to state 384

    ident_list                     shift and go to state 776

state 768

    (70) characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .

    begin           reduce using rule 70 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)
    end             reduce using rule 70 (characteristic -> begin CHARACTERISTIC IDENT STRING characteristic_type NUMERIC IDENT NUMERIC IDENT NUMERIC NUMERIC characteristic_optional_list_optional end CHARACTERISTIC .)


state 769

    (416) si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .

    SI_EXPONENTS    reduce using rule 416 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    REF_UNIT        reduce using rule 416 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    UNIT_CONVERSION reduce using rule 416 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)
    end             reduce using rule 416 (si_exponents -> SI_EXPONENTS NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC NUMERIC .)


state 770

    (141) axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .

    begin           reduce using rule 141 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)
    end             reduce using rule 141 (axis_pts -> begin AXIS_PTS IDENT STRING NUMERIC IDENT IDENT NUMERIC IDENT NUMERIC NUMERIC NUMERIC axis_pts_optional_list_optional end AXIS_PTS .)


state 771

    (217) virtual -> begin VIRTUAL ident_list end VIRTUAL .

    READ_WRITE      reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    DISPLAY_IDENTIFIER reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    FORMAT          reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ARRAY_SIZE      reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BIT_MASK        reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    begin           reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    BYTE_ORDER      reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MAX_REFRESH     reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS     reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ERROR_MASK      reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    REF_MEMORY_SEGMENT reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    MATRIX_DIM      reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    ECU_ADDRESS_EXTENSION reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)
    end             reduce using rule 217 (virtual -> begin VIRTUAL ident_list end VIRTUAL .)


state 772

    (185) bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .

    READ_WRITE      reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    DISPLAY_IDENTIFIER reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    FORMAT          reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ARRAY_SIZE      reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BIT_MASK        reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    begin           reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    BYTE_ORDER      reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MAX_REFRESH     reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS     reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ERROR_MASK      reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    REF_MEMORY_SEGMENT reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    MATRIX_DIM      reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    ECU_ADDRESS_EXTENSION reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)
    end             reduce using rule 185 (bit_operation -> begin BIT_OPERATION bit_operation_optional_list_optional end BIT_OPERATION .)


state 773

    (88) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list . end DEPENDENT_CHARACTERISTIC

    end             shift and go to state 777


state 774

    (86) map_list -> begin MAP_LIST ident_list end . MAP_LIST

    MAP_LIST        shift and go to state 778


state 775

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT . IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    IDENT           shift and go to state 779


state 776

    (89) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list . end VIRTUAL_CHARACTERISTIC

    end             shift and go to state 780


state 777

    (88) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end . DEPENDENT_CHARACTERISTIC

    DEPENDENT_CHARACTERISTIC shift and go to state 781


state 778

    (86) map_list -> begin MAP_LIST ident_list end MAP_LIST .

    READ_ONLY       reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    GUARD_RAILS     reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    DISPLAY_IDENTIFIER reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    FORMAT          reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BYTE_ORDER      reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    BIT_MASK        reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    begin           reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    NUMBER          reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    EXTENDED_LIMITS reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MAX_REFRESH     reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    REF_MEMORY_SEGMENT reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    COMPARISON_QUANTITY reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    CALIBRATION_ACCESS reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    MATRIX_DIM      reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    ECU_ADDRESS_EXTENSION reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)
    end             reduce using rule 86 (map_list -> begin MAP_LIST ident_list end MAP_LIST .)


state 779

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT . NUMERIC NUMERIC NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 782


state 780

    (89) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end . VIRTUAL_CHARACTERISTIC

    VIRTUAL_CHARACTERISTIC shift and go to state 783


state 781

    (88) dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .

    READ_ONLY       reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    FORMAT          reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    begin           reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    NUMBER          reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)
    end             reduce using rule 88 (dependent_characteristic -> begin DEPENDENT_CHARACTERISTIC STRING ident_list end DEPENDENT_CHARACTERISTIC .)


state 782

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC . NUMERIC NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 784


state 783

    (89) virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .

    READ_ONLY       reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    GUARD_RAILS     reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    DISPLAY_IDENTIFIER reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    FORMAT          reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    BYTE_ORDER      reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    BIT_MASK        reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    begin           reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    NUMBER          reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    EXTENDED_LIMITS reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    MAX_REFRESH     reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    REF_MEMORY_SEGMENT reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    COMPARISON_QUANTITY reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    CALIBRATION_ACCESS reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    MATRIX_DIM      reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    ECU_ADDRESS_EXTENSION reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)
    end             reduce using rule 89 (virtual_characteristic -> begin VIRTUAL_CHARACTERISTIC STRING ident_list end VIRTUAL_CHARACTERISTIC .)


state 784

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC . NUMERIC end AXIS_DESCR

    NUMERIC         shift and go to state 785


state 785

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC . end AXIS_DESCR

    end             shift and go to state 786


state 786

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end . AXIS_DESCR

    AXIS_DESCR      shift and go to state 787


state 787

    (103) axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .

    READ_ONLY       reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    GUARD_RAILS     reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    DISPLAY_IDENTIFIER reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    FORMAT          reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    BYTE_ORDER      reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    BIT_MASK        reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    begin           reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    NUMBER          reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    EXTENDED_LIMITS reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    MAX_REFRESH     reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    REF_MEMORY_SEGMENT reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    COMPARISON_QUANTITY reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    CALIBRATION_ACCESS reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    MATRIX_DIM      reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    ECU_ADDRESS_EXTENSION reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)
    end             reduce using rule 103 (axis_descr -> begin AXIS_DESCR axis_descr_attribute IDENT IDENT NUMERIC NUMERIC NUMERIC end AXIS_DESCR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for begin in state 15 resolved as shift
WARNING: shift/reduce conflict for begin in state 37 resolved as shift
